NOTE: This change log section represents git commits in range 'v2.6.0..HEAD' (commits '8103b4e5c..541c2ecf0').

2025-08-08  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: for now do not require (pre-)release tagged commits
	  to build changelog by default - keep doing it on systems where we
	  can though
	* configure.ac: rephrase the message about --enable-docs-changelog
	  [#3019, #3053]
	* ci_build.sh: limit default "configure --enable-docs-changelog=no"
	  for CI builds on systems where CANBUILD_DOCS_ALL!=yes
	* ci_build.sh: add support for WITH_CHANGELOG envvar to pass down as
	  configure --enable-docs-changelog=...
	* .github/workflows/codeql.yml: configure --disable-docs-changelog in
	  CI builds
	* configure.ac: for (pre-)release builds we default
	  nut_enable_docs_changelog auto=>yes - do so loudly, and default
	  --with-doc man=>auto as well for all builds to have a chance to try
	  this
	* docs/maintainer-guide.txt: update the guide
	* docs/maintainer-guide.txt: commit that in tools/gitlog2version.sh:
	  for development, set fallback NUT_VERSION_DEFAULT=X.Y.Z.1
	* docs/maintainer-guide.txt: remind to double-check that release
	  NUT_VERSION_DEFAULT in tools/gitlog2version.sh must be a triplet
	* tools/gitlog2version.sh: for release, set fallback
	  NUT_VERSION_DEFAULT=2.8.4
	* appveyor.yml: SKIP for now NUT-Monitor prereqs

2025-08-07  Jim Klimov <jimklimov+nut@gmail.com>

	* appveyor.yml: parallelize "make install"
	* appveyor.yml: also install gettext for NUT-Monitor resources
	* appveyor.yml: disable back the docs-config attempt, we do not have
	  tools nor time for that
	* appveyor.yml: try to enable build of HTML docs, notably man pages
	* appveyor.yml, NEWS.adoc: include mingw-w64-x86_64-python-pyqt6
	  [#3046]
	* docs/config-prereqs.txt: suggest PyQt5/6 for Windows builds
	* appveyor.yml: re-enable build with docs and installation, and
	  zipping it  Even if not really tested by that CI in recent
	  iterations, or rather in the iteration which would result from this
	  commit, this can help us get the artifacts made for a release
	  build.
	* appveyor.yml: re-enable some of the activity (except costlier NUT
	  docs and checks so far)

2025-08-06  Jim Klimov <jimklimov+nut@gmail.com>

	* .github/workflows/PyNUTClient.yml, appveyor.yml,
	  scripts/Windows/build-mingw-nut.sh, tools/gitlog2version.sh: Update
	  versions for release of NUT v2.8.4
	* docs/docinfo.xml.in: add docs increment summary for NUT v2.8.4
	  release
	* NEWS.adoc: remove "PLANNED" from section title before NUT v2.8.4
	  release
	* NEWS.adoc, UPGRADING.adoc, docs/docinfo.xml.in: finalize text
	  before NUT v2.8.4 release
	* docs/maintainer-guide.txt: revise instructions
	* appveyor.yml: Revert "appveyor.yml: TEMPORARILY disable actual
	  build/test of NUT, to re-cache prereqs and their ccache objects"
	  This reverts commit 43376f874b8c0bc66d08136a522e60a80b9021af after
	  https://ci.appveyor.com/project/nut-travis/nut cache was refreshed.
	* appveyor.yml: cache built nut-win-deps before .ccache objects and
	  pacman pkgs - v2
	* appveyor.yml: cache built nut-win-deps before .ccache objects and
	  pacman pkgs
	* appveyor.yml: re-enable part of the recipe to do build NUT, just
	  not test and install it  ...still saving time allowance to re-seed
	  the caches; while fixing caches, skip docs build
	* NEWS.adoc: mention rebalancing of Appveyor CI recipe to speed up
	  the builds
	* docs/docinfo.xml.in: fix typo in summary for NUT v2.8.3 release
	* appveyor.yml: TEMPORARILY disable actual build/test of NUT, to
	  re-cache prereqs and their ccache objects
	* appveyor.yml: comment about reduced scope of build-mingw-prereqs.sh
	* scripts/Windows/build-mingw-prereqs.sh: comment about netsnmp
	  configure --disable-daemon
	* scripts/Windows/build-mingw-prereqs.sh: log timing of configure,
	  make, house-keeping operations
	* scripts/Windows/build-mingw-prereqs.sh: reduce the scope of netsnmp
	  build
	* appveyor.yml: comment more about profiling/timing different build
	  steps; comment away some more troubleshooting time-hogs
	* appveyor.yml: do not update the MSYS2 ecosystem to bleeding edge,
	  save some time to fit in the 1hr we are given

2025-08-04  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: try to increase ulimit
	* docs/config-prereqs.txt, docs/nut.dict: suggest `ulimit` settings
	  via /etc/login.conf for OpenBSD

2025-08-03  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c, NEWS.adoc: warn that printf(%n) is deprecated on
	  some newer platforms
	* drivers/nutdrv_qx.c: avoid %n in printf  nutdrv_qx.c:4499:27:
	  error: '%n' specifier not supported on this platform
	  [-Werror,-Wformat]

2025-08-02  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: fix SED syntax  Kudos to Greg Troxel for the
	  catch

2025-08-01  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-usbinfo.pl: find_usbdevs(): skip files that are not *.c
	  or *.h [#3030]
	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{0,1}.c:
	  nut_libusb_open(): for libusb specifically, we have a Wiki page
	  about Insufficient Permissions [#3041]
	* NEWS.adoc, common/common-nut_version.c, drivers/libusb0.c,
	  drivers/libusb1.c, include/common.h: common/common-nut_version.c,
	  include/common.h, drivers/libusb{0,1}.c, NEWS.adoc: introduce
	  suggest_NDE_conflict() [#477, #3040]
	* Makefile.am: check-parallel-builds: ensure that we are in the
	  top_builddir when starting operations relative to it [#3030]  Be
	  pedantic to work around some quirk in NetBSD 9.2 bmake essentially.
	* ci_build.sh: check-parallel-builds: pass
	  CHECK_PARALLEL_BUILDS_REGEN=false as a make argument also, not just
	  envvar [#3030]
	* ci_build.sh: build_to_only_catch_errors_target(): fix
	  "CI_PARMAKE_VERBOSITY=verbose" logging handling

2025-07-31  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am: check-parallel-builds: pre-clean before checking the
	  source locations [#3033]
	* Makefile.am: check-parallel-builds: for out-of-tree builds, check
	  the source locations starting from the correct root [#3033]
	* Makefile.am: check-parallel-builds: call automake portably - in a
	  way detected by configure script [#3033]
	* Makefile.am: check-parallel-builds: if called, automake must be in
	  top_srcdir where configure.ac lives [#3033]
	* .circleci/config.yml: drop explicit "make check-parallel-builds"
	  [#3030]  It is now invoked where applicable for scenarios with
	  `BUILD_TYPE=default-all-errors*` and note it was not buildable as
	  added anyway (earlier ci_build.sh wiped the work area).

2025-07-30  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: restore NEWS and README (if needed) between loops of
	  default-all-errors [#3030]
	* ci_build.sh: add a failsafe for CI via
	  NUT_BUILD_CAPS=check-parallel-builds=no label [#3030]
	* Makefile.am: spellcheck-quick/check-parallel-builds: refactor
	  SET_PARMAKES_OPT() code to be reusable [#3030]
	* Makefile.am: check-parallel-builds: fix suggested shell scriptlet
	  to investigate failures [#3030]  Notably, MAKEFLAGS may include the
	  "make" options without the leading dash, or other values that did
	  not have one originally. Better leave it as an environment variable
	  and let the particular "make" program deal with it.
	* ci_build.sh: optionally call "make check-parallel-builds" in
	  BUILD_TYPE="default-all-errors*" [#3030]
	* Makefile.am: check-parallel-builds: allow
	  CHECK_PARALLEL_BUILDS_REGEN=false (to speed up runs where
	  developer/CI did not change recipes anyway) [#3030]
	* tools/nutconf/Makefile.am: libnutscan.la indirectly requires
	  libcommonclient.la (for libupsclient-version.h) so bolt it into
	  deps list [#3030]

2025-07-29  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/.gitignore, docs/man/Makefile.am: docs/man/Makefile.am:
	  linkman-driver{,tool}-names.txt: use unique "*.tmp.$$" filenames to
	  fix parallel builds [#3030]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in, NEWS.adoc: fixed
	  NDE to not consider "masked" systemd units as non-existent [#3033]
	* NEWS.adoc: move voltronic-axpert to existing nutdrv_qx section
	  [#1407]

2025-07-28  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/phoenixcontact_modbus.txt: clarify that new options can be
	  set only once (via init) at this time [#2986]
	* NEWS.adoc: clarify how new options for phoenixcontact_modbus can be
	  set [#2986]

2025-07-27  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/gitlog2version.sh: do not pollute stdout [#3030]
	* tools/gitlog2version.sh, docs/nut-versioning.adoc: tack on current
	  commit if known, even if we fall back to built-in version otherwise
	  [#3030]
	* .github/workflows/codeql.yml: drop attempts to describe git-derived
	  version better [#3030]
	* tools/gitlog2version.sh: if we fail to "discover a
	  NUT_VERSION_GIT_TRUNK" or "git describe", check and report if the
	  current checkout is shallow [#3030]  CI builds often do check out
	  the built commit with minimal "depth" (often having just it), which
	  is much faster, cheaper computationally and by traffic. This
	  however precludes finding history intersections of current
	  (single-commit) tree with other trees even if we fetch them.
	* .github/workflows/codeql.yml: separate "make check-parallel-builds"
	  from main build; troubleshoot gitlog2version [#3030]
	* .circleci/config.yml, .github/workflows/codeql.yml, NEWS.adoc:
	  .circleci/config.yml, .github/workflows/codeql.yml: invoke "make
	  check-parallel-builds" [#3030]
	* clients/Makefile.am, drivers/Makefile.am, server/Makefile.am,
	  tests/Makefile.am, tools/nut-scanner/Makefile.am,
	  tools/nutconf/Makefile.am: */Makefile.am: spell out known build
	  order between out-of-dir dependencies [follows up from PR #2825,
	  highlights why issue #2584 better be solved]
	* Makefile.am, NEWS.adoc: introduced a `make check-parallel-builds`
	  recipe [follows up from PR #2825]
	* drivers/snmp-ups.c: re-order includes (keep eatons together)
	* data/driver.list.in: update entry for Kebo UPS-1000D (add
	  langid_fix and subdriver); add Tescom LEO Plus LCD 1500A which
	  works with same config [#981]
	* tools/nut-scanner/Makefile.am: ensure we only call NUT_SCANNER_DEPS
	  and it has work to do only once [follows up from PR #2825]  In
	  practice we do call it as many times as there are listed dependency
	  files, but it only generates them on the first run and quicky bails
	  out later on. This should help avoid writing into same files in
	  parallel, ending up with garbled or incomplete files when we want
	  to use them.

2025-07-24  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/images/ci/jenkins-nut.css: new style in town with Jenkins LTS
	  2.516.1

2025-07-22  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/phoenixcontact_modbus.c: fix typo in what is now a
	  formatting string [#2986]
	* drivers/phoenixcontact_modbus.c,
	  docs/man/phoenixcontact_modbus.txt: fix tweaks according to
	  nut-names, use dstate (so standard variable default.* or override.*
	  settings) [#2986]
	* drivers/phoenixcontact_modbus.c: log FIXMEs for more use of NUT
	  dstate overrides/defaults instead of addvar() tweaks
	* drivers/phoenixcontact_modbus.c,
	  docs/man/phoenixcontact_modbus.txt: fix according to nut-names:
	  "(ups.)delay.shutdown" => "(battery.)energysave.delay" [#2986]
	* drivers/phoenixcontact_modbus.c: fix whitespace in comments [#2986]

2025-07-21  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac, docs/configure.txt: fix ASCIIDOC_TEMPLATE_LINKMANEXT*
	  with HTML URL query part [#3027]  ...and a typo about quoting.
	* configure.ac: define default ASCIIDOC_TEMPLATE_LINKMANEXT*
	  according to target_os family (solarish, freebsd, openbsd;
	  default=linux) [follow-up to #2797]
	* configure.ac, docs/Makefile.am, docs/configure.txt,
	  docs/man/Makefile.am: Support optional man page section rewrite
	  also for linkmanext* references [follow-up to #2797]
	* NEWS.adoc, configure.ac, docs/.gitignore, docs/{asciidoc.conf =>
	  asciidoc.conf.in}, docs/configure.txt, docs/man/.gitignore,
	  docs/man/{asciidoc.conf => asciidoc.conf.in}: Do not hard-code
	  linux.die.net (and its man sections) into generated linkmanext*
	  that may vary by distro [follow-up to #2797]
	* NEWS.adoc, docs/man/asciidoc.conf, docs/nut.dict:
	  docs/man/asciidoc.conf, NEWS.adoc: fix generation of links to
	  external manual pages [follow-up to #2797]

2025-07-18  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: minimize_formatting_string(): debug-log about
	  "cosmetic" chars at level 7 [#2956]
	* drivers/nutdrv_qx_voltronic.c: voltronic_mode(): word remaining
	  alarms to be complete sentences [#2494]
	* drivers/nutdrv_qx_voltronic.c: voltronic_mode(): add some debug
	  logging [#2494]
	* docs/man/nutdrv_qx.txt: fix quoting style from m4 to text
	* drivers/nutdrv_qx_voltronic.c, NEWS.adoc: revise
	  "vendor:voltronic:*" buzzword setting; these modes are not alarm
	  material [#2494]

2025-07-18  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: input.bypass.switch.on/off set flag quick update
	  instead semi static

2025-07-17  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/mge-hid.c: eaton_input_bypass_check_range(): fix typo
	  checking for "value==1" [#2956]
	* drivers/usbhid-ups.c: ups_alarm_set(): ignore ECOMODE, we handle it
	  in ups_status_set() [#2956]  Avoid extra work and occasional log
	  messages that:  str_add_unique_token: skip token
	  'vendor:default:ECO': was already set
	* drivers/mge-hid.c: eaton_input_eco_mode_check_range(): refine log
	  output if we remain in ECO/non-ECO mode [#2956]
	* drivers/mge-hid.c: eaton_input_eco_mode_check_range(): sanity-check
	  that value==1 [#2956]
	* drivers/mge-hid.c: make "input.eco.switchable" a HU_FLAG_QUICK_POLL
	  value [#2956]  We want it evaluated on every quick-update loop, so
	  that the correct buzzwords are always set (if device serves the
	  feature). Also quick-update the bypass voltage and frequency, so we
	  know relevant clues (keep semi-static settings as they were
	  though).
	* NEWS.adoc: NEWS.adoc, docs/nut.dict: summary mention for recent
	  small PRs [#3019, #3021, #3022, #3023]
	* drivers/mge-hid.c: convert "input.eco.switchable" definition from
	  HU_FLAG_SEMI_STATIC to regular [#2956]
	* drivers/mge-hid.c: move "input.eco.switchable" definition to end of
	  mge_hid2nut[] table [#2956]
	* Makefile.am: install-as-root: do not overly trust in systemctl
	  preset-all  It fails on systemd 252 (known issue): Failed to preset
	  all units: Unit /run/systemd/transient/session-156053.scope is
	  transient or generated.

2025-07-16  Jim Klimov <jimklimov+nut@gmail.com>

	* server/upsd.c: check_command(): try to print all command arguments
	  (if debugging) [#3023]
	* common/common.c: compareprocname(): Linux /proc/X/exe can end with
	  " (deleted)" if the program was removed or replaced
	* drivers/snmp-ups.c: su_setOID(): cast returned enum constants to
	  int [#3017]  Avoid error claimed by clang-20 et al:  conditional
	  expression between different enumeration types ('enum (unnamed at
	  ./upshandler.h:25:1)' and 'enum (unnamed at ./upshandler.h:34:1)')
	  [-Werror,-Wanon-enum-enum-conversion]
	* docs/Makefile.am: ChangeLog => ChangeLog.adoc: avoid "$<" as this
	  is not a suffix rule

2025-07-15  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: ChangeLog => ChangeLog.adoc: typo fix in fallback
	  INPUT
	* configure.ac, Makefile.am, docs/configure.txt, NEWS.adoc: introduce
	  confgure option to customize git log ending point [#3019]
	* tools/gitlog2changelog.py.in: allow specifying end of commit range,
	  report it in text  Technically a step to multi-section changelogs,
	  covering each release separately as a range between git tags,
	  regardless of timestamp overlap (with much older prepared commits
	  going into much newer release later on).
	* tools/gitlog2changelog.py.in: typo in comment
	* docs/Makefile.am: ChangeLog => ChangeLog.adoc: revise definition of
	  INPUT  Actually saw it with two tokens recently, for the text and
	  .prep-src-docs touch-file
	* docs/Makefile.am: when writing temporary outputs, make sure they
	  are not empty before moving to final name (else delete and bail
	  out)
	* docs/Makefile.am: .adoc => .adoc-parsed: double-check that input
	  file exists  If a recipe iteration is written incorrectly, make can
	  skip work on some rules (evaluating them as true without writing
	  outputs we need)
	* configure.ac, docs/.gitignore, docs/Makefile.am,
	  docs/configure.txt, docs/{docinfo.xml.sh => docinfo.xml.sh.in}:
	  docs/docinfo.xml.sh.in: make it a template for configure script to
	  generate and embed a @GITLOG_START_POINT@ value to consider
	* configure.ac, Makefile.am, docs/configure.txt, NEWS.adoc: introduce
	  confgure option to customize git log starting point
	* ci_build.sh: configure --disable-docs-changelog in developer
	  iterations
	* configure.ac, docs/Makefile.am, docs/configure.txt, NEWS.adoc,
	  docs/nut.dict: introduce option to "configure
	  --enable-docs-changelog" (or not)
	* docs/ci-farm-lxc-setup.txt: update link to
	  conflict-aware-ondemand-strategy-plugin

2025-07-14  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/mge-hid.c: fix back eaton_input_bypass_mode_on_info[];
	  update comments; make use of errno=0/EINVAL
	* docs/nut.dict: add "nuf" to dict [#3017, #2956]
	* drivers/usbhid-ups.c, NEWS.adoc: hid_ups_walk(HU_WALKMODE_INIT):
	  report if exactly one of fun/nuf is defined in a one-line table,
	  and it would preclude reads/writes [#2956]
	* docs/nut.dict: add "nuf" to dict [#3017, #2956]
	* drivers/mge-hid.c: introduce eaton_input_buzzwordmode_setvar_nuf()
	  [#2956]
	* drivers/usbhid-ups.c, NEWS.adoc: add a way for fun/nuf methods to
	  report EINVAL for unsupported arguments, and bail out [#3017]  Made
	  for progresing on PR #2956
	* drivers/nutdrv_qx.c, NEWS.adoc: add a way for item->preprocess()
	  and qx_process() methods to report EINVAL for unsupported
	  arguments, and bail out [#3017]
	* drivers/snmp-ups.c: su_setOID(): refactor many elvises into one
	  val_practical [#3017]
	* drivers/usbhid-ups.c, NEWS.adoc: add a way for fun/nuf methods to
	  report EINVAL for unsupported arguments, and bail out [#3017]  Made
	  for progresing on PR #2956
	* drivers/snmp-ups.c, NEWS.adoc: add a way for fun/nuf methods to
	  report EINVAL for unsupported arguments, and bail out [#3017]
	* drivers/snmp-ups.c: su_setOID(): return *_CONVERSION_FAILED where
	  applicable; use upslog_*_RESULT() in callers
	  su_setvar()/su_instcmd() for maintainability
	* drivers/snmp-ups.c: su_setOID(): rectify returns of STAT_SET_* vs.
	  STAT_INSTCMD_*  Be pedantically correct about these, even if they
	  map to same numbers for logical names at the moment.
	* drivers/upshandler.h: define loggers for CONVERSION_FAILED, and
	  generally for common RESULT [#2957]
	* drivers/mge-hid.c: fix indentations (TAB vs space) to be consistent
	  [#2956]
	* NEWS.adoc, common/common.c: common/common.c:
	  minimize_formatting_string(): do not loudly log complaints about
	  known cosmetic formatting chars [#2450]
	* common/common.c: minimize_formatting_string(): update comments
	  [#2450]

2025-07-13  Axel Gembe <axel@gembe.net>

	* docs/man/apc_modbus.txt: apc_modbus: Add another tested device
	  model to the man page
	* NEWS.adoc, drivers/apc_modbus.c: apc_modbus: Fix missing variables
	  due to mismatching format string  Calls to `dstate_setinfo_dynamic`
	  were using a different format string in `fmt_dynamic` than spcified
	  in `fmt_reference`.  This causes the following variables to be
	  missing:  ``` battery.runtime experimental.output.energy
	  ups.timer.shutdown ups.timer.start ups.timer.reboot
	  input.transfer.high input.transfer.low ups.delay.shutdown
	  ups.delay.start ups.delay.reboot outlet.group.0.delay.shutdown
	  outlet.group.0.delay.start outlet.group.0.delay.reboot
	  outlet.group.1.delay.shutdown outlet.group.1.delay.start
	  outlet.group.1.delay.reboot outlet.group.2.delay.shutdown
	  outlet.group.2.delay.start outlet.group.2.delay.reboot
	  outlet.group.3.delay.shutdown outlet.group.3.delay.start
	  outlet.group.3.delay.reboot ```  Since #2450 this caused this or
	  similar error messages on our integer values:  ``` [D1]
	  validate_formatting_string: dynamic formatting string '%u' is not
	  equivalent to expected '%lu' ```  This in turn caused the variable
	  to not exist and later calls to `dstate_setflags` to output:  ```
	  apc_modbus: dstate_setflags: base variable (battery.runtime) does
	  not exist ```  We fix this by using the correct format string.

2025-07-10  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/snmp-ups.c, NEWS.adoc: fix debug-logging of skipping
	  SU_FLAG_STATIC entries [#3011]
	* drivers/apc-mib.c, NEWS.adoc: fix "ups.test.date" from
	  SU_FLAG_STATIC to SU_FLAG_SEMI_STATIC [#3011]

2025-07-09  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: mention both APC BVKxxxM2 and BKxxxM2-CH in same fix for
	  usbhid-ups

2025-07-07  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/systemd/nutshutdown.in, NEWS.adoc: bail out if MODE=none
	  explicitly [#2935]
	* drivers/mge-hid.c: refactor old (pegasus) and new (ECO/ESS) mapping
	  tables with fun/nuf methods [#2956]
	* drivers/mge-hid.c: comment which info_lkp_t[] tables are in fact
	  wrong examples of mapping function usage [#2956]
	* docs/man/phoenixcontact_modbus.txt: reconcile config setting names
	  with strings used in the driver [#2986]
	* docs/man/phoenixcontact_modbus.txt: align shutdown variables
	  descriptions with comments in code [#2986]
	* docs/man/nutupsdrv.txt: document `override.*` or `default.*` names
	  for `var=val` settings
	* docs/man/phoenixcontact_modbus.txt: wrap long lines; anticipate
	  renaming/obsoletion of some driver-specific settings [#2986]
	* NEWS.adoc: document recent changes to start-up messages and loop
	  flushing in upsmon [#3003]
	* clients/upsmon.c: report in debug-log which SHUTDOWNCMD/NOTIFYCMD
	  would be used (and if no NOTIFYCMD was set) [#3003]
	* clients/upsmon.c: fflush() at end of each main loop cycle, just in
	  case
	* clients/upsmon.c: make "Warning: no shutdown command defined"
	  visible when the daemon starts  Being a printf() to stdout, it got
	  buffered and often only appeared on buffer flush when the daemon
	  exited.
	* NEWS.adoc, data/driver.list.in, docs/man/usbhid-ups.txt,
	  docs/nut.dict, drivers/usbhid-ups.c: drivers/usbhid-ups.c: handle
	  also APC BKnnnM2[_-]CH tweaks for
	  lbrb_log_delay_without_calibrating/onlinedischarge_calibration
	  [#3006, #2347]  Update docs, data/driver.list.in suggestions;
	  refactor the if-clause to detect if the tweak applies to the device
	  being handled.

2025-07-04  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: note further ECO mode updates in mge-hid [#2956]
	* NEWS.adoc: clarify message for bcmxcp fix [#3002]
	* NEWS.adoc: re-order ddriver updates alphabetically

2025-07-03  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* NEWS.adoc: add bcmxcp fixes [#3002]
	* drivers/bcmxcp.c: fix latched on to RB alarm

2025-07-03  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/packager-guide.txt: suggest a nut-common package for shared
	  stuff
	* drivers/powervar_cx.c: remove space before parenthesis after
	  status_set() to simplify review for issue [#2708]
	* drivers/pijuice.c, NEWS.adoc: revise use of status_set() [#2708]

2025-06-25  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: announce updates to phoenixcontact_modbus [#2986]
	* docs/man/phoenixcontact_modbus.txt: fix asciidoc markup for man
	  page [#2986]  This is not directly a troff file
	* drivers/phoenixcontact_modbus.c: fix CI complaints [#2986]  *
	  static methods * declarations before code * mismatches of int type
	  vs printf formatting string (hex)
	* docs/man/phoenixcontact_modbus.txt, docs/nut.dict: update
	  authors/contributors list [#2986]
	* drivers/phoenixcontact_modbus.c: fix author/contributor list
	  [#2986]
	* drivers/phoenixcontact_modbus.c: fix back broken whitespace [#2986]
	* drivers/powervar_cx.c, drivers/powervar_cx_ser.c,
	  drivers/powervar_cx_usb.c: drivers/powervar_cx*: fix more
	  formatting string vs. int type mismatches [#2988]

2025-06-25  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: try return int instead double to check compiler
	  issue
	* drivers/mge-hid.c: add some more debug

2025-06-24  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/powervar_cx.c: instcmd(): fix int type of ShowTime [#2988]
	* drivers/powervar_cx.c, drivers/powervar_cx.h: drivers/powervar_cx*:
	  fix int type of GetSubstringPosition() [#2988]
	* drivers/powervar_cx.c, drivers/powervar_cx.h,
	  drivers/powervar_cx_usb.c: drivers/powervar_cx*: fix visibility of
	  some declarations [#2988]
	* drivers/powervar_cx.c: prefer snprintf() over strncpy() [#2988]
	* drivers/powervar_cx.c, drivers/powervar_cx_ser.c,
	  drivers/powervar_cx_usb.c: drivers/powervar_cx*.c: use same style
	  for space after comma [#2988]
	* drivers/powervar_cx.c, drivers/powervar_cx_usb.c:
	  drivers/powervar_cx*.c: use same style for space after "if" [#2988]
	* drivers/powervar_cx.c: avoid unbound strcpy() and strcat() [#2988]
	* drivers/Makefile.am, drivers/powervar_cx.c, drivers/powervar_cx.h,
	  drivers/powervar_cx_ser.c, drivers/powervar_cx_usb.c:
	  powervar_cx_{ser,usb}: split helper code powervar_cx.{c,h} into a
	  true C header and compiled C source (do not "include" the latter)
	  [#2988]
	* NEWS.adoc, docs/man/Makefile.am, docs/man/powervar_cx_ser.txt,
	  docs/man/{powervar-cx.txt => powervar_cx_usb.txt},
	  drivers/Makefile.am, drivers/{powervar-cx.h => powervar_cx.h},
	  drivers/{powervar-cs.c => powervar_cx_ser.c},
	  drivers/{powervar-cu.c => powervar_cx_usb.c}:
	  powervar_cx_{ser,usb}: rename sources, separate man pages [#2988]
	* drivers/powervar-cu.c, drivers/powervar-cx.h: drivers/powervar-c*:
	  avoid sub-standard "uint" type [#2988]
	* drivers/powervar-cu.c: SendRequest(): revise nulling of outbuff[],
	  add sanity-checks and comment about them [#2988]
	* drivers/powervar-cu.c: fix upsdebugx(verbosity) vs
	  upslogx(facility) [#2988]
	* drivers/powervar-cu.c: SendRequest(), PowervarGetResponse(): align
	  int vars with print format and return types [#2988]

2025-06-24  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* data/cmdvartab, docs/nut-names.txt, drivers/mge-hid.c: rename
	  enable/diasble to start/stop

2025-06-24  Bill Elliot <bill@wreassoc.com>

	* drivers/powervar_cx.c, drivers/powervar_cx.h,
	  drivers/powervar_cx_usb.c: Add comment(s) in source about compiling
	  common driver file.  Add FIXME note.

2025-06-23  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/powervar-cx.txt: fix NAME section to generate the alias
	  man pages [#2988]  NOTE: man aliases are special reference files,
	  so the target powervar-cx.8 file must be delivered wherever *-cs
	  and/or *-cu are the one(s) really needed.

2025-06-20  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/powervar-cu.c: use NUT standard population of regex_array
	  for USB config parameters [#2988]
	* drivers/powervar-cu.c: fix int size mismatch [#2988]  Code scanning
	  / CodeQL: Comparison of narrow type with wide type in loop
	  condition: Comparison between [i](1) of type uint8_t and
	  [ReqLen](2) of wider type size_t.
	* drivers/powervar-cu.c, drivers/powervar-cx.h: drivers/powervar-c*:
	  fix clang complaints about method visibility/declaration [#2988]
	* docs/man/Makefile.am: neuter powervar-c{s,u}.html (similar to other
	  fictional HTML aliases) for now [#2988]
	* drivers/powervar-cu.c, drivers/powervar-cx.h: drivers/powervar-c*:
	  slightly revise C markup (indentations, declarations on top)
	  [#2988]
	* UPGRADING.adoc: note packaging of powervar-cX man pages [#2988]
	* docs/man/Makefile.am: fix recipes to nominally deliver the
	  powervar-c[us] pages, aliased from one powervar-cx [#2988]
	* docs/man/powervar-cx.txt: fix asciidoc markup; clarify that there
	  are two powervar* drivers (USB/Serial) at this time [#2988]
	* NEWS.adoc: introduced powervar-cs and powervar-cu drivers [#2988]
	* data/driver.list.in: update top comment with formatting
	  requirements for markup of this file [#2988]
	* data/driver.list.in: parsing scripts expect single-TAB separation
	  of fields [#2988]

2025-06-19  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: specify VPATH for sub-makes doing spellcheck
	* docs/Makefile.am, docs/man/Makefile.am, NEWS.adoc: only SED text
	  source files for *-prepped (man page section, nut-website, etc.)
	  rewrites [#2989]
	* clients/upsmon.c: when warning about no SHUTDOWNCMD, check about no
	  MINSUPPLIES too (maybe not a problem)
	* scripts/systemd/nutshutdown.in: update notes on purpose, location
	  and likely variations
	* conf/upsmon.conf.sample.in: update notes on Windows SHUTDOWNCMD
	* conf/upsmon.conf.sample.in: update notes on semi-required settings

2025-06-16  haul <ulfathasangarayev@gmail.com>

	* docs/man/phoenixcontact_modbus.txt,
	  drivers/phoenixcontact_modbus.c: Fix issues from previous PR review
	  - Bumped internal version to 0.09 (two-digit format) - Replaced
	  single-line // comments with /* ... */ block comments - Added
	  missing variable descriptions to the man page - Preserved original
	  authors in metadata - Standardized config variable names to align
	  with nut-names.txt where possible - Declared all variables at top
	  of scope as per C89 style  Feedback originally provided by
	  @jimklimov on PR #2986 (superseded by this commit)

2025-06-16  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: try again in one func
	  eaton_input_eco_mode_auto_on_off_info()
	* drivers/mge-hid.c: Fix value ("1") in nuf
	* drivers/mge-hid.c: for test value after compile

2025-06-15  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: separate on / off as only fisrt command is used
	  in this case

2025-06-13  haul <haul@tgw-group.com>

	* drivers/phoenixcontact_modbus.c: Add support for shutdown
	  variables, mode selector, PC reset timing, and battery switch
	  threshold  - Introduced new variables to the phoenixcontact_modbus
	  driver especially for QUINTS 4 USB: - shutdown variables - mode
	  selector 9 = PC_MODE - PC reset delay after main power recovers -
	  automatic switch to battery mode if main power is below or above a
	  defined threshold.

2025-06-12  Jim Klimov <jimklimov@gmail.com>

	* docs/man/nut.txt, docs/man/index.txt: introduce
	  "ifndef::included-skip-title[]" toggle
	  [networkupstools/nut-website#61]

2025-06-12  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: return on/off
	* drivers/mge-hid.c: another typo
	* drivers/mge-hid.c: double, small fixes
	* drivers/mge-hid.c: convert from two functions to one
	  `eaton_input_eco_mode_auto_on_off_fun/[nuf]()`
	* drivers/mge-hid.c: return double (0.0 and 0.1) instead of named
	  double

2025-06-11  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/apc_modbus.c, NEWS.adoc: bump version, add summary [#2982]
	* docs/man/pijuice.txt, docs/nut.dict: some more nuances [#2985]
	* lib/libupsclient-config.in: single-quote ConfigFlags value
	* lib/libupsclient-config.in: define commonly customized dirs so
	  ConfigFlags do not emit warnings when configure script parses the
	  template
	* configure.ac: nut-common-tmpfiles.conf: own PIDPATH as root if not
	  overlapping with unprivileged patgs
	* docs/man/pijuice.txt, docs/nut.dict: update with nuances of PiJuice
	  HAT UPS setup from practice
	* Makefile.am: install-as-root: fix for new installs with systemd

2025-06-11  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: double fix
	* drivers/mge-hid.c: small fixes
	* drivers/mge-hid.c: added dummy and Conversion back of
	  `eaton_input_eco_mode_auto_off[on]_fun()`

2025-06-10  Hector Martin <marcan@marcan.st>

	* drivers/apc_modbus.c: Fix interframe delay  The delay is supposed
	  to be from *end* of a frame to *start* of the next. Also fix the
	  type used for timestamp calculations (useconds_t is not big enough
	  and overflows).  Fixes: #2609

2025-06-08  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx_megatec.c: specify that we accept 38+ bytes as
	  answer for "I" query, and any length after byte 28 till end of
	  reply is ups.firmware [#2980]  Also finally bump the subdriver
	  version for this PR
	* NEWS.adoc, UPGRADING.adoc: note the 38 vs 39 byte expected response
	  to "I" in nutdrv_qx::megatec subdriver [#2980]

2025-06-06  Bill Elliot <bill@wreassoc.com>

	* docs/acknowledgements.txt, docs/man/powervar-cx.txt, docs/nut.dict:
	  Text and NUT.dict tweaks to pass distcheck-light

2025-06-05  Bill Elliot <bill@wreassoc.com>

	* docs/man/Makefile.am, docs/man/powervar-cx.txt: Man page fixes.
	  Crossing T's and dotting I's.
	* docs/acknowledgements.txt: Fix web link in, and add support note
	  to, acknowledgements.txt
	* drivers/powervar-cs.c, drivers/powervar-cu.c: Change versions from
	  0.80 to 1.00 to prepare for release.

2025-06-04  gksmsk <90905316+gksmsk@users.noreply.github.com>

	* drivers/nutdrv_qx_megatec.c: Update nutdrv_qx_megatec.c  Added a
	  parameter battery.runtime

2025-06-04  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac, docs/configure.txt: suggest a --with-drvpath that is
	  not bindir but rather libexecdir
	* NEWS.adoc: Updated `megatec` protocol for more detailed responses
	  to `I` query [#2980]
	* drivers/nutdrv_qx_megatec.c: revise comments for "I" query updates
	* docs/man/nut.txt: reword coupling of upsmon with upssched
	* docs/man/huawei-ups2000.txt: fix title
	* docs/man/clone-outlet.txt, docs/man/clone.txt,
	  docs/man/dummy-ups.txt, docs/man/failover.txt, docs/man/nut.txt,
	  docs/man/tripplite_usb.txt: docs/man/*: fix man page section
	  references for upsc/upscmd/upsrw/NUT-Monitor/upsmon/upssched (1 =>
	  8)

2025-06-03  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, UPGRADING.adoc: report recent documentation/recipe
	  improvements [#2976, #2946]
	* docs/nut-versioning.adoc: version-related code moved from common.c
	  to common-nut_version.c [#2913, #2097]  ...to reduce the
	  rebuild/relink scope.
	* docs/man/.gitignore, docs/man/Makefile.am, docs/man/index.txt,
	  docs/nut.dict: docs/man/index.txt, docs/man/Makefile.am,
	  docs/man/.gitignore: report the effect of
	  DOC_INSTALL_SELECTED_MANS_PROGS_BUILT on delivered docs and indexed
	  man pages

2025-06-02  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/Makefile.am: linkman-*.txt: depend on Makefile after all
	  (adapt to varying configure choices)
	* docs/man/Makefile.am: trace GENERATE-LINKMAN events during build
	* docs/man/Makefile.am: actually honour
	  DOC_INSTALL_SELECTED_MANS_BUILTPROGS toggle for linkman*.txt
	  generation [networkupstools/nut-website#60]  Probably a lot more
	  can be enhanced later, to also consider this in delivery of HTML
	  MAN page renders, or finer-grained selections for even more
	  optional drivers (nhs_ser on linux), clients (Python UI),
	  development-only tools (like sockdebug), or platform-specific progs
	  (nut.exe), etc.
	* Makefile.am, docs/configure.txt, docs/maintainer-guide.txt: suggest
	  or ensure `configure --enable-docs-man-for-progs-built-only=no` for
	  dist/distcheck builds [networkupstools/nut-website#60]
	* ci_build.sh: if we end up building and/or installing documentation,
	  do parse all files (even if we do not build some programs here)
	  [networkupstools/nut-website#60]
	* configure.ac, docs/configure.txt, docs/nut.dict: configure.ac,
	  docs/configure.txt: convert to use of separate option
	  --enable-docs-man-for-progs-built-only=<yes|no>
	  [networkupstools/nut-website#60]
	* configure.ac, docs/configure.txt: introduce
	  --with-docs=(all=)mans-builtprogs vs. mans-all
	  [networkupstools/nut-website#60]
	* docs/man/Makefile.am, docs/man/.gitignore: refactor generation of
	  linkman-*.txt to pick up new driver lists in persistent NUT
	  building workspaces [networkupstools/nut-website#60]
	* docs/man/Makefile.am: linkman-*-names.txt: re-generate if the
	  Makefile.am changes [networkupstools/nut-website#60]

2025-05-30  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: default-all-errors: report count of SUCCEEDED and
	  FAILED builds
	* Makefile.am, NEWS.adoc: check-files-quick: only spellcheck-quick by
	  default if we `configure --enable-spellcheck`
	* configure.ac: NUT_REPORT_FEATURE(WITH_SPELLCHECK), not just
	  AM_CONDITIONAL() it quietly
	* conf/upsmon.conf.sample.in, docs/man/upsmon.conf.txt,
	  docs/man/usbhid-ups.txt: mention that there are different
	  "POLLFREQ" settings between upsmon and some drivers [#2974]

2025-05-28  Sebastian Kuttnig <sebastian.kuttnig@gmail.com>

	* drivers/failover.c, drivers/failover.h: drivers/failover.{c,h}:
	  make UPS priorities more readable in code
	* drivers/failover.c: improve guarding of ups->status against NULL
	  dereference  Adds checks to ensure ups->status is not NULL before
	  use, preventing a possible NULL pointer dereference.
	* drivers/failover.c, drivers/failover.h: drivers/failover.{c,h}:
	  store runtimes in UPS struct  These changes avoid constant lookups
	  in the variable table for better performance.
	* drivers/failover.c: minor improvements to order and debug levels
	* docs/man/failover.txt, docs/nut.dict: introduce checkruntime
	  argument
	* drivers/failover.c, drivers/failover.h: drivers/failover.{c,h}:
	  introduce checkruntime argument
	* tests/nut-driver-enumerator-test.sh: reflect recent enumerator
	  changes in test expectations [#2962]
	* docs/man/failover.txt, drivers/failover.c, drivers/failover.h:
	  drivers/failover.{c,h}, docs/man/failover.txt: use _sockfn() for
	  one-shot connections  This change removes the dependency on
	  splitting socket names into UPS and driver names. We now rely on
	  the user to provide valid sockets: if it connects, it connects.
	  This enables the use of full paths in the port argument also,
	  improving flexibility and enhancing scriptability.

2025-05-28  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh, NEWS.adoc: default-all-errors: refactor to use of a
	  common BUILDSTODO_LIST with one processing loop
	* ci_build.sh: default-all-errors: report why we list e.g. 8
	  scenarios and plan 7 runs (due to unmapped)
	* ci_build.sh: default-all-errors: refactor
	  BUILDSTODO_(SSL|USB|UNMAPPED) determination as size of bash array,
	  not via expr maths
	* ci_build.sh: default-all-errors: first pass conversion of
	  NUT_(USB|SSL|UNMAPPED)_VARIANTS from strings to bash arrays
	* ci_build.sh: default-all-errors: refactor FAILED/SUCCEEDED tracking
	  as bash arrays
	* ci_build.sh: default-all-errors: first steps to separate this
	  BUILD_TYPE into "quick" and "exhaustive" variants
	* docs/man/nut.txt, docs/man/index.txt: do not reference nut(7) when
	  including the man page index for rendering the page itself [#2945]
	* docs/man/nut.txt: rephrase NDE text
	* docs/man/nut.txt: fix "notable clients" bullet-list rendering
	* docs/man/nut-driver-enumerator.txt: update intro, mention
	  driver-on-drver dependencies [#2962]
	* NEWS.adoc: mention NDE change to track inter-driver dependency
	  [#2962]
	* NEWS.adoc: revise a few recent fixes

2025-05-27  Sebastian Kuttnig <sebastian.kuttnig@gmail.com>

	* drivers/dummy-ups.c: make upsdrv_cleanup() conditional on actual
	  allocs, not mode
	* drivers/dummy-ups.c: free ctx in upsdrv_cleanup() whenever
	  allocated
	* drivers/main.c: free temporary buffer in splitxarg()

2025-05-26  Sebastian Kuttnig <sebastian.kuttnig@gmail.com>

	* drivers/failover.c: use str_to_int() also in instcmd()
	* drivers/failover.c: make csv_arg_to_array() more reusable
	* drivers/failover.c: remove magic -1 from str_arg_to_int(), use
	  INT_MIN/MAX instead
	* drivers/failover.c: safer string to numeric conversions, improved
	  argument handling

2025-05-26  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: revise announcement of upsdrvquery API updates [#2969]
	  * Link to PR, since we already have one shared by the different
	  highlighted achievements * Revise style to be same as in other
	  lists
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: report if other
	  device uses unexpected driver [#2962]
	* m4/nut_check_libnss.m4: add Mozilla MPS headers to "-isystem" bunch
	  (CLANG/GCC builds)
	* Jenkinsfile-dynamatrix: use same naming style (no parenthesis
	  around C/C++ std version)
	* docs/man/netxml-ups.txt, docs/man/snmp-ups.txt: fix title casing
	* docs/man/skel.txt, docs/man/tripplite_usb.txt,
	  docs/man/ups.conf.txt, docs/security.txt: docs/*: fix remaining
	  links to man pages of external tools
	* docs/man/bestups.txt, docs/man/upsd.txt, docs/man/upsmon.txt,
	  docs/man/upssched.conf.txt, docs/man/upsset.cgi.txt:
	  docs/man/*.txt: fix linkman references to conf-file man pages
	  (default section 5 not 8)
	* docs/man/nut.txt, docs/man/upsmon.conf.txt, docs/man/upsmon.txt,
	  docs/nut.dict: Update upsmon(.conf) pages regarding SHUTDOWNCMD and
	  root [#2970]  Closes: #2970
	* docs/documentation.txt: refer to docs/man/nut.html from rendered
	  docs [#2950]
	* docs/man/Makefile.am: fix publication of nut.html on nut-website
	  [#2950]
	* docs/man/index.txt: publish linkman:nut[7] [#2950]

2025-05-24  Sebastian Kuttnig <sebastian.kuttnig@gmail.com>

	* drivers/upsdrvquery.c: drop redundant parentheses [#2963]
	* drivers/upsdrvquery.c: consistent guarding of _read_timeout() ret
	  cast [#2963]  The value of ret never exceeds the size of conn->buf,
	  which is defined as LARGEBUF. However, defensive guarding against
	  exceeding the buffer size was already in place for upsdebug_hex(),
	  so make upsdebugx() call consistent with it.
	* drivers/upsdrvquery.c: cast _read_timeout() ret directly to int
	  [#2963]  The value of ret never exceeds the size of conn->buf,
	  which is defined as LARGEBUF. A direct cast to int is safe in this
	  context and avoids tautological comparison warnings on some
	  platforms.
	* drivers/upsdrvquery.c: make _restore_broadcast() return values
	  consistent with _prepare()  A caller does not know about the
	  underlying _write() call and should not care about the number of
	  bytes written. Return -1 or 1 consistently, as already done the
	  same in _prepare().
	* NEWS.adoc: announce upsdrvquery API updates
	* drivers/upsdrvquery.c, drivers/upsdrvquery.h:
	  drivers/upsdrvquery.{c,h}: add _restore_broadcast(), call after
	  _oneshot_conn() (best-effort)  The _oneshot_conn() function does
	  not own the connection, so it should make a best-effort attempt to
	  restore the connection chatter (re-enabling broadcast) before
	  returning.  This ensures the caller receives the connection back in
	  a reasonably consistent state.
	* drivers/upsdrvquery.c: revise ownership of connections in _prepare
	  and _request
	* docs/man/failover.txt: fix incompatible characters
	* drivers/Makefile.am: add failover.h for dists

2025-05-23  Sebastian Kuttnig <sebastian.kuttnig@gmail.com>

	* drivers/upsdrvquery.c, drivers/upsdrvquery.h:
	  drivers/upsdrvquery.{c,h}: revise ownership and freeing of one-shot
	  connections
	* drivers/upsdrvquery.c, drivers/upsdrvquery.h:
	  drivers/upsdrvquery.{c,h}: new oneshot functions, refactor existing
	  without breaking API
	* NEWS.adoc, docs/nut.dict: introduce upsdrvquery changes
	* docs/man/failover.txt: add 3rd party tool use case for rationale
	* docs/man/failover.txt: add limitations
	* docs/man/failover.txt: add note to factor in network or
	  lock-picking delays for inittime
	* docs/man/failover.txt: make hyphens consistent
	* drivers/failover.c: remove progname from non fatal log message
	* docs/man/failover.txt: polish documentation and add rationale
	* drivers/failover.c: safeguard ups_promote_primary against NULL or
	  double promotion
	* drivers/failover.c: show truncation content at end of log message
	* drivers/failover.c: remove redundant _init() calls for status/alarm
	* drivers/failover.c: do not fatalx on no connectable drivers, keep
	  trying instead
	* drivers/failover.c, drivers/failover.h: drivers/failover.{c,h}:
	  introduce failover.h for defines, typedefs
	* drivers/failover.c: use enum for priorities
	* drivers/failover.c: use NUT_STRARG helper for null checks in
	  various places

2025-05-23  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-notes.txt: fix reference to Augeas chapter in
	  developer-guide [#2968]
	* docs/man/nut_usb_addvars.txt: clarify the optionality and dangers
	  of bus/busport/device settings [#2447]

2025-05-22  Sebastian Kuttnig <sebastian.kuttnig@gmail.com>

	* drivers/failover.c: reword shutdown to be more clear

2025-05-22  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: add support for
	  "drivers=..." media type for dependencies, and failover driver
	  using that [#2962]
	* docs/nut.dict: add "resizing"
	* Jenkinsfile-dynamatrix: extend "GNU C89/C++98 ... with GCC"
	  (BUILD_WARNFATAL=yes BUILD_WARNOPT=auto) to also cover Strict C in
	  all CI runs  Note: this differs from "Strict ANSI C" builds done in
	  fightwarn branches, those try "minimal" and "hard" BUILD_WARNOPT
	  types.
	* Jenkinsfile-dynamatrix: "GNU C99+/C++11+" and "GNU C89/C++98 ...
	  with GCC" should nowadays be BUILD_WARNFATAL=yes when
	  BUILD_WARNOPT=auto
	* Jenkinsfile-dynamatrix: "A build with all driver types...for other
	  C/C++ revisions" - disable C99/C++98 checked as main revision
	* Jenkinsfile-dynamatrix: update build scenario names to reflect
	  warnings levels and standard versions
	* tools/nut-scanner/nut-scanner.c, drivers/mge-hid.c,
	  drivers/hwmon_ina219.c: fix source markup to remain compatible with
	  C89 syntax
	* NEWS.adoc: document fixes for adaptive varargs sizing [#2963]
	* common/common.c: fix typo in comment

2025-05-22  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: upsdebugx in  bypass and ecomode functions
	  updated with %s: and __func__ for easy debug later

2025-05-20  Sebastian Kuttnig <sebastian.kuttnig@gmail.com>

	* drivers/upsdrvquery.c: safer comparison for printable_len [#2963]
	* include/common.h: do not assume va_copy() to be a macro on all
	  systems [#2963]
	* configure.ac: more portable va_copy() checks [#2963]
	* common/common.c: fix comment [#2963]
	* drivers/upsdrvquery.c: fix comment [#2963]
	* drivers/upsdrvquery.c: revise signed/unsigned comparison, account
	  for ret < 0 [#2963]
	* common/common.c: condense declarations and comments for va_copy()
	  [#2963]
	* common/common.c, configure.ac, include/common.h: configure.ac,
	  common/common.{c,h}: define va_copy with __va_copy where
	  needed/available [#2963]
	* drivers/upsdrvquery.c: fix assumption about ret [#2963]
	* drivers/upsdrvquery.c: account for non-null-terminated buffers
	  [#2948]
	* common/common.c: only upsize buffer in vupslog() if va copying is
	  supported [#2948]
	* configure.ac: test for va_copy and __va_copy

2025-05-19  Sebastian Kuttnig <sebastian.kuttnig@gmail.com>

	* drivers/failover.c: make defensive freeing consistent throughout
	  the file
	* drivers/failover.c: preserve which port value failed the argument
	  parsing process
	* drivers/failover.c: clean dstate after fsdmode 0, remove now freed
	  var from exit debug
	* drivers/failover.c: free parse_port_argument() tmp on premature
	  exit [#2962]
	* drivers/failover.c: add shutdown non-handling
	* drivers/failover.c, NEWS.adoc: fixes for compiler warnings, add PR
	  number to news entry [#2962]
	* NEWS.adoc: introduce failover driver
	* server/netget.c: rewrite upstream prefix for proxying drivers
	* docs/man/Makefile.am, docs/man/failover.txt, docs/nut.dict,
	  drivers/Makefile.am, drivers/failover.c: drivers/, docs/: introduce
	  failover driver

2025-05-18  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am: EXTRA_DIST ci_build.sh along with ci_build.adoc
	* Makefile.am: Revert "Makefile.am: as long as we do not tarball
	  ci_build.sh, do not deliver its doc either"  This reverts commit
	  7a2e5d771c57f5768ced35e5d2994ed9f214a491: the doc is part of
	  qa-guide. Makes more sense to also dist the script instead.

2025-05-16  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/ax_c_pragmas.m4: AX_C_PRINTF_STRING_NULL: detect also if
	  gcc/clang would refuse printf("%s",NULL) if warnings are enabled
	  (so NUT_STRARG must be enabled if auto)
	* Makefile.am: as long as we do not tarball ci_build.sh, do not
	  deliver its doc either
	* ci_build.sh: default-all-errors: if CI_FAILFAST is triggered in
	  SSL/USB loops, do not go for NUT_UNMAPPED_VARIANT either
	* drivers/dstate.c: sock_fail(): suggest more ways to "ps|grep"
	  [#2959]

2025-05-16  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* data/cmdvartab, docs/nut-names.txt, drivers/mge-hid.c: rename to
	  `experimental.bypass.ecomode.start[stop]` from
	  `experimental.ecomode.start[stop].auto`

2025-05-15  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/solis.c: cast NULL as "char*" when sending it to print
	* drivers/dstate.c, NEWS.adoc: sock_fail(): suggest things to try if
	  a (maybe non-socket) filesystem object already exists
	* drivers/dstate.c: sock_fail(): limit the impact of failed
	  getpwuid() when reporting the problem
	* NEWS.adoc, drivers/adelsystem_cbi.c, drivers/al175.c,
	  drivers/apc_modbus.c, drivers/apcsmart-old.c, drivers/apcsmart.c,
	  drivers/bcmxcp.c, drivers/belkin.c, drivers/belkinunv.c,
	  drivers/bestfcom.c, drivers/bestfortress.c, drivers/bestuferrups.c,
	  drivers/bestups.c, drivers/bicker_ser.c, drivers/blazer.c,
	  drivers/clone.c, drivers/dummy-ups.c, drivers/etapro.c,
	  drivers/everups.c, drivers/gamatronic.c, drivers/generic_modbus.c,
	  drivers/huawei-ups2000.c, drivers/isbmex.c, drivers/liebert-esp2.c,
	  drivers/liebert-gxe.c, drivers/macosx-ups.c, drivers/main.c,
	  drivers/masterguard.c, drivers/metasys.c, drivers/mge-utalk.c,
	  drivers/microdowell.c, drivers/microsol-common.c,
	  drivers/netxml-ups.c, drivers/nut-ipmipsu.c,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_hashx.c,
	  drivers/nutdrv_qx.c, drivers/nutdrv_qx_voltronic.c,
	  drivers/nutdrv_siemens_sitop.c, drivers/oneac.c, drivers/optiups.c,
	  drivers/pijuice.c, drivers/powercom.c, drivers/powerman-pdu.c,
	  drivers/powerp-bin.c, drivers/powerp-txt.c, drivers/rhino.c,
	  drivers/richcomm_usb.c, drivers/riello_ser.c, drivers/riello_usb.c,
	  drivers/safenet.c, drivers/skel.c, drivers/sms_ser.c,
	  drivers/snmp-ups.c, drivers/solis.c, drivers/tripplite.c,
	  drivers/tripplite_usb.c, drivers/tripplitesu.c, drivers/upscode2.c,
	  drivers/usbhid-ups.c, drivers/victronups.c: drivers/*.c, NEWS.adoc:
	  revise logging of instcmd() where upslog_INSTCMD_POWERSTATE*()
	  macros shine
	* drivers/upshandler.h: introduce upslog_INSTCMD_POWERSTATE*() macros
	  and LOG_INSTCMD_POWERSTATE level
	* clients/upsclient.c: avoid using upslog*() methods with numeric log
	  level instead of a syslog macro
	* drivers/powerman-pdu.c, drivers/snmp-ups.c,
	  drivers/tripplite_usb.c, drivers/usbhid-ups.c, drivers/ve-direct.c:
	  drivers/*: avoid using upslog*() methods with numeric log level
	  instead of a syslog macro
	* drivers/dummy-ups.c: setvar(): update a FIXME comment

2025-05-14  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/adelsystem_cbi.c, drivers/al175.c, drivers/apc_modbus.c,
	  drivers/apcsmart-old.c, drivers/apcsmart.c, drivers/bcmxcp.c,
	  drivers/belkin.c, drivers/belkinunv.c, drivers/bestfcom.c,
	  drivers/bestfortress.c, drivers/bestuferrups.c, drivers/bestups.c,
	  drivers/bicker_ser.c, drivers/blazer.c, drivers/blazer_ser.c,
	  drivers/blazer_usb.c, drivers/clone.c, drivers/dstate.c,
	  drivers/dummy-ups.c, drivers/etapro.c, drivers/everups.c,
	  drivers/gamatronic.c, drivers/generic_modbus.c,
	  drivers/huawei-ups2000.c, drivers/isbmex.c, drivers/ivtscd.c,
	  drivers/liebert-esp2.c, drivers/liebert-gxe.c,
	  drivers/macosx-ups.c, drivers/main.c, drivers/masterguard.c,
	  drivers/metasys.c, drivers/mge-utalk.c, drivers/microdowell.c,
	  drivers/microsol-common.c, drivers/netxml-ups.c,
	  drivers/nut-ipmipsu.c, drivers/nutdrv_atcl_usb.c,
	  drivers/nutdrv_hashx.c, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_blazer-common.c, drivers/nutdrv_siemens_sitop.c,
	  drivers/oneac.c, drivers/optiups.c, drivers/pijuice.c,
	  drivers/powercom.c, drivers/powerman-pdu.c, drivers/powerp-bin.c,
	  drivers/powerp-txt.c, drivers/rhino.c, drivers/richcomm_usb.c,
	  drivers/riello_ser.c, drivers/riello_usb.c, drivers/safenet.c,
	  drivers/skel.c, drivers/sms_ser.c, drivers/snmp-ups.c,
	  drivers/solis.c, drivers/tripplite.c, drivers/tripplite_usb.c,
	  drivers/tripplitesu.c, drivers/upscode2.c, drivers/usbhid-ups.c,
	  drivers/ve-direct.c, drivers/victronups.c: drivers/*.c: revise
	  logging of instcmd() and setvar() or their equivalents to be
	  consistent across all drivers [WIP]
	* drivers/dummy-ups.c: instcmd(), setvar(): test conversion to new
	  logging macros  Testing:  :; NUT_STATEPATH=/tmp ./drivers/dummy-ups
	  -DDDDDD -s test -x port= & :; (echo NOBROADCAST ; echo "INSTCMD
	  qqq" ; sleep 3 ; echo "INSTCMD qqq arg" ; sleep 3 ; echo "SET qqq"
	  ; sleep 3 ; echo "SET qqq 123" ; sleep 10; ) | ./server/sockdebug
	  /tmp/dummy-ups-test  Outputs:  8.003940     [D6] sock_arg: Driver
	  on /tmp/dummy-ups-test is now handling INSTCMD with 2 args 8.003974
	  [D2] entering main_instcmd(qqq, (null)) for [test] on socket 5
	  8.003982     [D2] shared main_instcmd() does not handle command
	  qqq, proceeding to driver-specific handler 8.004017     [D1]
	  Starting dummy-ups.c::instcmd('qqq', '(null)') 8.004049
	  instcmd: unknown command [qqq] [(null)]  8.004059     [D6]
	  sock_arg: Driver on /tmp/dummy-ups-test is now handling INSTCMD
	  with 3 args 8.004068     [D2] entering main_instcmd(qqq, arg) for
	  [test] on socket 5 8.004075     [D2] shared main_instcmd() does not
	  handle command qqq, proceeding to driver-specific handler 8.004080
	  [D1] Starting dummy-ups.c::instcmd('qqq', 'arg') 8.004086
	  instcmd: unknown command [qqq] [arg]  (apparently the two got
	  coalesced by delay between main.c loops)  11.504627    [D6]
	  sock_arg: Driver on /tmp/dummy-ups-test is now handling SET with 2
	  args 11.504669    Unknown command on socket: 11.504675    arg 0:
	  SET 11.504678    arg 1: qqq  (SET must have an argument)  14.004807
	  [D6] sock_arg: Driver on /tmp/dummy-ups-test is now handling SET
	  with 3 args 14.004856    [D2] entering main_setvar(qqq, 123) for
	  [test] on socket 5 14.004867    [D2] shared main_setvar() does not
	  handle variable qqq, proceeding to driver-specific handler
	  14.004874    [D1] Starting dummy-ups.c::setvar('qqq', '123')
	  14.004930    [D2] find_info: unknown variable: qqq 14.004979
	  [D1] Unknown data. Committing anyway... 14.004992    [D2]
	  find_info: unknown variable: qqq 14.004997    [D1] Unknown data.
	  Committing value anyway... 14.005062    [D5] send_to_all: SETINFO
	  qqq "123" 14.005113    [D2] find_info: unknown variable: qqq
	  14.005125    [D2] setvar: unknown variable (qqq), using default
	  flags 14.005133    [D5] send_to_all: SETFLAGS qqq RW STRING
	  14.005144    [D5] send_to_all: SETAUX qqq 32
	* drivers/upshandler.h, NEWS.adoc: introduce macros for common syslog
	  level definitions and message wording for beginning and failing
	  instcmd() or setvar() consistently in different drivers
	* drivers/mge-utalk.c: setvar(): return STAT_SET_HANDLED when due
	* drivers/oneac.c: instcmd(): use consistent method argument markup
	  (spaces)
	* NEWS.adoc, drivers/usbhid-ups.c, drivers/usbhid-ups.h:
	  drivers/usbhid-ups.{c,h}, NEWS.adoc: rename
	  HU_FLAG_CMD_PARAM_REQUIRED => HU_FLAG_PARAM_REQUIRED and extend to
	  setvar() too [#2955, #2860]

2025-05-14  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* data/cmdvartab, docs/nut-names.txt, drivers/mge-hid.c: added cmd
	  "experimental.ecomode.start.auto" "experimental.ecomode.stop.auto"

2025-05-13  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/usbhid-ups.h, drivers/usbhid-ups.c, NEWS.adoc,
	  docs/nut.dict: introduce HU_FLAG_CMD_PARAM_REQUIRED and a
	  HU_TYPE_CMD_PARAM_REQUIRED shortcut for setting in the mapping
	  tables  Complete the feature started in commit
	  7991e4592e042f16f5e0757083f0fd58503e8a5e which became a regression
	  of NUT v2.8.3 [#2860].
	* drivers/usbhid-ups.c: drop EOL from single-line upsdebugx() reports
	* drivers/usbhid-ups.h: bump (C)
	* drivers/usbhid-ups.h: revise comment markup

2025-05-12  penghong <penghong20000102@163.com>

	* data/driver.list.in: Added some descriptions of UPS equipment.

2025-05-12  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/driver-list-format.sh: refactor VALID_LINE definition [#2953]
	* tools/driver-list-format.sh, data/Makefile.am: recognize
	  caller-provided srcdir or builddir; use the latter for output
	  files; include "/data" part inside DRVLIST_PATH
	* data/driver.list.in: fix markup of older entries
	* tools/driver-list-format.sh: document the updated purpose, add
	  copyrights
	* tools/driver-list-format.sh: do not replace original file if it is
	  same (do not confuse "make" and mess up archive timestamps)
	* tools/driver-list-format.sh: fix also separators made of more than
	  one TAB or a mix of TABs and spaces
	* tools/driver-list-format.sh: verify that lines are either empty,
	  all-comments, or have six fields (and optional comment)
	* tools/driver-list-format.sh: prefix lines with script name to help
	  see it in "make" log; revise message in case something "needs to be
	  fixed"
	* tools/driver-list-format.sh: TAB-separate the optional trailing
	  comment from the last required field
	* tools/driver-list-format.sh: rearrange the logic as a chain for
	  better maintenance; use single-quotes around regex with a dollar
	* tools/driver-list-format.sh: document the SED logic
	* data/Makefile.am, data/.gitignore: take care of
	  driver.list{,.in}.tabbed files if they are left over
	* Makefile.am, data/Makefile.am, tools/driver-list-format.sh,
	  tools/Makefile.am: add a check (not change) mode for driver.list
	  markup [#2952]
	* docs/man/Makefile.am, docs/man/apc_modbus.txt,
	  docs/man/generic_modbus.txt, docs/man/networked_hostnames.txt,
	  docs/man/netxml-ups.txt, docs/man/nut-ipmipsu.txt,
	  docs/man/powerman-pdu.txt, docs/man/snmp-ups.txt: Introduce
	  docs/man/networked_hostnames.txt caveat, include it into networked
	  driver man pages

2025-05-12  Jim Klimov <jim@jimklimov.com>

	* docs/man/blazer_ser.txt, docs/man/blazer_usb.txt: inject a dummy
	  "linkman" for .txt-prepped rewriter to patch up the man section
	  [#2950]
	* docs/man/nut.txt: elaborate more on "File or directory not found"
	  messages, permissions, config files and nut-scanner
	* docs/man/nut.txt: point to NUT Configuration Examples book

2025-05-11  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/dstate.c, tests/driver_methods_utest.c: check that LB can
	  be set and status set+commit+set+commit (without init in the
	  middle) adds reported tokens [#2934]

2025-05-11  Jim Klimov <jim@jimklimov.com>

	* docs/configure.txt: note that "datadir" for NUT must include the
	  "/nut" part
	* NEWS.adoc, UPGRADING.adoc, configure.ac, docs/configure.txt,
	  docs/man/Makefile.am: configure.ac, docs/configure.txt,
	  docs/man/Makefile.am: introduce "configure
	  --with-docs-man-dir-as-base"
	* .../python/app/locale/fr/LC_MESSAGES/NUT-Monitor.mo,
	  .../python/app/locale/it/LC_MESSAGES/NUT-Monitor.mo,
	  .../python/app/locale/ru/LC_MESSAGES/NUT-Monitor.mo:
	  scripts/python/app/locale/*/LC_MESSAGES/NUT-Monitor.mo: update
	  after Qt6 bump [#2946]
	* docs/man/nut.txt, docs/nut.dict: docs/man/nut.txt: add a chapter on
	  NUT Run-time Nuances
	* configure.ac, docs/configure.txt, docs/man/Makefile.am:
	  configure.ac: auto-tune man page sections by platform
	  (Solaris/illumos, and everyone else)
	* configure.ac: line-break test for strdup()

2025-05-11  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* data/cmdvartab, docs/nut-names.txt, drivers/mge-hid.c: remove
	  experimental.ecomode.[start/stop].auto var/cmd funtions for working
	  in another pr and clean this pr

2025-05-10  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, drivers/dstate.c, tests/driver_methods_utest.c: Update
	  asciidoc and C markup, and (C) headings [#2934]

2025-05-10  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: removed unused vars
	* drivers/mge-hid.c: experimental.ecomode.stop/start.auto added as
	  commands for test after compiled
	* drivers/mge-hid.c: input.bypass.switch.on", "disabled (useless,
	  onlly on,off can be runned) to "input.bypass.switch.off", "off"
	  ,aded function of eaton_input_bypass_check_range(value); ,
	  eaton_input_eco_mode_check_range(value);

2025-05-09  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/usbhid-ups.txt, NEWS.adoc, UPGRADING.adoc: revise
	  whitespace/markup [#2944]

2025-05-09  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: change place of 0-1  in
	  eaton_input_eco_mode_auto_on_off_info()
	* data/cmdvartab, docs/nut-names.txt, drivers/mge-hid.c:
	  experimental.ecomode.[start/stop] to experimental.ecomode.auto

2025-05-08  Sebastian Kuttnig <sebastian.kuttnig@gmail.com>

	* NEWS.adoc: introduce NUT-Monitor-py3qt6
	* docs/man/Makefile.am: introduce NUT-Monitor-py3qt6
	* configure.ac: handle both py3qt5 and py3qt6 or either
	* docs/configure.txt, docs/man/NUT-Monitor.txt, docs/new-clients.txt,
	  docs/nut.dict: docs/*: introduce NUT-Monitor-py3qt6
	* scripts/python/Makefile.am, scripts/python/app/NUT-Monitor: handle
	  PyQt5 and PyQt6
	* scripts/python/README.adoc,
	  scripts/python/app/NUT-Monitor-py3qt6.in,
	  scripts/python/app/README.adoc,
	  scripts/python/app/nut-monitor-py3qt6.desktop:
	  scripts/python/app/*: introduce Py3Qt6 port for NUT Monitor
	* scripts/python/app/.gitignore,
	  scripts/python/app/locale/NUT-Monitor.pot,
	  scripts/python/app/locale/fr/fr.po,
	  scripts/python/app/locale/it/it.po,
	  scripts/python/app/locale/ru/ru.po,
	  scripts/python/app/ui/aboutdialog1.ui,
	  scripts/python/app/ui/gui-1.3.glade,
	  scripts/python/app/ui/gui-1.3.glade.h: scripts/python/app/*: bump
	  structure, version for Qt6

2025-05-08  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt: update for Python3 + Qt6 since 2025
	  distros [#2946]
	* scripts/python/app/NUT-Monitor-py3qt6.in: fix exec bit and
	  whitespace alignment [#2946]
	* NEWS.adoc, UPGRADING.adoc: document introducing the text for a way
	  to "man nut" [#2945]
	* docs/man/index.txt, docs/man/nut.txt, docs/nut.dict:
	  docs/man/nut.txt, docs/man/index.txt: revise inclusion of index
	  into "man nut" and restore the "Platform Management" sub-sectioning
	* docs/man/index.txt: drop colons from section names
	* docs/man/index.txt: add placeholder sections for more Platform
	  Management types (to be documented)
	* docs/man/index.txt: avoid deep section title layers
	* docs/maintainer-guide.txt: no need to edit any files to publish a
	  NUT for Windows build artifact
	* docs/download.txt: add a link for NUT for Windows artifact
	* docs/maintainer-guide.txt: update with AppVeyor CI artifact
	  publication (NUT for Windows)

2025-05-08  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: experimental.ecomode.[start/stop].auto move to
	  uprw + set NULL to last argument for bypass and ecomode cmds

2025-05-07  invario <67800603+invario@users.noreply.github.com>

	* docs/nut.dict: Updated nut.dict after spellcheck
	* NEWS.adoc, UPGRADING.adoc, data/driver.list.in,
	  docs/man/usbhid-ups.txt, drivers/usbhid-ups.c: Update adds APC
	  BVKnnnnM2 to list of devices being affected by spurious LB/RB
	  issues and allows users to apply corresponding tweaks

2025-05-07  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/Makefile.am, docs/man/nut.txt, docs/nut.dict: introduce a
	  way to "man nut"
	* NEWS.adoc, UPGRADING.adoc, configure.ac, docs/Makefile.am,
	  docs/configure.txt, docs/man/Makefile.am: configure.ac,
	  docs/Makefile.am, docs/man/Makefile.am etc.: introduce support for
	  MAN_SECTION_MISC
	* docs/Makefile.am: ChangeLog.html-contentchecked: entry_filter():
	  refactor the regex for special-char escaping for pure(r)-POSIX
	  portability [#2940]
	* NEWS.adoc: rephrase innovart31 protocol support in nutdrv_qx
	  [#2938]

2025-05-06  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: announce nutdrv_hashx driver [#2940]
	* docs/Makefile.am: ChangeLog.html-contentchecked: entry_filter():
	  escape some content characters that are special for regex later
	  [#2940]
	* docs/Makefile.am: ChangeLog.html-contentchecked: refactor with a
	  common entry_filter()
	* drivers/nutdrv_hashx.c: fix status_bytes_size printing [#2940]
	* data/driver.list.in: fix markup: TAB before optional comment
	* NEWS.adoc: announce new innovart33 protocol support in nutdrv_qx
	  [#2938]

2025-05-05  Marco Trevisan (Treviño) <mail@3v1n0.net>

	* docs/nut-names.txt, drivers/nutdrv_hashx.c: drivers/nutdrv_hashx:
	  Add Implement start / stop beeper test
	* data/cmdvartab, docs/nut-names.txt: data/nut-names: Add
	  experimental commands to test the UPS beeper/buzzer  Various UPS
	  have this command to test the hardware beep, but NUT is not
	  providing the command.  I feel this could be not experimental, but
	  let's make it as such for now since we only need for one driver
	  AFAIK
	* data/driver.list.in: data/drivers.list: Mention other UPS that
	  nutdrv_hashx should support  Update the drivers list based on what
	  the official websites of the producers say, as these all are
	  expected to work with PowerManager+, and so they should also work
	  with nitdrv_hashx
	* drivers/nutdrv_hashx.c: drivers/nutdrv_hashx: Add support for
	  running instant actions  Support running commands for instant
	  actions so that it's possible to interactively run them from NUT
	  too
	* drivers/skel.c: drivers/skel: Fix reference to nut-names doc file

2025-05-04  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* drivers/clone.c: refactor core driver logic, minor fixes around
	  previous work [#2936]

2025-05-04  Viktor Drobot <linux776@gmail.com>

	* docs/man/nutdrv_qx.txt, docs/nutdrv_qx-subdrivers.txt,
	  drivers/Makefile.am, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_blazer-common.c,
	  drivers/nutdrv_qx_blazer-common.h, drivers/nutdrv_qx_innovart33.c,
	  drivers/nutdrv_qx_innovart33.h: Add support (experimental) for
	  Ippon Innova RT 3/3

2025-05-04  Marco Trevisan (Treviño) <mail@3v1n0.net>

	* AUTHORS, data/driver.list.in, docs/man/Makefile.am,
	  docs/man/nutdrv_hashx.txt, docs/nut.dict, drivers/Makefile.am,
	  drivers/nutdrv_hashx.c: drivers/nutdrv_hashx: Add new driver for
	  PowerManager+ supported devices  Add an initial driver for the "#*"
	  protocol support that is used by many UPS out there that rely on
	  the proprietary software suites PowerMaster+, PowerMaster,
	  PowerGuide and so on...  The naming of the driver has been chosen
	  since all the UPS replies start with an "#", while there's not a
	  definitive common pattern for the queries or commands.  Apparently
	  the same protocol is used by various UPS devices, both online and
	  line-interactive (given that many producers advertise to use the
	  said programs), and only in serial mode (AFAIK). Although this
	  driver has solely been tested with the Atlantis Land S1200
	  line-interactive UPS.  So there may be missing features (such as
	  the bypass mode) or lack of information. However most of the
	  decoding has been done and the driver is enough to update the UPS
	  status for monitoring and shutdown purposes.  As for now, only the
	  status updates features have been implemented.   Closes: #2769

2025-05-03  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* drivers/clone.c: reduce redundant argument parsing, debug messages
	  [#2936]
	* drivers/clone.c: further improve outlet status detection, debug
	  messages [#2936]
	* drivers/clone.c: revise outlet status logic, raise OFF for
	  turned-off outlets  No longer evaluate outlet status in instant
	  command handling, but rather in the main update cycle. Raising OFF
	  for a turned-off outlet aligns with the behavior of the
	  clone-outlet driver.
	* drivers/clone-outlet.c: fix whitespace [#2936]
	* NEWS.adoc, drivers/clone-outlet.c, drivers/clone.c:
	  drivers/clone{,-outlet}.c, NEWS.adoc: modernize status handling
	* NEWS.adoc: fill in pull request numbers for recent changes
	* NEWS.adoc: add nhs_ser, nutdrv_qx_ablerex modern alarm and status
	  handling changes
	* drivers/nutdrv_qx_ablerex.c: modernize alarm handling
	* drivers/dummy-ups.c, docs/man/dummy-ups.txt, NEWS.adoc: introduce
	  ALARM instruction for dummy modes

2025-05-01  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* drivers/nhs_ser.c: modernize status and alarm handling
	* AUTHORS, docs/nut.dict: add desertwitch
	* tests/driver_methods_utest.c, NEWS.adoc: bump subdriver version,
	  announce dstate changes
	* docs/developers.txt: fix typo [#2932]

2025-04-30  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* drivers/dstate.c: do not add whitespace on lone alarm [#2931]
	* tests/driver_methods_utest.c: adapt for legacy and modern alarms
	  [#2931]
	* clients/upsmon.c: clarifications and beautifications for legacy
	  alarms [#2931]
	* drivers/dstate.c: keep legacy alarms unchanged, do not decouple
	  from status [#2931]
	* docs/new-drivers.txt: clarify alarm state handling

2025-04-30  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt, docs/nut.dict: generalize the title/intro
	  for chapter on APT-based Debian-derived Linux systems [#2923]
	* NEWS.adoc: clarify "driver updates" in section title
	* docs/man/nutdrv_qx.txt: typo fix (extra spaces)
	* ci_build.sh: add NUT_UNMAPPED_VARIANTS to
	  BUILD_TYPE="default-all-errors" matrix
	* ci_build.sh: revise default stance towards WITH_UNMAPPED_DATAPOINTS
	  values

2025-04-29  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: .adoc-parsed generator: rewrite "+" in URLs to
	  "%2B" [#1407]  Help with ChangeLog entry for an old URL buried in
	  commit message years ago, from a branch getting merged just now.
	* docs/nut.dict: teach all systems that "inverters" is also a word
	  [#1407]
	* tests/Makefile.am: restructure and comment cppunittest_LDADD and
	  cppnit_LDADD [#2744]  One positive result of experiments in PR
	  #2744 which otherwise did not lead far, yet...
	* docs/Makefile.am: .adoc-parsed generator: rewrite "+" in URLs to
	  "%2B" [#1407]  Help with ChangeLog entry for an old URL buried in
	  commit message years ago, from a branch getting merged just now.
	* NEWS.adoc: URL-encode the plus character in GitHub URL (branch name
	  part) [#1407]
	* NEWS.adoc: document the fix of failed `configure
	  --with-drivers=dummy-ups` scenario [#2927]
	* configure.ac: get_drivers_makefile_value(): recurse to expand make
	  variables in discovered values [#2927]
	* configure.ac: rename get_drvlist() => get_drivers_makefile_value()
	  [#2927]
	* configure.ac: get_drvlist(): do not forget dollar chars; do drop
	  $(EXEEXT) though [#2927]
	* configure.ac: get_drvlist(): trim multiple repetitive SPACES per
	  combined line into one space each [#2927]
	* configure.ac: get_drvlist(): quick-return from the loop after we
	  finish reading the assignment (may be multi-line) [#2927]
	* docs/nut.dict: teach all systems that "inverters" is also a word
	  [#1407]

2025-04-28  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: teach all systems that "photovoltaic" is a word
	  [#1407]
	* drivers/nutdrv_qx_ablerex.c, drivers/nutdrv_qx_ablerex.h,
	  drivers/powervar-hid.h: drivers/nutdrv_qx_ablerex.{c,h},
	  drivers/powervar-hid.h: fix POSIX attrs in git
	* docs/nutdrv_qx-subdrivers.txt: clarify how the "protocol" names are
	  determined
	* docs/nut.dict: teach all systems that "photovoltaic" is a word
	  [#1407]
	* drivers/nutdrv_qx_voltronic-axpert.c: voltronic_sunny_fault(): use
	  alarm[LARGEBUF] so that item->value[SMALLBUF] can fit with added
	  markup [#1407]  ...not that we expect problems with this, but
	  compiler warns they are feasible: error: '%s' directive output may
	  be truncated writing up to 511 bytes into a region of size 497
	  [-Werror=format-truncation=]
	* drivers/nutdrv_qx_voltronic-axpert.c: use double-TABs with
	  TESTING_AXPERT* macro definitions for better visibility [#1407]
	* drivers/nutdrv_qx_voltronic-axpert.c: suggest how to timker with
	  TESTING_AXPERT* macros [#1407]
	* docs/man/nutdrv_qx.txt, docs/nut.dict: add voltronic-axpert info
	  [#1407]
	* drivers/nutdrv_qx_ablerex.c, drivers/nutdrv_qx_ablerex.h,
	  drivers/powervar-hid.h: drivers/nutdrv_qx_ablerex.{c,h},
	  drivers/powervar-hid.h: fix POSIX attrs in git
	* docs/nutdrv_qx-subdrivers.txt: clarify how the "protocol" names are
	  determined
	* configure.ac, scripts/Windows/dllldd.sh: use question mark in grep
	  regex, that seems to work everywhere and suits the purpose better
	  [#2920]

2025-04-27  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/victronups.txt: fix a few typos
	* docs/man/ve-direct.txt: fix man page markup to NUT v2.8.3 patterns,
	  fix a few typos [#440]
	* docs/daisychain.txt: docs/daisychain.txt" fix typo (duplicate "the
	  the")
	* configure.ac: quieter grep for unbuildable doc formats
	* configure.ac: clarify why unbuildable doc formats are just warnings
	  initially
	* configure.ac, NEWS.adoc: fix regression of `configure
	  --with-docs=all` released with NUT v2.8.3  Fallout of #2842, used
	  wrong variable name for checking the requested list of doc types
	* configure.ac: fix indentation
	* configure.ac: make use of NUT_REPORT_FEATURE() arg #6 to produce
	  saner message wording
	* m4/nut_report_feature.m4: NUT_REPORT_FEATURE: allow other prefixes
	  than "whether to"
	* configure.ac: NUT_REPORT_FEATURE("requested to build and install
	  documentation") to also report the decided nut_doc_build_list of
	  specific required formats
	* configure.ac: use better portable regex syntax
	* scripts/Windows/dllldd.sh: use better portable regex syntax
	* tools/gitlog2version.sh: use better portable regex syntax

2025-04-26  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* drivers/cps-hid.c: bump subdriver version, rename nominal power
	  constant [#2919]
	* NEWS.adoc: cps-hid nominal power reporting fixes
	* drivers/cps-hid.c: consider also non-broken ConfigActivePower
	  descriptors [#2919]
	* drivers/cps-hid.c: add report descriptor fix for ConfigActivePower

2025-04-26  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: added a ve-direct driver for Victron Energy UPS/solar
	  panels monitoring [#440]
	* drivers/ve-direct.c: cast the int type for hex scanf() [#440]
	* NEWS.adoc, docs/nut.dict: NEWS.adoc: introduced Voltronic Axpert
	  inverter subdriver [#1407]

2025-04-25  Jim Klimov <jimklimov@gmail.com>

	* drivers/ve-direct.c: fix code style (markup, declarations before
	  code) [#440]

2025-04-25  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: introduce (or guess) WITH_UNMAPPED_DATAPOINTS optional
	  toggle
	* ci_build.sh: add --with-unmapped-data-points for non-production
	  builds
	* docs/developers.txt, docs/nut.dict: document avoiding VLA
	* drivers/ve-direct.c: fix declaration after code [#440]
	* drivers/nutdrv_qx_voltronic-axpert.c: name "experimental.*" values
	  in the mapping table as such; comment a few of them [#1407]
	* drivers/nutdrv_qx_voltronic-axpert.c: fence yet-unmapped data
	  points and commands (and their processing methods) better than "#if
	  0" [#1407]
	* ci_build.sh: introduce (or guess) WITH_UNMAPPED_DATAPOINTS optional
	  toggle
	* ci_build.sh: add --with-unmapped-data-points for non-production
	  builds
	* drivers/nutdrv_qx_voltronic-axpert.c: fix whitespace [#1407]
	* drivers/nutdrv_qx_voltronic-axpert.c: fix to use snprintf_dynamic()
	  to check dynamic formating string sanity at run-time [#1407]
	* drivers/nutdrv_qx_voltronic-axpert.c: avoid direct comparison of
	  int and float [#1407]
	* drivers/nutdrv_qx_voltronic-axpert.c: avoid variable-length buffer
	  init [#1407]
	* drivers/nutdrv_qx_voltronic-axpert.c: avoid missing field
	  initializers [#1407]
	* drivers/nutdrv_qx_voltronic-axpert.c: avoid daclarations after code
	  [#1407]
	* drivers/nutdrv_qx_voltronic-axpert.c: voltronic_axpert_crc():
	  annotate NUT_UNUSED_VARIABLE(item) [#1407]
	* drivers/nutdrv_qx_voltronic-axpert.c: annotate
	  NUT_UNUSED_VARIABLE(len) in some methods [#1407]
	* docs/developers.txt, docs/nut.dict: document avoiding VLA
	* drivers/common_voltronic-crc.c: avoid variable-length buffer init
	  [#1407]
	* drivers/nutdrv_qx.c: armac_command() reconcile use of now known
	  cmdlen arg vs. strlen(cmd) content [#1407]
	* drivers/nutdrv_qx.c: gtec_command(): add cmdlen arg and use it for
	  sanity-check along the way [#1407]
	* drivers/nutdrv_qx.c: ablerex_command(): use cmdlen arg for
	  sanity-check along the way [#1407]
	* drivers/ve-direct.c: trivialize upsdrv_help() [#440]  Suggestion to
	  RTFM is now centralized in NUT code base

2025-04-24  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: constrain shellcheck to "nut-builder"
	  agents normally  Avoid firing up QEMU builders on the NUT CI farm,
	  unless we want QEMU tests
	* clients/upsclient.c, common/common.c, include/common.h,
	  server/upsd.c: Constrain pre-processor visibility and impact of
	  inet_ntopXX() methods with NUT_WANT_INET_NTOP_XX macro [#2916]
	* include/common.h: fix includes for inet_ntopXX [#2916]
	* Jenkinsfile-dynamatrix: constrain shellcheck to "nut-builder"
	  agents normally  Avoid firing up QEMU builders on the NUT CI farm,
	  unless we want QEMU tests
	* NEWS.adoc, clients/upsclient.c, common/common.c, docs/nut.dict,
	  include/common.h, server/upsd.c: Refactor inet_ntopSS() and
	  inet_ntopAI() into common code, simplify upsclient and upsd
	* server/upsd.c: add a sanity check into inet_ntopW() [#2915]
	* server/upsd.c: introduce inet_ntopAI() specifically for struct
	  addrinfo conversion [#2915]
	* NEWS.adoc: fixed upsd printing of "further addresses ignored"
	  [#2915]

2025-04-23  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am: group check-files-quick (spellcheck-quick check-man)
	  before check-recursive which is the Autotools implementation behind
	  "make check"
	* common/common-nut_version.c: nut_report_config_flags(): report not
	  only bitness but also target CPU if available [#2097]
	* clients/Makefile.am: libupsclient.la and libnutclient.la do not
	  actually include libcommonversion.la [#2097]
	* Makefile.am: add a goal for libupsclient-version.h shortcut, just
	  to be on par with an existing nut_version.h goal [#2097]
	* Makefile.am, tools/nut-scanner/Makefile.am: current nut-scanner
	  does not actually depend on nut_version.h (or not directly, just
	  via libcommonversion.la) [#2097]
	* Makefile.am, clients/Makefile.am, common/Makefile.am,
	  drivers/Makefile.am, scripts/Windows/Makefile.am,
	  server/Makefile.am, tools/nut-scanner/Makefile.am,
	  tools/nutconf/Makefile.am: */Makefile.am: refactor with a separate
	  libcommonversion.la [#2097]  Avoid multiple rebuilds and relinks of
	  libcommon*.la and their dependants when nut_version.h changes. Now
	  there is just one library impacted by this, included to LDFLAGS
	  across the board for Makefiles of directories with consumers of
	  methods exported from common-nut_version.c (declared by common.h
	  still).
	* common/common-nut_version.c: nut_report_config_flags(): try to also
	  report build bitness, if known [#2097]
	* NEWS.adoc, common/Makefile.am, common/common-nut_version.c,
	  common/common.c: common/common-nut_version.c, common/common.c:
	  evict UPS_VERSION and its consumers into a separate compilation
	  unit [#2097]
	* drivers/dstate.c: Implement dstate_addenum_dynamic() [#2450]
	* common/common.c, drivers/dstate.c, drivers/mge-utalk.c: Update
	  comments about remaining FORMAT_NONLITERAL and/or FORMAT_SECURITY
	  pragmas to quiesce compiler warnings [#2450]
	* common/common.c: minimize_formatting_string(): address error:
	  'switch' missing 'default' label [#2450, #2460]

2025-04-23  Jeremy Cooper <jeremy.gthb@baymoo.org>

	* server/upsd.c: Fix issue #2914: upsd misprint/buffer overflow.

2025-04-22  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: fix entry for RPATH to NUT libs (was first planned for
	  2.8.4 but got into 2.8.3 ultimately) [#2782, #2865]
	* tools/gitlog2version.sh: Reapply "tools/gitlog2version.sh: bump
	  NUT_VERSION_DEFAULT=2.8.3.1 for next development cycle"  This
	  reverts commit 70faea2af378aec996e5f7284413df23d1e73410: finally
	  released NUT v2.8.3, preparing for v2.8.4 cycle now.
	* NEWS.adoc, UPGRADING.adoc, docs/docinfo.xml.in: Revert "Revert
	  "Revert "NEWS.adoc, UPGRADING.adoc, docs/docinfo.xml.in: finalize
	  text before NUT v2.8.3 release"""  This reverts commit
	  051b49d9f0e693613d958837baf3e9bd1c0fa624: finally released NUT
	  v2.8.3, preparing for v2.8.4 cycle now.
	* docs/maintainer-guide.txt: a few more suggestions
	* drivers/generic_gpio_libgpiod.c: align another print format with
	  int type [#2911]

2025-04-21  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac, common/common.c, include/Makefile.am,
	  docs/nut-versioning.adoc: integrate NUT_VERSION_QUERY=IS_PRERELEASE
	  support
	* tools/gitlog2version.sh, docs/nut-versioning.adoc: extend NUT
	  SEMVER with support for (rc|alpha|beta) tags or VERSION_FORCED file
	  contents; queries and variables for PRERELEASE info
	* docs/maintainer-guide.txt, docs/nut-versioning.adoc,
	  tools/gitlog2version.sh: tools/gitlog2version.sh,
	  docs/maintainer-guide.txt: introduce support for
	  NUT_VERSION_QUERY="UPDATE_FILE_GIT_RELEASE"
	* docs/nut.dict: fix order and count
	* docs/maintainer-guide.txt: suggest RC naming in VERSION_FORCED, and
	  a way to protect these files from accidental deletion

2025-04-20  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: always detect if we have_disted_doc_man
	* configure.ac: report something reasonable if we skipped checking
	  for have_disted_doc_man

2025-04-18  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* common/nutwriter.cpp, tests/nutconf_ut.cpp: streamline
	  ALARMCRITICAL writer/expectations with documentation [#2909]
	* scripts/augeas/nutupsmonconf.aug.in: introduce ALARMCRITICAL
	  setting
	* common/nutwriter.cpp: introduce upsmon ALARMCRITICAL setting
	* common/nutconf.cpp, include/nutconf.hpp, tests/nutconf_ut.cpp:
	  introduce upsmon ALARMCRITICAL setting
	* scripts/augeas/nutupsmonconf.aug.in: introduce OVERDURATION setting
	* common/nutwriter.cpp: introduce upsmon OVERDURATION setting
	* common/nutconf.cpp, include/nutconf.hpp, tests/nutconf_ut.cpp:
	  introduce upsmon OVERDURATION setting
	* NEWS.adoc, docs/nut.dict: introduce OVERDURATION setting
	* conf/upsmon.conf.sample.in, docs/man/upsmon.conf.txt: introduce
	  OVERDURATION setting
	* clients/upsmon.c, clients/upsmon.h: introduce OVERDURATION setting

2025-04-18  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/nutconf_ut.cpp: fix expectations for ALARMCRITICAL [#2909]
	* tools/nut-usbinfo.pl: comment a TODO
	* Makefile.am, tools/Makefile.am: fix parallel rebuilds of
	  nut-scanner (generate sources via nut-scanner-deps/tools only once)
	  [#2825]
	* drivers/hwmon_ina219.c: rephrase message about invalid "port" value
	* drivers/nutdrv_qx.c: warn user if setting both port!="auto" and
	  settings for USB mode [#2906]
	* drivers/nutdrv_qx.c: avoid extra lookup for
	  dstate_getinfo("driver.parameter.port")

2025-04-17  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am, docs/Makefile.am, scripts/Solaris/Makefile.am,
	  tests/Makefile.am: */Makefile.am: report work skipped by design as
	  "  SKIP  description" (separated by TAB chars)
	* Makefile.am, common/Makefile.am, docs/Makefile.am,
	  docs/man/Makefile.am, scripts/Solaris/Makefile.am,
	  scripts/python/module/Makefile.am: */Makefile.am: where we echo "
	  TOKEN  description", separate them by TAB chars

2025-04-16  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: skip macos for Default Autotools builds
	  (fightwarn/qemu scenarios)  At least now that the worker available
	  to NUT CI farm requires hacks for HomeBrew with
	  -Wno-poison-system-directories ...
	* UPGRADING.adoc: revise notes for NUT v2.8.3 release to upper-case
	  starts of sentences
	* NEWS.adoc: revise notes for NUT v2.8.3 release to group some themes
	  and to upper-case starts of sentences
	* NEWS.adoc: modbus drivers now report NUT_MODBUS_LINKTYPE_STR
	  [#2897]
	* drivers/phoenixcontact_modbus.c, drivers/generic_modbus.c,
	  drivers/huawei-ups2000.c, drivers/socomec_jbus.c,
	  drivers/adelsystem_cbi.c: report NUT_MODBUS_LINKTYPE_STR
	* drivers/apc_modbus.c: report NUT_MODBUS_LINKTYPE_STR
	* m4/nut_check_libmodbus.m4: detect NUT_MODBUS_LINKTYPE_STR
	* m4/nut_check_libmodbus.m4: only define NUT_MODBUS_HAS_USB if
	  nut_have_libmodbus also
	* configure.ac: detect LDD early, so everyone can use it if available
	* common/common.c, NEWS.adoc: upsnotify(): default to not spam if our
	  first message to be suppressed is already about stopping the
	  program [#1590]

2025-04-15  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/maintainer-guide.txt: more notes to check code/recipe quality
	  before release
	* docs/config-prereqs.txt, docs/nut.dict: wrap most long lines,
	  reword a few

2025-04-14  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/upscmd.txt, docs/man/upsrw.txt: clarify "OK" vs. waiting
	  for result [#2900]
	* docs/Makefile.am: ensure qa-guide-docinfo.xml made for
	  qa-guide.adoc-prepped generally
	* Jenkinsfile-dynamatrix: use ci_build.sh extended to support
	  BUILD_TYPE="default-spellcheck-quick"
	* ci_build.sh: extend to support
	  BUILD_TYPE="default-spellcheck-quick" as well as CLI shortcuts for
	  quick interactive and normal spellchecks
	* ci_build.sh: help troubleshoot invalid CPP setting
	* ci_build.sh: build_to_only_catch_errors_check(): call from default
	  build routine too instead of "make check"
	* ci_build.sh: build_to_only_catch_errors_check(): handle
	  spellcheck-quick before other checks
	* configure.ac, NEWS.adoc: extend enable_inplace_runtime mode to
	  consider also cgipath, drvpath, datadir, libdir [#2895]
	* docs/maintainer-guide.txt: note to check for library changes
	  (exposed API) [#2895]
	* docs/maintainer-guide.txt: note to not rush, and do use RC tags
	* clients/Makefile.am, tools/nut-scanner/Makefile.am, UPGRADING.adoc:
	  flip library version-info to new "current" numbers (more symbols
	  exported now) [#2895]
	* docs/configure.txt, docs/nut.dict: docs/configure.txt: tell more
	  about the --datadir option vs. --datarootdir
	* configure.ac: typo fix in comment
	* configure.ac: suggest comparing the "in-place" FS layout before
	  installing it live [#2895]
	* INSTALL.nut.adoc: in-place upgrades: document how to compare new
	  build FS layout to existing deployment to be overwritten
	* INSTALL.nut.adoc: fix dashes in "Building NUT for in-place upgrades
	  or non-disruptive tests" chapter title and references
	  (Unicode=>ASCII)

2025-04-12  Scott Shambarger <devel@shambarger.net>

	* scripts/external_apis/enphase/enphase-monitor.in:
	  scripts/external_apis/enphase: correct neg number conversion, retry
	  api  Negative floats, and floats 0.08/0.09 were resulting in
	  invalid octal numbers.  The envoy API occasionally stalls; extended
	  timeout to 10s and added a single retry to avoid spurious "nocomms"
	  state.

2025-04-11  Jim Klimov <jimklimov+nut@gmail.com>

	* common/unsetenv.c, configure.ac, include/proto.h: Introduce
	  fallback unsetenv() e.g. for WIN32 [#2890]
	* NEWS.adoc: note the changes for upssched and NIT [#2890]
	* clients/upssched.c: also writepid() and unsetenv() in WIN32 builds
	  [#2890]
	* clients/upssched.c: unsetenv("NOTIFYTYPE") and unsetenv("UPSNAME")
	  when starting the timer loop [#2890]
	* clients/upssched-cmd: use UTC date in sample reports [#2890]
	* scripts/misc/notifyme-debug: also print envvar and other details to
	  stderr if calling upssched and NUT_DEBUG_LEVEL>0 [#2890]
	* tests/NIT/nit.sh: track down PID_UPSSCHED in more cases, try to
	  report via env file for sandbox [#2890]
	* tests/NIT/nit.sh: make sure we have upslog and upssched to test
	  [#2890]
	* tests/NIT/nit.sh: support per-tool NUT_DEBUG_LEVEL_* settings
	  [#2890]
	* scripts/misc/notifyme-debug: allow a separate
	  NUT_DEBUG_LEVEL_UPSSCHED [#2890]
	* tests/NIT/nit.sh: stop_daemons(): pick up PID_UPSSCHED from
	  $NUT_PIDPATH/upssched.pid if possible [#2890]
	* clients/upssched.c: writepid() from the timer daemon child loop
	  [#2890]
	* scripts/misc/notifyme-debug, tests/NIT/nit.sh: call upssched for
	  testing as part of upsmon NOTIFYME [#2890]
	* tests/NIT/nit.sh, tests/NIT/upssched.conf.in: tests/NIT/nit.sh:
	  generatecfg_upsmon_trivial(): populate also upssched.conf [#2890]
	* clients/upssched-cmd: make the sample script a bit more useful
	  [#2890]
	* tools/nutconf/nutconf-cli.cpp: do not declare var inside for()
	* drivers/generic_gpio_libgpiod.c: do not declare var inside for()

2025-04-10  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/generic_gpio_liblocal.c: declare variables at top of scope
	* tests/generic_gpio_utest.c: fix casting for %u printing of literal
	  numbers (via macro)
	* drivers/hwmon_ina219.c: fix format strings for %u printing
	* drivers/asem.c: fix casting for %x printing and maths
	* drivers/generic_gpio_libgpiod.c: declare variables at top of scope
	* drivers/generic_gpio_libgpiod.c: fix casting for %x printing
	* docs/config-prereqs.txt: update for Debian 13 (python3-pyqt5,
	  systemd-dev, java 21)
	* Makefile.am: install-as-root: consider nut-udev-settle.service
	  [#2638]
	* scripts/systemd/nut-udev-settle.service: it suffices to NOT
	  RemainAfterExit and still be Type=oneshot to get triggered for
	  driver restart(s) [#2638]

2025-04-09  Scott Shambarger <devel@shambarger.net>

	* scripts/external_apis/enphase/enphase-monitor.in,
	  scripts/external_apis/enphase/enphase-monitor@.service.in:
	  scripts/external_apis/enphase - correct number conversion, service
	  file  Floats <1.0 were being handled as octal, corrected to use
	  decimal. Corrected path substitution in enphase-monitor service
	  file.

2025-04-09  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/systemd/Makefile.am: actually deliver
	  nut-udev-settle.service [#2638]
	* scripts/python/Makefile.am: fix delivery of
	  install-data-hook-app-locale-symlinks [#2857]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  upsconf_getDriverMedia(): comment a FIXME for more media types of
	  recently added driver concepts
	* NEWS.adoc, UPGRADING.adoc: document nut-udev-settle.service [#2638]
	* scripts/systemd/nut-server.service.in: small typos in comments
	* scripts/systemd/nut-udev-settle.service,
	  scripts/systemd/nut-systemd.preset,
	  scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: pull in
	  nut-udev-settle.service when needed [#2638]
	* scripts/systemd/nut-udev-settle.service: modify Description and
	  optional dependencies [#2638]
	* scripts/systemd/nut-udev-settle.service: import
	  systemd-udev-settle.service from systemd for adaptation as part of
	  NUT; update only header comment so far [#2638]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: fix typo about
	  systemd-udevd.service [#2638]
	* clients/.gitignore, clients/Makefile.am, include/.gitignore,
	  include/Makefile.am: include/Makefile.am, clients/Makefile.am: fix
	  possible clashes of parallel re-generation of nut_version.h and/or
	  libupsclient-version.h [#2875]
	* docs/man/nutdrv_qx.txt: warn that detection of Qx dialect can take
	  a minute [#2885]
	* NEWS.adoc: document changes for upsdrvctl [#2885, #2888]
	* drivers/upsdrvctl.c, docs/man/upsdrvctl.txt, docs/man/ups.conf.txt,
	  conf/ups.conf.sample: bump default maxstartdelay from 45 to 75 sec
	  [#2885]
	* drivers/upsdrvctl.c, drivers/main.c, docs/man/ups.conf.txt,
	  conf/ups.conf.sample: make "maxtries" and "retrydelay" configurable
	  at driver level too [#2888]
	* drivers/upsdrvctl.c: do not allow invalid "maxretry" settings
	  [#2888]
	* drivers/main.c: tolerate driver-level maxstartdelay setting (for
	  upsdrvctl) [#2885, #2888]
	* drivers/upsdrvctl.c: report applicable (global/device)
	  maxstartdelay values when they are exceeded [#2885]
	* docs/man/upsdrvctl.txt, drivers/upsdrvctl.c: document defaults for
	  maxstartdelay, maxretry and retrydelay [#2885]

2025-04-09  Bill Elliot <bill@wreassoc.com>

	* drivers/powervar-cu.c: Add setting of ups.vendorid and
	  ups.productid.

2025-04-08  Jim Klimov <jimklimov+nut@gmail.com>

	* UPGRADING.adoc: mention NUT_DEFAULT_CONNECT_TIMEOUT among new
	  envvars
	* appveyor.yml: handle also FTY and fightwarn branches
	* .github/workflows/codeql.yml: handle also FTY and fightwarn
	  branches
	* Makefile.am: nut-scanner does directly depend on clients after all
	* NEWS.adoc, UPGRADING.adoc, docs/docinfo.xml.in: Revert "Revert
	  "NEWS.adoc, UPGRADING.adoc, docs/docinfo.xml.in: finalize text
	  before NUT v2.8.3 release""  This reverts commit
	  b12eac3bb52ce0a348bb9601ddab30e47b8b218d. Re-releasing v2.8.3 after
	  small but important recipe bumps.
	* tools/gitlog2version.sh: Revert "tools/gitlog2version.sh: bump
	  NUT_VERSION_DEFAULT=2.8.3.1 for next development cycle"  This
	  reverts commit 52214a8fc9b8cf30375d411eb71629181115e3dd.
	  Re-releasing v2.8.3 after small but important recipe bumps.
	* include/Makefile.am: nut_version.h: propagate failure (if there
	  ever is one) writing the temporary output
	* clients/.gitignore, clients/Makefile.am: clients/Makefile.am:
	  libupsclient-version.h: take a transactional approach to changing
	  (or not) the file others depend on

2025-04-08  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: ecomode cmd functions addon

2025-04-07  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/gitlog2version.sh: bump NUT_VERSION_DEFAULT=2.8.3.1 for next
	  development cycle
	* NEWS.adoc, UPGRADING.adoc, docs/docinfo.xml.in: Revert "NEWS.adoc,
	  UPGRADING.adoc, docs/docinfo.xml.in: finalize text before NUT
	  v2.8.3 release"  This reverts commit
	  d3427d7fd3c83b8f5b61c8e369139e2bd6168203 after the NUT release
	  v2.8.3.
	* .github/workflows/PyNUTClient.yml, appveyor.yml,
	  scripts/Windows/build-mingw-nut.sh, tools/gitlog2version.sh: Update
	  versions for release of NUT v2.8.3
	* docs/maintainer-guide.txt: update correct way of setting
	  VERSION_FORCED* files
	* tools/gitlog2version.sh: rephrase comments about
	  NUT_VERSION_FORCED(_SEMVER)
	* docs/nut-versioning.adoc: rephrase about
	  NUT_VERSION_FORCED(_SEMVER)
	* docs/maintainer-guide.txt: revise procedure on version-bump commit
	  vs. docinfo increment  ...and that edits of `configure.ac`
	  (`AC_INIT` macro) forth and back are no longer needed
	* docs/maintainer-guide.txt: make use of "make dist-files" goal
	* docs/docinfo.xml.in: add docs increment summary for NUT v2.8.3
	  release
	* docs/maintainer-guide.txt: update markup and a bit of contents
	* NEWS.adoc: remove "PLANNED" from section title before NUT v2.8.3
	  release
	* NEWS.adoc, UPGRADING.adoc, docs/docinfo.xml.in: finalize text
	  before NUT v2.8.3 release
	* Makefile.am: revise dependency for all-libs-local/tools/nut-scanner
	* include/wincompat.h: fix NUT_WIN32_INCOMPLETE*() printout [#1479,
	  #2882]  The __LINE__ is an integer, not string
	* INSTALL.nut.adoc, docs/nut.dict: INSTALL.nut.adoc: Windows
	  installation: suggest Zadig tool for USB drivers [#1690, #2881]
	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{0,1}.c: in
	  WIN32 builds, suggest Zadig tool if failed to find any drivers
	  [#2881]  May be duplicated if we issued the suggestion also for
	  suspicious report descriptor sizes and ultimately failed to find a
	  device.
	* include/timehead.h: tag fallback gmtime_r()/localtime_r() with
	  NUT_WIN32_INCOMPLETE [#1483]
	* clients/message.c, clients/nutclient.cpp, clients/upsc.c,
	  clients/upsclient.c, clients/upscmd.c, clients/upslog.c,
	  clients/upsmon.c, clients/upsmon.h, clients/upsrw.c,
	  clients/upssched.c, clients/upssched.h, clients/upsset.c,
	  common/common.c, common/nutipc.cpp, common/nutstream.cpp,
	  common/state.c, common/wincompat.c, drivers/apc_modbus.c,
	  drivers/apcsmart-old.h, drivers/apcsmart.c, drivers/apcsmart.h,
	  drivers/apcupsd-ups.c, drivers/bcmxcp_usb.c, drivers/belkin.h,
	  drivers/belkinunv.c, drivers/bestfortress.c, drivers/blazer_ser.c,
	  drivers/blazer_usb.c, drivers/clone-outlet.c, drivers/clone.c,
	  drivers/dstate.c, drivers/dstate.h, drivers/dummy-ups.c,
	  drivers/genericups.c, drivers/isbmex.c, drivers/libusb0.c,
	  drivers/libusb1.c, drivers/main.c, drivers/main.h,
	  drivers/mge-hid.c, drivers/mge-utalk.c, drivers/mge-xml.c,
	  drivers/netxml-ups.c, drivers/nutdrv_atcl_usb.c,
	  drivers/powercom.h, drivers/richcomm_usb.c, drivers/riello_ser.c,
	  drivers/riello_usb.c, drivers/serial.c, drivers/serial.h,
	  drivers/snmp-ups.h, drivers/upsdrvctl.c, drivers/upsdrvquery.c,
	  drivers/usb-common.c, drivers/usbhid-ups.c, include/common.h,
	  include/nutipc.hpp, include/nutstream.hpp,
	  scripts/Windows/wininit.c, server/conf.c, server/netssl.c,
	  server/nut_ctype.h, server/sstate.c, server/stype.h, server/upsd.c,
	  server/upsd.h, server/upstype.h, server/user.c,
	  tests/generic_gpio_utest.c, tests/nutipc_ut.cpp,
	  tests/nutstream_ut.cpp, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-init.c, tools/nut-scanner/nutscan-ip.c,
	  tools/nut-scanner/nutscan-ip.h, tools/nut-scanner/nutscan-serial.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c:
	  Mark up WIN32 code paths with NUT_WIN32_INCOMPLETE where applicable
	  [#1479]  * also ensure that for every `#if(n)def WIN32` we have
	  annotated the matching `#else` and `#endif` to help navigate in
	  that code base * update some comments * move a few WIN32-specific
	  declarations to start of scope
	* common/common.c, include/nutipc.hpp, clients/upsmon.c: fix markup
	  to include wincompat.h
	* clients/nutclient.cpp, common/nutconf.cpp, common/nutipc.cpp,
	  common/nutstream.cpp, common/nutwriter.cpp, include/nutconf.hpp,
	  include/nutipc.hpp, include/nutstream.hpp, include/nutwriter.hpp,
	  tests/cpputest-client.cpp, tests/cpputest.cpp,
	  tests/nutclienttest.cpp, tests/nutconf_parser_ut.cpp,
	  tests/nutconf_ut.cpp, tests/nutipc_ut.cpp, tests/nutstream_ut.cpp:
	  C++ code: bump copyrights, bring non-test headings into common
	  format
	* drivers/belkinunv.c: use NUT_WIN32_INCOMPLETE_DETAILED() [#1479]
	* include/wincompat.h: introduce NUT_WIN32_INCOMPLETE() and
	  NUT_WIN32_INCOMPLETE_DETAILED(str) macros [#1479]

2025-04-06  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: docinfo-since-v2.8.3.xml: bump OLDEST_REL to
	  2.8.3 actually
	* Jenkinsfile-dynamatrix: typo in comment
	* configure.ac: hide back CONFIGURE-DEVEL-DEBUG of SCRIPTFILE parsing
	  variants
	* Jenkinsfile-dynamatrix: update "Default autotools" build rules for
	  fightwarn to relax distcheck (not all dependencies are available on
	  some agents)
	* m4/nut_report_feature.m4, configure.ac: introduce
	  NUT_REPORT_TARGET_WITHOUT_AC_DEFINE() to work around possibly
	  multi-line values
	* ci_build.sh: pass --enable-configure-debug option to configure
	  script
	* m4/ax_c_pragmas.m4, m4/nut_check_libgd.m4, m4/nut_check_libusb.m4:
	  make use of nut_enable_configure_debug toggle
	* configure.ac, docs/configure.txt: introduce
	  --enable-configure-debug option, convert debug-loggers to use it
	  Some loggers were "noisy" and default; others were hidden as
	  commented away
	* Makefile.am: distcheck-light-DIST_ALL_PAGES-docs-skipped: ensure
	  docs/man/.prep-src-docs exists and is older than (possibly faked)
	  man pages, so "make dist" does not waste time building them
	* Makefile.am: refactor distcheck-valgrind with reusable
	  distcheck-light-DIST_ALL_PAGES-docs-skipped
	* include/Makefile.am: track when nut_version.h gets re-populated (or
	  not)  Its timestamp changes cause re-generation of common.o and so
	  libupsclient.so etc.
	* m4/nut_check_libgpiod.m4: fix typo in called command (test not
	  text)

2025-04-04  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut-names.txt: clarify semi-syntax of
	  experimental.ups.mode.buzzwords [#2708]
	* docs/nut-names.txt: clarify semi-syntax of ups.status and ups.alarm
	  [#2708]
	* m4/ax_realpath_lib.m4: fall-back to detect myLIBPATH if compiler
	  does not resolve it [#2431]  On NetBSD it returns the library name,
	  not the full path - seems to ignore -R/-L options for /usr/pkg/lib
	  ...
	* drivers/phoenixcontact_modbus.c: fix for loop and variable type
	* clients/upsmon.c: is_ups_critical(): treat OVER/TRIM/BYPASS as not
	  critical [#1074]
	* clients/upsmon.c: is_ups_critical() report ST_CAL/ST_BYPASS after
	  possible non-critical states that may contribute to fatality of the
	  situation
	* docs/new-drivers.txt: document the initial "WAIT" value of
	  `ups.status` (set by `upsd` internally) [#2708]
	* clients/upssched-cmd: update the sample script with some comments
	  and logging

2025-04-03  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, clients/upsmon.c, clients/upsmon.h, common/nutconf.cpp,
	  common/nutwriter.cpp, conf/upsmon.conf.sample.in,
	  docs/man/nutconf.txt, docs/man/upsmon.conf.txt,
	  docs/man/upsmon.txt, docs/nut.dict, include/nutconf.hpp,
	  scripts/augeas/nutupsmonconf.aug.in, tools/nutconf/nutconf-cli.cpp:
	  clients/upsmon.{c,h} et al: introduce {NOT,}{OVER,TRIM,BOOST}
	  notifications [#1074]  Closes: #1074
	* configure.ac: revise script markup/comments

2025-04-02  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am, docs/Makefile.am: spellcheck* rules: revise work with
	  "make -k -s ..." [#2871]
	* Makefile.am: adjust SUBDIR_MAKE_VERBOSE during spellcheck rule
	  handling (default vs. explicit 0/1) [#2871]
	* .gitignore, docs/Makefile.am: docs/Makefile.am et al: implement
	  parallelized non-interactive spellcheck for many files in one dir
	  (if NUT_MAKE_SKIP_FANOUT!=true) [#2871]
	* Makefile.am: spellcheck*: fix to use SPELLCHECK_TGT to avoid
	  breaking prep-src-docs [#2871]
	* Makefile.am: do not hard-code a SUBDIR_MAKE_VERBOSE=... for
	  spellcheck* recipes anymore [#2871]
	* include/nutconf.hpp: BoolInt: equality operator: ignore failed
	  getters, if any - consider not-set
	* include/nutconf.hpp: BoolInt: clearWithBool01() in default
	  constructor too
	* include/nutconf.hpp: BoolInt: introduce clearWithBool01() to
	  refactor setters from BoolInt instances
	* include/nutconf.hpp: BoolInt: quiesce older compilers with
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_MAYBE_UNINITIALIZED
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_MAYBE_UNINITIALIZED(_BESIDEFUNC)
	* Makefile.am: spellcheck(-interactive): mitigate possible early
	  failure of fanned-out attempt [#2871]
	* NEWS.adoc: document new `make spellcheck-interactive-quick` and
	  related changes [#2871]
	* docs/man/Makefile.am: revise to not require HTML man page building
	  to check them if not enabled (although possible)
	* Makefile.am: merge back spellcheck and spellcheck-interactive into
	  one definition; honour NUT_MAKE_SKIP_FANOUT
	* tools/nut-scanner/Makefile.am: be sure to use both LIBSSL_LIBS and
	  LIBSSL_LDFLAGS_RPATH when linking both libnutscan.la library and
	  nut-scanner program [#2870]

2025-04-01  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am: spellcheck-interactive: refactor with SPELLCHECK_DIRS
	  too
	* Makefile.am: spellcheck: convert the goal to SUBDIR_TGT_RULE
	  parallelizable style
	* Makefile.am: spellcheck-quick: support MAXPARMAKES toggle on NUT CI
	  farm or ci_build.sh
	* Makefile.am: introduce SUBDIR_TGT_RULE ability for recipes to
	  define custom TGT and/or DIR values (not parsed from $@ always)
	* Makefile.am: introduce SUBDIR_MAKE_VERBOSE toggle for quieter
	  tracing
	* Makefile.am: split spellcheck-quick from
	  spellcheck-interactive-quick
	* m4/nut_report_feature.m4: report linker program and flags in the
	  end
	* docs/config-prereqs.txt: NetBSD: fix symlinks for versioned GCC
	* docs/config-prereqs.txt, docs/nut.dict: NetBSD: Not only openipmi,
	  but also net-snmp, packages need CHECK_OSABI=no in
	  /etc/pkg_install.conf [#2870]
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  NetBSD: note that having OpenIPMI does not help NUT at the moment
	* docs/config-prereqs.txt: NetBSD: hide dblatex suggestion, seems
	  AWOL
	* ci_build.sh: detect_platform_PKG_CONFIG_PATH_and_FLAGS(): hacks for
	  NetBSD libltdl dependency to be found out of the box
	* Jenkinsfile-dynamatrix: avoid "default autotools" builds on NetBSD
	  for now [#2870]
	* ci_build.sh: detect_platform_PKG_CONFIG_PATH_and_FLAGS(): hacks for
	  NetBSD pkgsrc dependencies to be found out of the box
	* docs/config-prereqs.txt: NetBSD now provides also gcc-14
	* drivers/mge-xml.c: do not encroach on reserved C token namespace
	  [#2870]  Just renamed the private enum values. Earlier code
	  complained with NetBSD clang-18:  mge-xml.c:76:2: error: identifier
	  '_UNEXPECTED' is reserved because it starts with '_' followed by a
	  capital letter [-Werror,-Wreserved-identifier] 76 |
	  _UNEXPECTED, |         ^ mge-xml.c:77:2: error: identifier
	  '_PARSEERROR' is reserved because it starts with '_' followed by a
	  capital letter [-Werror,-Wreserved-identifier] 77 |
	  _PARSEERROR, |         ^ 2 errors generated.
	* docs/config-prereqs.txt: NetBSD: expand on Python versions and UI
	  dependencies for NUT-Monitor
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  update NetBSD prereqs a bit  "make" package is absent,
	  `/usr/bin/make` appears from something I could not track down;
	  however there is a separate but similar "bmake" as
	  `/usr/pkg/bin/bmake` that can be installed. Probably a difference
	  of system vs. userland tooling variants.
	* docs/config-prereqs.txt, docs/nut.dict: NetBSD: more info about
	  pkgsrc and its pkgin tool
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: fix portability
	  of numeric+alpha sort [#2870]  Thanks to Greg Troxel @gdt for the
	  hint and fruitful discussion.

2025-03-31  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsclient.c: upscli_tryconnect(): revise addrinfo printout
	  [#2847, #85]  Clang complained about explicit pointers:
	  upsclient.c:1187:37: error: cast from 'struct sockaddr *' to
	  'struct sockaddr_in *' increases required alignment from 2 to 4
	  [-Werror,-Wcast-align] 1187 |
	  struct sockaddr_in *addr_in = (struct sockaddr_in *)ai->ai_addr; |
	  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ upsclient.c:1192:39: error: cast
	  from 'struct sockaddr *' to 'struct sockaddr_in6 *' increases
	  required alignment from 2 to 4 [-Werror,-Wcast-align] 1192 |
	  struct sockaddr_in6 *addr_in6 = (struct sockaddr_in6 *)ai->ai_addr;
	  |
	  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 2 errors generated.
	* docs/config-prereqs.txt: NetBSD 9.2: bump openjdk to 21 and
	  document profile edits
	* common/common.c, drivers/powerp-txt.c, drivers/nutdrv_qx.c: cast
	  char to unsigned char when using as array subscript [#823]  This
	  may be an implicit array, such as tolower() implementation as a
	  ctype(3) macro rather than function.
	* clients/cgilib.c, clients/upssched.c, clients/upsset.c,
	  clients/upsstats.c, common/common.c, common/nutstream.cpp,
	  common/upsconf.c, common/wincompat.c, drivers/dstate.c,
	  drivers/dummy-ups.c, drivers/hwmon_ina219.c, drivers/main.c,
	  drivers/nhs_ser.c, drivers/snmp-ups.c, drivers/upsdrvctl.c,
	  drivers/upsdrvquery.c, drivers/upsdrvquery.h: drivers/*, clients/*,
	  common/*: fix pathname budders to be NUT_PATH_MAX+1 to allow for
	  ending NUL char [#823]
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  NetBSD 9.2: require mozilla-rootcerts-openssl for GitHub to work
	* clients/upsclient.c: upscli_tryconnect(): report more errors
	  including timeout for particular addrinfo [#2847, #85]
	* NEWS.adoc, UPGRADING.adoc, clients/upsc.c, clients/upsclient.c,
	  clients/upsclient.h, clients/upscmd.c, clients/upsimage.c,
	  clients/upslog.c, clients/upsmon.c, clients/upsrw.c,
	  clients/upsset.c, clients/upsstats.c, docs/man/Makefile.am,
	  docs/man/index.txt, docs/man/upscli_connect.txt,
	  docs/man/upscli_get_default_connect_timeout.txt,
	  docs/man/upscli_get_default_timeout.txt, docs/man/upscli_init.txt,
	  ...txt => upscli_init_default_connect_timeout.txt}, ....txt =>
	  upscli_set_default_connect_timeout.txt}: client/*, docs: Rename
	  upscli_*_default_timeout to upscli_*_default_connect_timeout
	  [#2847]
	* docs/man/upsc.txt, docs/man/upscmd.txt, docs/man/upslog.txt,
	  docs/man/upsmon.txt, docs/man/upsrw.txt:
	  docs/man/{upsc,upscmd,upsrw,upslog,upsmon}.txt: document "COMMON
	  OPTIONS" including the new "-W secs" [#2847]
	* clients/upsc.c, clients/upscmd.c, clients/upsimage.c,
	  clients/upslog.c, clients/upsmon.c, clients/upsmon.h,
	  clients/upsrw.c, clients/upsset.c, clients/upsstats.c: clients/*.c,
	  clients/upsmon.h: rename macros, variables and usage text to stress
	  that "default network timeout" is about "initial connection"
	  [#2847]
	* docs/man/upscli_init_default_timeout.txt: clarify why we may want a
	  non-blocking connection timeout [#2847]
	* clients/upsclient.c, docs/man/upscli_connect.txt,
	  docs/man/upscli_init.txt, docs/man/upscli_init_default_timeout.txt:
	  clients/upsclient.c, docs/man/upscli_*.txt: track if we have
	  upscli_default_timeout_initialized [#2847]  If not, auto-init in
	  upscli_init() and upscli_connect() once, to help clients not
	  modified to call upscli_init_default_timeout() explicitly to still
	  benefit from NUT_DEFAULT_CONNECT_TIMEOUT envvar.
	* clients/upsclient.c: upscli_init_default_timeout():
	  upslogx(LOG_WARNING,...) about timeout strings that we failed to
	  parse [#2847]
	* clients/upsclient.h: comment about upscli_get_default_timeout()
	  [#2847]
	* docs/nut.dict: update for docs/man/upscli_get_default_timeout.txt
	  [#2847]
	* docs/man/Makefile.am, docs/man/index.txt,
	  docs/man/upscli_connect.txt,
	  docs/man/upscli_init_default_timeout.txt,
	  docs/man/upscli_set_default_timeout.txt, docs/nut.dict: docs/man/*:
	  document upscli_init_default_timeout() and
	  upscli_set_default_timeout()
	* docs/man/upscli_connect.txt, docs/man/index.txt,
	  docs/man/Makefile.am, docs/nut.dict: document upscli_tryconnect()
	  too

2025-03-30  Scott Shambarger <devel@shambarger.net>

	* UPGRADING.adoc, clients/upsclient.c, clients/upsclient.h,
	  clients/upscmd.c, clients/upsimage.c, clients/upslog.c,
	  clients/upsmon.c, clients/upsmon.h, clients/upsrw.c,
	  clients/upsset.c, clients/upsstats.c, docs/man/Makefile.am,
	  docs/man/index.txt, docs/man/upscli_get_default_timeout.txt,
	  docs/man/upscli_set_default_timeout.txt: clients: added -W <secs>
	  argument  Added -W <secs> network timeout arg to all clients to
	  match upsc usage. Updated help message with "common args" section
	  for -h/-W/-V args. Added upscli_get_default_timeout (used by
	  upsmon)

2025-03-30  Jim Klimov <jimklimov@gmail.com>

	* docs/Makefile.am: docs/Makefile.am, docs/.gitignore: support also
	  qa-guide-docinfo.xml (fix 2)
	* docs/Makefile.am: docs/Makefile.am, docs/.gitignore: support also
	  qa-guide-docinfo.xml (fix)
	* docs/maintainer-guide.txt, docs/user-manual.txt: update Author
	  Initials
	* docs/Makefile.am, docs/.gitignore: support also
	  qa-guide-docinfo.xml

2025-03-30  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsclient.c: define both fields of upscli_default_timeout
	  explicitly after all [#2847]  Antique clang (3.4) refuses the
	  standard-required single-token init of aggregate types:
	  upsclient.c:162:50: error: missing field 'tv_usec' initializer
	  [-Werror,-Wmissing-field-initializers] static struct timeval
	  upscli_default_timeout = {0}; ^ 1 error generated. make[4]: ***
	  [upsclient.lo] Error 1
	* clients/upsc.c: convert to upscli_init_default_timeout() [#2847]
	* clients/Makefile.am, NEWS.adoc: export nut_debug_level* from
	  libupsclient so that clients can be usefully debugged
	* docs/qa-guide.adoc, docs/nut.dict: refer to
	  docinfo-since-v2.8.3.xml which we want to use [#2832]  And fix some
	  spellings and/or dictionary
	* docs/documentation.txt, docs/nut.dict: link to Dan Langille's blog
	  post about NUT shutdown testing
	* docs/documentation.txt, docs/nut.dict: link to Jeff Geerling's blog
	  post about NUT
	* clients/upsclient.c: upscli_init(): only check
	  getenv("NUT_QUIET_INIT_SSL") if not already upscli_initialized
	* clients/upsclient.c, clients/upsclient.h: clients/upsclient.{c,h}:
	  introduce upscli_init_default_timeout(), restore upscli_init()
	  which is for SSL [#2847]
	* NEWS.adoc, UPGRADING.adoc, clients/upsclient.c,
	  clients/upsclient.h, conf/nut.conf.sample: clients/upsclient.{c,h},
	  conf/nut.conf.sample: upscli_init(): introduce
	  NUT_DEFAULT_CONNECT_TIMEOUT envvar [#2847]
	* clients/upsclient.c: upscli_init(): be sure to (re-)set
	  upscli_default_timeout to 0 [#2847]
	* NEWS.adoc, UPGRADING.adoc: many clients fixed to at least
	  UPSCLI_CONN_TRYSSL [#2847]
	* NEWS.adoc, UPGRADING.adoc: upscli_set_default_timeout() introduced,
	  many clients changed to 10-second default timeout instead of
	  blocking [#2847]
	* clients/upsclient.c: upscli_default_timeout(): be sure parsed "0"
	  is applied as such
	* clients/upsc.c: fix code style (white spaces)
	* clients/upsclient.c: upscli_default_timeout: be sure to zero-init
	  The standard says that static-storage arithmetic values are
	  pre-initialized to zero implicitly, but better safe than sorry with
	  all the compilers out there. The X={0} spelling for aggregates of
	  arithmetic entities to be zero-inited for each component should be
	  supported since at least C89 standard.
	* clients/upsclient.c: upscli_set_default_timeout(): use
	  str_to_double() to avoid dependency on env (locale)
	* common/str.c: strtof() fallback: comment about dependency on env
	  (locale)
	* clients/upsclient.c: upscli_connect(): comment about default
	  behavior of the method remaining as it was
	* clients/upsclient.c: fix code style (white spaces)
	* Makefile.am: EXTRA_DIST the new ci_build.adoc [#2832]

2025-03-29  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/.gitignore, docs/Makefile.am: docs/Makefile.am: use a shorter
	  docinfo-since-v2.8.3.xml for qa-guide.pdf [#2832, #2866]
	* ci_build.sh: add support for "--with-docs*" CLI arg spelling (same
	  as "docs*" before)
	* docs/qa-guide.adoc: add a chapter on CodeQL [#2832]
	* docs/qa-guide.adoc: add a chapter on cppcheck [#2832]
	* docs/nut-qa.txt: modernize notes regarding Buildbot, GitHub and
	  LGTM.com
	* docs/download.txt, docs/nut-qa.txt: revise links to security notes
	* docs/docinfo.xml.sh: revise recommentation after doc maintenance
	  [#2866]
	* docs/docinfo.xml.in: add heading comment about (re-)generation
	  [#2832, #2866]
	* docs/docinfo.xml.sh: allow to populate a new docinfo.xml variant
	  from scratch [#2866, #2832]
	* docs/docinfo.xml.sh: allow to customize DOCINFO_OLDEST_TAG [#2866,
	  #2832]
	* docs/Makefile.am: revise inclusion of ../ci_build.adoc(-parsed)
	  into qa-guide [#2866]

2025-03-28  Scott Shambarger <devel@shambarger.net>

	* clients/upsc.c: upsc: Minor fix to error message

2025-03-28  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/ci-farm-do-setup.adoc, docs/nut.dict: populate DigitalOcean
	  chapters with text adapted from #2192
	* docs/configure.txt: nut *.pc files may deliver RPATH settings;
	  detail what this is about and how to disable if this causes issues
	  [#2782, #2865]
	* UPGRADING.adoc, docs/nut.dict: UPGRADING.adoc: nut *.pc files may
	  deliver RPATH settings; detail how to disable if this causes issues
	  [#2782, #2865]
	* Makefile.am, docs/maintainer-guide.txt: introduce "make dist-files"
	  to prepare the set in one go

2025-03-27  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/ax_realpath_lib.m4: fix library search path detection for
	  mingw/MSYS  * lacked separation into lines * on MSYS2 might have
	  "C:/mingw/..." patterns
	* configure.ac: for --enable-ldflags-nut-rpath(-cxx)=auto consult
	  DEFAULT_SEARCH_DIRS [#2782]  Also report why selection failed or
	  had other comments
	* configure.ac: make use of hardcode_libdir_flag_spec(_CXX) vars from
	  LT_INIT to set default LDFLAGS_NUT_RPATH(_CXX) [#2782]
	* configure.ac, lib/libnutclient.pc.in, lib/libnutconf.pc.in:
	  separate LDFLAGS_NUT_RPATH_CXX from LDFLAGS_NUT_RPATH [#2782]
	* lib/libupsclient-config.in: update license (GPLv2 and newer)
	* lib/libupsclient-config.in: also provide optional
	  @LDFLAGS_NUT_RPATH@ [#2782]
	* configure.ac, lib/libnutclient.pc.in, lib/libnutclientstub.pc.in,
	  lib/libnutconf.pc.in, lib/libnutscan.pc.in, lib/libupsclient.pc.in:
	  configure.ac, lib/*.in: introduce @LDFLAGS_NUT_RPATH@ to only set
	  rpath when needed and in a way supported by linker [#2782]  TODO
	  (later commit): Detect support/format of the linker option if
	  passed
	* drivers/mge-hid.c: fix whitespace [#2850]

2025-03-27  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: eaton_input_eco_mode_auto_on_off_info func fix
	  name

2025-03-26  RikyPlaza <rikyrod2001@gmail.com>

	* drivers/phoenixcontact_modbus.c: fixed typo
	* drivers/phoenixcontact_modbus.c: fixed typo
	* drivers/phoenixcontact_modbus.c: updated version
	* drivers/phoenixcontact_modbus.c: initialized tab_reg and PartNumber
	  variables to 0
	* drivers/phoenixcontact_modbus.c: added application exit both mrir
	  on upsdrv_initups fail

2025-03-26  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/ci-farm-do-setup.adoc, docs/nut.dict:
	  docs/ci-farm-do-setup.adoc: add Design trade-offs chapter [#2832]
	* NEWS.adoc: announce the new NUT Quality Assurance and Build
	  Automation Guide [#2832]
	* docs/qa-guide.adoc, docs/developers.txt: transplant "Build
	  automation tools and scripts" chapter from developers.txt into
	  different sections of qa-guide [#2832]
	* ci_build.adoc, docs/Makefile.am, docs/qa-guide.adoc: elaborate the
	  chapter on ci_build.sh [#2832]  ...with a dedicated document, which
	  was lifted from a chapter originally in docs/developers.txt
	* docs/config-prereqs.txt, docs/developers.txt, docs/qa-guide.adoc,
	  docs/user-manual.txt: Various docs: fix references to
	  ci-farm-lxc-setup.txt to be linkdoc:qa-guide[...] [#2832]
	* docs/ci-farm-lxc-setup.txt, docs/configure.txt,
	  docs/developers.txt, scripts/Windows/Installer/README.adoc,
	  scripts/Windows/README.adoc, scripts/python/app/README.adoc:
	  Various docs: fix references to config-prereqs.txt to be
	  linkdoc:qa-guide[...] [#2832]
	* docs/Makefile.am: config-prereqs.txt, ci-farm-do-setup.adoc and
	  ci-farm-lxc-setup.txt are no longer among USER_MANUAL_DEPS [#2832]
	* docs/qa-guide.adoc: slightly elaborate CI_NUT_SELFTESTS,
	  Jenkins_Dynamatrix_Library and Jenkins_Dynamatrix_Pipeline sections
	  with pointers to info available elsewhere
	* docs/nut.dict, docs/qa-guide.adoc: docs/qa-guide.adoc: elaborate
	  the chapter on spellcheck [#2832]
	* docs/qa-guide.adoc: elaborate the chapter on static analysis a bit
	  (intro paragraph) [#2832]
	* docs/nut.dict, docs/qa-guide.adoc: docs/qa-guide.adoc: elaborate
	  the chapter on shellcheck [#2832]
	* docs/documentation.txt, docs/qa-guide.adoc: re-title the document,
	  it covers NUT Build Automation as well [#2832]
	* tests/NIT/README.adoc: make a note about envvars used by nit.sh
	  script [#2832]
	* docs/qa-guide.adoc: elaborate the chapter on NIT by including its
	  README [#2832]
	* docs/qa-guide.adoc: extend the chapters on static analysis and
	  ci_build.sh with references to developers.txt [#2832]
	* docs/qa-guide.adoc: default the top_srcdir=.. and use it for
	  include macro [#2832]
	* docs/nut.dict, docs/qa-guide.adoc: docs/qa-guide.adoc: elaborate
	  the chapter on valgrind [#2832]
	* docs/qa-guide.adoc: move note about leveloffset to top [#2832]
	* docs/qa-guide.adoc: elaborate the chapter on GNU Autotools and
	  distcheck [#2832]
	* docs/ci-farm-do-setup.adoc: reword the intro
	* docs/qa-guide.adoc: asciidoctor (as used in IDEs) dislikes
	  old-style anchors before (old-style) titles
	* docs/nut-names.txt, drivers/mge-hid.c, data/cmdvartab: revert
	  "experimental.ecomode.start.auto" [#2708, #2850]

2025-03-26  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: comment about 9E stuck in ECO
	* data/cmdvartab, docs/nut-names.txt, drivers/mge-hid.c:
	  experimental.ecomode.stop.auto function added
	* data/cmdvartab, docs/nut-names.txt, drivers/mge-hid.c: autoecomode
	  addon without last function needed for 9E model but then stuck in
	  ecomode

2025-03-25  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am, docs/ci-farm-do-setup.adoc, docs/nut.dict,
	  docs/qa-guide.adoc: Introduce docs/ci-farm-do-setup.adoc (as a
	  chapter of qa-guide) [#2192]
	* docs/nut.dict, docs/qa-guide.adoc: docs/qa-guide.adoc: populate the
	  chapter on multi-platform multi-CI-vendor testing
	* Jenkinsfile-dynamatrix: extend autotools-based checks to
	  parallelize with "make -j 4"

2025-03-24  RikyPlaza <rikyrod2001@gmail.com>

	* drivers/phoenixcontact_modbus.c: Fixed low battery register reading
	  for TRIO_2G UPS

2025-03-24  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut-names.txt: fix outlet.n.protect.status and
	  input.eco.switchable definitions to "opaque string" [#2708]
	* data/cmdvartab, drivers/mge-hid.c, drivers/usbhid-ups.c,
	  docs/nut-names.txt: move "ecomode" and "essmode" INSTCMDs into
	  "experimental." namespace [#2708]
	* drivers/mge-hid.c: bump (C) for recent committers
	* drivers/usbhid-ups.c: anticipate NULL hidups_item->dfl for commands
	  that require a caller-provided argument (no defaults), or return
	  STAT_INSTCMD_CONVERSION_FAILED
	* NEWS.adoc, server/upsd.c, server/upsd.h: server/upsd.{c,h}: handle
	  TRACKING value for STAT_CONVERSION_FAILED [#2184]
	* docs/man/upscli_strerror.txt: do not link to self
	* drivers/dstate.c: sock_arg(): if INSTCMD returns
	  STAT_INSTCMD_UNKNOWN, let it be known to the TRACKING clients
	  [#656, #2686]

2025-03-23  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, UPGRADING.adoc, docs/man/Makefile.am,
	  docs/man/index.txt, docs/man/upscli_str_add_unique_token.txt,
	  docs/man/upscli_str_contains_token.txt, docs/man/upsclient.txt,
	  docs/nut.dict: docs/man/* et al: document
	  upscli_str_contains_token() and upscli_str_add_unique_token()
	  [#2852, #2859]
	* clients/Makefile.am, clients/upsclient.c, clients/upsclient.h,
	  include/common.h: clients/Makefile.am, clients/upsclient.h,
	  include/common.h: re-expose str_add_unique_token() and
	  str_contains_token() with upscli_ prefix to surely avoid
	  link/include conflicts
	* clients/Makefile.am, clients/upsclient.h, include/common.h: expose
	  str_add_unique_token() and str_contains_token() for NUT clients who
	  need to parse ups.status

2025-03-23  Jim Klimov <jim@jimklimov.com>

	* scripts/python/app/NUT-Monitor: clarify which implementation gets
	  started in the end [#2845]
	* configure.ac: adjust to different builds of Python in subdirs on
	  Solarish platforms [#2845]
	* scripts/python/app/NUT-Monitor-py3qt5.in,
	  scripts/python/app/ui/gui-1.3.glade: update translators list with
	  Russian [#2845]
	* UPGRADING.adoc, scripts/python/Makefile.am,
	  scripts/python/app/README.adoc,
	  scripts/python/app/locale/fr/fr_FR.UTF-8.po,
	  scripts/python/app/locale/fr_FR.UTF-8,
	  scripts/python/app/locale/it/it_IT.UTF-8.po,
	  scripts/python/app/locale/it_IT.UTF-8,
	  scripts/python/app/locale/ru/ru_RU.UTF-8.po,
	  scripts/python/app/locale/ru_RU.UTF-8: scripts/python/Makefile.am:
	  deliver app/locale symlinks with "xx_XX.UTF-8" naming [#2845]  For
	  NUT-Monitor GUI: on some platforms, glib/gtk2 or qt5 require the
	  full stack of names to be addressable this way; on others it is
	  more relaxed.

2025-03-21  RikyPlaza <rikyrod2001@gmail.com>

	* drivers/phoenixcontact_modbus.c: drivers/phoenixcontact.c: sanity
	  check and fix on mrir mistake

2025-03-21  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/apc_modbus.c, drivers/mge-hid.c, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_voltronic.c, drivers/usbhid-ups.c:
	  drivers/{apc_modbus,usbhid-ups,mge-hid,nutdrv_qx,nutdrv_qx_voltronic}.c:
	  convert to buzzmode*() instead of invmode*() [#2708]
	* clients/upsmon.c: pollups(), parse_status(), get_var(): consider
	  "(experimental.)ups.mode.buzzwords" instead of
	  "output.inverter.mode" for "vendor:VENDORNAME:MODENAME" containing
	  ECO equivalents [#2708]
	* docs/new-drivers.txt, docs/nut.dict, drivers/dstate.c,
	  drivers/dstate.h: drivers/dstate.{c,h}, docs/new-drivers.txt:
	  rename invmode_* methods and data to buzzmode_* [#2708]  ...and
	  report `experimental.ups.mode.buzzwords` instead of
	  `output.inverter.mode` in dstate
	* docs/nut-names.txt: replace `output.inverter.mode` by `ups.mode`
	  and `experimental.ups.mode.buzzwords` [#2708]

2025-03-20  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/documentation.txt: refer to qa-guide [#2192, #2832]
	* NEWS.adoc, lib/libnutclient.pc.in, lib/libnutclientstub.pc.in,
	  lib/libnutconf.pc.in, lib/libnutscan.pc.in, lib/libupsclient.pc.in:
	  lib/*.pc.in: propagate RPATH to NUT library installation location
	  (by default not in system prefix) to help third-party clients link
	  with us [#2782]
	* Makefile.am: introduce "make spellcheck-interactive-quick" ability
	* Makefile.am: maintainer-asciidocs: suggest to spellcheck before
	  committing updated asciidoc macros
	* INSTALL.nut.adoc, README.adoc, docs/nut.dict: Update NUT
	  documentation sources with current docs/asciidoc-vars.conf:
	  a6bd83d48 (2025-03-20)
	* docs/asciidoc-vars.conf: document that linkdoc may have further
	  args
	* Makefile.am: maintainer-asciidocs: really fix handling of lines
	  ending in backslash
	* docs/user-manual.txt: highlight that NUT for Windows only ships
	  same clients as POSIX builds
	* .gitignore: GitIgnore *.adoc-parsed.* (e.g.
	  docs/.ChangeLog.adoc-parsed.latest)
	* docs/Makefile.am: spellcheck-interactive: update/fix non-reporting
	  of dict changes (when there were none)
	* Makefile.am: spellcheck-interactive: require
	  SPELLCHECK_REPORT_MAYBE_UPDATED_DICT=yes only for the last entry,
	  to reduce noise by default
	* docs/Makefile.am: spellcheck*: track
	  $(NUT_SPELL_DICT).bak-pre-interactive separately from
	  $(NUT_SPELL_DICT).bak-pre-sorting
	* docs/Makefile.am: spellcheck-interactive: do not report "Custom
	  dictionary ... may have been updated" all the time, add a way to
	  quiesce that (and check if it actually changed)
	* NEWS.adoc: fix announcement of `scripts/external_apis` - they
	  landed into trunk before 2.8.3 release [#2807, #2813]
	* lib/libnutconf.pc.in, lib/libnutscan.pc.in: add
	  sysconfdir/statepath/nutuser as in other *.pc.in templates

2025-03-19  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/FAQ.txt, docs/nut.dict: document downgrading OpenSSL
	  capabilities when required [#1899, #1900]  Closes: #1900
	* server/upsd.c, NEWS.adoc: failure due to getaddrinfo() now reports
	  the disliked host name [#2665]  Closes: #2665

2025-03-17  Jim Klimov <jimklimov+nut@gmail.com>

	* INSTALL.nut.adoc, docs/asciidoc.conf, docs/ci-farm-lxc-setup.txt,
	  docs/qa-guide.adoc, docs/user-manual.txt: docs/user-manual.txt et
	  al: drop chapters with config-prereqs.txt and
	  ci-farm-lxc-setup.txt, refer to qa-guide now (also from other docs)
	  [#2832]
	* docs/qa-guide.adoc: revise markup to have some contents in sections
	  and pass xmllint [#2832]
	* docs/nut-qa.txt, docs/qa-guide.adoc: docs/nut-qa.txt: revise markup
	  to be a chapter, not book [#2832]
	* docs/Makefile.am: refactor QA_GUIDE_DEPS [#2192, #2832]
	* docs/.gitignore, docs/Makefile.am, docs/qa-guide.adoc:
	  docs/Makefile.am: introduce docs/qa-guide.adoc (skeleton so far)
	  [#2192, #2832]
	* docs/Makefile.am: support building from *.adoc (not only *.txt)
	  origins
	* docs/Makefile.am: depend .prep-src-docs on Makefile too [#2825]
	* docs/user-manual.txt: formulate a NUT Support Policy (same as in
	  /README.adoc)
	* README.adoc: formulate a NUT Support Policy
	* docs/user-manual.txt: import text from README.adoc about support
	  for older systems
	* docs/nut.dict, docs/user-manual.txt: docs/user-manual.txt: update
	  about Windows and third-party distributions

2025-03-16  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx_voltronic.c: invmode_set() voltronic eco and
	  eco_adv states [#2708]
	* drivers/nutdrv_qx.c: upsdrv_updateinfo(): add invmode_init/commit()
	  into the loop [#2708]
	* drivers/mge-hid.c: convert to use invmode_set() [#2708]
	* drivers/usbhid-ups.c: upsdrv_updateinfo(): add
	  invmode_init/commit() into the loop [#2708]
	* clients/upsmon.c, common/nutconf.cpp, common/nutwriter.cpp: comment
	  about ECO/NOTECO use for notifications even if not via ups.status
	  [#2708]
	* docs/man/nut.exe.txt: fix markup
	* docs/man/Makefile.am: include index.html to DIST_ALL_HTML_PAGES
	  [#2825]
	* docs/man/Makefile.am: introduce dist-html:DIST_ALL_HTML_PAGES and
	  dist-man:DIST_ALL_MAN_PAGES goals [#2842]
	* docs/man/Makefile.am: populate DIST_ALL_HTML_PAGES [#2842]
	* docs/man/Makefile.am: revise DIST_ALL_PAGES into
	  DIST_ALL_MAN_PAGES; differentiate from DIST_ALL_HTML_PAGES [#2842]
	* ci_build.sh: typo fix

2025-03-15  Jim Klimov <jimklimov@gmail.com>

	* docs/man/Makefile.am: consider index.html part of HTML_MANS [#2825]
	* docs/man/Makefile.am: .prep-src-docs: depend also on Makefile
	  [#2825]

2025-03-15  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/index.txt: reference nut.exe and NUT-Monitor tools pages
	  added since NUT v2.8.2 release
	* docs/nut.dict: cover docs/man/index.txt spelling [#2825]
	* configure.ac: double-check if we care about DOC_CANNOTBUILD_LIST
	  contents for particular document types [#2842]
	* docs/man/Makefile.am: avoid building mans even if HAVE_ASCIIDOC but
	  KNOWN_UNABLE_MANS [#2842]
	* docs/man/Makefile.am: do not default to ALL_TGT+=all-man if
	  KNOWN_UNABLE_MANS [#2842]
	* configure.ac: track and report have_disted_doc_man=yes-placeholder
	  (for distcheck-ci sub-builds) [#2842]
	* docs/man/Makefile.am: do not default to FAKE_PAGES_BUMP_SRC also if
	  DOC_INSTALL_DISTED_MANS [#2842]
	* docs/man/Makefile.am: do not default to FAKE_PAGES_BUMP_SRC if
	  KNOWN_UNABLE_MANS [#2842]
	* Makefile.am: introduce distcheck-light-DIST_ALL_PAGES to simplify
	  recipes that tolerate placeholders for pre-built man pages [#2842]
	* Makefile.am: distcheck-fake-man: be sure to pass through caller's
	  DISTCHECK_FLAGS (if any) [#2842]
	* configure.ac: maintain DOC_CANNOTBUILD_LIST as we go, based on
	  performed test results [#2843]
	* configure.ac: report ultimate
	  DOC_BUILD_LIST/DOC_CANNOTBUILD_LIST/DOC_SKIPBUILD_LIST [#2843]
	* configure.ac: track KNOWN_UNABLE_MANS more intensively [#2842]
	* configure.ac: clarify that subsequent "build specific
	  documentation" NUT_REPORT_FEATURE is about the ability (aligned
	  with caller request) [#2842]
	* Makefile.am, docs/Makefile.am, docs/man/Makefile.am: move docs/man
	  to SUBDIRS of main Makefile; avoid two definitions of "all" goal
	  there [#2842, #2825]
	* configure.ac: clarify that initial "build and install
	  documentation" NUT_REPORT_FEATURE is about the caller request (may
	  be auto, etc.) [#2842]
	* NEWS.adoc, UPGRADING.adoc: document "make distcheck-ci" and
	  "distcheck-fake-man" [#2842]
	* Makefile.am: introduce dist-ci and dist-fake-man goals for good
	  measure [#2842]
	* configure.ac, Makefile.am: track if this env is KNOWN_UNABLE_MANS
	  [#2842]
	* docs/man/Makefile.am: add index.txt to SRC_ALL_PAGES  Fix
	  generation of index.html which on published nut-website was > Last
	  updated 2023-09-14 14:43:49 UTC -- Network UPS Tools 2.8.0.1
	* docs/man/Makefile.am: add index.txt to SRC_ALL_PAGES  Fix
	  generation of index.html which on published nut-website was > Last
	  updated 2023-09-14 14:43:49 UTC -- Network UPS Tools 2.8.0.1

2025-03-14  RikyPlaza <rikyrod2001@gmail.com>

	* drivers/phoenixcontact_modbus.c: removed battery.charge for TRIO
	  UPS since not available.
	* drivers/phoenixcontact_modbus.c: fixed connection method
	* drivers/phoenixcontact_modbus.c: new partnumber calculation method
	* drivers/phoenixcontact_modbus.c: drivers/phoenixcontact_modus.c:
	  corrections
	* drivers/phoenixcontact_modbus.c: corrections
	* drivers/phoenixcontact_modbus.c: updated version
	* drivers/phoenixcontact_modbus.c: Updated alarms with supplier info.
	* drivers/phoenixcontact_modbus.c: Update addresses with supplier
	  information.

2025-03-13  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut-versioning.adoc: document some consumers of data derived
	  from gitlog2version.sh script [#1949]
	* docs/nut-versioning.adoc: mention NUT versioning with even/odd
	  minors until 2.6, per README.adoc [#1949]
	* README.adoc: revise older approach to NUT versioning (as obsolete)
	  and refer to docs/nut-versioning.adoc [#1949]
	* docs/nut-versioning.adoc: document the nut_version.h macros derived
	  from gitlog2version.sh script [#1949]
	* docs/nut-versioning.adoc, docs/nut.dict: document the configure.ac
	  variables derived from gitlog2version.sh script [#1949]
	* docs/nut-versioning.adoc, docs/nut.dict: document the
	  gitlog2version.sh script and its variables [#1949]
	* docs/developers.txt: refer to nut-versioning with three-arg form of
	  linkdoc() [#1949]
	* docs/nut-versioning.adoc, docs/Makefile.am,
	  docs/developer-guide.txt, docs/maintainer-guide.txt, docs/nut.dict,
	  NEWS.adoc, UPGRADING.adoc, tools/gitlog2version.sh: document
	  historic and current approaches to NUT versioning [#2842, #1949]
	* tools/gitlog2version.sh: report NUT_VERSION_QUERY=TRUNK [#1949]
	* tools/gitlog2version.sh, configure.ac: fix SEMVER generation to
	  more closely follow the standard [#2842, #1949]  There should not
	  be two dash-separated components, this confuses some packaging
	  tools. Inspired by discussion in
	  https://github.com/networkupstools/nut/pull/2842#issuecomment-2719241404
	* scripts/python/app/README.adoc: note localization of standard UI
	  elements made by the framework itself
	* scripts/python/app/locale/NUT-Monitor.pot,
	  scripts/python/app/locale/fr/fr.po,
	  scripts/python/app/locale/it/it.po,
	  scripts/python/app/locale/ru/ru.po,
	  scripts/python/app/ui/gui-1.3.glade,
	  scripts/python/app/ui/gui-1.3.glade.h:
	  scripts/python/app/{ui,locale}/*: maintain plaintext (py2gtk2) and
	  HTML (py3qt5) translations of About dialog text
	* scripts/python/app/NUT-Monitor-py2gtk2.in,
	  scripts/python/app/README.adoc:
	  scripts/python/app/NUT-Monitor-py2gtk2.in: TRY TO fix UTF-8
	  resource reading in Windows
	* scripts/python/app/README.adoc, docs/nut.dict: note environments to
	  test both py2 and py3 versions
	* scripts/python/app/NUT-Monitor-py2gtk2.in: fix rewriting of About
	  dialog text
	* scripts/python/app/NUT-Monitor-py2gtk2.in: fix list copy syntax for
	  Python2
	* scripts/python/app/NUT-Monitor-py2gtk2.in: change to script dir, to
	  find localization files reliably
	* scripts/python/app/NUT-Monitor-py3qt5.in: change to script dir, to
	  find localization files reliably

2025-03-12  Scott Shambarger <devel@shambarger.net>

	* clients/upsc.c, clients/upsclient.c, clients/upsclient.h,
	  clients/upscmd.c, clients/upsimage.c, clients/upslog.c,
	  clients/upsmon.c, clients/upsrw.c, clients/upsset.c,
	  clients/upsstats.c: clients: update clients to timeout in 10 secs,
	  try SSL  Many clients currently have no network timeout;
	  connections can take several minutes to fail (or longer if multiple
	  addresses are resolved).  Added upscli_set_default_timeout() to
	  assign a default timeout, honored by upscli_connect().  Adds a 10
	  second timeout to all client connections.  upsmon especially
	  benefits from the patch as one unavailable ups could delay
	  processing of other ups's, and also cause the watchdog to fire.
	  upsc has a new option '-W <secs>' to set the network timeout.  Many
	  ups clients were also not attempting SSL, even ones that use
	  authentication to perform actions.  Patch adds flag to attempt (but
	  not require) it.
	* m4/nut_check_python.m4: use sysconfig to find site-packages
	  python3.2+ supports sysconfig module to locate the site-packages.
	  Patch to use it if it's available.  Also, minor fix for
	  --without-python still running python.

2025-03-12  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/app/README.adoc: clarify what was wrong with
	  localization of Py3 variant
	* NEWS.adoc, scripts/python/app/NUT-Monitor,
	  scripts/python/app/README.adoc: Revert "scripts/python/app/*,
	  NEWS.adoc: NUT-Monitor-py3qt5 localization issues are resolved,
	  prefer it if both implementations are available"  This reverts
	  commit 64d82b5de2878d539c1b0fca78ae0e7d88760523 : stash for future
	  completion. Currently there are still problems with menu names,
	  dialog field labels, etc.
	* NEWS.adoc, scripts/python/app/NUT-Monitor,
	  scripts/python/app/README.adoc: scripts/python/app/*, NEWS.adoc:
	  NUT-Monitor-py3qt5 localization issues are resolved, prefer it if
	  both implementations are available
	* NEWS.adoc, scripts/python/app/NUT-Monitor-py2gtk2.in,
	  scripts/python/app/NUT-Monitor-py3qt5.in,
	  scripts/python/app/README.adoc,
	  scripts/python/app/locale/NUT-Monitor.pot,
	  scripts/python/app/locale/fr/fr.po,
	  scripts/python/app/locale/it/it.po,
	  scripts/python/app/locale/ru/ru.po,
	  scripts/python/app/ui/aboutdialog1.ui,
	  scripts/python/app/ui/gui-1.3.glade,
	  scripts/python/app/ui/gui-1.3.glade.h: scripts/python/app/*,
	  NEWS.adoc: bump NUT-Monitor-py* releases to 2.0.2
	* docs/man/Makefile.am: be sure to use builddir/doc/man in
	  LIST_FILES/FAKE_FILES/FAKE_FILES_RM/distcheck-light-DIST_ALL_PAGES
	  snippets [#2842]
	* Makefile.am: be sure to use builddir/doc/man in distcheck-* variant
	  setups [#2842]
	* scripts/python/app/NUT-Monitor-py3qt5.in: troubleshoot the
	  localization data path of About dialog
	* scripts/python/app/locale/NUT-Monitor.pot,
	  scripts/python/app/locale/fr/fr.po,
	  scripts/python/app/locale/it/it.po,
	  scripts/python/app/locale/ru/ru.po,
	  scripts/python/app/ui/aboutdialog1.ui,
	  scripts/python/app/ui/gui-1.3.glade,
	  scripts/python/app/ui/gui-1.3.glade.h:
	  scripts/python/app/{ui,locale}/*: adjust localization of About
	  dialog with HTML Markup of aboutdialog1.ui file [#722]
	* scripts/python/app/NUT-Monitor-py2gtk2.in,
	  scripts/python/app/NUT-Monitor-py3qt5.in:
	  scripts/python/app/NUT-Monitor-{py2gtk2,py3qt5}.in:
	  gui_about_dialog(): substitute NUT_WEBSITE_BASE and PACKAGE_VERSION
	  in real time [#722]
	* scripts/python/app/NUT-Monitor-py3qt5.in: whitespace fixes
	* docs/man/Makefile.am: all (automake): mention .prep-src-docs among
	  BUILT_SOURCES so it is made early [#2825, #2842]
	* docs/man/Makefile.am: all: comment its overriding place in decision
	  chain [#2825, #2842]
	* docs/man/Makefile.am: all: tell more about when we do nothing
	  [#2825, #2842]
	* docs/man/Makefile.am: do not list DIST_ALL_PAGES into
	  BUILT_SOURCES, this may cause generation before we are well ready
	  for it; EXTRA_DIST should suffice for our issue #2842
	* Makefile.am: distcheck-*: report starting the scenario, and a
	  successful finish with overview of what it was [#2842]
	* Jenkinsfile-dynamatrix: "make distcheck-ci" in plain autotools
	  checks [#2842]
	* ci_build.sh: introduce DISTCHECK_TGT to guess the best variant for
	  this build agent and BUILD_TYPE (or use the caller-provided value)
	  [#2842]
	* Makefile.am: introduce distcheck-fake-man and distcheck-ci goals
	  [#2842]
	* docs/man/Makefile.am: rectify "make clean" where we use
	  placeholders [#2842]
	* docs/man/Makefile.am: fix DIST_ALL_PAGES for serial drivers [#2842]
	* docs/man/Makefile.am: check for prebuilt man pages in source dir
	  too [#2842]  Concerns fake placeholder files for `make
	  distcheck-light` too.
	* drivers/ecoflow-hid.c: update comments about some readings which
	  behave differently in various tested devices [#2837]

2025-03-11  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/Makefile.am: Only clean away build products, and track
	  them as BUILT_SOURCES, if we can reproduce them [#2842]
	* drivers/ecoflow-hid.c: fix battery.runtime - needs
	  ecoflow_runtime_conversion_lkp
	* docs/man/Makefile.am: update comment regarding dist-warning
	* Makefile.am, docs/man/Makefile.am: fix "make distcheck-light" to
	  pass on systems without asciidoc (use
	  distcheck-light-DIST_ALL_PAGES to fake pre-built man pages) [#2842]
	* configure.ac: NUT_REPORT the DOC_INSTALL_DISTED_MANS value [#2842]
	* docs/man/Makefile.am: do not fail a "make dist" attempt just
	  because !WITH_MANS !SKIP_MANS, only warn about it [#2842]  We may
	  have the pages from tarball, or actually know about the tools
	  needed to build them.
	* docs/Makefile.am, docs/man/Makefile.am: parameterize NUT_*_BASE and
	  *_VERSION substitutable from templates [#722]
	* docs/man/Makefile.am: redefine construction of man page lists to
	  track ALL those we know about (for dist) vs. those we want in this
	  build configuration [#2842, #2829]
	* docs/man/Makefile.am: fix nhs_ser.txt inclusion into
	  SRC_SERIAL_PAGES (sources - always)
	* docs/man/Makefile.am: fix LIBNUTCLIENT_*_DEPS markup
	* docs/man/Makefile.am: introduce helper recipes to print-X and
	  check-list-X (where X in [MAN_MANS, HTML_MANS, SRC_ALL_PAGES])
	* docs/man/Makefile.am: line-wrap
	  SRC_TOOL_PAGES/MAN_TOOL_PAGES/HTML_TOOL_MANS definitions [#2842]
	* docs/man/Makefile.am: group manXXXdir and manXXX_DATA
	  pre-definitions on top of file [#2842]
	* docs/man/Makefile.am: Make sure pages are built for the dist
	  archive [#2842]
	* tools/nut-scanner/Makefile.am: note that "make dist" can cause
	  libupsclient.la compilation [#2842]
	* include/Makefile.am, clients/Makefile.am: announce GENERATE-HEADER
	  events to help recipe tracing [#2842]

2025-03-10  Jim Klimov <jimklimov+nut@gmail.com>

	* .../python/app/locale/fr/LC_MESSAGES/NUT-Monitor.mo,
	  .../python/app/locale/it/LC_MESSAGES/NUT-Monitor.mo,
	  .../python/app/locale/ru/LC_MESSAGES/NUT-Monitor.mo:
	  scripts/python/app/locale/{fr,it,ru}/LC_MESSAGES/NUT-Monitor.mo:
	  regenerate due to changes in translation sources [#722]  Note that
	  we keep verbatim @NUT PACKAGE_VERSION@ and @NUT_WEBSITE_BASE@ in
	  text (About dialog) and substitute them in real-time. This allows
	  us to keep the document wording static, while certain strings
	  depend on build circumstances. Unlike other resources, this dialog
	  is shared with py2 code which is not localized in same manner as
	  py3, and does not seem to use formatting strings ("{0}" or "{}"
	  sequences).
	* docs/config-prereqs.txt, docs/nut.dict: suggest MacOS tuning for
	  being a CI agent
	* drivers/mge-hid.c, NEWS.adoc: support Eaton 5S1200AU [#2380]
	* docs/man/Makefile.am: roll back changes about *.txt-prepped [#2842]
	* docs/nut.dict: update for index.txt contents [#2842]

2025-03-09  Scott Shambarger <devel@shambarger.net>

	* docs/man/Makefile.am, scripts/external_apis/Makefile.am:
	  docs/Makefile.am: fixed make dist, fix custom man sections  `make
	  dist` was failing to build all man pages.  Changed how the
	  *-prepped file dependencies are handled to fix.  Custom man
	  sections were being implemented in configure, but automake runs
	  before they are chosen, so the Makefile.in were missing the install
	  logic.  Changed to use _DATA targets with directories that can be
	  chosen at configure time  Also added index.txt to DIST target to
	  fix distcheck  Fixed substitution bug in external_apis/Makefile.am

2025-03-09  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/app/NUT-Monitor-py3qt5.in,
	  scripts/python/app/locale/NUT-Monitor.pot,
	  scripts/python/app/locale/fr/fr.po,
	  scripts/python/app/locale/it/it.po,
	  scripts/python/app/locale/ru/ru.po,
	  scripts/python/app/ui/aboutdialog1.ui,
	  scripts/python/app/ui/gui-1.3.glade,
	  scripts/python/app/ui/gui-1.3.glade.h:
	  scripts/python/app/{ui,locale}/*: revise About dialog and license
	  info [#722]  * refer to @NUT_WEBSITE_BASE@ and @PACKAGE_VERSION@; *
	  add NUT Community copyright; * fix phrasing and markup; *
	  aboutdialog1.ui: render NUT_WEBSITE_BASE as a clickable link *
	  update link to lestat original page (now it is a wiki)
	* tools/nut-usbinfo.pl: find_usbdevs(): skip subdirs for now
	* data/driver.list.in: fix the entry for DEXP LCD EURO 1200VA [#2839]
	  * Floating-point numbers are dot-separated * Add the comment with a
	  link to PR for details
	* NEWS.adoc, UPGRADING.adoc, docs/nut.dict: announce the fix for DEXP
	  and novendir in nutdrv_qx [#2839]
	* tests/generic_gpio_liblocal.c: protect against builds with unknown
	  WITH_LIBGPIO_VERSION [#2833]
	* tests/Makefile.am: fix builds of gpiotest against different
	  libgpiod implementations [#2833]
	* drivers/generic_gpio_libgpiod.c, drivers/generic_gpio_libgpiod.h,
	  tests/generic_gpio_liblocal.c, tests/generic_gpio_utest.c: Merge
	  remote-tracking branch 'modrisb-gpiod2/master' into
	  'issue-2833+modrisb'  Take advantage of WITH_LIBGPIO_VERSION
	  defined by NUT configure.ac to select the code path and signal it
	  in DRIVER_VERSION for troubleshooting.
	* drivers/generic_gpio_libgpiod.c: protect against builds with
	  unknown WITH_LIBGPIO_VERSION [#2833]
	* m4/nut_check_libgpiod.m4, drivers/generic_gpio_libgpiod.c: report
	  the WITH_LIBGPIO_VERSION_STR a driver was built against [#2833]

2025-03-08  mcrodar <mcrodar@gmail.com>

	* data/driver.list.in, drivers/nutdrv_qx.c: use novendor param as
	  flag for don't read vendro name, need for dexp ups

2025-03-08  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/apc_modbus.c: use invmode_{init,get,set,commit}() methods
	  for ECO state [#2708]
	* drivers/usbhid-ups.c: comment ECO and ESS status handling as
	  obsolete [#2708]
	* docs/new-drivers.txt, docs/nut.dict, drivers/dstate.c,
	  drivers/dstate.h: drivers/dstate.{c,h}, docs/new-drivers.txt,
	  docs/nut.dict: introduce invmode_{init,get,set,commit}() methods
	  [#2708]
	* data/driver.list.in: list Gtec ZP120N as supported with updated
	  nutdrv_qx [#2818, #2834]
	* drivers/ecoflow-hid.c: complete the merge of parallel developments
	  [#2740, #2837]  * import back comments about findings in PR #2740,
	  * apply reasonable number precision and HU_FLAG* where two
	  codebases differed, * clean up "unmapped.*" entries that are
	  actually exposed as standard or experimental data points, or in
	  some cases drop the "experimental.*" ones (it is easy to build code
	  with settings which would show the same values as "unmapped.*")

2025-03-07  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/ecoflow-hid.c: merge "unmapped" entries and comments from
	  ykuksenko variant [#2837]
	* drivers/ecoflow-hid.c: uncomment "unmapped" entries already hidden
	  by "#if WITH_UNMAPPED_DATA_POINTS" [#2837]
	* drivers/ecoflow-hid.c: change ECOFLOW_HID_VERSION to double digits;
	  add (C) of contributors [issue #2735, PRs #2740, #2837]
	* NEWS.adoc, docs/nut.dict, data/driver.list.in: Ecoflow device
	  support added [issue #2735, PRs #2740, #2837]
	* drivers/usbhid-ups.c: bump DRIVER_VERSION due to EcoFlow support
	  [issue #2735, PRs #2740, #2837]

2025-03-06  M. Greyson Christoforo <grey@christoforo.net>

	* drivers/ecoflow-hid.c: fix voltage type
	* drivers/ecoflow-hid.c, ecoflow-hid.h => drivers/ecoflow-hid.h,
	  ecoflow-hid.c: mapping attempted
	* drivers/Makefile.am, drivers/usbhid-ups.c, ecoflow-hid.c,
	  ecoflow-hid.h: i followed the gen-usbhid-subdriver.sh recipe. needs
	  mapping

2025-03-06  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/status.h: note that "ECO" in "ups.status" should no longer
	  happen with in-tree code [#2708]
	* clients/upsmon.c: pollups(), parse_status(), parse_status(),
	  get_var(): consider "output.inverter.mode" for
	  "vendor:VENDORNAME:MODENAME" containing ECO equivalents [#2708]
	* clients/upsmon.c: get_var(): only strcmp() for further tokens if
	  none before matched  Avoid extra work in the loop

2025-03-05  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, docs/nut.dict: introduce WITH_LIBGPIO_VERSION [#2833]
	  Should also serve for actual fix of the drivers for new libgpio
	  API, but not sure if that would land in NUT v2.8.3 timeframe or
	  after the release.
	* configure.ac, m4/nut_check_libgpiod.m4: introduce detection and
	  exposure to C code of WITH_LIBGPIO_VERSION [#2833]

2025-03-04  Lukáš Turek <lukas@turek.eu>

	* drivers/nutdrv_qx_gtec.c: multiple status letters can be reported
	  at once

2025-03-03  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut-names.txt, docs/nut.dict: docs/nut-names.txt: propose and
	  describe names for `output.inverter.mode{,.description}` and
	  `output.inverter.latency` [#2708]
	* docs/nut-names.txt: clarify "device.usb.version" description
	* docs/nut-names.txt: fix NOTE block for `battery.charger.status`
	  [#2708]
	* include/common.h, common/common.c, drivers/dstate.c: generalize
	  status_set() into str_add_unique_token() with a custom callback,
	  and status_get() into str_contains_token() [#2708]
	* tests/driver_methods_utest.c: check that ignorelb works (now via
	  callback from status_set()) [#2708]
	* tools/nutconf/nutconf-cli.cpp: avoid "NULL" keyword in C++ code
	* tools/nutconf/nutconf-cli.cpp: teach the tool some respect to
	  NUT_CONFPATH; update a few comments
	* UPGRADING.adoc: document `--with-dev-libnutconf` option and its
	  impact on packaging [#2828]

2025-03-02  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac, docs/configure.txt: change interaction of --with-all
	  and --with-dev-libnutconf  The original independence of settings
	  led to CI failures, where explicit `--with-nutconf=auto
	  --with-all=yes` correctly turned `with_nutconf` to `no` on systems
	  or build scenarios without the required level of C++ support, but
	  the defaulted `with_dev_libnutconf` became `yes` (following
	  `with_all`).
	* docs/configure.txt: --with-dev-libnutconf: update the description
	* docs/configure.txt: --with-dev: clarify the effect of --without-dev
	* docs/configure.txt: --with-dev-libnutconf: clarify use of "auto"
	  value
	* docs/configure.txt: add intro chapter about autotools and typical
	  syntax of configure options

2025-03-01  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/build-mingw-nut.sh: when the proto area
	  installation completes, report SUCCESS more visibly
	* common/setenv.c: update closing comment
	* common/Makefile.am: avoid @LTLIBOBJS@ in libnutconf_la_LIBADD
	  because we already use it in libcommonclient.la
	* ci_build.sh: add alias for "windows" build
	* common/Makefile.am, configure.ac, docs/configure.txt,
	  docs/nut.dict, include/Makefile.am, lib/Makefile.am,
	  tests/Makefile.am: configure.ac, */Makefile.am: introduce
	  WITH_DEV_LIBNUTCONF (to deliver lib+headers) and WITH_LIBNUTCONF
	  (at least one of tool or lib)
	* common/Makefile.am: add libnutconf_la version-info declaration
	  (0.1.0 experimental) to generate the shared object file
	* common/Makefile.am: EXTRA_DIST *.cpp sources if not depending on
	  rolling them into a library
	* drivers/Makefile.am: "if SOME_DRIVERS": fix the obsolete extraneous
	  addition of "skel"
	* Makefile.am, clients/Makefile.am, docs/Makefile.am,
	  drivers/Makefile.am, server/Makefile.am: */Makefile.am: annotate
	  automake else/endif with respective condition names
	* ci_build.sh: typo fixes
	* docs/configure.txt: document --with-nut-scanner and --with-nutconf
	  options
	* NEWS.adoc, docs/nut.dict: announce automake optimization for NUT
	  `make -j` [#2825]
	* drivers/Makefile.am: reword default NUTSW_DRIVERLIST_DUMMY_UPS to
	  avoid automake rewrites and actually not-conflict building
	  dummy-ups twice
	* Makefile.am: all/drivers: avoid passing empty KEY= via
	  SUBDIR_TGT_MAKEFLAGS

2025-02-28  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am: revise comments for all-drivers definition
	* Makefile.am, clients/Makefile.am: clients/Makefile.am: include
	  libupsclient-version.h into all-libs-local deliverables  Dependency
	  on it from some consumers might cause unwanted parallel builds of
	  same directory.
	* scripts/Windows/Makefile.am: code here does not directly consume
	  nut_version.h
	* Makefile.am, include/Makefile.am: include/Makefile.am: formally
	  declare "all-libs-local: nut_version.h" for consistency
	* Makefile.am: ensure prep-src-docs/docs are built before main
	  all/docs rule (just in case)
	* Makefile.am: define prep-src-docs/docs/man and prep-src-docs/docs
	  more neatly
	* Makefile.am: update comments for SUBDIR_* dependencies, to clarify
	  who depends on whom (as of now)
	* Makefile.am: SUBDIRS_ALL_RECURSIVE: re-order all/docs (with heavy
	  pdf/html renders) to start before all/docs/man (easier
	  parallelization with cheap artifacts)
	* docs/Makefile.am: order ChangeLog.{html,pdf} first, so in parallel
	  builds it can have one core while the rest of docs take turns on
	  another
	* scripts/external_apis/Makefile.am: revise "make clean" to not break
	  subsequent "make all"
	* docs/Makefile.am: revise "make clean" to not break subsequent "make
	  all"
	* Makefile.am, docs/Makefile.am, docs/man/Makefile.am: formalize
	  definition and use of prep-src-docs targets
	* Makefile.am: reorder SUBDIRS_ALL_RECURSIVE so docs are in the end,
	  after binary products (like in SUBDIRS)  Some make implementations
	  troll us, with sub-makes running their goals apparently in
	  parallel, but the top-level goals (or rather dependencies of a
	  goal?) like the ones we list here happen to be handled largely
	  sequentially. On such underwhelming "make"'s, we prefer to get
	  programs built first. On better ones (e.g. recent GNU make
	  versions) we do actually get unrestrained parallelism.
	* Makefile.am, drivers/Makefile.am: introduce
	  NUTSW_DRIVERLIST_DUMMY_UPS and SUBDIR_TGT_MAKEFLAGS to let
	  "all/drivers" be built independently of (and not including)
	  dummy-ups, so the new "all-drivers" target can parallelize the two
	  sets of goals

2025-02-27  Jim Klimov <jimklimov@gmail.com>

	* docs/Makefile.am, docs/man/Makefile.am: fix "find ... -newer" tests
	  Barring errors (like files not found), `find` always exits with 0;
	  it is the stdout that we should check (like we do everywhere else)
	* docs/man/Makefile.am: .prep-src-docs: avoid overlapping runs from
	  docs/Makefile.am

2025-02-27  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: .adoc.adoc-parsed: double-check if target already
	  exists and is new enough; report more with
	  MAINTAINER_ASCIIDOCS_CHANGELOG_DEBUG=yes
	* Makefile.am: Makefile: dummy-ups should depend on
	  all-libs-local/drivers too
	* Makefile.am: depend both all/docs and all/docs/man on
	  .prep-src-docs/docs/man to complete first
	* docs/man/Makefile.am: introduce configurable
	  MAINTAINER_DOCS_PREP_MAN_DELAY for docs/man/.prep-src-docs
	* docs/Makefile.am: avoid `find` reporting that file does not exist
	* Makefile.am: all/docs: log-trace pre-creation of ChangeLog
	  artifacts (if we do it)
	* Makefile.am: forfeit SUBDIR_TGT_RULE-driven pre-make of
	  ChangeLog.adoc in . or abs_top_builddir  Some make implementations
	  mangle the build argument of that form, and we try to change into
	  an absurd subdir.
	* Makefile.am: all/docs: make MAINTAINER_ASCIIDOCS_CHANGELOG_DELAY
	  configurable
	* Makefile.am: all/docs: pre-create ChangeLog.adoc-parsed as a
	  singular target before iterating into multiple DOC_BUILD_LIST
	  goals; use MAINTAINER_ASCIIDOCS_CHANGELOG_DELAY to reduce or
	  eliminate the wait
	* docs/Makefile.am: ChangeLog.adoc: make
	  MAINTAINER_ASCIIDOCS_CHANGELOG_DELAY configurable (or skippable);
	  log-trace it better when sleeping on it
	* Makefile.am: fix recipe for dummy-ups/drivers to honour EXEEXT
	* Makefile.am: document circumstances of dummy-ups/drivers target
	* docs/Makefile.am: ChangeLog.adoc: revise loop waiting for
	  competition  Avoid `expr` returning code 1 because resulting number
	  was 0 (on some platforms)
	* docs/Makefile.am: fix re-runs of DOC-HTML-CHUNKED with some "make"
	  implementations  Also use TABs to report DOC-* waypoints
	* docs/man/Makefile.am: add rules for NUT-Monitor-py2gtk2.html and
	  NUT-Monitor-py3qt5.html
	* docs/Makefile.am: ChangeLog.*: hide filesystem detail
	  troubleshooting behind MAINTAINER_ASCIIDOCS_CHANGELOG_DEBUG toggle
	* Makefile.am: ChangeLog: do not update builddir/ChangeLog from
	  srcdir/ChangeLog if already identical  Also revise build log
	  reporting of different use-cases
	* Makefile.am: ChangeLog: keep original timestamp when Using
	  distributed ChangeLog file from sources
	* docs/Makefile.am: ChangeLog.adoc: revise reporting of
	  (re-)generation
	* docs/Makefile.am: .ChangeLog.adoc-parsed.latest: fix make syntax
	* docs/Makefile.am: make sure to create a relevant
	  .ChangeLog.adoc-parsed.latest as soon as possible
	* Makefile.am: $(abs_top_builddir)/ChangeLog: fix log-tracing of
	  cases where we do (re-)generate the original file from Git metadata

2025-02-26  Jim Klimov <jimklimov+nut@gmail.com>

	* common/Makefile.am, configure.ac, include/Makefile.am,
	  lib/.gitignore, lib/Makefile.am, lib/libnutconf.pc.in: PoC:
	  Introduce delivery of libnutconf.pc and library itself  * FIXME:
	  Enable SO build, API version, etc. like in clients/Makefile.am and
	  nut-scanner * Headers somewhere there too
	* docs/Makefile.am: try to untangle ChangeLog dynamic vs.
	  repeatable-static dependency
	* lib/Makefile.am: Revert "lib/Makefile.am: be sure to EXTRA_DIST the
	  template files"  This reverts commit
	  da2874be836fd1b81ff3afcc5052fdb1cb5a4c47 - breaks "make distcheck"
	  (somehow interferes with "make dist" done inside its _build/sub
	  dir).
	* common/Makefile.am: be quieter about $(builddir)/common.c re-runs,
	  but report the first time it is done
	* common/Makefile.am: remove symlink $(builddir)/common.c when we
	  "make clean"
	* common/Makefile.am: avoid re-symlinking $(builddir)/common.c from
	  srcdir when !BUILDING_IN_TREE to avoid extra rebuilds of libs
	* common/Makefile.am: it seems that the comments should not be
	  indented in Make syntax
	* tools/nut-scanner/Makefile.am: Make sure generated sources are
	  there when needed
	* Makefile.am: all-fanout-maybe: fix for shells without
	  comma-separated case clause expansion
	* Makefile.am: revise again the dependencies on all-libs* targets,
	  even if transitive
	* Makefile.am: add a dev-test target "all-fanout-staged"
	* Makefile.am: put out SUBDIRS_* based dependencies to
	  "all-recursive", not just "all" per se  In automake, "all:
	  all-recursive" seems to be always defined, so we must be a
	  dependency of that, otherwise we ended up building BOTH the default
	  "all-recursive" and the optimized parallel sub-make, so they wrote
	  into same files and crashed.
	* Makefile.am: revise dependencies for SUBDIRS_ALL_RECURSIVE to
	  consider quicker SUBDIRS_ALL_LIBS_LOCAL
	* Makefile.am: revise dependency for all/scripts/Windows to follow
	  conditionals in scripts/Windows/Makefile.am (note HAVE_MINGW_RESGEN
	  too)
	* scripts/Windows/Makefile.am: streamline use of top_builddir based
	  libcommon.la and nut_version.h
	* Makefile.am: refine handling of SUBDIRS_ALL_LIBS_LOCAL
	* Makefile.am, clients/Makefile.am, common/Makefile.am,
	  drivers/Makefile.am, tests/Makefile.am,
	  tools/nut-scanner/Makefile.am: */Makefile.am: define a special
	  target for all-libs-local to be (pre-)built
	* Makefile.am: revise dependencies of SUBDIR_TGT targets
	* Makefile.am: revise dependency of all-recursive/scripts:
	  all/scripts/Windows (target-dependent)
	* lib/Makefile.am: annotate automake "else" and "endif" tags
	* lib/Makefile.am: be sure to EXTRA_DIST the template files
	* Makefile.am, lib/Makefile.am: all/lib is only about metadata, not
	  actual libs
	* Makefile.am: nutconf depends on (lib)nut-scanner
	* Makefile.am: SUBDIR_TGT_RULE: revise progress messages, report
	  failures more visibly
	* Makefile.am: re-introduce (commented away) re-make attempt of "doc"
	  after "all"
	* Makefile.am: redefine SUBDIRS list to handle docs after code builds
	  On the one hand, code builds are well-parallelized, easy to avoid
	  extra work when re-making, and are more useful in typical
	  development cycles. The ChangeLog HTML/PDF generation is a
	  time-consuming hog when enabled, and with automake's
	  "all-recursive" implementation handling SUBDIRS only sequentially,
	  it blocks the useful part of build for a long time when we e.g.
	  `git commit` the code changes during development.
	* Makefile.am: redefine "all" target to complete "common" dir first,
	  then do "all-recursive" and no longer retry "doc" just-in-case
	* docs/Makefile.am, docs/.gitignore: only check HTML and/or PDF
	  renders once (for unmodified sources)
	* docs/man/Makefile.am, docs/man/.gitignore: only check man page
	  sources and renders once (for unmodified sources)
	* configure.ac, NEWS.adoc: default --with-valgrind=no for now
	* scripts/valgrind/.valgrind.supp.in: generalize suppression of
	  "blocks are possibly lost in loss record" in malloc in printf (on
	  OpenIndiana)
	* scripts/valgrind/.valgrind.supp.in: "blocks are possibly lost in"
	  printf() called from report_pass() on OpenIndiana [#2823]  Example
	  fault reports: 13:27:00  ==228221== 4,104 bytes in 1 blocks are
	  possibly lost in loss record 1 of 1 13:27:00  ==228221==    at
	  0x7FFF64A22: malloc (vg_replace_malloc.c:458) 13:27:00  ==228221==
	  by 0x7FFDC5CAD: _findbuf (in /lib/amd64/libc.so.1) 13:27:00
	  ==228221==    by 0x7FFDAEBDF: _ndoprnt (in /lib/amd64/libc.so.1)
	  13:27:00  ==228221==    by 0x7FFDB112E: printf (in
	  /lib/amd64/libc.so.1) 13:27:00  ==228221==    by 0x408F8C:
	  report_pass (in
	  /tmp/jenkins-swarm/jenkins-nutci/nut_nut_PR-2823/tests/driver_methods_utest)
	  13:27:00  ==228221==    by 0x408F55: report_0_means_pass (in
	  /tmp/jenkins-swarm/jenkins-nutci/nut_nut_PR-2823/tests/driver_methods_utest)
	  13:27:00  ==228221==    by 0x40875A: main (in
	  /tmp/jenkins-swarm/jenkins-nutci/nut_nut_PR-2823/tests/driver_methods_utest)
	* configure.ac, scripts/Makefile.am, scripts/valgrind/.gitignore,
	  scripts/valgrind/{.valgrind.supp => .valgrind.supp.in}:
	  scripts/valgrind/.valgrind.supp: rename to .in template so it is
	  easy to resolve in SCRIPTDIR for out-of-tree builds
	* configure.ac, NEWS.adoc: default to --with-valgrind=auto [#2823]
	* configure.ac: re-order --with-valgrind(=PROG) parameter handling to
	  happen before testing if we can use that implementation (and want
	  to at all)
	* configure.ac: refactor test for usable valgrind with a custom
	  program to succeed
	* configure.ac: document a problem between some OI versions and
	  Valgrind
	* docs/config-prereqs.txt: recommend GDB to be installed on various
	  platforms

2025-02-25  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/nutdrv_qx.txt: document the Gtec subdriver/protocol
	  support [#2818]
	* drivers/nutdrv_qx_gtec.c: gtec_process_status(): fix setting of
	  ups.alarm, comment about setting of ups.status (multi-token)
	  [#2818]
	* drivers/nutdrv_qx_gtec.c: mark gtec_process_status() as a static
	  method [#2818]
	* NEWS.adoc, docs/nut.dict: mention nutdrv_qx gtec subdriver was
	  added [#2818]
	* drivers/nutdrv_qx.c: bump DRIVER_VERSION due to added Gtec
	  subdriver [#2818]
	* tests/Makefile.am: "make all" should build all binaries used by
	  possible "make check" later
	* Makefile.am: install-as-root: retry with udevadm if did not
	  do/succeed its systemd unit
	* Makefile.am: un-indent the bulk of "install-as-root" implementation
	* scripts/external_apis/enphase/enphase-monitor@.service.in: GPLv2
	  licensed [#2813]

2025-02-24  Scott Shambarger <devel@shambarger.net>

	* scripts/external_apis/enphase/README.adoc,
	  scripts/external_apis/enphase/enphase-monitor.in:
	  scripts/external_apis/enphase/enphase-monitor - GPLv2 licensed

2025-02-24  Lukáš Turek <lukas@turek.eu>

	* drivers/Makefile.am, drivers/nutdrv_qx.c, drivers/nutdrv_qx_gtec.c,
	  drivers/nutdrv_qx_gtec.h: Add nutdrv_qx driver for Gtec ZP120N

2025-02-24  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/libhid.c: HIDGetItemData(): debug-trace failures due to
	  string_to_path() or FindObject_with_Path() [#2816]
	* docs/man/NUT-Monitor.txt, NEWS.adoc, docs/man/Makefile.am: added
	  man page (with aliases) for the `NUT-Monitor{,-py2gtk2,-py3qt5}`
	  Python UI client and its shell wrapper script
	* docs/man/Makefile.am: EXTRA_DIST nut.exe.txt if not building it
	* scripts/python/app/NUT-Monitor: make PREFER_PY2 configurable as an
	  envvar
	* scripts/systemd/nut-driver-enumerator-daemon-activator.path.in,
	  scripts/systemd/nut-driver-enumerator-daemon-activator.service.in,
	  scripts/systemd/nut-driver-enumerator-daemon.service.in,
	  scripts/systemd/nut-driver-enumerator.path.in,
	  scripts/systemd/nut-driver-enumerator.service.in,
	  scripts/systemd/nut-driver.target.in,
	  scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-logger.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in,
	  scripts/systemd/nut-sleep.service,
	  scripts/systemd/nut-systemd.preset, scripts/systemd/nut.target.in,
	  scripts/systemd/nutshutdown.in: scripts/systemd/*: typo fix in (C)
	  heading
	* docs/nut.dict, scripts/external_apis/Makefile.am,
	  scripts/external_apis/enphase/README.adoc,
	  scripts/external_apis/enphase/enphase-monitor.in:
	  scripts/external_apis/Makefile.am: enable spellcheck of
	  scripts/external_apis/enphase/README.adoc, fix corresponding typos
	  or update the dictionary [#2813]
	* scripts/external_apis/enphase/README.adoc: update about tmpfs or
	  not for the enphase data file [#2813]
	* scripts/external_apis/enphase/enphase-monitor.in,
	  .../enphase/enphase-monitor@.service.in:
	  scripts/external_apis/enphase/enphase-monitor@.service.in,
	  scripts/external_apis/enphase/enphase-monitor.in: parameterize
	  config/state file locations to defaults with NUT configuration and
	  locations made by package or make-install [#2813]
	* .../enphase/enphase-monitor@.service.in:
	  scripts/external_apis/enphase/enphase-monitor@.service.in: add (C)
	  header, parameterize installed script location and NUT run-time
	  user [#2813]
	* NEWS.adoc, configure.ac, docs/configure.txt, docs/nut.dict,
	  scripts/external_apis/Makefile.am: introduce `configure
	  --enable-extapi-enphase` installation [#2813]
	* configure.ac, scripts/external_apis/Makefile.am,
	  scripts/external_apis/enphase/.gitignore,
	  .../external_apis/enphase/{enphase-monitor => enphase-monitor.in},
	  .../{enphase-monitor@.service => enphase-monitor@.service.in}:
	  configure.ac, scripts/external_apis/*: convert enphase script and
	  unit sources into .in templates [#2813]
	* scripts/external_apis/README.adoc,
	  scripts/external_apis/enphase/README.adoc: adjust wording in layman
	  English parts of the text [#2813]  Note that
	  scripts/external_apis/enphase/README.adoc is not spell-checked
	  because it includes text from a bash script and its many variable
	  names.

2025-02-23  Scott Shambarger <devel@shambarger.net>

	* Makefile.am, NEWS.adoc, configure.ac, docs/nut.dict,
	  scripts/Makefile.am, scripts/external_apis/Makefile.am,
	  scripts/external_apis/README.adoc,
	  scripts/external_apis/enphase/README.adoc,
	  scripts/external_apis/enphase/enphase-monitor,
	  .../external_apis/enphase/enphase-monitor@.service:
	  scripts/external_apis: add example external protocol script  New
	  scripts directory for external_apis, including one integrating the
	  Enphase IQ Gateway web-API with NUT.

2025-02-23  Jim Klimov <jimklimov+nut@gmail.com>

	* UPGRADING.adoc, NEWS.adoc, drivers/mge-utalk.c, docs/nut.dict: fix
	  to not status_set() nonstandard values [#2708]
	* drivers/dstate.c, tests/driver_methods_utest.c: if a driver uses
	  status_set("ALARM") and later proper alarm_set(), report only the
	  content provided by the latter [#2801, #2708]
	* drivers/clone.c, drivers/powerp-txt.c: fix dstate_setinfo() format
	  from "%g" to "%f" to match NUT naming spec [#2807]
	* docs/nut-names.txt: add a chapter to define Numeric format for
	  values in NUT reported variables [#2807]
	* docs/nut-names.txt: add a note about opaque strings that just
	  happen to convey date/time [#2807]
	* drivers/dstate.c, tests/driver_methods_utest.c: fix
	  status_set("ALARM") cases to automatically alarm_commit() if the
	  injected value is all the alarm we have [#2801, #2708]
	* drivers/dstate.c, tests/driver_methods_utest.c: track
	  status_set("ALARM") cases to set the ups.status token [#2801,
	  #2708]
	* drivers/dstate.c, tests/driver_methods_utest.c: fix that ALARM
	  status would not appear twice: delay status_set("ALARM") effect and
	  make it reasonable [#2801, #2708]
	* drivers/dstate.c: status_set()/status_get(): fence extra tracing
	  with #ifdef DEBUG not #if 0 [#2801]
	* drivers/dstate.c, tests/driver_methods_utest.c: note that ALARM
	  status may still appear twice [#2801, #2708]
	* tests/driver_methods_utest.c: wrap one of test alarms in brackets
	  as some drivers do for readability [#2801, #2708]

2025-02-21  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am, docs/Makefile.am, docs/man/Makefile.am: fix up with a
	  DOCS_NO_MAN option to simplify parallel work from top-level
	  Makefile while allowing legacy "cd docs && make" to still do the
	  right thing

2025-02-20  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am: introduce $(SUBDIRS_ALL_RECURSIVE) and
	  $(SUBDIR_TGT_RULE), and detail the dependencies

2025-02-14  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am: reorder a few top lines and document sequential
	  handling of automake SUBDIRS and how it hurts parallel builds of
	  NUT
	* drivers/netvision-mib.c: stash older netvision_output_info[]
	  mapping from before the fix in PR #2803
	* NEWS.adoc, UPGRADING.adoc, docs/nut.dict: UPGRADING.adoc,
	  NEWS.adoc: describe fix of drivers/netvision-mib.c [#2803]
	* drivers/netvision-mib.c: bump version, fix whitespace in comments
	  [#2803]

2025-02-14  Bill Elliot <bill@wreassoc.com>

	* docs/man/Makefile.am: Additions to docs/man/Makefile.am.

2025-02-12  Manuel Bouyer <bouyer@antioche.eu.org>

	* drivers/netvision-mib.c: netvision-mib: sync netvision_output_info
	  with SOCOMECUPS-MIB.txt  The netvision_output_info array doens't
	  match the upsOutputSource values from SOCOMECUPS-MIB.txt (the only
	  Socomec MIB publically available) and also doesn't match values
	  observed on our MASTERYS 3/3 SYSTEM which has a Net Vision v6.32
	  card.

2025-02-11  Viktor Drobot <linux776@gmail.com>

	* drivers/nutdrv_qx.c, drivers/nutdrv_qx.h, drivers/nutdrv_qx_q2.c:
	  Fix battery runtime calculation for Q2 protocol

2025-02-11  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am: hush forced "make docs" and repetitive doc-checks as
	  the recipes were hopefully rectified
	* drivers/main.c: avoid declaring "mutex" in WIN32 builds without
	  main() for test mocks [#2708]
	* drivers/dstate.c: status_get(): properly handle tokens that are
	  substrings of another [#2708, #2565]
	* tests/driver_methods_utest.c: test ups.status sub-token detection
	  [#2708]
	* tests/driver_methods_utest.c: test ALARM contents (with dupes)
	  [#2708]
	* tests/driver_methods_utest.c: test ALARM status [#2708]
	* tests/driver_methods_utest.c: refactor pass.fail reporting [#2708]
	* tests/.gitignore, tests/Makefile.am, tests/driver_methods_utest.c,
	  tests/generic_gpio_utest.c: Introduce tests/driver_methods_utest
	  [#2708]  Relocated code tried earlier in generic_gpio_utest.c (not
	  as portable a container - far from everyone builds it)
	* appveyor.yml: ensure we can create version-less snapshot dir
	  symlink  The fault puzzled me though: we do pre-remove '.inst'
	  whole...  [00:36:07] CHECKING if any executable files were
	  installed to locations other than those covered by this recipe, so
	  might not have needed DLLs bundled near them [00:36:08] ln:
	  ./.inst/NUT-for-Windows-x86_64-SNAPSHOT: cannot overwrite directory
	  [00:36:08] Command exited with code 1

2025-02-11  Bill Elliot <bill@wreassoc.com>

	* data/driver.list.in, docs/man/powervar-cx.txt,
	  drivers/powervar-cx.h: Documentation updates.
	* drivers/powervar-cs.c, drivers/powervar-cu.c,
	  drivers/powervar-cx.h: Cleaned up for testing.
	* drivers/powervar-cs.c, drivers/powervar-cu.c,
	  drivers/powervar-cx.h: USB disconnect/reconnect seems to be
	  working.

2025-02-10  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/new-drivers.txt: describe in ups.status values also that/how
	  ARALM can be added [#2708]
	* tests/generic_gpio_utest.c: check that whitespace chars around
	  status_set() args are stripped [#2708]
	* drivers/dstate.c, NEWS.adoc: status_set(): if we are reluctantly
	  adding "A FEW TOKENS" at once, recurse to add one by one and so
	  avoid duplicates [#2708]  As a side effect, should also strip
	  surrounding whitespace characters.
	* drivers/dstate.c: fix status_get(), got inverted maths in a check
	  [#2565, #2708]
	* tests/generic_gpio_utest.c: piggy-back to test for duplicates with
	  status_set() [#2708]
	* drivers/liebert-gxe.c: do not use whitespace in status_set() args
	  [#2708]
	* drivers/bestfortress.c: do not use whitespace in status_set() args
	  [#2708]

2025-02-09  Viktor Drobot <linux776@gmail.com>

	* drivers/nutdrv_qx_innovart31.c, drivers/nutdrv_qx_q2.c,
	  drivers/nutdrv_qx_q6.c: Separate code and variable declarations
	* docs/nut.dict, drivers/nutdrv_qx_innovart31.c,
	  drivers/nutdrv_qx_q2.c, drivers/nutdrv_qx_q6.c: Remove phase
	  detection in updateinfo. Calm down spellchecker
	* docs/man/nutdrv_qx.txt, docs/nut.dict,
	  docs/nutdrv_qx-subdrivers.txt, drivers/Makefile.am,
	  drivers/nutdrv_qx.c, drivers/nutdrv_qx.h,
	  drivers/nutdrv_qx_blazer-common.c,
	  drivers/nutdrv_qx_blazer-common.h, drivers/nutdrv_qx_innovart31.c,
	  drivers/nutdrv_qx_q2.c, drivers/nutdrv_qx_q2.h,
	  drivers/nutdrv_qx_q6.c, drivers/nutdrv_qx_q6.h: Add basic Q2 and Q6
	  protocol variants. Improve INNOVART31 protocol

2025-02-09  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx_q2.c: q2_initinfo(): fix formatting string
	* drivers/nutdrv_qx_q6.c: q6_initinfo(): fix formatting string
	* docs/man/Makefile.am: "make clean all" should remain useful
	* NEWS.adoc: introduction of Q2 and Q6 protocol support in nutdrv_qx
	* drivers/nutdrv_qx_q6.c: q6_claim(): revise comment
	* drivers/nutdrv_qx_q2.c: q2_claim(): revise comment
	* drivers/nutdrv_qx.c: bump DRIVER_VERSION for Q2/Q6 addition [#2798]
	* docs/man/nutdrv_qx.txt: typo fixes for `nooutstats` [#2798]
	* docs/Makefile.am, docs/man/Makefile.am: pass MAN_SECTION* and
	  NUT_WEBSITE_BASE to asciidoc attributes [#722, #2733, #2743]  If we
	  ever decide to forgo rewritting of man page numbers and website
	  URLs during creation of *-prepped sources fed into asciidoc (as
	  done by PRs above) and directly use expadable asciidoc attributes
	  in text, the Makefiles are ready. One downside is that plaintext
	  original docs would become barely useful, with all those links
	  externalized...
	* docs/man/nut_usb_addvars.txt, docs/man/ups.conf.txt: add libusb API
	  link spelling for curious readers of asciidoc source (not
	  html/man/pdf renditions that needed escaping)
	* docs/Makefile.am, docs/man/Makefile.am: rewrite bottom reference to
	  "home page" to consider @NUT_WEBSITE_BASE@ (for historic releases)
	  [#722]
	* configure.ac, Makefile.am, docs/Makefile.am, docs/man/Makefile.am:
	  fix DOC_BUILD_LIST to include "man-man" recipe, not "man" which is
	  a dirname
	* ci_build.sh: do not say "No BUILD_TYPE" was specified, when we are
	  actually building (developer-oriented) "inplace" or with certain
	  "docs" request
	* docs/man/Makefile.am: standardize on --attribute=KEY=VAL spelling
	  for a2x args everywhere
	* ci_build.sh: accept "doc*" arguments that would be passed to
	  configure script of developer builds  Finally allow to not skip doc
	  builds when developing just them :)
	* ci_build.sh: restructure aliasing of "$1" to certain BUILD_TYPEs
	* ci_build.sh: comment about INPLACE_RUNTIME=true envvar support

2025-02-08  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/mge-hid.c: cosmetic fixes
	* scripts/python/Makefile.am: restore definition of PYNUT_COMMON_CODE
	  (empty) for recipe to be fully defined [#2792]

2025-02-07  cgarz <20268068+cgarz@users.noreply.github.com>

	* configure.ac: Update configure.ac, remove nut_have_telnetlib checks
	* scripts/python/module/setup.py.in: Update setup.py.in, remove
	  install_requires lib
	* scripts/python/README.adoc: Update README.adoc, remove telnetlib
	  section
	* NEWS.adoc: Update NEWS.adoc PyNUTClient mention to include PR
	* scripts/python/Makefile.am: Update python Makefile.am, remove
	  nut_telnetlib.py reference.
	* scripts/python/module/Makefile.am: Update python module
	  Makefile.am, remove nut_telnetlib.py references.
	* COPYING: update COPYING, remove nut_telnetlib.py mention.
	* scripts/python/module/PyNUT.py.in: Update PyNUT changelog, bump
	  version to 1.8.0
	* scripts/python/module/PyNUT.py.in: Use socket create_connection
	  instead of connect, Handles choosing IPv4 and IPv6 automatically.

2025-02-07  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/nut_usb_addvars.txt, docs/man/ups.conf.txt: fix links
	  leading to libusb API docs with two underscores
	* tests/NIT/nit.sh: update comment about use of two explicit
	  localhost IPv4/6 addresses, not a name, for upsd.conf
	* scripts/python/module/nut_telnetlib.py: Remove the copy of module
	  we do not need anymore
	* configure.ac: restore nut_with_pynut_py* checks from v2.8.2, but
	  test for "socket" instead of "telnetlib" module [#2183]
	* docs/download.txt: change wording and use asciidoc link to pass
	  dblatex=>PDF generation
	* INSTALL.nut.adoc: suggest how to push back a locally fixed git
	  branch
	* INSTALL.nut.adoc, docs/download.txt, docs/developers.txt: suggest
	  fetching git tags to have a saner NUT_SEMVER in custom builds

2025-02-07  Bill Elliot <bill@wreassoc.com>

	* drivers/powervar-cs.c, drivers/powervar-cu.c,
	  drivers/powervar-cx.h: After testing on GTS and UPM. Still need USB
	  dis/re-connect logic.

2025-02-06  Jim Klimov <jimklimov+nut@gmail.com>

	* data/html/README.adoc, lib/README.adoc, tests/NIT/README.adoc:
	  Various other asciidocs: reconcile markup (multi-paragraph lists,
	  etc.)
	* data/html/README.adoc, docs/FAQ.txt, docs/config-prereqs.txt,
	  docs/configure.txt, docs/man/pijuice.txt, docs/packager-guide.txt,
	  docs/snmp.txt: Various docs: spell "man pages" as two words
	* scripts/Windows/README.adoc, scripts/fuse/README.adoc,
	  scripts/hotplug/README.adoc: Various scripts/ asciidocs: reconcile
	  markup (multi-paragraph lists, etc.)
	* INSTALL.nut.adoc, README.adoc, docs/cables.txt,
	  docs/config-notes.txt, docs/config-prereqs.txt, docs/configure.txt,
	  docs/daisychain.txt, docs/design.txt, docs/developer-guide.txt,
	  docs/developers.txt, docs/download.txt, docs/features.txt,
	  docs/hid-subdrivers.txt, docs/macros.txt, docs/net-protocol.txt,
	  docs/new-clients.txt, docs/new-drivers.txt, docs/nut-names.txt,
	  docs/nut-qa.txt, docs/packager-guide.txt, docs/security.txt,
	  docs/snmp-subdrivers.txt, docs/solaris-usb.txt: Various main
	  asciidocs: reconcile markup (multi-paragraph lists, etc.)
	* docs/FAQ.txt: update some answers and a lot of asciidoc markup
	* docs/download.txt: do not list NUT for Windows MSI 2.6.5 as if it
	  were the latest option
	* docs/developers.txt: refresh info about CI builds
	* docs/developers.txt: fix links to NEWS.adoc and UPGRADING.adoc (now
	  with .adoc extensions)
	* docs/developers.txt, docs/nut.dict: docs/developers.txt: revise
	  GitHub-based review and contribution process
	* docs/developers.txt: mention more of our valgrind automation
	* docs/developers.txt: mention plan for clang-format automation
	* docs/developers.txt: link to "Documentation/CodingStyle" of Linux
	  kernel fame
	* docs/developers.txt: fix formatting of a paragraph with many
	  mentions of "C++"
	* docs/developers.txt: revise explanation of fatalx() et al - it is
	  not always EXIT_FAILURE
	* docs/developer-guide.txt: refer to NUT DDL repo
	* docs/design.txt: update the HISTORY section with NUT for Windows
	  named pipes, and driver-to-driver queries using local socket
	  protocol [#1903]
	* docs/configure.txt: clarify (again) that statepath is the default
	  value for altpidpath, and expose why it is so named
	* docs/design.txt, docs/nut.dict: docs/design.txt: explain the
	  location and communication of the 3 layers in words
	* docs/configure.txt: suggest use of "-R/lib/path" with non-standard
	  locations
	* docs/configure.txt: move LibGD header to its related content;
	  pkg-config is a dependency of its own
	* docs/configure.txt: reword what "state path" is
	* docs/configure.txt: clarify --with-all=auto option
	* docs/configure.txt: clarify libmodbus+libusb requiring libusb-1.x
	  API
	* docs/configure.txt: clarify in-place builds wording
	* docs/man/libupsclient-config.txt, docs/configure.txt: clarify
	  `lib/libupsclient-config --config-flags` vs. `libupsclient.pc`
	* docs/config-notes.txt: note the system-wide sleep support beginning
	  in NUT v2.8.3
	* docs/config-notes.txt: refer to nutshutdown script in NUT sources
	* docs/config-notes.txt: suggest more typical locations for
	  POWERDOWNFLAG file
	* docs/config-notes.txt: Starting the driver(s): re-title that this
	  is a chapter for legacy approach with upsdrvctl (keep same anchor)
	* docs/config-notes.txt: Driver configuration: clarify dependency on
	  built-in identifiers, and that they may be avoided
	* docs/config-notes.txt: refer to nutconf; split the NOTE into
	  paragraphs
	* docs/man/adelsystem_cbi.txt, docs/man/al175.txt,
	  docs/man/apcsmart-old.txt, docs/man/apcsmart.txt,
	  docs/man/apcupsd-ups.txt, docs/man/asciidoc.conf,
	  docs/man/asem.txt, docs/man/bcmxcp.txt, docs/man/bcmxcp_usb.txt,
	  docs/man/belkinunv.txt, docs/man/bestfortress.txt,
	  docs/man/blazer-common.txt, docs/man/gamatronic.txt,
	  docs/man/generic_gpio.txt, docs/man/generic_modbus.txt,
	  docs/man/genericups.txt, docs/man/hosts.conf.txt,
	  docs/man/huawei-ups2000.txt, docs/man/hwmon_ina219.txt,
	  docs/man/ivtscd.txt, docs/man/libnutclient_commands.txt,
	  docs/man/libnutclient_devices.txt,
	  docs/man/libnutclient_variables.txt, docs/man/liebert-esp2.txt,
	  docs/man/liebert.txt, docs/man/macosx-ups.txt,
	  docs/man/mge-shut.txt, docs/man/mge-utalk.txt,
	  docs/man/netxml-ups.txt, docs/man/nhs_ser.txt,
	  docs/man/nut-driver-enumerator.txt, docs/man/nut-ipmipsu.txt,
	  docs/man/nut-recorder.txt, docs/man/nut-scanner.txt,
	  docs/man/nut.conf.txt, docs/man/nut.exe.txt,
	  docs/man/nut_usb_addvars.txt, docs/man/nutconf.txt,
	  docs/man/nutdrv_atcl_usb.txt, docs/man/nutdrv_qx.txt,
	  docs/man/nutdrv_siemens_sitop.txt,
	  docs/man/nutscan_add_option_to_device.txt,
	  docs/man/nutscan_cidr_to_ip.txt, docs/man/nutupsdrv.txt,
	  docs/man/oneac.txt, docs/man/phoenixcontact_modbus.txt,
	  docs/man/pijuice.txt, docs/man/powerman-pdu.txt,
	  docs/man/richcomm_usb.txt, docs/man/skel.txt,
	  docs/man/snmp-ups.txt, docs/man/sockdebug.txt,
	  docs/man/socomec_jbus.txt, docs/man/tripplite_usb.txt,
	  docs/man/ups.conf.txt, docs/man/upsc.txt,
	  docs/man/upscli_splitaddr.txt, docs/man/upscli_splitname.txt,
	  docs/man/upscmd.txt, docs/man/upsd.conf.txt, docs/man/upsd.txt,
	  docs/man/upsd.users.txt, docs/man/upsdrvctl.txt,
	  docs/man/upsdrvsvcctl.txt, docs/man/upsimage.cgi.txt,
	  docs/man/upslog.txt, docs/man/upsmon.conf.txt, docs/man/upsmon.txt,
	  docs/man/upsrw.txt, docs/man/upsset.cgi.txt,
	  docs/man/upsset.conf.txt, docs/man/upsstats.cgi.txt,
	  docs/man/upsstats.html.txt, docs/man/usbhid-ups.txt,
	  docs/man/victronups.txt, docs/nut.dict: docs/man/*.txt: revise
	  asciidoc markup and man page contents  * Align multi-paragraph
	  blocks to render with correct indentation * Upper-case program
	  description sentences on top, and start of text in NOTE/WARNING
	  blocks * Apply linkman/linkmanext instead of direct emphasis *
	  Apply backtick verbatim format in more places for files, commands,
	  etc. * Do not state that a driver "is not built by default", but
	  that it "may be not built by default" (`configure --with-all=auto`
	  is now default for some time) * Assorted typos * Short content
	  clarifications and extensions here and there (long/significant ones
	  tracked by other commits)
	* drivers/upsdrvctl.c: wrap long line in help()
	* docs/man/usbhid-ups.txt: "Selecting a specific UPS": clarify use of
	  serial number, allow_duplicates, etc.
	* docs/man/upslog.txt: clarify that "-N" does not do sanity checks
	* docs/asciidoc-vars.conf, docs/asciidoc.conf,
	  docs/man/asciidoc.conf: introduce linkmanext and linkmanext2 macros
	  for non-NUT man pages
	* docs/man/upsdrvctl.txt: mention "list" and "status" as commands
	  (chapter intro)
	* docs/man/upsdrvctl.txt: revise note of upsdrvsvcctl, and add
	  reasons to run drivers directly sometimes
	* docs/man/upsd.users.txt, docs/man/upsmon.txt: revise "upsmon" as
	  more of a role than a set of actions
	* docs/man/hosts.conf.txt, docs/man/upsset.conf.txt:
	  docs/man/{hosts,upsset}.conf.txt: considerations on FS and HTTPS
	  access security
	* docs/man/upsmon.txt: document NUT_QUIET_INIT_UPSNOTIFY and
	  NUT_QUIET_INIT_BANNER support
	* docs/man/upsd.txt: document NUT_QUIET_INIT_UPSNOTIFY and
	  NUT_QUIET_INIT_BANNER support
	* docs/man/ups.conf.txt, docs/man/upsd.conf.txt,
	  docs/man/upsd.users.txt, docs/man/upsmon.conf.txt:
	  docs/man/{ups.conf,upsd.conf,upsd.users,upsmon.conf}.txt: extend
	  IMPORTANT NOTES with considerations on FS access security, slightly
	  different for each file
	* docs/man/upsd.txt: clarify that driver shutdown commands need no
	  upsd

2025-02-05  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/nutupsdrv.txt: document NUT_QUIET_INIT_UPSNOTIFY and
	  NUT_QUIET_INIT_BANNER support; link to ups.conf and nut.conf man
	  pages
	* docs/man/nutconf.txt: fix IPMI cipher suite option representation
	  as a table
	* docs/man/nut_usb_addvars.txt: fix libusb docs URL rendering (double
	  underscore is special)
	* docs/man/nut.conf.txt: fix DIRECTIVES section rendering
	* docs/man/nut-scanner.txt: fix NETWORK OPTIONS "NOTE" block markup
	* docs/man/nut-scanner.txt: fix "-U..." table markup
	* docs/man/nut-recorder.txt: link to upslog as a similar program
	* docs/man/metasys.txt: link to copy of the protocol in NUT website
	  library
	* docs/man/index.txt: reference recent API and nutconf man pages
	* docs/man/libnutclient.txt, docs/man/libnutclient_commands.txt,
	  docs/man/libnutclient_devices.txt,
	  docs/man/libnutclient_general.txt, docs/man/libnutclient_misc.txt,
	  docs/man/libnutclient_tcp.txt, docs/man/libnutclient_variables.txt,
	  docs/man/libupsclient-config.txt, docs/man/nutscan.txt,
	  docs/man/nutscan_add_device_to_device.txt,
	  docs/man/nutscan_add_ip_range.txt,
	  docs/man/nutscan_add_option_to_device.txt,
	  docs/man/nutscan_cidr_to_ip.txt,
	  docs/man/nutscan_display_parsable.txt,
	  docs/man/nutscan_display_sanity_check.txt,
	  docs/man/nutscan_display_sanity_check_serial.txt,
	  docs/man/nutscan_display_ups_conf.txt,
	  .../nutscan_display_ups_conf_with_sanity_check.txt,
	  docs/man/nutscan_free_device.txt,
	  docs/man/nutscan_free_ip_ranges.txt,
	  docs/man/nutscan_get_serial_ports_list.txt,
	  docs/man/nutscan_init.txt, docs/man/nutscan_init_ip_ranges.txt,
	  docs/man/nutscan_ip_ranges_iter_inc.txt,
	  docs/man/nutscan_ip_ranges_iter_init.txt,
	  docs/man/nutscan_new_device.txt, docs/man/nutscan_scan_avahi.txt,
	  docs/man/nutscan_scan_eaton_serial.txt,
	  docs/man/nutscan_scan_ipmi.txt, docs/man/nutscan_scan_nut.txt,
	  docs/man/nutscan_scan_nut_simulation.txt,
	  docs/man/nutscan_scan_snmp.txt, docs/man/nutscan_scan_usb.txt,
	  docs/man/nutscan_scan_xml_http_range.txt,
	  docs/man/nutscan_stringify_ip_ranges.txt,
	  docs/man/upscli_add_host_cert.txt, docs/man/upscli_cleanup.txt,
	  docs/man/upscli_connect.txt, docs/man/upscli_disconnect.txt,
	  docs/man/upscli_fd.txt, docs/man/upscli_get.txt,
	  docs/man/upscli_init.txt, docs/man/upscli_list_next.txt,
	  docs/man/upscli_list_start.txt, docs/man/upscli_readline.txt,
	  docs/man/upscli_sendline.txt, docs/man/upscli_splitaddr.txt,
	  docs/man/upscli_splitname.txt, docs/man/upscli_ssl.txt,
	  docs/man/upscli_strerror.txt, docs/man/upscli_upserror.txt,
	  docs/man/upsclient.txt: docs/man/{lib,nutscan,upscli}*: update
	  markup of API docs to be consistent  * Block-quoting and
	  indentation of SYNOPSIS * Bullet-lists for numerous methods and
	  args * Slight wording changes * Single-quote integer return values
	  * Backtick-quote program and config file names * Cross-link to some
	  other pages with linkman macro
	* docs/man/upscli_splitaddr.txt: fix description of the method
	* docs/man/upsc.txt: refer to "See also" the upslog client and
	  ups.conf man pages; revise markup
	* docs/man/solis.txt: use standard markup for "Extra Arguments" and
	  "Supported Commands"; refer to "See also" the microsol-apc driver
	* docs/man/rhino.txt: use standard markup for "Extra Arguments" and
	  "Supported Commands"
	* docs/man/microsol-apc.txt: use standard markup for "Extra
	  Arguments" and "Supported Commands"; refer to "See also" the solis
	  driver
	* docs/man/libupsclient-config.txt: note the pkg-config alternative
	  to the older-style script
	* docs/man/clone.txt, docs/man/clone-outlet.txt,
	  docs/man/dummy-ups.txt: update wording and cross-links of the
	  virtual device drivers
	* docs/man/sockdebug.txt, docs/nut.dict: clarify the two separate
	  sources of the program (POSIX/WIN32)
	* AUTHORS, MAINTAINERS, docs/nut.dict: add Jim Klimov  Just half a
	  decade as maintainer; better late than never :)

2025-02-04  cgarz <20268068+cgarz@users.noreply.github.com>

	* scripts/python/module/PyNUT.py.in: Remove walrus op for older
	  python compatibility.

2025-02-04  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, drivers/main.c: exit_cleanup(): avoid upsnotify() at
	  exit if CLI args were fatally useless  Note also earlier change in
	  commit d6112a3fa732f0881c3759870d51f1dad7348886
	* NEWS.adoc: fix misplaced entry for baytech-rpc3nc-mib [#2779]
	* docs/Makefile.am: EXTRA_DIST sms-brazil-protocol.txt and comment
	  why it is not among ALL_TXT_SRC [#2090]
	* docs/sms-brazil-protocol.txt: wrap long lines in intro paragraph
	  [#2090]
	* docs/man/sms_ser.txt: fix reference to docs/sms-brazil-protocol.txt
	  [#2090]

2025-02-04  Bill Elliot <bill@wreassoc.com>

	* drivers/powervar-cs.c, drivers/powervar-cu.c,
	  drivers/powervar-cx.h: Text tweaks and help text sequence
	  change(s).

2025-02-03  Bill Elliot <bill@wreassoc.com>

	* drivers/powervar-cs.c, drivers/powervar-cu.c,
	  drivers/powervar-cx.h: Generally working drivers prior to command
	  testing.

2025-01-31  cgarz <20268068+cgarz@users.noreply.github.com>

	* scripts/python/module/PyNUT.py.in: Switch to socket timeout, fix
	  its init argument
	* scripts/python/module/PyNUT.py.in: switch to socket send and
	  replacement read_until
	* scripts/python/module/PyNUT.py.in: added replacement read_until and
	  leftover buffer

2025-01-29  RikyPlaza <rikyrod2001@gmail.com>

	* drivers/phoenixcontact_modbus.c: implemented reading of more
	  variables for TRIO and TRIO-2G models.

2025-01-29  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: Revert "ci_build.sh: tolerate OpenSSL headers on
	  OmniOS"  This reverts commit
	  c8927a525ff754467796635bdc3a866126377358: a more general fix posted
	  to m4/nut_check_libopenssl.m4
	* m4/nut_check_libopenssl.m4: refactor to parse relevant dirs as
	  "-isystem" from depCFLAGS
	* drivers/optiups.c: rename global variables to not start with
	  underscore  clang-19: error: identifier '_pollv_ps' is reserved
	  because it starts with '_' at global scope
	  [-Werror,-Wreserved-identifier]
	* m4/nut_check_libopenssl.m4, m4/nut_compiler_family.m4:
	  m4/nut_check_libopenssl.m4: inject -isystem settings for OpenSSL-3
	  where needed
	* configure.ac: add -Wno-missing-include-dirs to clang(-19)
	  relaxation

2025-01-28  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/build-mingw-prereqs.sh: use libmodbus-git
	  fork/branch recommended by NUT instructions
	* scripts/Windows/build-mingw-prereqs.sh: revise git-usecase recovery
	  from bad checkout (force-push to upsteram etc.)
	* drivers/powerman-pdu.c: use same enum type for two variants of
	  result
	* drivers/libusb1.c, drivers/nut-libfreeipmi.c,
	  tools/nut-scanner/scan_ipmi.c: Various: reconcile formatting
	  strings and int-ish casting
	* ci_build.sh: tolerate OpenSSL headers on OmniOS

2025-01-27  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt: update OmniOS and OpenIndiana pointers to
	  current gcc/clang in rolling distro releases
	* Jenkinsfile-dynamatrix: fix typo in comment
	* m4/nut_compiler_family.m4: fix detection of actually unsupported
	  compiler flags [#1352]

2025-01-26  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, docs/nut.dict: NEWS.adoc: update for baytech-rpc3nc-mib
	  [#2779]

2025-01-25  Jim Klimov <jimklimov@gmail.com>

	* scripts/valgrind/valgrind.sh.in: revise detection of VALGRIND and
	  LIBTOOL values

2025-01-25  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/generic_gpio_utest.c: Revert "tests/generic_gpio_utest.c: Be
	  sure the internal gpioupsfd in driver code is freed before we
	  (re?)init it in test"  This reverts commit
	  bf59f10950246f1dd8ea22e58d501502c7bd499d.
	* drivers/generic_gpio_common.c: generic_gpio_open(): reshuffle to
	  optimize  * Less lookups to testval/getval * Do not xalloc and
	  fatalx if got no rules (avoid leak)
	* tests/generic_gpio_utest.c: fix inverted strcmp() result treatment
	* tests/generic_gpio_utest.c: Be sure the internal gpioupsfd in
	  driver code is freed before we (re?)init it in test
	* drivers/generic_gpio_common.c, drivers/generic_gpio_common.h,
	  tests/generic_gpio_utest.c: drivers/generic_gpio_common.{c,h},
	  tests/generic_gpio_utest.c: refactor generic_gpio_close() to take a
	  pointer to pointer and nullify it
	* drivers/generic_gpio_common.c: generic_gpio_close():
	  free(gpioupsfdlocal->rules) itself too, not just entries in the
	  list
	* tests/generic_gpio_utest.c: do upsdrv_cleanup() now that it is safe
	  to occasionally repeat the attempt
	* drivers/generic_gpio_common.c: upsdrv_cleanup(): only free
	  resources once  Check if (gpioupsfd!=NULL) and nullify it
	  afterwards. Should not be a problem in the real driver, but
	  confused the repetitive use of this code in unit test case.
	* drivers/generic_gpio_common.c: fix code markup to adhere closer to
	  NUT coding style
	* tests/generic_gpio_utest.c: dstate_free() after the test run
	* tests/generic_gpio_utest.c: comment away upsdrv_cleanup() in
	  codepath which we did not upsdrv_init()
	* tests/generic_gpio_utest.c: refactor work with generic_gpio_close()
	  to avoid use after free
	* tests/nutconf_ut.cpp: NutConfigUnitTest::testUpsmonConfiguration():
	  fix memory leak with temporary BoolInt instances
	* common/nutstream.cpp: checkExistsWritableDir(): fix memory leak
	  with opened DIRFD
	* scripts/valgrind/.valgrind.supp: add suppressions for dash
	  interpreter
	* scripts/valgrind/.valgrind.supp: add suppressions for C++ tests
	  (CPPUNIT leaky internals)
	* scripts/valgrind/valgrind.sh.in: comment about
	  --gen-suppressions=all option
	* configure.ac, scripts/valgrind/.gitignore,
	  scripts/valgrind/README.adoc, scripts/valgrind/{valgrind.sh =>
	  valgrind.sh.in}, tests/Makefile.am: configure.ac,
	  scripts/valgrind/valgrind.sh.in, tests/Makefile.am: make the helper
	  script a template
	* tests/Makefile.am: memcheck: use the NUT-customized wrapper for
	  valgrind
	* scripts/valgrind/valgrind.sh: allow to customize the VALGRIND to be
	  used
	* tests/Makefile.am: memcheck: report OVERALL FAILED cases (if any)
	* Makefile.am: separate meaning of memcheck vs. distcheck-valgrind
	  targets

2025-01-24  Jim Klimov <jimklimov@gmail.com>

	* configure.ac, Makefile.am: DISTCHECK_FLAGS*: inherit
	  CFLAGS/CXXFLAGS values used by configure of the main build (e.g.
	  passed some time ago from ci_build.sh or user), add CPPFLAGS and
	  LDFLAGS to the mix

2025-01-24  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: hot-fix issue #2782 on OmniOS
	* tests/Makefile.am: refactor "memcheck" recipe to be usable
	  stand-alone, and not only with C++ builds
	* Makefile.am: only proceed to "make memcheck" if we HAVE_VALGRIND
	* tools/gitlog2version.sh: fix getver_default() determination of
	  NUT_VERSION_DEFAULT3 and thus NUT_SOURCE_GITREV_IS_RELEASE in
	  configure.ac (for distcheck or tarball builds) [#1949]
	* Makefile.am: do not evaluate DISTCHECK_CONFIGURE_FLAGS right when
	  calling sub-"make distcheck" [#2541, fixes #2542 fallout]
	* Makefile.am: embed PKG_CONFIG_PATH we were built with into
	  DISTCHECK_CONFIGURE_FLAGS
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  revise OmniOS chapter to note run-time linking troubles with OOCE
	  (Extra repo) [#2782]
	* docs/config-prereqs.txt: revise OmniOS chapter to better reflect
	  current LTS 151046

2025-01-23  RikyPlaza <rikyrod2001@gmail.com>

	* drivers/phoenixcontact_modbus.c: Added management for TRIO-2G UPS
	  of output.voltage variable
	* drivers/phoenixcontact_modbus.c: added management of new ups models
	  for OB, OL, CHRG and LB flags.
	* drivers/phoenixcontact_modbus.c: Added new ups models in
	  enumeration and updated upsdrv_initinfo function.
	* drivers/phoenixcontact_modbus.c: Added entries for new models.

2025-01-23  Jim Klimov <jimklimov@gmail.com>

	* ci_build.sh: apply compiler/linker flags possibly adjusted by
	  detect_platform_PKG_CONFIG_PATH_and_FLAGS() in
	  BUILD_TYPE=""/inplace cases
	* ci_build.sh: normalize_path() the PATH and CCACHE_PATH after
	  guesswork and before build

2025-01-23  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: avoid exporting compiler flags for "windows-msys2"
	  semi-native builds with ccache  Nothing wrong in theory, but in
	  practice either autotools or ccache build on that platform handles
	  the expanded flags as if they were a path to non-existing location
	  of a source file :\
	* docs/config-prereqs.txt: add pkg name for libltdl on OmniOS
	* m4/nut_check_libltdl.m4: fix re-detection with CFLAGS added
	* ci_build.sh: refactor detect_platform_PKG_CONFIG_PATH_and_FLAGS()
	  with normalize_path() even more
	* ci_build.sh: refactor detect_platform_PKG_CONFIG_PATH_and_FLAGS()
	  with normalize_path()
	* ci_build.sh: refactor detect_platform_PKG_CONFIG_PATH_and_FLAGS()
	  for many logic paths on Solaris/illumos
	* ci_build.sh: also handle CANBUILD_WITH_LIBMODBUS_USB in
	  parameter-less/BUILD_TYPE="" builds
	* ci_build.sh: fix "[" tests to use "=" not "==" for comparisons
	* appveyor.yml: pass CANBUILD_WITH_LIBMODBUS_USB tweak to ci_build.sh
	* ci_build.sh: introduce CANBUILD_WITH_LIBMODBUS_USB tweak

2025-01-23  Bill Elliot <bill@wreassoc.com>

	* drivers/powervar-cs.c, drivers/powervar-cu.c,
	  drivers/powervar-cx.h: Adding commands and variables. General
	  cleanups.

2025-01-22  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt: update for OmniOS r151052
	* ci_build.sh: clean up indentations
	* ci_build.sh: teach developer-oriented runs some tricks from CI
	  When BUILD_TYPE=="" or "inplace", make use of newly separated
	  methods like optional_ensure_ccache(),
	  optional_prepare_compiler_family(),
	  detect_platform_PKG_CONFIG_PATH_and_FLAGS()
	* ci_build.sh: add OmniOS CE "Extra" repository binaries to PATH if
	  present
	* ci_build.sh: prepare also BUILTIN_PKG_CONFIG_PATH as part of the
	  equation (least priority)
	* docs/config-prereqs.txt: update for OmniOS r151052
	* ci_build.sh: detect OmniOS CE extra repo as part of
	  SYS_PKG_CONFIG_PATH
	* appveyor.yml: when installing, "set -e" to fail if any script
	  actions fail, and finish with "date -u" to check how long "7z"
	  takes subsequently
	* m4/nut_check_libusb.m4: enable libusb-1.0 on mingw/MSYS2 if we also
	  want --with-modbus+usb=yes [#1507]
	* m4/nut_check_libmodbus.m4, m4/nut_check_libusb.m4: comment to
	  remind that libusb-1.0 is required by libmodbus with rtu_usb
	* configure.ac, drivers/Makefile.am: fix condition for linking
	  apc_modbus against libusb
	* m4/nut_check_libmodbus.m4: remember tuned depLIBS and depCFLAGS if
	  re-checks succeed
	* m4/nut_check_libmodbus.m4: tests on Windows may require -lws2_32
	  and/or -liphlpapi
	* scripts/Windows/build-mingw-prereqs.sh: report *.pc files in the
	  "production" install area [#1491]
	* appveyor.yml: Revert "appveyor.yml: force rebuild/reinstall of
	  custom prereqs (TBD: disable later)"  This reverts commit
	  24829c5ddbb1ced12372afeffdfb691352713930.
	* appveyor.yml: Revert "appveyor.yml: TEMPORARY: Constrain to only
	  re-build NUT prerequisites and fit into the 1-hour time slot"  This
	  reverts commit 0901f35b7cdd131788abd4a16b2ce7a4e28540dd.
	* scripts/Windows/build-mingw-prereqs.sh: inject MSYS2 ccache symlink
	  location if present [#1491]
	* scripts/Windows/build-mingw-prereqs.sh: report resulting PATH
	* scripts/Windows/build-mingw-prereqs.sh: fix shell expansion style
	  for PREFIX in gitrepo case
	* scripts/Windows/build-mingw-prereqs.sh: fix shell expansion style
	  for PREFIX in tarball case
	* scripts/Windows/build-mingw-prereqs.sh: only fix up PATH if
	  PREFIX/bin is not yet there
	* appveyor.yml: TEMPORARY: Constrain to only re-build NUT
	  prerequisites and fit into the 1-hour time slot
	* appveyor.yml: pepper CCACHE location into PATH for explicit MAKE
	  calls and build-mingw-prereqs.sh [#1491]  We are only sort of
	  guaranteed to use ccache out of the box when arranged by
	  ci_build.sh, but might not benefit from it in other cases.
	* appveyor.yml: parallelize spellcheck a bit more
	* appveyor.yml: use faster compression in
	  APPVEYOR_CACHE_ENTRY_ZIP_ARGS
	* scripts/Windows/build-mingw-prereqs.sh: normalize away extra
	  slashes from PREFIX
	* scripts/Windows/build-mingw-prereqs.sh: fetch with curl
	  non-verbosely

2025-01-22  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: refactor with logic moved from BUILD_TYPE=default* to
	  reusable methods  * ensure_CI_CCACHE_SYMLINKDIR_envvar() *
	  optional_prepare_ccache() * optional_prepare_compiler_family() and
	  helpers is_gnucc(), is_clang(), filter_version(), ver_gnucc(),
	  ver_clang() * optional_ensure_ccache() *
	  detect_platform_CANBUILD_LIBGD_CGI() *
	  detect_platform_PKG_CONFIG_PATH_and_FLAGS()

2025-01-22  Bill Elliot <bill@wreassoc.com>

	* drivers/powervar-cs.c, drivers/powervar-cu.c,
	  drivers/powervar-cx.h: GTS USB working well for Init and Update.

2025-01-21  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/build-mingw-prereqs.sh: report the prepared
	  environment variables [#1491]

2025-01-20  Noah Jacobson <noah@noahjacobson.com>

	* drivers/snmp-ups.c: chore: bump snmp-ups version
	* drivers/Makefile.am, drivers/baytech-rpc3nc-mib.c,
	  drivers/baytech-rpc3nc-mib.h, drivers/snmp-ups.c: feat: add SNMP
	  support for Baytech RPC3-NC PDUs  Some models of Baytech RPC3-NC
	  PDUs do not have a value at ".1.3.6.1.4.1.4779.1.3.5.2.1.24.1",
	  causing the sysOID match to fail. Added a 2nd MIB that looks at
	  ".1.3.6.1.4.1.4779.1.3.5.5.1.3.2.1" instead.  This patch would fall
	  under the "various RPC" entry in the hardware compatibility list,
	  thus the list does not need updating.

2025-01-20  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/build-mingw-prereqs.sh: if component "configure"
	  script fails, print its config.log [#1491]
	* appveyor.yml: force rebuild/reinstall of custom prereqs (TBD:
	  disable later)
	* scripts/Windows/build-mingw-prereqs.sh: document that libmodbus is
	  also covered [#1491]
	* scripts/Windows/build-mingw-prereqs.sh: document example usage for
	  non-Windows targets [#1491]
	* scripts/Windows/build-mingw-prereqs.sh: avoid use of "true" program
	  [#1491]
	* scripts/Windows/build-mingw-prereqs.sh: revise determination of
	  PREFIX with PREFIX_ROOT [#1491]
	* scripts/Windows/build-mingw-prereqs.sh: revise determination of
	  ARCH and PREFIX, so they can be customized (e.g. for non-Windows
	  prereq builds eventually) [#1491]
	* scripts/Windows/build-mingw-prereqs.sh: comment progression through
	  the script (whether we skip a component as already installed, or we
	  fetch/build/install it [#1491]
	* appveyor.yml: skip installing packaged
	  mingw-w64-x86_64-libmodbus-git, use the custom-built one (like
	  net-snmp)
	* scripts/Windows/build-mingw-prereqs.sh: only chmod/remove builddir
	  if it exists before rebuild [#1491]
	* scripts/Windows/build-mingw-prereqs.sh: minimize local filesystem
	  changes when checking remote Git for changes [#1491]
	* scripts/Windows/build-mingw-prereqs.sh: use libmodbus branch
	  fix-mingw-build temporarily
	* scripts/Windows/build-mingw-prereqs.sh: add a way to
	  provide_libmodbus_git() [#2609, #1473, #1491]
	* .../ci/jenkins-nut-large-with-plateborder.pdn,
	  docs/images/ci/jenkins-nut-vector.svg: Update
	  docs/images/ci/jenkins-nut-large-with-plateborder.pdn, add vector
	  docs/images/ci/jenkins-nut-vector.svg
	* scripts/Windows/build-mingw-prereqs.sh: separate MAKEFLAGS from
	  MAKE [#1491]
	* scripts/Windows/build-mingw-prereqs.sh: default to "gmake" if
	  available by such name
	* scripts/Windows/build-mingw-prereqs.sh: minor fixes to layout; use
	  "rsync -c" to only modify dest if needed
	* scripts/Windows/build-mingw-prereqs.sh: bump (C) and license blurb
	* appveyor.yml: pre-remove mingw-w64-i686-gdb-multiarch if present

2025-01-19  Jim Klimov <jimklimov+nut@gmail.com>

	* .github/workflows/PyNUTClient.yml: test with python-3.13 [#2733]
	* scripts/python/module/README.adoc: update list of regularly touched
	  Python 3.x versions [#2733]
	* scripts/python/module/setup.py.in: update list of classifiers
	  [#2733]
	* NEWS.adoc, UPGRADING.adoc, scripts/python/module/Makefile.am,
	  scripts/python/module/README.adoc,
	  scripts/python/module/setup.py.in: scripts/python/module, docs:
	  adjust PyNUTClient tarball name to PEP-0625 requirements [#2773]
	* scripts/python/README.adoc: update wording [#2773]

2025-01-18  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/cgilib.c, clients/upssched.c, clients/upsset.c,
	  clients/upsstats.c, common/common.c, common/upsconf.c,
	  common/wincompat.c, drivers/clone-outlet.c, drivers/clone.c,
	  drivers/dstate.c, drivers/dummy-ups.c, drivers/main.c,
	  drivers/snmp-ups.c, drivers/upsdrvctl.c, drivers/upsdrvquery.c,
	  drivers/upsdrvquery.h, scripts/Windows/wininit.c, server/conf.c,
	  server/desc.c, server/pipedebug.c, server/sstate.c, server/upsd.c,
	  server/user.c: Various: use NUT_PATH_MAX instead of SMALLBUF for
	  file/sock/pipe names [#2764]
	* clients/upssched.c, common/common.c, common/nutstream.cpp,
	  drivers/hwmon_ina219.c, drivers/nhs_ser.c, include/wincompat.h,
	  scripts/Windows/wininit.c, server/sstate.c: Various: use
	  NUT_PATH_MAX instead of PATH_MAX, MAX_PATH, MAXPATHLEN,
	  UNIX_PATH_MAX etc. [#2764]
	* common/common.c: use NUT_PATH_MAX instead of ifdef UNIX_PATH_MAX
	  tricks [#2764]
	* include/common.h: introduce NUT_PATH_MAX as the longest of several
	  possible variants [#2764]
	* server/sstate.c: report full path to expected UPS named pipe
	  (WIN32) when we fail to connect [#2764]
	* NEWS.adoc, conf/nut.conf.sample, drivers/dstate.c: introduce
	  NUT_QUIET_INIT_LISTENER envvar [#2764]
	* drivers/dstate.c: fix some WIN32 code markup
	* drivers/dstate.c: sock_open(): report path to sockfn (or WIN32
	  named pipe) the driver now listens on [#2764]
	* server/sstate.c: report full path to expected UPS socket file when
	  we fail to connect [#2764]
	* server/upstype.h: comment upstype_s->fn
	* configure.ac: diligently check for various integer types

2025-01-16  Jim Klimov <jimklimov@gmail.com>

	* tools/gitlog2changelog.py.in: adapt to Python 3.13 deprecation of
	  positional "maxsplit" parameter to re.split()
	* scripts/python/Makefile.am, scripts/python/module/Makefile.am: be
	  sure to install nut_telnetlib.py along with PyNUT.py file [#2183,
	  #2501, #2505]  Deliver nut_telnetlib.py with Python 3.13 that lacks
	  its own. Some use-cases did ensure its presence, but not all cases
	  yet.

2025-01-16  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx_voltronic.c, NEWS.adoc: fix battery.runtime for
	  newer protocol dialect [#2765]

2025-01-15  Jim Klimov <jimklimov@gmail.com>

	* docs/config-prereqs.txt: update the MacOS chapter a bit

2025-01-11  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upslog.c, docs/man/upslog.txt, NEWS.adoc: Added `-N` to
	  prefix `%UPSHOST%%t` before the format string
	* NEWS.adoc, clients/upslog.c, clients/upslog.h:
	  clients/upslog.{c,h}, NEWS.adoc: refactor to pass monhost_ups_t* to
	  methods and avoid shared global vars for single UPS  NOTE: The
	  logbuffer and logformat remain shared, the former is cleaned before
	  use in run_flist() anyway. Might be passed around, too, but why
	  keep re-allocating and freeing memory (or tossing more stack bytes
	  with pointer and size to static variable of that method)?..
	* clients/upslog.c: main loop: do not rely on "ups" variable as such
	* clients/upslog.c, clients/upslog.h: clients/upslog.{c,h}: move
	  definitions of logtarget_t and monhost_ups_t to header, rename the
	  latter with "_t"
	* docs/config-prereqs.txt: update instructions for OpenIndiana (as of
	  2024.04)
	* Makefile.am: install-as-root: SMF: fix path to svcadm [#1298]
	* scripts/Solaris/Makefile.am: combine "package-solaris-svr4" into
	  one shell block (keep ISA vars defined)
	* scripts/Solaris/Makefile.am: consider ISA info (specific 32/64-bit
	  CPU support) of build target host in package naming as NUT/NUTx -
	  Makefile typo fix
	* configure.ac: fix fallback PROBE_OS_GROUP definition
	* Makefile.am: install-as-root: update comment [#1298]
	* Makefile.am: install-as-root: fix NDE retcode 42 behaviour [#1298]
	* Makefile.am: install-as-root: separate service-stopping from "make
	  install" of new files and creation/ownership/restart of new
	  artifacts [#1298]
	* configure.ac: refine NUT_VERSION_DEPLOYED (seen when we ./configure
	  --enable-inplace-runtime)
	* INSTALL.nut.adoc, docs/config-notes.txt: update with info on
	  `(sudo) make install-as-root` [#1298]
	* scripts/Solaris/Makefile.am: consider ISA info (specific 32/64-bit
	  CPU support) of build target host in package naming as NUT/NUTx
	* Makefile.am: install-as-root: avoid chmod/chown of common OS
	  locations like /run /var/run /etc [#1298]

2025-01-10  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am, configure.ac, NEWS.adoc: implement install-as-root
	  [#1298]

2025-01-09  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, docs/nut.dict, scripts/Windows/.gitignore,
	  scripts/Windows/README.adoc, scripts/Windows/build-mingw-nut.sh:
	  scripts/Windows/build-mingw-nut.sh et al: extend to use
	  "nut_build_${ARCH}" and "nut_install_${ARCH}" dirs by default
	* m4/nut_check_libnetsnmp.m4: fix detection of WITH_SNMP_STATIC for
	  hosts/targets where it is needed [#2673]
	* scripts/Windows/README.adoc: update with instructions how to build
	  cppunit
	* scripts/Windows/README.adoc: update the paragraph about native
	  builds with Windows MSYS2 environment
	* docs/config-prereqs.txt: termux/cppunit: static lib not needed
	  after all

2025-01-08  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/cpputest-client.cpp: use
	  HAVE_PRAGMA_CLANG_DIAGNOSTIC_IGNORED_DEPRECATED_DECLARATIONS for
	  new clang-19
	* Makefile.am: fix install-man activity (wrong dir)
	* docs/Makefile.am: simplify DOCBUILD_FILTER_GITHUB_LINKS and
	  DOCBUILD_CONVERT_GITHUB_LINKS that were not re-used into a single
	  block of code  Helps against docs/Makefile.am: warning: escaping \#
	  comment markers is not portable  Fix inspired by
	  https://github.com/ddclient/ddclient/issues/745
	* include/nutipc.hpp: add default label to an old case

2025-01-07  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/cpputest.cpp, tests/example.cpp, tests/nutclienttest.cpp,
	  tests/nutconf_parser_ut.cpp, tests/nutconf_ut.cpp,
	  tests/nutipc_ut.cpp, tests/nutstream_ut.cpp: tests/*.cpp: use
	  HAVE_PRAGMA_CLANG_DIAGNOSTIC_IGNORED_DEPRECATED_DECLARATIONS for
	  new clang-19
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_CLANG_DIAGNOSTIC_IGNORED_DEPRECATED_DECLARATIONS
	  detection
	* docs/config-prereqs.txt, docs/nut.dict: clarify about cppunit on
	  Termux
	* tests/generic_gpio_liblocal.c: add default label to an old case
	* m4/nut_check_pkgconfig.m4: extend comment
	* NEWS.adoc, clients/upscmd.c, clients/upslog.c, clients/upsmon.c,
	  clients/upsmon.h, clients/upsrw.c, common/common.c,
	  common/parseconf.c, drivers/adelsystem_cbi.c, drivers/al175.c,
	  drivers/apc-hid.c, drivers/bcmxcp.c, drivers/bcmxcp_ser.c,
	  drivers/bcmxcp_usb.c, drivers/blazer_usb.c, drivers/cps-hid.c,
	  drivers/dstate.c, drivers/etapro.c, drivers/everups.c,
	  drivers/generic_modbus.c, drivers/huawei-ups2000.c,
	  drivers/libhid.c, drivers/libshut.c, drivers/libusb1.c,
	  drivers/liebert-esp2.c, drivers/liebert-gxe.c, drivers/liebert.c,
	  drivers/microdowell.c, drivers/microsol-common.c,
	  drivers/netxml-ups.c, drivers/nhs_ser.c, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_innovart31.c,
	  drivers/nutdrv_qx_voltronic-qs-hex.c, drivers/powercom.c,
	  drivers/riello_ser.c, drivers/riello_usb.c, drivers/serial.c,
	  drivers/snmp-ups.c, drivers/socomec_jbus.c, drivers/solis.c,
	  drivers/tripplite.c, drivers/tripplite_usb.c,
	  drivers/tripplitesu.c, drivers/upsdrvctl.c, drivers/usbhid-ups.c,
	  drivers/ydn23.h, tests/getexponenttest-belkin-hid.c,
	  tests/getvaluetest.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_xml_http.c: Reconcile int-ish data types
	  with formatting strings [#823]  New checks in clang-18/19 brought
	  new findings, some of them reasonable :)  * "%x" style formatting
	  requires an (unsigned int) variable * numeric literals and macros
	  are (int) by default * results of math with (uint16_t), done in
	  some cases, are upscaled into (int) by default * char, unsigned or
	  not, seems to be also upscaled into (int)  Overall, had to change
	  formatting strings in some cases, variable types in others (e.g.
	  flags or notification types do not make sense as signed) and added
	  casting in a few places that remained.
	* drivers/huawei-ups2000.c: fix whitespace (trailing, indentation)
	* drivers/adelsystem_cbi.c: fix whitespace (trailing, indentation)
	* common/common.c: add default label to an old case
	* docs/nut.dict: "tuples" are not understood by some distros

2025-01-06  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, clients/upsclient.c: clients/upsclient.c:
	  upscli_splitname(): handle "upsname:port" shortcut attempts
	* clients/upslog.c: bump (C) years
	* clients/upslog.c, docs/man/upslog.txt, NEWS.adoc: handle "*" as UPS
	  name to query for currently served devices
	* clients/upslog.c: default pointer vars to NULL
	* clients/upslog.c, docs/man/upslog.txt, NEWS.adoc: Added `-D` for
	  debugging (and foregrounding by default), like with other NUT
	  daemons
	* clients/upslog.c, docs/man/upslog.txt, NEWS.adoc: Same log file may
	  now safely be used in different logging tuples
	* common/common.c, drivers/adelsystem_cbi.h,
	  drivers/generic_gpio_common.c, drivers/generic_gpio_libgpiod.c,
	  tests/generic_gpio_utest.c: Fix parameter order for xcalloc() in
	  various offences
	* clients/upslog.c, docs/man/upslog.txt, NEWS.adoc: Fixed printing of
	  `%UPSHOST%` when multiple systems are being logged
	* clients/upslog.c, docs/man/upslog.txt, NEWS.adoc: A `%t` for a TAB
	  character can now be used in the formatting string
	* clients/upslog.c, docs/man/upslog.txt, NEWS.adoc: support legacy
	  and tuple logging specs together

2025-01-05  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upslog.c: fix max loops CLI arg processing [#2753]
	* NEWS.adoc, UPGRADING.adoc: report that upslog is now also a service
	  [#1803]
	* tests/NIT/nit.sh: testcase_sandbox_upsc_query_timer(): use upslog
	  for a second opinion [#1803]
	* drivers/cps-hid.c, NEWS.adoc: try to fix frequency scaling
	  dynamically [#2717]
	* clients/Makefile.am: upslog is now an integrated service, use the
	  full library [#1803]
	* scripts/systemd/nut-logger.service.in: revise systemd integration
	  mishaps [#1803]

2025-01-04  William Goodspeed <86338960+goodspeed34@users.noreply.github.com>

	* drivers/liebert-gxe.c: fix bad backup time report  It seems
	  `battery.runtime` should be used for battery backup time instead
	  `.low` one. Also the division was also faulty probably because I
	  copied and pasted the code from previous lines but the manual says
	  it shouldn't be there.  The commit should give correct backup time
	  readings and corrected variable name.

2025-01-03  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upslog.c, docs/man/upslog.txt: clients/upslog.c: support
	  limit of loop count
	* clients/upslog.c: revise code markup
	* tests/NIT/nit.sh: stop_daemons(): first stop upsmon by its own
	  command, then kill it  As of now we `make check-NIT-sandbox-devel`
	  and eventually `kill $UPSMON_PID` but this only stops the parent
	  process, but the forked-off child keeps running.
	* drivers/main.c: main(): fix comment markup
	* NEWS.adoc, drivers/main.c: drivers/main.c: main(): try harder to
	  kill off older driver instances when we run to do_forceshutdown
	  [#2666]
	* drivers/main.c: main(): do try to chdir(dflt_statepath()) when we
	  (do_forceshutdown || dump_data) also, just keep it non-fatal
	  [#2666]
	* drivers/main.c: main(): rearrange code written for WIN32 builds
	  (markup and variable definitions before code)
	* scripts/Windows/README.adoc: remind about prerequisite installation
	* scripts/Windows/README.adoc: fix markup for pthreads installation
	* scripts/Windows/README.adoc: clarify envvar persistence for the
	  build
	* Makefile.am: enable distcheck --with-systemdsystempresetdir
	* docs/Makefile.am, docs/man/Makefile.am: .prep-src-docs: play nice
	  with different MKDIR_P as we "cd" around [#722]

2025-01-02  Jim Klimov <jimklimov@gmail.com>

	* docs/Makefile.am, docs/man/Makefile.am: .prep-src-docs for
	  out-of-tree builds: only rewrite "linkman" references for doc text
	  sources that have them [#722]  Spare asciidoc.conf, docinfo.xml and
	  similar resource files, as well as docs that do not have those tags
	  in the first place.
	* docs/Makefile.am, docs/man/Makefile.am: .prep-src-docs for
	  out-of-tree builds with Sun make: handle plain filenames in
	  $(PREP_SRC) without a prefixed directory  Looking at generated
	  docinfo.xml and linkman-* files respectively.
	* docs/configure.txt: clarify that --with-docs-man-* options do not
	  enable doc building by themselves

2025-01-02  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c, common/nutipc.cpp, NEWS.adoc, docs/nut.dict:
	  support writepid() calls by non-root programs [#1717]
	* scripts/systemd/Makefile.am: wrap long lines in EXTRA_DIST
	* configure.ac, scripts/systemd/.gitignore,
	  scripts/systemd/Makefile.am, scripts/systemd/{nut-driver.target =>
	  nut-driver.target.in}: scripts/systemd/nut-driver.target et al:
	  make it a .in template [#722]
	* scripts/systemd/nut-driver-enumerator-daemon-activator.path.in,
	  scripts/systemd/nut-driver-enumerator-daemon-activator.service.in,
	  scripts/systemd/nut-driver-enumerator-daemon.service.in,
	  scripts/systemd/nut-driver-enumerator.path.in,
	  scripts/systemd/nut-driver-enumerator.service.in,
	  scripts/systemd/nut-driver.target,
	  scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in,
	  scripts/systemd/nut-sleep.service, scripts/systemd/nut.target.in,
	  scripts/systemd/nutshutdown.in: scripts/systemd/nut*.in: bump (C)
	  to 2025
	* UPGRADING.adoc, scripts/systemd/Makefile.am,
	  scripts/systemd/nut-systemd.preset:
	  scripts/systemd/nut-systemd.preset, UPGRADING.adoc: introduce the
	  file, document the units and why they are enabled or disabled by
	  default [#2721]
	* scripts/systemd/nut-sleep.service: typo fix, bump (C)
	* configure.ac, docs/configure.txt, NEWS.adoc, docs/nut.dict:
	  introduce --with-systemdsystempresetdir setting
	* configure.ac: refactor detection of systemd directories (yes/auto
	  mode via pkg-config)
	* clients/upslog.c: help(): clarify that "-m tuple" option(s) can
	  override "-s ups -l file" in effect
	* docs/man/upslog.txt: clarify that "-m tuple" option(s) can override
	  "-s ups -l file" in effect
	* configure.ac, scripts/Solaris/.gitignore,
	  scripts/Solaris/Makefile.am, scripts/Solaris/nut-logger.xml.in,
	  scripts/Solaris/svc-nut-logger.in, scripts/systemd/.gitignore,
	  scripts/systemd/Makefile.am, scripts/systemd/nut-logger.service.in,
	  scripts/systemd/nut.target.in: Introduce service wrapping for
	  upslog client daemon [#1803]
	* common/common.c, common/nutipc.cpp, NEWS.adoc, docs/nut.dict:
	  support writepid() calls by non-root programs [#1717]

2025-01-01  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/Makefile.am: fix typo of recent change

2024-12-31  Jim Klimov <jimklimov+nut@gmail.com>

	* include/nutconf.hpp: fix getStr() for string literals after
	  refactoring for case-sensitivity [#694]
	* common/nutconf.cpp, include/nutconf.hpp: allow to get some entries
	  by case-insensitive names [#2739]

2024-12-30  Jim Klimov <jimklimov@gmail.com>

	* configure.ac, scripts/Solaris/nut-driver-enumerator.xml.in,
	  scripts/Solaris/nut-driver.xml.in,
	  scripts/Solaris/nut-monitor.xml.in,
	  scripts/Solaris/nut-server.xml.in, scripts/Solaris/nut.xml.in,
	  scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: configure.ac,
	  scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in,
	  scripts/Solaris/*.xml.in: when suggesting man pages in service
	  metadata, refer to packaged NUT_MANDIR [#722]
	* common/common.c, scripts/Solaris/nut-driver-enumerator.xml.in,
	  scripts/Solaris/nut-driver.xml.in,
	  scripts/Solaris/nut-monitor.xml.in,
	  scripts/Solaris/nut-server.xml.in, scripts/Solaris/nut.xml.in,
	  .../nut-driver-enumerator-daemon-activator.path.in,
	  .../nut-driver-enumerator-daemon-activator.service.in,
	  scripts/systemd/nut-driver-enumerator-daemon.service.in,
	  scripts/systemd/nut-driver-enumerator.path.in,
	  scripts/systemd/nut-driver-enumerator.service.in,
	  scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in, scripts/systemd/nut.target,
	  scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: common/common.c,
	  scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in,
	  scripts/systemd/nut*.in, scripts/Solaris/*.xml.in: when suggesting
	  man pages for further reading, refer to correct (configurable)
	  section identifier [#722]
	* autogen.sh: fix typo in message
	* docs/Makefile.am, docs/man/Makefile.am: */Makefile.am: Use
	  *.txt-prepped files not as symlinks but as sources to provide
	  corrected man page sections where needed
	* configure.ac: fix fallback for NUT_WEBSITE_BASE [#722]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: complete
	  smf_setDocLink() for actual SMF command syntax [#722]
	* scripts/Solaris/precheck.py.in: handle new string semantics for
	  Python 3
	* scripts/Solaris/pkginfo.in: refer to NUT_WEBSITE_BASE as vendor URL
	  [#722]
	* UPGRADING.adoc, docs/nut.dict, scripts/Solaris/Makefile.am:
	  scripts/Solaris/Makefile.am: consider ISA info (specific 32/64-bit
	  CPU support) of build target host in package naming
	* scripts/Solaris/precheck.py.in: consider ISA info (specific
	  32/64-bit CPU support) of installation host vs. build target host
	* Makefile.am, UPGRADING.adoc, scripts/Solaris/Makefile.am:
	  */Makefile.am: name HPUX and Solaris package files with a dash
	  before the SEMVER part
	* scripts/Solaris/nut-driver-enumerator.xml.in: fix envvar passing to
	  NDE script launch
	* scripts/Solaris/nut-driver-enumerator.xml.in: missed one set of
	  documentation links [#722]
	* INSTALL.nut.adoc, Jenkinsfile-dynamatrix, NEWS.adoc, README.adoc,
	  UPGRADING.adoc, ci_build.sh, clients/nutclient.cpp,
	  docs/asciidoc-vars.conf, docs/config-prereqs.txt,
	  drivers/apc-mib.c, drivers/bcmxcp_usb.c, drivers/blazer_ser.c,
	  drivers/blazer_usb.c, drivers/delta_ups-hid.c, drivers/dstate.c,
	  drivers/hidparser.c, drivers/nutdrv_qx_voltronic.c,
	  scripts/installer/common/shutdown, tests/getvaluetest.c,
	  tests/nutlogtest.c, tools/nut-dumpdiff.sh,
	  tools/nut-scanner/nutscan-ip.c: Standardize wording of "vs." over
	  "vs" (comments, messages, docs) to be consistent

2024-12-30  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, UPGRADING.adoc, configure.ac, docs/configure.txt,
	  docs/man/.gitignore, docs/man/Makefile.am, docs/nut.dict:
	  configure.ac, docs/man/Makefile.am, et al: allow configuring man
	  page section names  Certain distributions have to patch built NUT
	  artifacts for their packaging with their man page sectioning
	  standards. Make life easier, be friendlier out of the box :)
	* include/nutconf.hpp: add support for STATEPATH in ups.conf [#694]
	* scripts/augeas/nutupsconf.aug.tpl: add support for STATEPATH in
	  ups.conf [#694]
	* configure.ac, scripts/systemd/.gitignore,
	  scripts/systemd/Makefile.am, scripts/systemd/{nut.target =>
	  nut.target.in}: scripts/systemd/nut.target et al: make it a .in
	  template [#722]

2024-12-29  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/augeas/nutupsconf.aug.tpl: USB drivers should now accept a
	  `LIBUSB_DEBUG=INTEGER` setting in `ups.conf` [#2616]
	* NEWS.adoc, UPGRADING.adoc, conf/ups.conf.sample,
	  conf/upsd.conf.sample, docs/man/ups.conf.txt,
	  docs/man/upsd.conf.txt, server/conf.c: server/conf.c and docs:
	  allow setting STATEPATH via ups.conf [#694]
	* NEWS.adoc, conf/ups.conf.sample, docs/man/ups.conf.txt,
	  drivers/main.c: drivers/main.c and docs: allow setting STATEPATH
	  via ups.conf [#694]
	* docs/man/upsd.conf.txt, conf/upsd.conf.sample: clarify STATEPATH
	  entanglement of upsd and drivers, and envvar override [#694]

2024-12-28  Yevgeniy Kuksenko <2882631+ykuksenko@users.noreply.github.com>

	* drivers/Makefile.am, drivers/ecoflow-hid.c, drivers/ecoflow-hid.h,
	  drivers/usbhid-ups.c, scripts/upower/95-upower-hid.hwdb: EcoFlow
	  River 3+ and Delta 3+ support  Basic status works (charging,
	  discharging, online, onbattery, ...). Charge level works. Discharge
	  level from app shows correctly. Any sort of control does not seem
	  to work for load or beeper/light. See code comments for details.

2024-12-25  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/wininit.c: refer to local man (ifdef WITH_DOCS) and
	  website page for nut.exe wrapper [#722]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: smf_setDocLink():
	  complete the proposed SMF implementation [#722]

2024-12-24  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: suggest_doc_links(): do not preallocate buf2,
	  ensure use of only basename of a program [#722]
	* drivers/upsdrvctl.c: refer to local man (ifdef WITH_DOCS) and
	  website page for this tool [#722]
	* scripts/upsdrvsvcctl/upsdrvsvcctl.in: refer to local man and
	  website pages for this tool [#722]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: refer to local
	  man and website pages for this tool [#722]
	* clients/upsc.c, clients/upscmd.c, clients/upsrw.c,
	  clients/upslog.c, clients/upsmon.c, clients/upssched.c: refer to
	  local man (ifdef WITH_DOCS) and website page for these tools [#722]
	* tools/nutconf/nutconf-cli.cpp: refer to local man (ifdef WITH_DOCS)
	  and website page for the nutconf tool [#722]
	* tools/nut-scanner/nut-scanner.c, tools/nut-scanner/Makefile.am:
	  refer to local man (ifdef WITH_DOCS) and website page for this tool
	  [#722]

2024-12-23  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c: main(): avoid notification at exit after just
	  showing help
	* drivers/main.c: move WIN32 var declarations up in main()
	* server/upsd.c: refer to local man (ifdef WITH_DOCS) and website
	  page for the data server [#722]
	* server/sockdebug.c, server/pipedebug.c: refer to local man (ifdef
	  WITH_DOCS) and website page for these tools [#722]  Reminder: both
	  sources are built as `sockdebug` for different platforms and share
	  the man page.
	* NEWS.adoc, common/common.c, drivers/main.c, include/common.h:
	  common/common.c, include/common.h, drivers/main.c: introduce
	  suggest_doc_links() [#722]

2024-12-22  hajar97 <ehajiyev@gmail.com>

	* data/driver.list.in: Update driver.list.in  Added report for
	  Greencell PowerProof 2000

2024-12-22  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/blazer_ser.c, drivers/blazer_usb.c, drivers/main.c,
	  drivers/nutdrv_qx.c, drivers/usbhid-ups.c: drivers/main.c: refer to
	  local man (ifdef WITH_DOCS) and website page for the driver [#722]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: introduce
	  *_setDocLink() to refer to specific driver man pages, provide
	  systemd implementation [#722]

2024-12-21  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, configure.ac,
	  .../nut-driver-enumerator-daemon-activator.path.in,
	  ...t-driver-enumerator-daemon-activator.service.in,
	  .../nut-driver-enumerator-daemon.service.in,
	  scripts/systemd/nut-driver-enumerator.path.in,
	  scripts/systemd/nut-driver-enumerator.service.in,
	  scripts/systemd/nut-driver.target,
	  scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in, scripts/systemd/nut.target:
	  scripts/systemd/nut* units: add documentation links [#722]
	* scripts/Solaris/nut-driver-enumerator.xml.in,
	  scripts/Solaris/nut-driver.xml.in,
	  scripts/Solaris/nut-monitor.xml.in,
	  scripts/Solaris/nut-server.xml.in: scripts/Solaris/*.xml.in: revise
	  heading comments and documentation links [#722]
	* configure.ac: derive NUT_WEBSITE_BASE from PACKAGE_URL [#722]

2024-12-19  RikyPlaza <158032745+RikyPlaza@users.noreply.github.com>

	* scripts/Windows/README.adoc: corrected instructions of pthread
	  installation

2024-12-19  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/nut_check_libmodbus.m4: do not detect other libmodbus features
	  if header was not found [#2289]  ...in requested location, e.g.
	  wrong path provided by the `--with-modbus-includes=-I.../include`
	  parameter without the `/modbus` sub-directory.
	* m4/nut_check_libavahi.m4, m4/nut_check_libfreeipmi.m4,
	  m4/nut_check_libgd.m4, m4/nut_check_libgpiod.m4,
	  m4/nut_check_libmodbus.m4, m4/nut_check_libneon.m4,
	  m4/nut_check_libnetsnmp.m4, m4/nut_check_libnss.m4,
	  m4/nut_check_libopenssl.m4, m4/nut_check_libpowerman.m4,
	  m4/nut_check_libregex.m4, m4/nut_check_libsystemd.m4,
	  m4/nut_check_libusb.m4: m4/nut_check_lib*.m4: use
	  AC_REQUIRE([NUT_CHECK_PKGCONFIG]) etc, not plain macro calls

2024-12-19  Bill Elliot <bill@wreassoc.com>

	* drivers/powervar-cu.c, drivers/powervar-cx.h: Move toward working
	  USB driver -- BROKENgit diff

2024-12-18  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/cps-hid.c: cps_fix_report_desc(): complete the original
	  fix-up for input_logmin/input_logmax vs. high voltage transfer
	  [#1245, #2718]
	* docs/nut.dict, scripts/Windows/README.adoc:
	  scripts/Windows/README.adoc: pthreads: comment on issues with
	  "timespec" [#2724]
	* scripts/Windows/README.adoc: pthreads: built directly by `make`,
	  should not use $BUILD_FLAG
	* scripts/Windows/README.adoc: add a note about not-running builds as
	  root
	* scripts/Windows/README.adoc: update markup at start of doc

2024-12-17  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/mge-hid.c: check that KSTAR is the maker of KSTAR_VENDORID
	  hits [#2661]
	* drivers/cps-hid.c: cps_fix_report_desc(): take the higher ground
	  [#2718]
	* drivers/cps-hid.c: cps_fix_report_desc(): simplify sizeMax now that
	  original error was caught [#2718]
	* drivers/hidparser.c, drivers/cps-hid.c: add comments about presumed
	  LogMin/LogMax error origins [#1024, #1512, #2718]

2024-12-16  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/mge-hid.c, data/driver.list.in, docs/nut.dict, NEWS.adoc,
	  scripts/upower/95-upower-hid.hwdb: added support for 0x09d6:0x0001
	  (KSTAR) UPSes using MGE HID [#2661]
	* drivers/cps-hid.c: cps_fix_report_desc(): fix powers of 2 maths
	  [#2718]
	* drivers/cps-hid.c: cps_fix_report_desc(): update debug-logging
	  [#2718]
	* docs/man/usbhid-ups.txt: warn that (some?) CPS models can not use
	  ondelay [#625]  ...according to support, per
	  https://github.com/networkupstools/nut/issues/625#issuecomment-1790213635
	* NEWS.adoc, UPGRADING.adoc, docs/man/usbhid-ups.txt,
	  drivers/cps-hid.c, drivers/usbhid-ups.c, drivers/usbhid-ups.h:
	  drivers/usbhid-ups.{c,h}, docs/man/usbhid-ups.txt, NEWS.adoc,
	  UPGRADING.adoc: introduce DEFAULT_ONDELAY_CPS and
	  DEFAULT_OFFDELAY_CPS on CPS devices [#1394, #432]
	* NEWS.adoc, UPGRADING.adoc, docs/man/usbhid-ups.txt,
	  drivers/usbhid-ups.c, drivers/usbhid-ups.h:
	  drivers/usbhid-ups.{c,h}, docs/man/usbhid-ups.txt, NEWS.adoc,
	  UPGRADING.adoc: introduce DEFAULT_POLLFREQ_CPS and suggest pollonly
	  on CPS devices [#1689]
	* drivers/usbhid-ups.c: upsdrv_initups(): update comments about
	  logical progression through init
	* UPGRADING.adoc: typo fix

2024-12-13  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/cps-hid.c, NEWS.adoc: cps_fix_report_desc(): address
	  mismatched LogMax for input/output voltages [#1512]  Note: not
	  bumping version, as it was done in another commit of same PR #2718
	* drivers/cps-hid.c, NEWS.adoc: cps_fix_report_desc(): do actually
	  "set Input Voltage" for a fix [#1245]
	* drivers/hidparser.c, drivers/hidtypes.h, NEWS.adoc: track the fact
	  of assumed_LogMax [#1512]
	* drivers/cps-hid.c: cps_fix_report_desc(): debug-log if we skipped
	  work, to be clear in troubleshooting
	* drivers/cps-hid.c: cps_fix_report_desc(): comment HEX variants of
	  ReportIDs
	* NEWS.adoc, drivers/cps-hid.c: drivers/cps-hid.c:
	  cps_fix_report_desc(): line-wrap big comments and debug prints
	* NEWS.adoc: regroup "USB-capable drivers generally" entries

2024-12-12  RikyPlaza <158032745+RikyPlaza@users.noreply.github.com>

	* drivers/phoenixcontact_modbus.c: Updated author
	* drivers/phoenixcontact_modbus.c: corrected placeholder of fatalx
	  log
	* drivers/phoenixcontact_modbus.c: corrected placeholder of fatalx
	  log
	* drivers/phoenixcontact_modbus.c: corrected placeholder of fatalx
	  log
	* drivers/phoenixcontact_modbus.c: corrected placeholder of fatalx
	  log

2024-12-12  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/usbhid-ups.c, NEWS.adoc: apply disable_fix_report_desc,
	  interruptsize and interruptonly before comm_driver->open_dev()
	  [#1512, #1575]
	* docs/nut-names.txt: update markup and a bit of wording
	* NEWS.adoc: highlight recent fixes to .circleci/config.yml
	* .circleci/config.yml: fetch git tags to help SEMVER look right
	  (optionally) [#1949]
	* data/driver.list.in: add Ippon Innova RT 3/1 models [#2712]
	* NEWS.adoc: update for phoenixcontact_modbus PR list [#2716]
	* drivers/phoenixcontact_modbus.c: fix "Uknown" typo [#2716]
	* drivers/phoenixcontact_modbus.c: fix conversion/printing of certain
	  data types [#2716]
	* drivers/phoenixcontact_modbus.c: fix trailing whitespace and
	  indentations [#2716]
	* drivers/phoenixcontact_modbus.c: constrain DRIVER_VERSION format,
	  add recent author [#2716]

2024-12-11  RikyPlaza <158032745+RikyPlaza@users.noreply.github.com>

	* drivers/phoenixcontact_modbus.c: Removed break after fatalx func.
	* drivers/phoenixcontact_modbus.c: corrected placeholder of fatalx
	  log
	* drivers/phoenixcontact_modbus.c: Corrected fatalx logs.
	* drivers/phoenixcontact_modbus.c: inserted comment for new method
	  and updated version.
	* drivers/phoenixcontact_modbus.c: Corrected alarms1 register reading
	  for QUINT4 UPS.
	* drivers/phoenixcontact_modbus.c: Added management for different
	  QUINT and QUINT4 UPS models.
	* drivers/phoenixcontact_modbus.c: Corrected register concatenation.
	* drivers/phoenixcontact_modbus.c: Added part number variable in exit
	  message when it's not recognized.
	* drivers/phoenixcontact_modbus.c: First implementation of the new
	  logic to establish UPS model.

2024-12-10  Viktor Drobot <linux776@gmail.com>

	* drivers/nutdrv_qx_innovart31.c: We can use full Blazer claiming and
	  initialization routines now
	* drivers/nutdrv_qx_innovart31.c: Giving up on reading firmware and
	  serial number data from UPS
	* drivers/nutdrv_qx_innovart31.c: Firmware reading leads to the
	  driver stale state
	* drivers/nutdrv_qx_innovart31.c: Checked remaining classic Qx
	  commands (beeper toggle removed as not recognized by hardware).
	  Added firmware version and serial number of UPS. Reorganized
	  readings to minimize data between host and UPS according to the
	  developer docs. Added known input, output and bypass readings as
	  comments for future development (3/3 versions).

2024-12-10  Jim Klimov <jimklimov+nut@gmail.com>

	* .circleci/config.yml: uncomment HOMEBREW_NO_AUTO_UPDATE=1 to cut
	  down pre-build CI overhead for faster turnaround (1hr timeout)
	  [#1579]  Currently Homebrew auto-update done before we install
	  anything takes 45-50 minutes, so we often don't have time to
	  complete even configuration for our actual CI tests (subject to
	  CircleCI server farm congestion, I guess). This also bites a big
	  chunk from the monthly opensource credits available for the builds.
	  Note the baseline image currently uses a slightly older Python as
	  well. But the speedup frmo 45+ to 3.5min is commendable!

2024-12-09  Viktor Drobot <linux776@gmail.com>

	* drivers/nutdrv_qx_innovart31.c: Use battery runtime and charge data
	  from UPS

2024-12-09  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: add MGE "designator" [#2713]
	* drivers/nhs_ser.c: pass buffer sizes as size_t not int [#2692]
	* drivers/nhs_ser.c: interpret_pkt_data(): cache ah, pf, va, numbat,
	  vbat and min_input_power in static vars [#2692]
	* docs/nut-names.txt: stress that `DOMAIN.CONTEXT.SPEC` suffixes are
	  not complete names
	* drivers/nhs_ser.c: upsdrv_updateinfo(): refactor away
	  interpret_pkt_hwinfo() and interpret_pkt_data() logic, separated by
	  domain [#2692]  Also rename some data points that do not conform to
	  NUT standards, or drop if redundant.
	* drivers/nhs_ser.c: upsdrv_updateinfo(): revise byte-reading loop
	  vs. packet data interpretation; un-indent more code [#2692]  Add
	  range-check to not overflow the datapacket[] buffer.

2024-12-09  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* data/cmdvartab: remove typo
	* data/cmdvartab: typo for rerun CI

2024-12-08  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nhs_ser.c: size porta[] as PATH_MAX [#2692]
	* drivers/nhs_ser.c: use strncpy() to init porta[] [#2692]
	* drivers/nhs_ser.c: upsdrv_updateinfo(): refactor with
	  reconnect_ups_if_needed() [#2692]
	* drivers/nhs_ser.c: upsdrv_updateinfo(): revise reconnections with
	  data-stale related messages and status changes [#2692]
	* drivers/nhs_ser.c: upsdrv_updateinfo(): simplify reconnect-check,
	  un-indent main code a bit [#2692]  Fixed the retries from being an
	  infinite loop along the way...
	* drivers/nhs_ser.c: reshuffle HW init code between upsdrv_initups()
	  and upsdrv_initups() [#2692]
	* docs/new-drivers.txt: clarify relation of dstate_addcmd() and
	  upsh.instcmd and upsdrv_initinfo()
	* drivers/nutdrv_qx.c: bump DRIVER_VERSION due to addition of
	  innovart31 subdriver [#2712]
	* docs/nutdrv_qx-subdrivers.txt, drivers/nutdrv_qx.c, docs/nut.dict:
	  clarify that "subdriver" is for Serial-over-USB dialect, and
	  "protocol" is for Qx dialect [#2712]
	* NEWS.adoc: introduced `innovart31` in nutdrv_qx [#2712]

2024-12-08  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* data/cmdvartab, docs/nut-names.txt: some more vars added
	* docs/nut-names.txt: add device.usb.version to nut-names.txt
	* data/cmdvartab: add device.x descrptions + more to cmdvartab
	* data/cmdvartab, docs/nut-names.txt: battery.charger.type
	  description changed
	* data/cmdvartab, docs/nut-names.txt: spme missing vars added

2024-12-06  Viktor Drobot <linux776@gmail.com>

	* docs/nut.dict: Fix aspell complaining about InnovaRT
	* docs/man/nutdrv_qx.txt, docs/nutdrv_qx-subdrivers.txt,
	  drivers/Makefile.am, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_blazer-common.c,
	  drivers/nutdrv_qx_blazer-common.h, drivers/nutdrv_qx_innovart31.c,
	  drivers/nutdrv_qx_innovart31.h: First attempt to add support for
	  Innova RT 3/1

2024-12-06  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsmon.c: upsmon_cleanup(): free(configfile) in the end
	* clients/upsmon.c: ups_free(): release ups->status_tokens if needed
	  [#415, #2709]
	* tests/NIT/nit.sh: refer to scripts/valgrind for debugging in a
	  sandbox
	* tests/NIT/nit.sh: generatecfg_upsmon_trivial() allow to toggle
	  NOTIFYFLAG targets
	* common/common.c: Revert "common/common.c: only close_sdbus_once()
	  if we are the same PID that originally opened it [#1070]"  This
	  reverts commit a6496a6af1c1b90ca4b836bd0f0cf9c07d6ade3b: close from
	  a child process does not seem to impact parent, but a non-close is
	  a memory leak when such child exits.
	* clients/upsmon.c: addups(): start with definitive states of all
	  fields  Kudos to `make check-NI-sandbox-devel` and
	  LD_LIBRARY_PATH=`pwd`/clients/.libs valgrind --leak-check=full
	  --show-leak-kinds=all --track-origins=yes ./clients/.libs/upsmon -F
	* clients/upsmon.c: redefine_ups(): comment a concern about "pv"
	  changes

2024-12-05  RikyPlaza <158032745+RikyPlaza@users.noreply.github.com>

	* drivers/phoenixcontact_modbus.c: Updated driver version with beta
	  one
	* drivers/phoenixcontact_modbus.c: Added NONE value for models
	  enumeration and managed in switch statemets

2024-12-05  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsmon.c: parse_status(): fix releasing of
	  ups->status_tokens [#415, #2709]
	* clients/upsmon.c: notify(): clarify (when debug-logging)
	  upsmon-centric messages if upsname==NULL [#415, #2709]
	* clients/upsmon.c: change time maths in delay between main loop
	  cycles from time_t to more precise timeval [#1070]
	* clients/upsmon.c: report start/end/duration of the "sleepval" delay
	  between main loop cycles [#1070]
	* clients/upsmon.c: break the main sub-loop where we check
	  sleep_inhibitor_status also if exit_flag gets raised (e.g. Ctrl+C
	  during the wait) [#1070]
	* common/common.c: only close_sdbus_once() if we are the same PID
	  that originally opened it [#1070]
	* common/common.c: debug-log isPreparingForSleep() outcomes (when
	  extremely high verbosity level is on) [#1070]
	* common/common.c: refactor
	  upsnotify_suggest_NUT_QUIET_INIT_UPSNOTIFY_once() [#1590, #2136]
	* tests/NIT/nit.sh: generatecfg_upsmon_trivial(): refer to
	  NOTIFYCMD=...notifyme-debug where possible [#2709]
	* tests/NIT/nit.sh: testcase_sandbox_upsc_query_timer(): add a retry
	  with longer delay [#2709]
	* tests/NIT/Makefile.am: allow to pass custom NUT_PORT and NIT_CASE
	  [#2709]  ...default the latter to `testgroup_sandbox_upsmon_master`
	  now (includes the earlier
	  `testcase_sandbox_start_drivers_after_upsd`)
	* scripts/misc/notifyme-debug: honour TEMPDIR or TMPDIR set by
	  caller; fall back to /dev/shm or /tmp otherwise [#2709]
	* conf/upsmon.conf.sample.in: suggest NOTIFYFLAG for OTHER/NOTOTHER
	  too [#415]

2024-12-04  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/cps-hid.c, NEWS.adoc: add ups.temperature [#2711]  Kudos to
	  Cyber Energy (affiliate of CPS) per
	  https://alioth-lists.debian.net/pipermail/nut-upsdev/2024-December/008069.html

2024-12-03  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsmon.h, conf/upsmon.conf.sample.in,
	  docs/man/upsmon.conf.txt: clients/upsmon.h, docs: default "ALARM"
	  message format to two "%s" placeholders [#415]
	* clients/upsmon.c: ups_is_alarm(): track if ups.alarm value changed,
	  re-notify [#415]
	* clients/upsmon.c: allow to get_var(ups, "alarm"...) and use it in
	  ups_is_alarm() notification [#415]
	* docs/new-drivers.txt: in "Status data", stress the life-cycle of
	  `ups.status` flag tokens [#2708]
	* NEWS.adoc, clients/upsmon.c, clients/upsmon.h, common/nutconf.cpp,
	  common/nutwriter.cpp, conf/upsmon.conf.sample.in,
	  docs/man/nutconf.txt, docs/man/upsmon.conf.txt,
	  docs/man/upsmon.txt, docs/nut.dict, include/nutconf.hpp,
	  scripts/augeas/nutupsmonconf.aug.in, tools/nutconf/nutconf-cli.cpp:
	  upsmon code, docs, conf: introduce "OTHER"/"NOTOTHER" notifications
	  for unknown tokens in `ups.status` [#415]
	* NEWS.adoc, clients/upsmon.c, clients/upsmon.h:
	  clients/upsmon.{c,h}, NEWS.adoc: revise do_notify() to allow
	  passing an extra arg into formatting strings with two "%s"
	  placeholders [#415]
	* clients/upsmon.c, NEWS.adoc: optimize parse_status() by not
	  checking further strings if we had a match; report unexpected
	  tokens [#415, #2708]
	* drivers/usbhid-ups.c, drivers/netxml-ups.c, NEWS.adoc,
	  UPGRADING.adoc: handle STATUS_BIT(NOBATTERY) to also
	  status_set("RB") [#415]
	* clients/upsmon.c, clients/upsmon.h, conf/upsmon.conf.sample.in,
	  docs/man/upsmon.conf.txt, docs/man/upsmon.txt:
	  clients/upsmon.{c,h}, docs, conf: apply suggestions from issue #415
	  discussion adding to PR #2658 changes  Previously merged-in the
	  couple of commits from issue
	  https://github.com/networkupstools/nut/issues/415 proposal at
	  https://github.com/networkupstools/nut/tree/upsmon_alarm for
	  posterity, now cherry-picking some changes and further discussion
	  ideas from mailing list thread at
	  http://lists.alioth.debian.org/pipermail/nut-upsuser/2017-April/010591.html
	  Closes: #415

2024-12-03  Bill Elliot <bill@wreassoc.com>

	* drivers/powervar-cu.c: Change comment above VENDORID so USB is
	  identified correctly as 'Powervar'.
	* drivers/Makefile.am, drivers/powervar-c.h, drivers/powervar-cs.c,
	  drivers/powervar-cu.c, drivers/{powervar-c.c => powervar-cx.h}: USB
	  building and communicating. Trying common variable and function
	  file for serial and usb drivers.

2024-12-02  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/mge-hid.c: simplify debug printouts with NUT_STRARG()
	  [#2684, #1737]
	* NEWS.adoc, docs/nut.dict, drivers/upsdrvquery.c:
	  drivers/upsdrvquery.c, NEWS.adoc: upsdrvquery_read_timeout(): fix
	  private use of timeval={-1,-1} as select(..., NULL) for indefinite
	  wait [#1922, #2392, #2686, #2670]
	* clients/upscmd.c, clients/upsrw.c: clients/ups{rw,cmd}.c: enable
	  use of NUT_DEBUG_LEVEL envvar
	* clients/upscmd.c, clients/upsrw.c: clients/ups{rw,cmd}.c: when
	  reporting "OK" without "TRACKING", issue a debug message about its
	  limited usefullness
	* data/cmdvartab: document CMDDESC shutdown.default [#2686]
	* drivers/dstate.c: revise logging of "Got INSTCMD, but driver lacks
	  a handler" [#2686]

2024-12-02  Greg Troxel <gdt@lexort.com>

	* tests/nutipc_ut.cpp: tests: Do not expect signals to be messages
	  POSIX does not require 1:1 delivery per kill() call.  Adjust the
	  test to not require behavior that 1) POSIX does not require and 2)
	  is only probabalistically observed to happen, even if "most of the
	  time".
	* include/nutipc.hpp: core ipc: Handle select returning EINTR

2024-12-02  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: typo space removed

2024-12-01  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* drivers/mge-hid.c: comment regarding ChargerType

2024-12-01  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/mge-hid.c: restore white-space (TAB indentation and between
	  decl type and varname)
	* drivers/mge-hid.c: restore white-space (TAB indentation and between
	  decl type and varname) [#2684]
	* docs/snmp-subdrivers.txt: update with snmp_info_default() macro
	  example [#2285]
	* docs/new-drivers.txt: quote driver names; note modbus unrelated
	  drivers so far [#50, #1765]
	* NEWS.adoc: moved phoenixcontact_modbus update to other drivers
	  [#2689]
	* drivers/phoenixcontact_modbus.c: fix use of pragmas for default
	  switch cases [#2689]
	* drivers/phoenixcontact_modbus.c: no break after fatalx() [#2689]

2024-12-01  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: add debug message for bypass/eco outside limits
	* drivers/mge-hid.c: Fix for bypass/eco when no values or outside of
	  limits

2024-11-30  Jim Klimov <jimklimov@gmail.com>

	* drivers/nhs_ser.c: populate missed explicit method parameter
	  [#2692]

2024-11-30  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: add debug log when enter to eco/bypass modes
	* drivers/mge-hid.c: fix eco vars in debug meassage
	* drivers/mge-hid.c: Fix for bypass limit In case we dont have Bypass
	  transfer limit variables but still have ability to enter Bypass
	  mode

2024-11-29  RikyPlaza <158032745+RikyPlaza@users.noreply.github.com>

	* drivers/phoenixcontact_modbus.c: Handled default case with error
	* drivers/phoenixcontact_modbus.c: Re-implemented default cases.
	* drivers/phoenixcontact_modbus.c: Extended comment to "default"
	  label example

2024-11-29  Jim Klimov <jimklimov@gmail.com>

	* NEWS.adoc, configure.ac, docs/man/Makefile.am,
	  docs/man/nhs_ser.txt, docs/nut.dict, drivers/Makefile.am:
	  configure.ac, drivers/Makefile.am, docs/man/Makefile.am,
	  docs/man/nhs_ser.txt, NEWS.adoc: temporarily constrain nhs_ser to
	  Linux-only NUT builds [#2692]

2024-11-29  Jim Klimov <jimklimov+nut@gmail.com>

	* data/driver.list.in: add usbhid-ups supported Ippon models [#2702]
	* drivers/nhs_ser.c: hide upsdrv_updateinfo() debug log of processing
	  at verbosity 3-4_ [#2692]
	* drivers/nhs_ser.c: keep debug log of main milestones and errors at
	  verbosity 1, add __func__ [#2692]
	* drivers/nhs_ser.c: quieter logging in print_pkt_hwinfo() and
	  print_pkt_data() [#2692]
	* drivers/nhs_ser.c: log method starting/ending quieter and with use
	  of __func__ [#2692]
	* drivers/nhs_ser.c: upsdrv_updateinfo(): rename "nhs.*" datapoints
	  into "experimental.nhs.*" namespace [#2692]
	* drivers/nhs_ser.c: upsdrv_updateinfo(): FIXME commented - same
	  criteria used for 3 alarms [#2692]
	* drivers/nhs_ser.c: memory robustness: strcpy=>strncpy [#2692]
	* drivers/nhs_ser.c: memory robustness: sprintf=>snprintf [#2692]
	* drivers/nhs_ser.c: fix code markup into NUT style [#2692]  * indent
	  with TAB characters, * separate declaration type and varname with
	  TAB(s), * use space after comma
	* drivers/nhs_ser.c: fix "for (int i...)" to use of pre-declared
	  variables [#2692]
	* drivers/nhs_ser.c: fix DEFAULLTPERC => DEFAULTPERC typo in the
	  macro name [#2692]
	* drivers/nhs_ser.c: fix comment markup, wrap long lines, inject TABs
	  in structs [#2692]  Also drop comments from standalone program
	  legacy now that this driver is an integrated part of NUT codebase.
	* drivers/nhs_ser.c: drivers/nhs-nut.c: fix compiler complaints -
	  sprintf() from and to same variable [#2692]  nhs_ser.c: In function
	  ‘upsdrv_updateinfo’: nhs_ser.c:1858:37: error: ‘sprintf’ argument 3
	  overlaps destination object ‘alarm’ [-Werror=restrict] 1858 |
	  sprintf(alarm,"%s %s",alarm,"|UPS IN BATTERY MODE|"); |
	  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	* drivers/nhs_ser.c: upsdrv_updateinfo(): refactor debug of bad mains
	  [#2692]

2024-11-29  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: change voltage limit setting same as frequency
	  in eco function also
	* drivers/mge-hid.c: change voltage limit setting same as frequency
	* drivers/mge-hid.c: move NUT_UNUSED_VARIABLE(value); back down
	* drivers/mge-hid.c: change the state for debug when no eco transfer
	  limits avalible to use defaults
	* drivers/mge-hid.c: change vars in
	  eaton_input_eco_mode_check_range()
	* drivers/mge-hid.c: change vars in eaton_input_bypass_check_range()
	* data/cmdvartab, docs/nut-names.txt: much clear description for
	  input.transfer.bypass.forced

2024-11-28  fenugrec <fenugrec@users.sourceforge.net>

	* drivers/libusb1.c: fix wrong return value of
	  nut_libusb_get_interrupt()  cf github #2401.  When global var
	  'interrupt_size' is not set, a transfer size of SMALLBUF (512) is
	  requested when calling libusb_interrupt_transfer(). Our function
	  nut_libusb_get_interrupt() should return the actual transferred
	  size. Otherwise, the caller will attempt to parse any uninitialized
	  data in the buffer after the response.  In libusb0.c this was done
	  correctly by using the return value of usb_interrupt_read(). With
	  libusb1, the transferred size is written to tmpbufsize, and should
	  therefore be used as the return val.

2024-11-28  RikyPlaza <158032745+RikyPlaza@users.noreply.github.com>

	* drivers/phoenixcontact_modbus.c: Added pragma statemets as per tip
	  to avoid compiler complains on "default" label in switch
	  statements.

2024-11-28  Lucas Bocchi <lucas.bocchii@gmail.com>

	* drivers/nhs_ser.c: Another miscalculation in battery time duration.
	* drivers/nhs_ser.c: Change on line 1936 - Battery voltage hardcoded
	  in 12.0 v

2024-11-28  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/developers.txt, docs/nut.dict: docs/developers.txt: clarify
	  pragmas in switch/case/default vs. enum [#2689, #823]
	* NEWS.adoc, drivers/dstate.c: drivers/dstate.c: fflush(stdout) after
	  dstate_dump() [#2695]
	* drivers/libusb1.c: nut_libusb_open(): fix if-clause typo to report
	  that no devices were accessible (and none others matched) [#2699]
	* NEWS.adoc, drivers/libusb0.c, drivers/libusb1.c:
	  drivers/libusb{0,1}.c, NEWS.adoc: report if some devices WERE
	  accessible but did not match [#2699]

2024-11-28  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: 9PX added to comments
	* drivers/mge-hid.c: add 9PX models also
	* drivers/mge-hid.c: change to small chars
	* drivers/mge-hid.c: added Eaton 9SX

2024-11-27  Lucas Bocchi <lucas.bocchii@gmail.com>

	* drivers/nhs_ser.c: Error on line 1717, on function to reopen serial
	  in case of problem. We have default values but I set with variable
	  porta and baudrate the correct port and speed.

2024-11-27  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nhs_ser.c: drivers/nhs-nut.c: fix compiler complaints -
	  float overflow [#2692]  CodeQL alert:  * Multiplication result
	  converted to larger type High * Multiplication result may overflow
	  'float' before it is converted to 'double'.
	* drivers/nhs_ser.c: drivers/nhs-nut.c: fix compiler complaints -
	  unused methods [#2692]  Hide them away:  nhs_ser.c:939:15: error:
	  unused function 'strtolow' [-Werror,-Wunused-function] static char
	  * strtolow(char* s) { ^ nhs_ser.c:902:12: error: unused function
	  'write_serial' [-Werror,-Wunused-function] static int
	  write_serial(int fd, const char * dados, int size) { ^ 2 errors
	  generated.
	* docs/man/nhs_ser.txt, drivers/nhs_ser.c: introduce option flags for
	  debug_pkt_raw, debug_pkt_data, debug_pkt_hwinfo [#2692]  Also helps
	  avoid dead code and this warning:  nhs_ser.c:467:13: error: unused
	  function 'print_pkt_data' [-Werror,-Wunused-function] static void
	  print_pkt_data(pkt_data data) { ^
	* drivers/nhs_ser.c: drivers/nhs-nut.c: fix compiler complaints -
	  shadowed variables (serial_fd) [#2692]
	* drivers/nhs_ser.c: drivers/nhs-nut.c: update (C) heading [#2692]
	* drivers/nhs_ser.c: drivers/nhs-nut.c: fix compiler complaints -
	  comparing floating-points [#2692]  nhs_ser.c:1873:74: error:
	  comparing floating point with == or != is unsafe
	  [-Werror,-Wfloat-equal] perc = get_vin_perc("vin_low_warn_perc") ==
	  get_vin_perc("vin_low_crit_perc") ?  2 : 1;
	  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
	  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	* drivers/nhs_ser.c: drivers/nhs-nut.c: fix compiler complaints -
	  casting round() to int/long [#2692]  This is an odd one, see
	  https://stackoverflow.com/a/43481925/4715872  nhs_ser.c:1865:74:
	  error: cast from function call of type 'double' to non-matching
	  type 'int' [-Werror,-Wbad-function-cast]
	  dstate_setinfo("ups.realpower","%d",(int)round(vpower));
	  ^~~~~~~~~~~~~  The `lrint()` family of methods should be part of
	  C99 and above, returning a `long` approximation of a `double` or
	  `float` argument. Had to adjust dstate_setinfo() parameters from
	  (unsigned) int to long.
	* drivers/nhs_ser.c: drivers/nhs-nut.c: fix compiler complaints -
	  variable length array [#2692]  nhs_ser.c:897:21: error: variable
	  length array used [-Werror,-Wvla] uint8_t message[size]; ^~~~
	* drivers/nhs_ser.c: drivers/nhs-nut.c: fix compiler complaints -
	  mixing declarations and code [#2692]  nhs_ser.c:904:17: error:
	  mixing declarations and code is incompatible with standards before
	  C99 [-Werror,-Wdeclaration-after-statement] ssize_t bytes_written =
	  write(serial_fd, message,size); ^
	* drivers/nhs_ser.c: drivers/nhs-nut.c: fix compiler complaints -
	  shadowed variables [#2692]  nhs_ser.c:519:32: error: declaration
	  shadows a variable in the global scope [-Werror,-Wshadow] static
	  int openfd(const char * porta, int BAUDRATE) { ^ nhs_ser.c:247:13:
	  note: previous declaration is here static char porta[1024] =
	  DEFAULTPORT; ^  nhs_ser.c:1943:42: error: declaration shadows a
	  local variable [-Werror,-Wshadow] for (int i = 0; i < 5; i++) { ^
	  nhs_ser.c:1657:18: note: previous declaration is here unsigned int
	  i = 0; ^
	* drivers/nhs_ser.c: drivers/nhs-nut.c: fix compiler complaints -
	  static vars/methods and strict parameters [#2692]  * Static
	  internal methods and pre-declarations on top of file:
	  nhs_ser.c:1549:14: error: no previous prototype for function
	  'get_va' [-Werror,-Wmissing-prototypes] unsigned int get_va(int
	  equipment) { ^ nhs_ser.c:1549:1: note: declare 'static' if the
	  function is not intended to be used outside of this translation
	  unit unsigned int get_va(int equipment) { ^ static  * Explicit void
	  args:  nhs_ser.c:1571:20: error: this old-style function definition
	  is not preceded by a prototype [-Werror,-Wstrict-prototypes]
	  unsigned int get_ah() { ^
	* drivers/Makefile.am: Rename "nhs-nut" to "nhs_ser" follow-up
	  [#2692]
	* drivers/nhs_ser.c: update comment about use of "clang --analyze"
	  [#2692]
	* data/driver.list.in: update with devices supported by nhs_ser
	  driver [#2692]  List extracted from current driver code with  grep
	  'strcpy(data.upsdesc' drivers/nhs_ser.c | \ sed 's/^
	  *strcpy(data.upsdesc,"\(.*\)".*$/"NHS Sistemas Eletronicos
	  LTDA"\t"ups"\t"2"\t"\1"\t"Serial port"\t"nhs_ser"/' \ >>
	  data/driver.list.in
	* NEWS.adoc, docs/man/nhs_ser.txt, docs/nut.dict: NEWS.adoc,
	  docs/man/nhs_ser.txt: rephrase naming of devices covered by nhs_ser
	  driver [#2692]
	* NEWS.adoc, docs/man/Makefile.am, docs/man/{nhs-nut.txt =>
	  nhs_ser.txt}, drivers/Makefile.am, drivers/{nhs-nut.c =>
	  nhs_ser.c}: Rename "nhs-nut" to "nhs_ser" [#2692]
	* docs/man/Makefile.am, docs/man/nhs-nut.txt, docs/nut.dict:
	  docs/man/nhs-nut.txt: introduce new driver manpage [#2692]
	* drivers/nhs-nut.c: revise upsdrv_makevartable(): fix help messages
	  [#2692]
	* drivers/nhs-nut.c: revise upsdrv_makevartable(): use snprintf() and
	  fix some more markup [#2692]
	* drivers/nhs-nut.c: revise upsdrv_makevartable() content and markup
	  [#2692]
	* drivers/nhs-nut.c: fix DRIVER_VERSION to double-digits [#2692]
	* NEWS.adoc, docs/nut.dict: NEWS.adoc: introduce nhs-nut (sic) driver
	  [#2692]
	* drivers/nhs-nut.c: fix upsdrv_shutdown() [#2692]
	* drivers/nhs-nut.c: fix trailing whitespace [#2692]
	* drivers/nhs-nut.c: fix compiler complaints [#2692]  nhs-nut.c: In
	  function ‘mount_hwinfo’: nhs-nut.c:786:5: error: missing
	  initializer for field ‘end_marker’ of ‘pkt_hwinfo’
	  [-Werror=missing-field-initializers] 786 |     }; |     ^
	  nhs-nut.c:177:18: note: ‘end_marker’ declared here 177 |
	  unsigned int end_marker; |                  ^~~~~~~~~~
	* drivers/nhs-nut.c: fix compiler complaints [#2692]  Copy-paste
	  typo?  nhs-nut.c: In function ‘mount_datapacket’: nhs-nut.c:693:29:
	  error: operation on ‘pktdata.icarregrms_real’ may be undefined
	  [-Werror=sequence-point] 693 |     pktdata.icarregrms_real =
	  pktdata.icarregrms_real = pktdata.icarregrms * 30; |
	  ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	* drivers/nhs-nut.c: fix compiler complaints [#2692]  nhs-nut.c: In
	  function ‘get_bit_in_position’: nhs-nut.c:357:22: error: comparison
	  of integer expressions of different signedness: ‘int’ and ‘size_t’
	  {aka ‘long unsigned int’} [-Werror=sign-compare] 357 |     if
	  (bit_position >= size * 8) { |                      ^~
	* drivers/nhs-nut.c: fix compiler complaints [#2692]  nhs-nut.c: In
	  function ‘upsdrv_makevartable’: nhs-nut.c:2090:88: error: format
	  ‘%f’ expects argument of type ‘double’, but argument 3 has type
	  ‘int’ [-Werror=format=] 2090 |     sprintf(help,"Voltage In
	  Percentage to calculate warning low level. Default is
	  %0.2f",DEFAULLTPERC); |
	  ~~~~^ |
	  | |
	  double |
	  %0.2d  etc. for other default macros
	* drivers/nhs-nut.c: fix compiler complaints [#2692]  nhs-nut.c: In
	  function ‘upsdrv_updateinfo’: nhs-nut.c:1733:53: error: format not
	  a string literal and no format arguments [-Werror=format-security]
	  1733 |                                         upsdebugx(1,alarm);
	  |                                                     ^~~~~
	* drivers/nhs-nut.c: fix compiler complaints [#2692]
	  nhs-nut.c:797:29: error: iteration 6 invokes undefined behavior
	  [-Werror=aggressive-loop-optimizations] 797 |
	  pkthwinfo.status[i] =
	  get_bit_in_position(&datapacket[14],sizeof(datapacket[14]),i,0); |
	  ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	* drivers/nhs-nut.c: fix compiler complaints [#2692]
	  nhs-nut.c:713:43: error: suggest braces around empty body in an
	  ‘if’ statement [-Werror=empty-body] 713 |             if
	  (pktdata.perc_output > 100); |
	  ^ nhs-nut.c:713:13: error: this ‘if’ clause does not guard...
	  [-Werror=misleading-indentation] 713 |             if
	  (pktdata.perc_output > 100); |             ^~ nhs-nut.c:714:17:
	  note: ...this statement, but the latter is misleadingly indented as
	  if it were guarded by the ‘if’ 714 |
	  pktdata.perc_output = 100; |                 ^~~~~~~
	* drivers/nhs-nut.c: fix compiler complaints [#2692]
	  nhs-nut.c:604:59: error: unused parameter ‘size’
	  [-Werror=unused-parameter] 604 | pkt_data mount_datapacket(unsigned
	  char * datapacket, int size, double tempodecorrido,pkt_hwinfo
	  pkt_upsinfo)  { |
	  ~~~~^~~~ nhs-nut.c:604:72: error: unused parameter ‘tempodecorrido’
	  [-Werror=unused-parameter] 604 | pkt_data mount_datapacket(unsigned
	  char * datapacket, int size, double tempodecorrido,pkt_hwinfo
	  pkt_upsinfo)  { |
	  ~~~~~~~^~~~~~~~~~~~~~
	* drivers/nhs-nut.c: fix compiler complaints [#2692]  nhs-nut.c: In
	  function ‘print_pkt_data’: nhs-nut.c:464:17: error: zero-length
	  gnu_printf format string [-Werror=format-zero-length] 464 |
	  upsdebugx(1,""); |                 ^~
	* drivers/Makefile.am: add nhs-nut to SERIAL_DRIVERLIST [#2692]

2024-11-27  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* data/cmdvartab, docs/nut-names.txt: more clear description for
	  input.transfer.bypass.forced
	* data/cmdvartab: change enable/disable to (enabled or disabled) in
	  cmdvartab

2024-11-26  RikyPlaza <158032745+RikyPlaza@users.noreply.github.com>

	* drivers/phoenixcontact_modbus.c: Removed default case label since
	  clang complains.

2024-11-26  Lucas Bocchi <lucas.bocchii@gmail.com>

	* drivers/nhs-nut.c: Some fixes in 1) Miscalculations of battery
	  voltage and amps 2) Miscalculations in battery capacity 3)
	  Miscalculations in time remaining
	* drivers/nhs-nut.c: Function have some errors and again need to
	  re-commit code.
	* drivers/nhs-nut.c: Some small fixes in get_bit_in_position()
	* drivers/nhs-nut.c: Some minor alterations

2024-11-25  RikyPlaza <158032745+RikyPlaza@users.noreply.github.com>

	* drivers/phoenixcontact_modbus.c: Corrected enum definition.
	* NEWS.adoc: Updated NEWS.adoc
	* drivers/phoenixcontact_modbus.c: Used enum for model type instead
	  of defines
	* drivers/phoenixcontact_modbus.c: Alligned device.model variable
	* drivers/phoenixcontact_modbus.c: Review of variable declaration due
	  to clang build failure

2024-11-25  Lucas Bocchi <lucas.bocchii@gmail.com>

	* drivers/nhs-nut.c: First commit of NHS drivers/nhs-nut.c

2024-11-25  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: fix strcmp

2024-11-24  RikyPlaza <158032745+RikyPlaza@users.noreply.github.com>

	* drivers/phoenixcontact_modbus.c: Avoid to use uint32_t* reading
	  more than one modbus address and corrected alarm trigger (wrong bit
	  used)

2024-11-24  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: change getinfo for better results

2024-11-23  RikyPlaza <158032745+RikyPlaza@users.noreply.github.com>

	* drivers/phoenixcontact_modbus.c: First review of the driver for
	  pull request #2689

2024-11-23  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: set value to unused
	* data/cmdvartab, docs/nut-names.txt: add info to nut-names,cmdvartab
	* drivers/mge-hid.c: cosmetic fix
	* drivers/mge-hid.c: rename ecomode.auto.start to ecomode.start.auto
	* drivers/mge-hid.c: remove unneeded code from function
	* drivers/mge-hid.c: typo fixed
	* drivers/mge-hid.c: finalise the function
	* drivers/mge-hid.c: remove static from vars
	* drivers/mge-hid.c: drop down function for fix
	* drivers/mge-hid.c: fix static
	* drivers/mge-hid.c: fix if
	* drivers/mge-hid.c: more work for function

2024-11-22  RikyPlaza <rikyrod2001@gmail.com>

	* drivers/phoenixcontact_modbus.c: Added management for newer models
	  which have different modbus addresses. Choice is made basing on
	  firmware version.

2024-11-22  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: str fix
	* drivers/mge-hid.c: comments added
	* drivers/mge-hid.c: ecomode.auto.start added trying to automate
	  enter to ECO Mode NOT FINISHED !!
	* drivers/mge-hid.c: ecomode.auto.start added

2024-11-21  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c, drivers/usbhid-ups.h: comments changes
	* drivers/mge-hid.c: more small comments changes
	* docs/nut-names.txt: fix again
	* docs/nut-names.txt: fix nut-names.txt

2024-11-20  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/app/NUT-Monitor: improve portability (especially in
	  testing) by not relying on only shebang
	* scripts/python/app/NUT-Monitor-py2gtk2.in,
	  scripts/python/app/NUT-Monitor-py3qt5.in:
	  scripts/python/app/NUT-Monitor-py3qt5.in and
	  NUT-Monitor-py2gtk2.in: if SCRIPTDIR/../module/PyNUT.py exists,
	  import it preferentially

2024-11-20  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: small comments added
	* drivers/mge-hid.c: small comments change
	* drivers/usbhid-ups.h: small comment added
	* drivers/usbhid-ups.c, drivers/usbhid-ups.h: add ess mode
	* drivers/mge-hid.c: small comments change
	* data/cmdvartab, docs/nut-names.txt, drivers/mge-hid.c: rename
	  input.transfer.forced to input.transfer.bypass.forced

2024-11-19  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* drivers/mge-hid.c: reset ABM path when ABM not enabled

2024-11-19  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c: do_loop_shutdown_commands(): handle
	  "shutdown.default" as upsdrv_shutdown() in main loop too [#2670]
	* drivers/dstate.c, drivers/main.c, drivers/main.h, drivers/skel.c:
	  Revert "drivers/main.{c,h}, drivers/dstate.c: introduce
	  main_instcmd_fallback() so drivers might implement their own
	  "shutdown.default" at will [#2670]"  This reverts commit
	  25250b02aea4e31ba20a17a33e6cf22cfaf27135: too messy in logs where
	  driver.instcmd() think they are last in stack.
	* drivers/main.c: move do_forceshutdown handling to be after
	  upsdrv_initinfo() where we register INSTCMD handlers [#2670]
	* drivers/adelsystem_cbi.c, drivers/al175.c, drivers/apc_modbus.c,
	  drivers/apcsmart-old.c, drivers/apcsmart.c, drivers/apcupsd-ups.c,
	  drivers/asem.c, drivers/bcmxcp.c, drivers/belkin.c,
	  drivers/belkinunv.c, drivers/bestfcom.c, drivers/bestfortress.c,
	  drivers/bestuferrups.c, drivers/bestups.c, drivers/bicker_ser.c,
	  drivers/blazer.c, drivers/clone-outlet.c, drivers/clone.c,
	  drivers/dummy-ups.c, drivers/etapro.c, drivers/everups.c,
	  drivers/gamatronic.c, drivers/generic_gpio_common.c,
	  drivers/generic_modbus.c, drivers/genericups.c,
	  drivers/huawei-ups2000.c, drivers/hwmon_ina219.c, drivers/isbmex.c,
	  drivers/ivtscd.c, drivers/liebert-esp2.c, drivers/liebert-gxe.c,
	  drivers/liebert.c, drivers/macosx-ups.c, drivers/masterguard.c,
	  drivers/metasys.c, drivers/mge-utalk.c, drivers/microdowell.c,
	  drivers/microsol-common.c, drivers/netxml-ups.c,
	  drivers/nut-ipmipsu.c, drivers/nutdrv_atcl_usb.c,
	  drivers/nutdrv_qx.c, drivers/nutdrv_siemens_sitop.c,
	  drivers/oneac.c, drivers/optiups.c,
	  drivers/phoenixcontact_modbus.c, drivers/pijuice.c,
	  drivers/powercom.c, drivers/powerman-pdu.c, drivers/powerpanel.c,
	  drivers/rhino.c, drivers/richcomm_usb.c, drivers/riello_ser.c,
	  drivers/riello_usb.c, drivers/safenet.c, drivers/skel.c,
	  drivers/sms_ser.c, drivers/snmp-ups.c, drivers/socomec_jbus.c,
	  drivers/solis.c, drivers/tripplite.c, drivers/tripplite_usb.c,
	  drivers/tripplitesu.c, drivers/upscode2.c, drivers/usbhid-ups.c,
	  drivers/victronups.c: drivers/*.c: simplify upsdrv_shutdown() back,
	  as only "shutdown.default" implementations again [#2670]
	* drivers/main.c: update some comments [#2670]
	* drivers/main.c, drivers/main.h: drivers/main.{c,h}: introduce
	  MAX_SDCOMMANDS_DEPTH for do_loop_shutdown_commands() [#2670]
	* drivers/dstate.c, drivers/main.c, drivers/main.h:
	  drivers/main.{c,h}, drivers/dstate.c: introduce
	  main_instcmd_fallback() so drivers might implement their own
	  "shutdown.default" at will [#2670]
	* drivers/main.c: drivers/main.{c,h}: call
	  upsdrv_shutdown_sdcommands_or_default() not default
	  upsdrv_shutdown() as the implementation of forceshutdown() and
	  "driver.killpower" INSTCMD (e.g. via `drivername -k`) [#2670]
	* drivers/main.c, drivers/main.h: drivers/main.{c,h}: rename
	  upsdrv_shutdown_default() =>
	  upsdrv_shutdown_sdcommands_or_default() less ambiguously [#2670]
	* drivers/main.c: do_loop_shutdown_commands(): shortcut for
	  "shutdown.default" support [#2670]
	* drivers/main.c: implement INSTCMD "shutdown.default" as a way to
	  call upsdrv_shutdown() in any driver [#2670]
	* drivers/main.c: update some comments

2024-11-19  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* data/cmdvartab, docs/nut-names.txt: change rest bypass to Bypass
	* docs/nut-names.txt: bypass to Bypass in nut-names.txt
	* data/cmdvartab, docs/nut-names.txt: added to cmdvartab and
	  nut-names.txt
	* drivers/mge-hid.c: added input.transfer.bypass.overload and
	  input.transfer.bypass.outlimits
	* drivers/mge-hid.c: added input.bypass.switchable

2024-11-18  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, docs/man/ups.conf.txt, docs/nut-names.txt,
	  drivers/main.c, drivers/main.h: drivers/main.{c,h}, docs: introduce
	  `shutdown.default` INSTCMD concept and upsdrv_shutdown_default()
	  shared method [#2670]
	* drivers/powercom.c: drop checks for HAVE___ATTRIBUTE__NORETURN in
	  instcmd() [#2670]
	* drivers/ivtscd.c: comment about upsdrv_shutdown() oddness in this
	  driver [#2670]
	* NEWS.adoc, drivers/adelsystem_cbi.c, drivers/al175.c,
	  drivers/apc_modbus.c, drivers/apcsmart-old.c, drivers/apcsmart.c,
	  drivers/apcupsd-ups.c, drivers/asem.c, drivers/bcmxcp.c,
	  drivers/belkin.c, drivers/belkinunv.c, drivers/bestfcom.c,
	  drivers/bestfortress.c, drivers/bestuferrups.c, drivers/bestups.c,
	  drivers/bicker_ser.c, drivers/blazer.c, drivers/clone-outlet.c,
	  drivers/clone.c, drivers/dummy-ups.c, drivers/etapro.c,
	  drivers/everups.c, drivers/gamatronic.c,
	  drivers/generic_gpio_common.c, drivers/generic_modbus.c,
	  drivers/genericups.c, drivers/huawei-ups2000.c,
	  drivers/hwmon_ina219.c, drivers/isbmex.c, drivers/ivtscd.c,
	  drivers/liebert-esp2.c, drivers/liebert-gxe.c, drivers/liebert.c,
	  drivers/macosx-ups.c, drivers/main.c, drivers/main.h,
	  drivers/masterguard.c, drivers/metasys.c, drivers/microdowell.c,
	  drivers/microsol-common.c, drivers/netxml-ups.c,
	  drivers/nut-ipmipsu.c, drivers/nutdrv_atcl_usb.c,
	  drivers/nutdrv_qx.c, drivers/nutdrv_siemens_sitop.c,
	  drivers/oneac.c, drivers/optiups.c,
	  drivers/phoenixcontact_modbus.c, drivers/pijuice.c,
	  drivers/powercom.c, drivers/powerman-pdu.c, drivers/powerpanel.c,
	  drivers/rhino.c, drivers/richcomm_usb.c, drivers/riello_ser.c,
	  drivers/riello_usb.c, drivers/safenet.c, drivers/skel.c,
	  drivers/sms_ser.c, drivers/snmp-ups.c, drivers/socomec_jbus.c,
	  drivers/solis.c, drivers/tripplite.c, drivers/tripplite_usb.c,
	  drivers/tripplitesu.c, drivers/upscode2.c, drivers/usbhid-ups.c,
	  drivers/victronups.c: drivers/*.c, drivers/main.h: introduce and
	  use a common handling_upsdrv_shutdown flag to exit or not after
	  upsdrv_shutdown() and individual power-state related INSTCMDs
	  [#2670]
	* drivers/al175.c, drivers/apcupsd-ups.c, drivers/asem.c,
	  drivers/bcmxcp.c, drivers/bicker_ser.c, drivers/blazer.c,
	  drivers/clone-outlet.c, drivers/clone.c, drivers/dummy-ups.c,
	  drivers/generic_gpio_common.c, drivers/generic_modbus.c,
	  drivers/genericups.c, drivers/huawei-ups2000.c,
	  drivers/hwmon_ina219.c, drivers/isbmex.c, drivers/ivtscd.c,
	  drivers/liebert.c, drivers/macosx-ups.c, drivers/main.c,
	  drivers/netxml-ups.c, drivers/nut-ipmipsu.c, drivers/nutdrv_qx.c,
	  drivers/phoenixcontact_modbus.c, drivers/powercom.c,
	  drivers/powerman-pdu.c, drivers/riello_ser.c, drivers/riello_usb.c,
	  drivers/safenet.c, drivers/skel.c, drivers/sms_ser.c,
	  drivers/snmp-ups.c, drivers/socomec_jbus.c, drivers/usbhid-ups.c:
	  drivers/*.c: use common EF_EXIT_FAILURE and EF_EXIT_SUCCESS arg
	  values for set_exit_flag(int) methods [#2670]
	* include/common.h, docs/new-drivers.txt, NEWS.adoc: define common
	  EF_EXIT_FAILURE and EF_EXIT_SUCCESS for set_exit_flag(int) methods
	  [#2670]
	* drivers/usbhid-ups.c: update to use "sdcommands" (if customized by
	  user), by default chain the originally used sequence in
	  upsdrv_shutdown() [#2670]
	* drivers/victronups.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/upscode2.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/tripplitesu.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/tripplite_usb.c: update to use "sdcommands" (if customized
	  by user) [#2670]
	* drivers/tripplite.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/solis.c: update to use "sdcommands" (if customized by user)
	  [#2670]
	* drivers/socomec_jbus.c: update to use "sdcommands" (if customized
	  by user) [#2670]
	* drivers/snmp-ups.c: update to use "sdcommands" (if customized by
	  user), by default chain the originally used sequence in
	  upsdrv_shutdown() [#2670]
	* drivers/adelsystem_cbi.c, drivers/apc_modbus.c,
	  drivers/generic_modbus.c, drivers/netxml-ups.c,
	  drivers/nut-ipmipsu.c, drivers/phoenixcontact_modbus.c,
	  drivers/powerman-pdu.c, drivers/snmp-ups.c: drivers/*.c: for
	  networked drivers (snmp, netxml, IPMI, modbus/TCP) comment in
	  upsdrv_shutdown() some limitations of the media that networked
	  UPS-shutdown may not be generally possible in an endgame [#2770]
	* drivers/sms_ser.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/skel.c: update to use "sdcommands" (if customized by user)
	  [#2670]
	* drivers/safenet.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/riello_usb.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/riello_ser.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/richcomm_usb.c: update to use "sdcommands" and move logic
	  from upsdrv_shutdown() to upscmd("shutdown.return"); newly support
	  INSTCMD at all [#2670]
	* drivers/rhino.c: update to use "sdcommands" (if customized by user)
	  [#2670]
	* drivers/powerp-bin.c, drivers/powerp-txt.c, drivers/powerpanel.c:
	  drivers/powerp*.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/powerman-pdu.c: drivers/powerman.c: update to use
	  "sdcommands" (if customized by user) [#2670]
	* drivers/powercom.c: update to use "sdcommands" (if customized by
	  user) [#2670]

2024-11-18  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: change double to %.1f of voltage and frequency
	* drivers/mge-hid.c: add debug log in case out of limits for
	  bypass/eco
	* drivers/mge-hid.c: comment added
	* drivers/mge-hid.c: rename eco function

2024-11-17  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/pijuice.c: update to use "sdcommands" and move logic from
	  upsdrv_shutdown() to upscmd("shutdown.stayoff"); newly support
	  INSTCMD at all [#2670]
	* drivers/phoenixcontact_modbus.c: update to use "sdcommands" (if
	  customized by user) [#2670]
	* drivers/optiups.c: update to use "sdcommands" (if customized by
	  user) [#2670]

2024-11-16  Jim Klimov <jimklimov@gmail.com>

	* drivers/usbhid-ups.c: report unhandled negative HIDGetEvents()
	  return values [#2681]
	* NEWS.adoc, docs/man/usbhid-ups.txt, drivers/usbhid-ups.c,
	  include/nutconf.hpp: drivers/usbhid-ups.c: fix fallout of #2671 and
	  complete the feature with optional
	  `interrupt_pipe_no_events_tolerance` setting [#2681]

2024-11-16  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/oneac.c: update to use "sdcommands" (if customized by user)
	  [#2670]
	* drivers/nutdrv_qx.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/nutdrv_siemens_sitop.c: update to use "sdcommands" (if
	  customized by user) [#2670]
	* drivers/nutdrv_atcl_usb.c: update to use "sdcommands" and move
	  logic from upsdrv_shutdown() to upscmd("shutdown.stayoff"); newly
	  support INSTCMD at all [#2670]
	* drivers/nut-ipmipsu.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/netxml-ups.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/microsol-apc.c, drivers/microsol-common.c:
	  drivers/microsol*.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/microdowell.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/metasys.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* NEWS.adoc: fix for upsnotify references

2024-11-15  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/masterguard.c: update to use "sdcommands" and move logic
	  from upsdrv_shutdown() to upscmd("shutdown.return"); newly support
	  INSTCMD at all [#2670]
	* drivers/macosx-ups.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/liebert.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/liebert-gxe.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/liebert-esp2.c: update to use "sdcommands" (if customized
	  by user) [#2670]
	* drivers/ivtscd.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/isbmex.c: update to use "sdcommands" and move logic from
	  upsdrv_shutdown() to upscmd("shutdown.stayoff"); newly support
	  INSTCMD at all [#2670]
	* drivers/hwmon_ina219.c: update to use "sdcommands" (if customized
	  by user) [#2670]
	* drivers/huawei-ups2000.c: update to use "sdcommands" (if customized
	  by user) [#2670]
	* drivers/genericups.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/generic_modbus.c: update to use "sdcommands" and move logic
	  from upsdrv_shutdown() to upscmd("shutdown.stayoff") [#2670]
	* drivers/generic_gpio_common.c: update to use "sdcommands" (if
	  customized by user) [#2670]
	* drivers/gamatronic.c: fix misplaced upslogx(1, ...) by upsdebugx()
	* drivers/gamatronic.c: update to use "sdcommands" and move logic
	  from upsdrv_shutdown() to upscmd("shutdown.return"); newly support
	  INSTCMD at all [#2670]
	* drivers/etapro.c: update to use "sdcommands" and move logic from
	  upsdrv_shutdown() to upscmd("shutdown.return") [#2670]
	* NEWS.adoc, common/common.c, docs/nut.dict, include/common.h:
	  common/common.c, include/common.h: follow-up for `upsnotify()`
	  [#1590, #2136]  * introduce `str_upsnotify_state()` for meaningful
	  debug log messages; * suggest to `export
	  NUT_QUIET_INIT_UPSNOTIFY=true` where we "will not spam more about
	  it" for systems that do not currently expect to have notification
	  support or need
	* NEWS.adoc: document usbhid-ups fix for 0 HID Objects and lock-up on
	  some devices [#2671]  * Grew from
	  https://github.com/user-attachments/files/17646606/0001-apc-fix.patch.txt
	  proposed at
	  https://github.com/networkupstools/nut/issues/2644#issuecomment-2459538691

2024-11-15  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: fix commands func
	* drivers/mge-hid.c: add check range for eco/bypass commands

2024-11-14  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/dummy-ups.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/clone.c: update to use "sdcommands" (if customized by user)
	  [#2670]
	* drivers/clone-outlet.c: update to use "sdcommands" (if customized
	  by user) [#2670]
	* drivers/blazer.c, drivers/blazer_ser.c, drivers/blazer_usb.c:
	  drivers/blazer*.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/bicker_ser.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/bestups.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/bestuferrups.c: update to use "sdcommands" and move logic
	  from upsdrv_shutdown() to upscmd("shutdown.return"); newly support
	  INSTCMD at all [#2670]
	* drivers/bestfortress.c: update to use "sdcommands" and move logic
	  from upsdrv_shutdown() to upscmd("shutdown.return") [#2670]
	* drivers/bestfcom.c: update to use "sdcommands" and move logic from
	  upsdrv_shutdown() to upscmd("shutdown.return"); newly support
	  INSTCMD at all [#2670]
	* drivers/belkinunv.c: update to use "sdcommands" (if customized by
	  user); revise warning message [#2670]
	* drivers/belkin.c: update to use "sdcommands" and move logic from
	  upsdrv_shutdown() to upscmd("shutdown.return") [#2670]
	* drivers/bcmxcp.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/asem.c: update to use "sdcommands" (if customized by user)
	  [#2670]
	* drivers/apcupsd-ups.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/apcsmart.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/apcsmart-old.c: update to use "sdcommands" (if customized
	  by user) [#2670]
	* drivers/apc_modbus.c: update to use "sdcommands" (if customized by
	  user) [#2670]
	* drivers/al175.c: update to use "sdcommands" (if customized by user)
	  [#2670]
	* drivers/adelsystem_cbi.c: update to use "sdcommands" and move logic
	  from upsdrv_shutdown() to upscmd("shutdown.stayoff") [#2670]
	* drivers/everups.c: update to use "sdcommands" and have an instcmd()
	  at all [#2670]
	* drivers/mge-utalk.c: update to use "sdcommands" [#2670]
	* drivers/mge-hid.c: bump subdriver version for added ECO code
	  [#2637]
	* drivers/mge-hid.c: drop ECO/ABM-related changes from PR #2637
	  (revised in later PR)
	* clients/status.h: lower severity of ECO state [#2637]
	* drivers/mge-hid.c: reshuffle whitespace/markup of ECO code to same
	  standard as around [#2637]

2024-11-12  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: new distros' clang-medium warnings want
	  -Wno-nullable-to-nonnull-conversion flag
	* drivers/apc_modbus.c: actually, report USB support (also) in
	  DRIVER_NAME [#2666]
	* configure.ac, NEWS.adoc, UPGRADING.adoc: reshuffle defaulting of
	  --with-modbus+usb=yes and fix a typo checking --with-drivers there
	  [#2666]
	* NEWS.adoc, UPGRADING.adoc: NEWS.adoc: document fixes for
	  libmodbus+libusb support [#2666]
	* drivers/apc_modbus.c: report (in debug traces) whether USB-capable
	  libmodbus was used to build this driver [#2666]
	* configure.ac, docs/configure.txt: configure.ac: introduce
	  --with-modbus+usb option to require USB-capable libmodbus [#2666]
	* configure.ac: report "Modbus drivers" as plural [#2676]
	* configure.ac: report if building modbus+usb [#2666]
	* m4/nut_check_libmodbus.m4: try re-detecting libmodbus support for
	  libusb adding its CFLAGS and LIBS into the loop [#2666]
	* docs/config-prereqs.txt: update Debian/Ubuntu/TermUX with explicit
	  binutils (for ldd) [#2673]
	* NEWS.adoc, configure.ac, m4/nut_report_feature.m4: configure.ac,
	  m4/nut_report_feature.m4: group lines of first section better with
	  NUT_REPORT_FEATURE, NUT_REPORT_DRIVER, NUT_REPORT_PROGRAM [#2676]

2024-11-12  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: add ChargerType to ABM Table

2024-11-11  Jim Klimov <jimklimov@gmail.com>

	* clients/Makefile.am: consider LIBSSL_LDFLAGS_RPATH [#2674]
	* m4/nut_check_libnss.m4: experiment more with LIBSSL_LDFLAGS_RPATH
	  on Solarish platforms [#2674]
	* drivers/Makefile.am, server/Makefile.am,
	  tools/nut-scanner/Makefile.am: server/Makefile.am,
	  drivers/Makefile.am: consider LIBSSL_LDFLAGS_RPATH also [#2674]

2024-11-11  Bill Elliot <bill@wreassoc.com>

	* drivers/Makefile.am, drivers/powervar-c.c, drivers/powervar-c.h,
	  drivers/powervar-cu.c: Still trying to get USB driver to build.

2024-11-10  Jim Klimov <jimklimov@gmail.com>

	* ci_build.sh: OpenIndiana and 32-bit libgd, do not only check about
	  that situation with GCC [#2673]
	* m4/nut_check_libnetsnmp.m4: convert to use depCFLAGS etc. and mix
	  them with build-common CFLAGS etc. for target-platform-relevant
	  checks [#2673]
	* m4/nut_check_libneon.m4: convert to use depCFLAGS etc. and mix them
	  with build-common CFLAGS etc. for target-platform-relevant checks
	  [#2673]
	* m4/nut_check_libmodbus.m4: convert to use depCFLAGS etc. and mix
	  them with build-common CFLAGS etc. for target-platform-relevant
	  checks [#2673]
	* m4/nut_check_libgpiod.m4: convert to use depCFLAGS etc. and mix
	  them with build-common CFLAGS etc. for target-platform-relevant
	  checks [#2673]
	* m4/nut_check_libavahi.m4: convert to use depCFLAGS etc. and mix
	  them with build-common CFLAGS etc. for target-platform-relevant
	  checks [#2673]
	* m4/nut_check_libwrap.m4: convert to use depCFLAGS etc. and mix them
	  with build-common CFLAGS etc. for target-platform-relevant checks
	  [#2673]
	* m4/nut_check_libusb.m4: convert to use depCFLAGS etc. and mix them
	  with build-common CFLAGS etc. for target-platform-relevant checks
	  [#2673]
	* m4/nut_check_libsystemd.m4: convert to use depCFLAGS etc. and mix
	  them with build-common CFLAGS etc. for target-platform-relevant
	  checks [#2673]
	* m4/nut_check_libregex.m4: convert to use depCFLAGS etc. and mix
	  them with build-common CFLAGS etc. for target-platform-relevant
	  checks [#2673]
	* m4/nut_check_libpowerman.m4: convert to use depCFLAGS etc. and mix
	  them with build-common CFLAGS etc. for target-platform-relevant
	  checks [#2673]
	* m4/nut_check_libopenssl.m4: convert to use depCFLAGS etc. and mix
	  them with build-common CFLAGS etc. for target-platform-relevant
	  checks [#2673]
	* m4/nut_check_libnss.m4: convert to use depCFLAGS etc. and mix them
	  with build-common CFLAGS etc. for target-platform-relevant checks
	  [#2673]
	* m4/nut_check_libltdl.m4: convert to use depCFLAGS etc. and mix them
	  with build-common CFLAGS etc. for target-platform-relevant checks
	  [#2673]
	* m4/nut_check_libfreeipmi.m4: convert to use depCFLAGS etc. and mix
	  them with build-common CFLAGS etc. for target-platform-relevant
	  checks [#2673]
	* m4/nut_check_libgd.m4: convert to use depCFLAGS etc. and mix them
	  with build-common CFLAGS etc. for target-platform-relevant checks
	  [#2673]
	* m4/nut_check_libgd.m4: in test program, check also the
	  gdImageString() [#2673]

2024-11-10  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, conf/ups.conf.sample, docs/man/ups.conf.txt,
	  docs/nut.dict, drivers/main.c, drivers/main.h: Introduce
	  "sdcommands" setting for all drivers [#2670]

2024-11-10  Jim Klimov <jim@jimklimov.com>

	* NEWS.adoc, docs/config-prereqs.txt, docs/nut.dict: NEWS.adoc,
	  docs/config-prereqs.txt: document solutions for #2673 and #2674
	* configure.ac, m4/nut_check_libnss.m4, m4/nut_check_libopenssl.m4,
	  tools/nut-scanner/Makefile.am: m4/nut_check_libnss.m4,
	  tools/nut-scanner/Makefile.am, etc: track LIBSSL_LDFLAGS_RPATH
	  (custom on Solaris/illumos) [#2674]

2024-11-09  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt: update Mozilla NSS notes for OpenIndiana
	  and OmniOS
	* ci_build.sh: more CI clues to recognize target bitness

2024-11-08  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  update for OpenIndiana packaging of Mozilla NSPR
	* docs/config-prereqs.txt: extra header-nss package in OpenIndiana
	  2024.x
	* ci_build.sh: revise build of CGI on OI (troublesome with 32-bit
	  variant nowadays)

2024-11-06  Michał Bogdziewicz <michal@bogdziewicz.xyz>

	* drivers/usbhid-ups.c: handle zero HID events with reconnection

2024-11-05  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/ci-farm-lxc-setup.txt, docs/config-prereqs.txt,
	  docs/images/ci/jenkins-nut.txt, docs/nut.dict:
	  docs/config-prereqs.txt, docs/ci-farm-lxc-setup.txt et al: update
	  for NUT CI farm baseline JDK17 (per Jenkins core requirements since
	  autumn 2024)

2024-11-03  William Goodspeed <86338960+goodspeed34@users.noreply.github.com>

	* drivers/ydn23.h: fix bad lchksum  Fix a bad checksum in length
	  field. However, `liebert-gxe' was not affected because the frame
	  never exceeds 2^4-1.

2024-10-28  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* drivers/mge-hid.c: improve path decisions and comments

2024-10-28  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: remove unused eaton_abm_charger_type_fun()
	* drivers/mge-hid.c: add UPS.BatterySystem.Charger.ChargerType to abm
	  table

2024-10-27  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* drivers/mge-hid.c: improve debug and enabled-ness
	* drivers/mge-hid.c: remove ABM_ENABLED_TYPE
	* drivers/mge-hid.c: explicit cast doubles to integers
	* drivers/mge-hid.c: refactor, treat ABM unknown as disabled

2024-10-27  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: added comment
	* drivers/mge-hid.c: remove comment
	* drivers/mge-hid.c: more clear comments for charger modes
	* drivers/mge-hid.c: typo in comment
	* drivers/mge-hid.c: make abm charger tables better look

2024-10-26  Bill Elliot <bill@wreassoc.com>

	* drivers/powervar-c.c, drivers/powervar-c.h: Now most update stuff
	  is in place.

2024-10-24  Bill Elliot <bill@wreassoc.com>

	* drivers/Makefile.am, drivers/powervar-c.c, drivers/powervar-c.h:
	  Most init stuff in place. This is before working on update
	  function.

2024-10-23  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: add info for Note ABM
	* drivers/mge-hid.c: typo in commment
	* drivers/mge-hid.c: update and clean code for statuses for easy to
	  read and work
	* drivers/mge-hid.c: make code looks better

2024-10-22  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/acknowledgements.txt: PCM/Powercom has a link back to NUT,
	  nice!
	* docs/asciidoc.conf: support anchors in PDF
	* docs/acknowledgements.txt: use 4th arg to linkdoc specifically for
	  HTML-Chunked section file names
	* docs/asciidoc.conf: introduce 4th arg to linkdoc specifically for
	  HTML-Chunked section file names
	* docs/acknowledgements.txt: adapt reference to anchor in README to
	  different renderers
	* docs/acknowledgements.txt: use "linkdoc" instead of "linksingledoc"
	  (nut-website does not deliver single-HTML versions)

2024-10-22  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: remove dischrg in ups.status when on battery for
	  9E Model
	* drivers/mge-hid.c: fix again
	* drivers/mge-hid.c: fix if
	* drivers/mge-hid.c: Fix again
	* drivers/mge-hid.c: Fix Typo
	* drivers/mge-hid.c: add possibly fix for 9E not chaging status when
	  battery.charge < 100% , also avoid using same paths

2024-10-21  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/mge-hid.c: bump version for beeper changes
	* docs/nut.dict: update for recent edits

2024-10-21  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: change back to ABM_UNKNOWN and use only BOOL
	  chrg/dschrg (eaton_charging_info(),eaton_discharging_info()) func
	  to make same as was in original code for Constant Charge

2024-10-20  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: add linksrcdoc and suggestsrcdoc macros
	* NEWS.adoc: beeper support with MGE HID [#2662]
	* UPGRADING.adoc: document ALARMCRITICAL setting [#2658]
	* INSTALL.nut.adoc: fix markup for linksrcdoc to GH-compatible macro
	  call  ...and use proper new extensions
	* docs/ci-farm-lxc-setup.txt: fix text around linksrcdoc
	* docs/asciidoc.conf: fix anchored linkdoc for chunked-HTML (with
	  anchors becoming filenames)
	* docs/asciidoc.conf: refactor repetitive text with suggestsrcdoc
	* docs/asciidoc.conf: define linksrcdoc after its consumers and do
	  not refer to "link" macro anymore
	* Makefile.am: maintainer-asciidocs: port POSIX-shell replace_all()
	  to help with backslashes
	* INSTALL.nut.adoc, README.adoc: Update NUT documentation sources
	  with current docs/asciidoc-vars.conf: 4baaac1d4 (2024-10-20)
	* docs/acknowledgements.txt: experiment with 3-argument linksingledoc
	  rendering
	* INSTALL.nut.adoc, docs/ci-farm-lxc-setup.txt: experiment with
	  linksrcdoc and 3-argument linkdoc rendering
	* docs/asciidoc-vars.conf: define linksrcdoc with top_srcdir in th
	  eloop
	* docs/asciidoc-vars.conf: try defining linksrcdoc macro
	* docs/asciidoc.conf: add linksrcdoc macro; extend definition of
	  linkdoc and linksingledoc macros with optional reference to NUT
	  source text document
	* docs/asciidoc.conf: update comments about macro definition per se

2024-10-20  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: add comment
	* drivers/mge-hid.c: change back to `ABM_DISABLED`

2024-10-19  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: set `ABM_UNKNOWN` for test ups.status
	* drivers/mge-hid.c: add `advanced_battery_mode` flag for not
	  overwrite `advanced_battery_monitoring` if eaton_abm_enabled_fun()
	  was runned
	* drivers/mge-hid.c: add comment
	* drivers/mge-hid.c: set `advanced_battery_monitoring to disable` in
	  case of `advanced_battery_monitoring != ABM`
	* drivers/mge-hid.c: change debug message
	* drivers/mge-hid.c: comment change
	* drivers/mge-hid.c: add debug for set advanced_battery_type

2024-10-18  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: fix again
	* drivers/mge-hid.c: typo fix
	* drivers/mge-hid.c: fixes
	* drivers/mge-hid.c: add eaton_abm_enabled_type_info()
	* drivers/mge-hid.c: typo fix
	* drivers/mge-hid.c: add eaton_abm_charger_type_fun()
	* drivers/mge-hid.c: add eaton_abm_charger_type_fun()
	* drivers/mge-hid.c: change if also in eaton_abm_enabled_fun()
	* clients/status.h: change severity to 1 instead 2
	* drivers/mge-hid.c: change back to `if
	  (dstate_getinfo("battery.charger.type"))`
	* drivers/mge-hid.c: change all status same as original was + add
	  ABM_ENABLED_TYPE

2024-10-17  yonesmit <yonesmit@gmail.com>

	* drivers/mge-hid.c: Update mge-hid.c
	* drivers/mge-hid.c: Update mge-hid.c

2024-10-17  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* clients/upsmon.c: additional debug messages for alarm states

2024-10-17  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/ci-farm-lxc-setup.txt: fix asciidoc markup for nested
	  paragraphs in indented lists

2024-10-17  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: add back missing
	  advanced_battery_monitoring=value;
	* drivers/mge-hid.c: try simple eaton_abm_enabled_fun()
	* drivers/mge-hid.c: int to double
	* drivers/mge-hid.c: fix declaration
	* drivers/mge-hid.c: fix eaton_abm_enabled_fun()

2024-10-16  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* NEWS.adoc: fix typo regarding alarm handling
	* NEWS.adoc: adapt for broader scope of alarm handling
	* tools/nutconf/nutconf-cli.cpp: add alarm notifiers
	* scripts/python/app/NUT-Monitor-py2gtk2.in: add alarm status
	* scripts/python/app/NUT-Monitor-py3qt5.in: add alarm status
	* scripts/augeas/nutupsmonconf.aug.in: add alarm notifiers
	* include/nutconf.hpp: add alarm notifiers
	* docs/man/nutconf.txt: add alarm notifiers
	* common/nutconf.cpp, common/nutwriter.cpp: add alarm notifiers
	* clients/status.h: add alarm status

2024-10-16  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: battery.charger.type.status added
	* drivers/mge-hid.c: same for eaton_abm_chrg_dischrg_info()
	* drivers/mge-hid.c: put battery.charger.status +
	  battery.charger.mode and battery.charger.status for bath in one
	  functions
	* drivers/mge-hid.c: add eaton_abm_chrg_dischrg_status_fun()
	* drivers/mge-hid.c: added battery.charger.abm.status for
	  UPS.BatterySystem.Charger.Status
	* drivers/mge-hid.c: add eaton_abm_status_fun()
	* drivers/mge-hid.c: fix ABM Table
	* drivers/mge-hid.c: some try for add battery.charger.status +
	  battery.charger.mode
	* drivers/mge-hid.c: add `battery.charger.type`

2024-10-15  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* docs/man/upsmon.txt: make alarm notifiers consistent
	* docs/man/upsmon.conf.txt: add alarm settings
	* docs/man/upsmon.txt: add alarm settings
	* docs/nut.dict: add alarm-related words
	* conf/upsmon.conf.sample.in: add alarm settings
	* NEWS.adoc: add upsmon alarm handling

2024-10-14  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* clients/upsmon.c, clients/upsmon.h: add alarm handling

2024-10-14  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* docs/nut-names.txt: change to `on` in nut-names.txt also
	* drivers/mge-hid.c: change some values for bypass/eco

2024-10-13  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* data/cmdvartab, docs/nut-names.txt: `ecocontrol` change description
	* docs/nut-names.txt: change nut-names.txt also
	* drivers/mge-hid.c: change eco/bypass values to avoid `ERR TOO-LONG`

2024-10-12  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: add comment
	* drivers/mge-hid.c: fix upsdebugx
	* drivers/mge-hid.c: check freq limit in separate block for
	  eaton_input_bypass_check_range()
	* drivers/mge-hid.c: check freq limit in separate block in eco mode
	* drivers/mge-hid.c: add function for check eco range
	* drivers/mge-hid.c: change comments sign
	* drivers/mge-hid.c: add frequency default in case no value

2024-10-11  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: announce ECO mode concept support [issue #2495, PR
	  #2637]
	* scripts/python/app/NUT-Monitor-py2gtk2.in,
	  scripts/python/app/NUT-Monitor-py3qt5.in:
	  scripts/python/app/NUT-Monitor-*: add reporting for ECO status
	  [#2367]
	* clients/upsmon.c, clients/upsmon.h, common/nutconf.cpp,
	  common/nutwriter.cpp, conf/upsmon.conf.sample.in,
	  docs/man/upsmon.conf.txt, docs/man/upsmon.txt, docs/nut.dict,
	  include/nutconf.hpp, scripts/augeas/nutupsmonconf.aug.in,
	  tools/nutconf/nutconf-cli.cpp: upsmon (sources, docs, config
	  samples, C++ nutconf support): add tracking and reporting for ECO
	  status [#2367]
	* clients/status.h: add an entry for ECO status [#2367]
	* docs/nut.dict: update for changes in docs/nut-names.txt [#2495,
	  #2637]

2024-10-11  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: add freq to function comment
	* drivers/mge-hid.c: add frequency range check to
	  eaton_input_bypass_check_range()
	* drivers/mge-hid.c: move declaration uppper
	* drivers/mge-hid.c: fix again upsdebugx
	* drivers/mge-hid.c: fix typo
	* drivers/mge-hid.c: more details for debugx + move declaration up
	* drivers/mge-hid.c: fix2 debugx
	* drivers/mge-hid.c: fix for upsdebugx
	* drivers/mge-hid.c: function to up for definition
	* drivers/mge-hid.c: fix3 eaton_input_bypass_check_range()
	* drivers/mge-hid.c: add define values
	* drivers/mge-hid.c: fix3 eaton_input_bypass_check_range()
	* drivers/mge-hid.c: fix2 eaton_input_bypass_check_range()
	* drivers/usbhid-ups.c: disable eco alarm
	* drivers/mge-hid.c: rename to eaton_input_bypass_check_range()
	* drivers/mge-hid.c: fix eaton_check_bypass_range()
	* drivers/mge-hid.c: fix for eaton_check_bypass_range()
	* drivers/mge-hid.c: add eaton_check_bypass_range() for check bypass
	  limit

2024-10-10  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: input.bypass.switch.off up to 12 becose return
	  11 bytes

2024-10-09  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* docs/nut-names.txt: added values to nut-names
	* data/cmdvartab, drivers/mge-hid.c: add values to cmdvartab + change
	  to bypass.sart/stop instead bypass.on/off
	* drivers/mge-hid.c, drivers/usbhid-ups.c: rename to ECO(HE) mode!
	  fix comments

2024-10-08  Jim Klimov <jimklimov+nut@gmail.com>

	* data/driver.list.in: Add Salicru ONE 900VA report with nutdrv_qx
	  [#1623]
	* data/driver.list.in: Add Greencell 2000VA report with nutdrv_qx
	  [#1673]  Closes: #1673
	* docs/Makefile.am, docs/images/ci/ci-root.css:
	  docs/images/ci/ci-root.css: Introduce a root NUT CI farm CSS file
	  to include others (tracked in different repos)
	* docs/images/ci/jenkins-nut.css: update comments, add a style for
	  Customizable Header plugin with DigitalOcean logo
	* docs/man/usbhid-ups.txt: battery.runtime=65535 troubleshooting
	  [#731, #1740 et al]

2024-10-07  Jim Klimov <jimklimov+nut@gmail.com>

	* data/driver.list.in: Add APC Back-UPS BK650M2-CH report with
	  usbhid-ups [#1970]
	* docs/man/usbhid-ups.txt: extra comments about CPS offdelay [#578]
	  Closes: #578
	* data/driver.list.in: Add NetVision U4BC02CB00NY100 report with
	  snmp-ups [#1732]  Closes: #1732
	* data/driver.list.in: Add APC Smart-UPS 5000 RM report with snmp-ups
	  [#1559]
	* data/driver.list.in: Add Liebert GXT4-1500RT120 report
	  [networkupstools/nut-ddl#42]
	* data/driver.list.in: Add Powermatic Cleanline L-1000C report
	  [networkupstools/nut-ddl#43]
	* data/driver.list.in: Add APC Back-UPS ES 850G2 reports
	  [networkupstools/nut-ddl#40]
	* data/driver.list.in: Add Techly 1000VA (very basic info so far)
	  [#2651]
	* data/driver.list.in: Add 2E PS1000L reports
	  [networkupstools/nut-ddl#41]

2024-10-07  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: comment added for ...forced
	* drivers/mge-hid.c: remove nfo_lkp_t
	  eaton_input_transfer_on_off_info as eaton_enable_disable_info
	  avalible
	* drivers/mge-hid.c: input.transfer.forced.enabled added +
	  input.bypass.switch.on/off for RW vars

2024-10-04  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/usbhid-ups.c: change back to ecomode
	* drivers/mge-hid.c: change he to ecomode

2024-10-03  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: rename to `bypassauto` in info_lkp_t
	  eaton_input_bypass_mode_info[]
	* drivers/mge-hid.c: spaces typo fixes
	* drivers/mge-hid.c: eaton_input_bypass_mode_info[] added
	* drivers/mge-hid.c: add bypass commands for test

2024-10-02  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, conf/ups.conf.sample, docs/man/nut_usb_addvars.txt,
	  docs/man/ups.conf.txt, drivers/main.c, include/nutconf.hpp:
	  drivers/main.c, docs, etc.: accept "LIBUSB_DEBUG=NUM" setting via
	  ups.conf
	* drivers/main.c: accept "debug_min" case-insensitively, like in
	  upsmon and upsd

2024-10-01  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: add ecomode commands
	* drivers/usbhid-ups.c: change ecomode to high-efficiency in
	  status_info
	* drivers/mge-hid.c: info_lkp_t eaton_input_mode_info[] format spaces
	* drivers/usbhid-ups.c: fix typo ups_status
	* drivers/mge-hid.c, drivers/usbhid-ups.c: eco_mode_info[] back 3
	  values + UPS.PowerConverter.Input.[5].PresentStatus.Used added

2024-09-30  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-hid.c: delete typo space
	* drivers/usbhid-ups.h: define info_lkp_t eco_mode_info[] in
	  usbhid-ups.h
	* drivers/usbhid-ups.c: fix typo
	* drivers/usbhid-ups.c: fix info_lkp_t eco_mode_info[]
	* drivers/usbhid-ups.c, drivers/usbhid-ups.h: add eco_mode info

2024-09-25  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* data/cmdvartab: Fix typo in "Outlet [P] -> [p]rotection status"
	* drivers/mge-hid.c: change outlet.2 ... Outlet.[1] to Outlet.[3]
	* data/cmdvartab, docs/nut-names.txt, drivers/mge-hid.c:
	  `outlet.n.status` back and new one move to intro
	  `outlet.1.protect.status` also define in cmdvartab and
	  /docs/nut-names.txt
	* drivers/mge-hid.c: `outlet.1.switch.status` rename back to
	  `outlet.1.status`
	* docs/nut-names.txt: change to `switch (0-2)` for
	  input.eco.switchable in nut-names.txt
	* drivers/mge-hid.c: comment on ESS mode
	* data/cmdvartab, docs/nut-names.txt: adding
	  `input.eco.switchable,outlet.n.ecocontrol` to cmdvartab and
	  /docs/nut-names.txt
	* drivers/mge-hid.c: added `info_lkp_t eaton_input_mode_info[]` for
	  input.eco.switchable
	* drivers/mge-hid.c, drivers/usbhid-ups.c, drivers/usbhid-ups.h: move
	  `info_lkp_t outlet_eco_yes_no_info[]` to mge-hid.c

2024-09-24  Jim Klimov <jimklimov@gmail.com>

	* docs/man/usbhid-ups.txt: document troubleshooting Linux USB quirk
	  vs. Eaton devices [#630]

2024-09-24  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: update and move "expected" improvements from v2.8.3 to
	  v2.8.4 goals

2024-09-24  DaRK AnGeL <masterwishx@gmail.com>

	* drivers/mge-hid.c: some typo fix

2024-09-24  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* drivers/mge-xml.c: remove typo space
	* drivers/mge-xml.c: remove also from mge-xml.c
	* drivers/powerp-bin.c: remove `outlet_eco_yes_no_info[]` from
	  powerp-bin.c
	* drivers/mge-xml.c, drivers/usbhid-ups.h: outlet_eco_yes_no_info
	  defined in upshid-ups.h
	* drivers/mge-xml.c: outlet.1.ecocontrol added to mge-xml to fix
	  undefined
	* drivers/mge-hid.c: remove `*outlet_eco_yes_no_info` from mgr-hid.c
	* drivers/mge-hid.c, drivers/mge-xml.c, drivers/powerp-bin.c,
	  drivers/usbhid-ups.c: try to fix definition of
	  `outlet_eco_yes_no_info[] error`
	* drivers/powerp-bin.c, drivers/usbhid-ups.c: added `info_lkp_t
	  outlet_eco_yes_no_info` and `valtab_t
	  outlet_eco_yes_no_info`
	* drivers/mge-hid.c: intoduce input.eco.switchable
	* drivers/mge-hid.c, drivers/mge-xml.c: outlet_eco_yes_no_info move
	  to mge-xml.c
	* drivers/mge-hid.c: eaton_outlet_protection_status_info +
	  outlet_eco_yes_no_info fix
	* drivers/mge-hid.c: add 'eco_pegasus_yes_no_info' func to
	  uotlet.2.ecocontrol
	* drivers/mge-hid.c: fix typo in comments
	* drivers/mge-hid.c: some of the fixes

2024-09-23  Jim Klimov <jimklimov@gmail.com>

	* drivers/liebert-gxe.c: non-functional cosmetic fixes (NUT codebase
	  style) [#2629]
	* drivers/ydn23.h: non-functional cosmetic fixes (NUT codebase style)
	  [#2629]
	* drivers/liebert-gxe.c: issue messages mentioning "liebert-gxe" not
	  plain "gxe" [#2629]
	* docs/man/liebert-gxe.txt: use double-dash for tirez [#2629]
	* docs/man/liebert-gxe.txt: clarify port/cable used [#2629]
	* NEWS.adoc: move liebert-gxe introduction into NUT v2.8.3 timeframe
	  [#2629]

2024-09-23  DaRK AnGeL <masterwishx@gmail.com>

	* drivers/mge-hid.c: first trying to add values

2024-09-23  Arnaud Quette <arnaudquette@eaton.com>

	* drivers/mge-hid.c: EATON HID: completion on examples
	* drivers/mge-hid.c: EATON HID: add missing usages and paths

2024-09-22  Jim Klimov <jimklimov@gmail.com>

	* drivers/liebert-gxe.c: satisfy opposing desires of static analysis
	  Compiler wants both to handle `default` cases in `switch` lists,
	  and dislikes a `default` label in enum handling when all known
	  values are handled (and wants them all to be handled). The clash is
	  only resolvable by pragmas, like elsewhere in out codebase.

2024-09-19  Bill Elliot <bill@wreassoc.com>

	* drivers/oneac.c: Coding standard fixes.

2024-09-15  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* clients/upssched.c, drivers/adelsystem_cbi.c, drivers/al175.c,
	  drivers/dstate.c, drivers/generic_modbus.c, drivers/main.c,
	  drivers/riello_usb.c: clients/, drivers/: use _with_errno helpers
	  instead of strerror(errno)

2024-09-14  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* docs/man/usbhid-ups.txt: add missing lowbatt argument

2024-09-14  Jim Klimov <jimklimov@gmail.com>

	* docs/config-prereqs.txt: add a few recommended MacOS/HomeBrew
	  packages

2024-09-14  Gong Zhile <goodspeed@mailo.cat>

	* NEWS.adoc, data/driver.list.in, docs/man/Makefile.am,
	  docs/man/liebert-gxe.txt, docs/nut.dict, drivers/Makefile.am,
	  drivers/liebert-gxe.c, drivers/ydn23.h: drivers/ydn23.h: add ydn23
	  protocol helper, drivers/liebert-gxe.c: add Liebert GXE Series
	  driver

2024-09-13  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c: upsdrv_banner(): keep NUT version near NUT project
	  name, only mention "driver" if needed (once) [#2583]  Example
	  change:  * Network UPS Tools driver 2.8.2.1064-1064-g501bbdc62
	  (development iteration after 2.8.2) - network XML UPS 0.46 *
	  Network UPS Tools 2.8.2.1064-1064-g501bbdc62 (development iteration
	  after 2.8.2) - network XML UPS driver 0.46  Compare to older
	  versions' markup where NUT version tailed in the end (generally
	  fixed by PR #2583 due to possible nested parentheses in dev
	  builds):  * Network UPS Tools - Generic HID driver 0.53 (2.8.2)
	  ...and to other non-driver programs now, which generally do print
	  their program name/type after NUT before version:  * Network UPS
	  Tools upsmon 2.8.2.1064-1064-g501bbdc62 (development iteration
	  after 2.8.2)

2024-09-12  Jim Klimov <jimklimov@gmail.com>

	* docs/nut-names.txt: document the Input Voltage Hysteresis concept
	  [#2620]
	* docs/nut-names.txt: re-phrase input.transfer.hysteresis table
	  description [#2620]
	* drivers/mge-hid.c: bump sub-driver version due to added data points
	  [#2620]
	* data/cmdvartab, docs/nut-names.txt, drivers/mge-hid.c: Typo fix
	  (hysteresYs => hysteresIs) [#2620]

2024-09-12  Jim Klimov <jimklimov+nut@gmail.com>

	* data/cmdvartab: fix a bit of wording for "percent of nominal"
	* docs/nut-names.txt: fix asciidoc table markup and a bit of wording
	* Makefile.am: fix shell typo [#2624]

2024-09-12  DaRK AnGeL <masterwishx@gmail.com>

	* data/cmdvartab, docs/nut-names.txt, drivers/mge-hid.c: add
	  hysteresys value + add nominal to freq range

2024-09-12  DaRK AnGeL <28630321+masterwishx@users.noreply.github.com>

	* data/cmdvartab: Update cmdvartab

2024-09-11  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: avoid hard-coded auglensdir if we can, to avoid
	  broken distcheck on some platforms/builds
	* COPYING, docs/acknowledgements.txt, docs/nut.dict,
	  scripts/installer/.gitignore, scripts/installer/Makefile.am,
	  scripts/installer/README.adoc,
	  scripts/installer/common_EN/license.txt: docs: finalize
	  re-licensing of scripts/installer from Eaton to NUT terms (GPL)
	  [#2288, #2621]
	* m4/ax_realpath_lib.m4: recognize "GNU ld script" files which
	  redirect to a real library
	* m4/ax_realpath_lib.m4: fix indentation
	* NEWS.adoc, drivers/usb-common.c, tools/nut-scanner/scan_usb.c:
	  tools/nut-scanner/scan_usb.c: port nut_usb_get_string() from
	  usb-common.c [#2604, #2615]
	* drivers/usb-common.c: fix C style of comments [#2604]
	* docs/man/nut_usb_addvars.txt: make a NOTE of LibUSB specific
	  debugging [#2616]
	* Makefile.am: install-win-bundle-thirdparty DLL check: cover
	  libexecdir [#1936 follow-up]
	* drivers/clone-outlet.c, drivers/clone.c: drivers/clone{,-outlet}.c:
	  throttle if polling too quickly
	* drivers/clone-outlet.c, drivers/clone.c: drivers/clone{,-outlet}.c:
	  update header comment descriptions and (C)

2024-09-11  DaRK AnGeL <masterwishx@gmail.com>

	* data/cmdvartab, docs/nut-names.txt: add missing values to nut vars
	  + 'percent Hz' in cmdvartab

2024-09-10  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: combine "make spellcheck-interactive" with "make
	  SPELLCHECK_INTERACTIVE=true ${docsrc}-spellchecked" to benefit from
	  touch-files and update them properly
	* drivers/clone-outlet.c, drivers/clone.c: drivers/clone{,-outlet}.c:
	  parse_args(): add a skip_out label to log ignored socket protocol
	  line details
	* docs/man/dummy-ups.txt: update regarding clone-outlet driver and
	  differences of the three

2024-09-09  DaRK AnGeL <masterwishx@gmail.com>

	* data/cmdvartab: add values description
	* drivers/mge-hid.c: change high to range in
	  (input.transfer.frequency.bypass and input.transfer.frequency.eco)
	* drivers/mge-hid.c: Add Bypass and ECO Transfer values for future
	  work on enable Eco mode for Eaton

2024-09-08  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/clone.c, drivers/clone-outlet.c: reconcile shared code
	  style
	* docs/man/clone.txt: revise vs. clone-outlet page

2024-09-07  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/Makefile.am, docs/man/clone-outlet.txt, docs/nut.dict:
	  Introduce docs/man/clone-outlet.txt
	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{0,1}.c: rename
	  nut_libusb_subdriver_defaults() to common style [#2611]
	* NEWS.adoc, docs/nut.dict: NEWS.adoc: explain USB enumeration fix
	  [#2611]  With an Arduino Leonardo compatible board attached
	  alongside a CyberPower CP1500PFCLCD, usbhid-ups would incorrectly
	  conclude that there was no kernel driver attached to the UPS and
	  then fail subsequent steps accordingly.  The cause is the global
	  usb_communication_subdriver_t struct; when a subdriver (e.g.
	  arduino-hid) sets different values during the enumeration loop,
	  they're not set back to defaults afterwards, causing issues with
	  other subdrivers (e.g. cps-hid).  So, if a subdriver doesn't match,
	  set a selection of fields back to their default values using the
	  newly added nut_usb_subdriver_defaults() before the next attempt.
	  // tofurky

2024-09-03  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: move bicker_ser entry to keep USB-related news together
	* drivers/blazer_usb.c, drivers/nutdrv_qx.c, drivers/riello_usb.c,
	  drivers/tripplite_usb.c, drivers/usbhid-ups.c: Bump USB-capable
	  driver versions impacted by new `nut_usb_get_string()` method
	  [#1925, #2604]
	* NEWS.adoc: document new `nut_usb_get_string()` method - extend
	  [#1925, #2604]
	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{0,1}.c: rename
	  static nut_usb_set_altinterface() => nut_libusb_set_altinterface()
	  to maintain a consistent code style [#2604]
	* NEWS.adoc: document new `nut_usb_get_string()` method [#1925,
	  #2604]

2024-09-01  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: document fix for allow_killpower flag [#2605]
	* tests/NIT/nit.sh: default to run with BASH where available (and
	  system shell is not it)
	* tests/NIT/nit.sh: check with BASH before bailing out with available
	  tools that did not see hits  Builds in Android with Termux lack the
	  permissions to see open ports.
	* tests/NIT/nit.sh: check that /proc/net/tcp* are readable, not just
	  existing  Builds in Android with Termux lack the permissions to see
	  open ports.
	* tests/NIT/nit.sh: use TABCHAR in regex for portability

2024-08-28  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* drivers/main.c: comment for setting driver.flag.allow_killpower
	  default

2024-08-28  Tormod Volden <debian.tormod@gmail.com>

	* drivers/libusb0.c: libusb0: Rename nut API functions for
	  consistency with libusb1.c  The original names could also be
	  confused with libusb-1.0 API functions.  Also rename
	  nut_libusb_strerror() although not a nut API function.
	* drivers/libusb0.c, drivers/libusb1.c: libusb0/1: Simplify range
	  checks in nut API nut_libusb_get_string()  The string index is a
	  number between 1 and 255, simply because it is the lower byte of
	  wValue in the GET_DESCRIPTOR request. String index 0 is used for
	  retrieving the langid array, so it is not valid for this function.
	  There is no reason to impose a limit to the length of the buffer
	  that the user is lending us, certainly not above the range of the
	  involved types, so just a minimal sanity check is enough. Since in
	  the minimal case we would return an empty zero-terminated string,
	  it must at least have room for this.
	* drivers/libusb0.c, drivers/libusb1.c: libusb0/1: Fix up comments
	  about expected types
	* drivers/libusb0.c, drivers/libusb1.c: libusb0/1: Use
	  nut_usb_get_string() instead of libusb functions  Fixes #1925
	* drivers/usb-common.c, drivers/usb-common.h: usb-common.c: Add
	  API-neutral nut_usb_get_string()  This function doesn't use
	  usb_get_string_simple() from libusb0 or
	  libusb_get_string_descriptor_ascii() from libusb1 but replaces them
	  to be able to add a workaround for devices with broken langid
	  descriptors.  If the langid descriptor is invalid, the en_US
	  language is assumed. (See
	  https://github.com/networkupstools/nut/issues/1925)  It also adds
	  retries to the string descriptor fetching, which may help in some
	  cases. (See https://github.com/networkupstools/nut/issues/414) A
	  small delay is introduced between the retries.

2024-08-27  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* drivers/main.c: do not overwrite set allow_killpower flag with
	  defaults

2024-08-26  Tormod Volden <debian.tormod@gmail.com>

	* drivers/libusb0.c, drivers/libusb1.c: Revert
	  "drivers/libusb{0,1}.c: retry getting Manufacturer/Product/Serial a
	  few times if failed on the first"  This reverts commit
	  0fa5687aef27ba7ada1cd8aeec6963560c08f00f.  The reverted commit
	  introduced retries when failing to retrieve various device string
	  descriptors. In the following commits we will attempt this in a
	  more centralized way, and for the purpose of clarity it is easiest
	  to retract this and start with cleaner sheets.
	* drivers/libusb1.c: Revert "drivers/libusb1.c: nut_libusb_open():
	  try to re-fetch curDevice->Vendor, Product, Serial if NULL, after
	  claiming it by other criteria [#2562]"  This reverts commit
	  ea99f96f87ea06cf5ff486ba7541bf8f74e2c33b.  The reverted commit
	  attempted to workaround a string descriptor retrieval issue by
	  retrying after claiming an interface on the device. However, this
	  did not help, and it was later found out that a broken langid
	  descriptor was the root issue all along.
	* drivers/libusb0.c: Revert "drivers/libusb0.c: libusb_open(): try to
	  re-fetch curDevice->Vendor, Product, Serial if NULL, after claiming
	  it by other criteria [#2562]"  This reverts commit
	  ad83b70bbd3a0f6eff64d6b8dbfc14621d3cba97.  The reverted commit
	  attempted to workaround a string descriptor retrieval issue by
	  retrying after claiming an interface on the device. However, this
	  did not help, and it was later found out that a broken langid
	  descriptor was the root issue all along.

2024-08-22  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsmon.c: generalize handling of unexpectedly long sleeps
	  and negative time jumps [#1070]
	* clients/upsmon.c: fix debug print format for sleep during loop-end
	  [#1070]
	* docs/FAQ.txt, docs/nut.dict: docs/FAQ.txt: refer to "nutshutdown"
	  script from the older example
	* NEWS.adoc, docs/FAQ.txt, docs/man/upsdrvctl.txt,
	  drivers/upsdrvctl.c, scripts/Solaris/nut-driver.xml.in,
	  scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nutshutdown.in, tests/NIT/nit.sh: upsdrvctl and
	  docs: warn about direct use on builds with systemd/SMF (so NDE)
	* configure.ac: expose WITH_SOLARIS_SMF also to C code
	* clients/upsmon.c: add check for negative time jumps [#1070, #2597]
	* clients/upsmon.c: fix check for strange time jumps [#1070]

2024-08-21  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: document generalization of upsmon clock-jump handling
	  [#2597]
	* clients/upsmon.c: monitor if our sleep during end of loop cycle
	  took too long [#1070]  Treat *any* clock jump same as OS sleep (act
	  to avoid stale UPS info), even if it was not a suspend/hibernate
	  event but e.g. summer/winter time change or just upsmon suspended
	  by a debugger or blocked stdio.
	* clients/upsmon.c: when we monitor changes of sleep/wake state and
	  have a value from an aborted older loop cycle, make sure it is up
	  to date now just before we handle it [#1070]
	* clients/upsmon.c: when we report ability (or not) to use sleep
	  inhibition, report also if we can monitor changes of sleep/wake
	  state [#1070]
	* tests/NIT/nit.sh: export TESTPASS_* values to NIT.env for the
	  sandbox after we actually have them [#2597]
	* common/common.c: Inhibit(), isPreparingForSleep(): refactor
	  debug-logging, add notes that we mark methods unsupported at
	  run-time [#1070]
	* clients/upsmon.c: fix a bit of coding style for WIN32 code path
	* clients/upsmon.c: when OS wants to sleep, abort the UPS polling
	  loop [#1070]
	* clients/upsmon.c: when OS wants to sleep, abort the sleep(sleepval)
	  done between loop cycles [#1070]
	* clients/upsmon.c: consult whether
	  isInhibitSupported/isPreparingForSleepSupported to avoid needless
	  decisions and logs on some deployments [#1070]
	* common/common.c, include/common.h: include ways to quickly query
	  whether isInhibitSupported/isPreparingForSleepSupported [#1070]
	* clients/upsmon.c: when OS wakes up from sleep, reload_conf() AFTER
	  resetting clocks on UPS readings [#1070]  Also make sure it is
	  treated as a reload and not initial load!
	* tests/NIT/README.adoc, docs/nut.dict: update about mocking
	  upsmon.conf [#2597]
	* clients/upsmon.c: when waking up after OS sleep/hibernation, reset
	  UPS times to "now" to make-believe the readings are fresh and not
	  stale [#1070]
	* clients/upsmon.c: report sleep_inhibitor_status value (quietly)
	  during each loop processing [#1070]
	* tests/NIT/nit.sh: introduce "${NUT_CONFPATH}/NIT.env-sandbox-ready"
	  touch-file callers can use to check for prepared sandbox [#2597]
	* tests/NIT/Makefile.am: build a few more binaries commonly used by
	  NIT (or manually tested by NIT sandbox) [#2597]
	* tests/NIT/nit.sh: report NIT.env location for sourcing also after
	  printing it out [#2597]
	* tests/NIT/nit.sh: export TESTDIR value to NIT.env [#2597]
	* tests/NIT/nit.sh: export TESTPASS_* values to NIT.env [#2597]
	* tests/NIT/nit.sh: remember the caller-provided TESTDIR value (if
	  any) and do not remove it after exit [#2597]
	* tests/NIT/nit.sh: allow caller to set TESTDIR, and have more
	  reasons to mktemp one in a non-default location [#2597]
	* Makefile.am, tests/NIT/Makefile.am, tests/NIT/nit.sh: Makefile.am,
	  tests/NIT/Makefile.am: introduce check-NIT-sandbox
	  check-NIT-sandbox-devel recipes to streamline dev-testing [#2597]

2024-08-19  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c, m4/nut_check_libsystemd.m4: open_sdbus_once(): use
	  older sd_bus_open_system() + optional sd_bus_set_description() as
	  fallback [#1070]
	* conf/upsmon.conf.sample.in: re-word some text about notifications
	* clients/upsmon.h: fix whitespaces
	* clients/upsmon.c, clients/upsmon.h, common/nutconf.cpp,
	  common/nutwriter.cpp, conf/upsmon.conf.sample.in,
	  docs/man/nutconf.txt, docs/man/upsmon.conf.txt,
	  docs/man/upsmon.txt, include/nutconf.hpp,
	  scripts/augeas/nutupsmonconf.aug.in, tools/nutconf/nutconf-cli.cpp:
	  upsmon code, docs, config tools: introduce notifications for
	  SUSPEND_STARTING and SUSPEND_FINISHED [#1070]
	* docs/man/nutconf.txt: update with new notification types of NUT
	  v2.8.1+ era
	* clients/upsmon.c: report init_Inhibitor() success, should only be
	  once per uptime [#1070]
	* common/common.c: open_sdbus_once(): fiddle with
	  sd_bus_set_allow_interactive_authorization() [#1070]
	* common/common.c: Inhibit(), isPreparingForSleep(): log detailed
	  systemd exception, if available [#1070]
	* common/common.c: fix systemd endpoint definition for inhibitor
	  interface management [#1070]
	* common/common.c: Inhibit() et al: refactor with reopen_sdbus_once()
	  and would_reopen_sdbus() sanity-check [#1070]
	* common/common.c: Inhibit() et al for unsupported platforms: only
	  post "Not implemented" messages once [#1070]
	* clients/upsmon.c: refactor with init_Inhibitor() [#1070]
	* common/common.c: Inhibit() et al: quiesce error/debug messages
	  [#1070]
	* common/common.c: open_sdbus_once(): use prettier
	  sd_bus_open_system_with_description() for better journal logging
	  [#1070]
	* common/common.c: open_sdbus_once(): only report failures once in a
	  row [#1070]
	* UPGRADING.adoc: document systemd inhibitor interface support in
	  NUT, and stress that older hacks for the purpose may be obsolete
	  now [#1070]
	* clients/upsmon.c: add daemon support for OS-sleep inhibition and
	  wake-up [#1070]
	* clients/upsmon.c: barebone structure for OS-sleep inhibition
	  support [#1070]  This commit adds support to process the systemd
	  (later potentially equivalent) framework signals about going to
	  sleep or waking up, to grab and release the locks which can hold up
	  the actual start of sleep mode. Later work would focus on not
	  shutting down because of the time jump when we wake up :)
	* common/common.c, include/common.h, m4/nut_check_libsystemd.m4:
	  introduce Uninhibit() and isPreparingForSleep() methods [#1070]
	* common/common.c: comment about __attribute__((cleanup(f))) usage
	  [#1070]
	* m4/nut_check_libsystemd.m4: check for sd-bus.h auto-cleanup methods
	  [#1070]
	* common/common.c: augment Inhibit() with a retry of D-Bus connection
	  if a call() failed, and auto-close it on exit [#1070]
	* common/common.c: refactor Inhibit() with open_sdbus_once() and
	  re-usable systemd_bus connection [#1070]
	* common/common.c, clients/upsmon.c: annotate ends of systemd-related
	  ifdefs
	* m4/nut_check_libsystemd.m4: do not check for methods delivered by
	  newer systemd which we do not use now [#1070]
	* clients/upsmon.c: indent nested preprocessor directives (optional
	  includes)
	* NEWS.adoc: document systemd inhibitor interface support in NUT
	  [#1070]
	* common/common.c, include/common.h: introduce Inhibit() method
	  [#1070]  Snow-ball several libsystemd pseudo-code and real code
	  examples.
	* configure.ac, scripts/systemd/Makefile.am: consider
	  WITH_LIBSYSTEMD_INHIBITOR availability for default installation of
	  nut-sleep.service [#1833, #1070, #2596]
	* m4/nut_check_libsystemd.m4: detect systemd inhibitor support (via
	  D-Bus API) [#1070]  Thanks to pointers from
	  https://github.com/systemd/systemd/issues/34004
	* scripts/systemd/nut-driver-enumerator-daemon-activator.service.in,
	  scripts/systemd/nut-driver-enumerator-daemon.service.in,
	  scripts/systemd/nut-driver-enumerator.path.in,
	  scripts/systemd/nut-driver-enumerator.service.in,
	  scripts/systemd/nut-driver.target,
	  scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in, scripts/systemd/nut.target,
	  scripts/systemd/nutshutdown.in: scripts/systemd/*: bump (C) to 2024
	* NEWS.adoc, scripts/systemd/Makefile.am,
	  scripts/systemd/nut-sleep.service: Introduce
	  scripts/systemd/nut-sleep.service [#1833, #1070]  Thanks to "Ropid"
	  for contributing this file via
	  https://github.com/networkupstools/nut/issues/1833#issuecomment-2292261061
	* m4/nut_check_libsystemd.m4: extend to try getting SYSTEMD_VERSION
	  from systemctl if pkg-config is missing [#1070]
	* .gitignore, Makefile.am, configure.ac: configure.ac: when doing
	  in-place builds, move config.log of the original invocation to
	  config.log.inplace-outer
	* configure.ac: comment to document the trick about "ln -sr" test
	* configure.ac: comment a FIXME about TREE_VERSION definition
	* ci_build.sh: refactor "Starting initial clean-up ... TAKING
	  SHORTCUT", introduce CI_REGENERATE=true to force it  * Move into a
	  method for different BUILD_TYPE's to share. * Have one "rm" command
	  for different use-cases. * Add a new toggle to force the clean-up
	  and regen. * Also clean away config.h (if one remains somehow, it
	  confuses sub-tree builds like those done for Windows).
	* m4/nut_check_libgd.m4: generate test image to tmpfile() or stderr
	  ...so its binary content does not pollute common log

2024-08-15  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac, m4/nut_check_libsystemd.m4:
	  m4/nut_check_libsystemd.m4: check if nut_have_libsystemd_inhibitor
	  [#1070]
	* scripts/fuse/README.adoc, scripts/fuse/execfuse-nut/getattr,
	  scripts/fuse/execfuse-nut/read_file,
	  scripts/fuse/execfuse-nut/readdir: scripts/fuse/README.adoc,
	  scripts/fuse/execfuse-nut/*: separate "client-location" from
	  "client-version" [#2591]
	* scripts/fuse/README.adoc, scripts/fuse/execfuse-nut/readdir:
	  integrate with NIT-prepared environments [#2591]
	* scripts/fuse/README.adoc: suggest use of plain `umount`, it works
	  too [#2591]
	* scripts/fuse/README.adoc: allow re-entrance with copy-pasted
	  experiments (mkdir -p) [#2591]
	* scripts/fuse/README.adoc: list the built execfuse binary to check
	  it was made [#2591]
	* scripts/fuse/README.adoc: clarify prerequisites for an execfuse
	  build [#2591]  These would likely become NUT optional dependencies
	  in `docs/config-prereqs.txt`, if a more integrated client would be
	  made to follow up with this idea eventually.

2024-08-14  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, docs/nut.dict: announce the FUSE experiment [#2591]
	* scripts/fuse/README.adoc, scripts/fuse/execfuse-nut/getattr,
	  scripts/fuse/execfuse-nut/read_file,
	  scripts/fuse/execfuse-nut/readdir: scripts/fuse: extend
	  execfuse-nut experiment with a /client-version pseudo-file [#2591]

2024-08-13  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/fuse/README.adoc, scripts/fuse/execfuse-nut/getattr,
	  scripts/fuse/execfuse-nut/init,
	  scripts/fuse/execfuse-nut/read_file,
	  scripts/fuse/execfuse-nut/readdir: Introduce a scripts/fuse
	  experiment [#2591]

2024-08-12  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/nut_check_libgd.m4: AX_RUN_OR_LINK_IFELSE() to check that we can
	  actually build a graphical program  Namely, that further
	  third-party libs are available for the chosen architecture, not
	  only the headers. Had a problem with 32/64-bit build agent that
	  only had a binary lib*.so set for 64-bit after an update.
	* ci_build.sh: actually honour CANBUILD_LIBGD_CGI=no
	* ci_build.sh: fix shell syntax that could confuse CANBUILD_LIBGD_CGI
	  detection
	* drivers/usbhid-ups.c: upsdrv_initups(): cache testvar() outcome as
	  exactly 0/1 [#2347]  When building a complex text expression, we
	  rely on maths in some spots.

2024-08-11  Jim Klimov <jimklimov+nut@gmail.com>

	* data/driver.list.in: update about "Back-UPS BX****MI Series (may
	  need tweaks since 2023)" [#2347]
	* drivers/usbhid-ups.c: clarify suggested settings for LB+RB log
	  flood [#2437]
	* NEWS.adoc, UPGRADING.adoc, docs/nut.dict: summarize the mitigation
	  for spurious LOWBATT/REPLACEBATT events on APC BXnnnnMI devices
	  [#2347]

2024-08-10  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, drivers/bcmxcp.c, drivers/nutdrv_atcl_usb.c,
	  drivers/richcomm_usb.c, m4/ax_c_pragmas.m4,
	  tools/nut-scanner/scan_usb.c: tools/nut-scanner/scan_usb.c: do not
	  actively suggest vendor(id), product(id), and serial options for
	  bcmxcp_usb, richcomm_usb, nutdrv_atcl_usb [#1763, #1764, #1768,
	  #2580]
	* NEWS.adoc, clients/nutclient.cpp, clients/upsclient.c,
	  clients/upslog.c, clients/upssched.c, common/common.c,
	  common/nutconf.cpp, common/nutstream.cpp, common/nutwriter.cpp,
	  common/parseconf.c, drivers/apc_modbus.c, drivers/apcsmart-old.c,
	  drivers/apcsmart.c, drivers/bcmxcp.c, drivers/belkin-hid.c,
	  drivers/bestups.c, drivers/blazer_usb.c, drivers/dstate.c,
	  drivers/etapro.c, drivers/hidparser.c, drivers/huawei-ups2000.c,
	  drivers/main.c, drivers/mge-hid.c, drivers/mge-xml.c,
	  drivers/netxml-ups.c, drivers/nut-libfreeipmi.c,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_masterguard.c, drivers/openups-hid.c,
	  drivers/powercom.c, drivers/rhino.c, drivers/richcomm_usb.c,
	  drivers/riello.c, drivers/solis.c, drivers/tripplite_usb.c,
	  m4/ax_c_pragmas.m4, server/netssl.c, server/sockdebug.c,
	  server/upsd.c, tools/nut-scanner/scan_avahi.c: Fix clang-18
	  warnings about switch clauses without a default label [#2588]
	* include/str.h: use a more reliable definition of NUT_STRARG doing
	  nothing [#2585]
	* m4/ax_c_pragmas.m4, docs/configure.txt: let
	  `--enable-NUT_STRARG-always` setting have `auto` detection by
	  default [#2585]  Flips to "yes" for gcc-13.x (clang having issues
	  is not proven at the moment)
	* m4/ax_c_pragmas.m4, docs/configure.txt, UPGRADING.adoc,
	  docs/nut.dict: introduce `configure --enable-NUT_STRARG-always`
	  setting [#2585]

2024-08-06  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/usbhid-ups.c: when defaulting lbrb_log_delay_sec, suggest
	  also setting the lbrb_log_delay_without_calibrating flag [#2347]

2024-08-05  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, docs/nut.dict: NEWS.adoc: mention fixes for fallback
	  `localtime_r()` and `gmtime_r()` [#1611, #2583]
	* drivers/huawei-ups2000.c: adapt to fixed gmtime_r() when a macron
	  in WIN32 fallbacks [#1611, #2583]
	* include/timehead.h: fix hacky macro localtime_*() fallbacks for
	  WIN32 builds [#2583, #1611]  Partially inspired by
	  /mingw64/include/time.h  NOTE: Unlike linux+mingw cross-builds, the
	  semi-native ones on Windows with MSYS2 do not enforce
	  _POSIX_THREAD_SAFE_FUNCTIONS and so can lack the optional
	  declarations in the file above.
	* tools/nut-scanner/nut-scanner.c: no longer need to #include
	  "nut_version.h" [#2573, #2097]
	* configure.ac, include/timehead.h: check also for mere declarations
	  of localtime_r() etc.
	* configure.ac: report checking for lack of both decls and linkage
	  for time methods
	* configure.ac: clarify that failed AC_CHECK_FUNCS() are about linker
	* scripts/Windows/build-mingw-nut.sh, configure.ac: promote use of
	  _POSIX_THREAD_SAFE_FUNCTIONS  It seems C++ builds using NUT
	  config.h => timehead.h on WIN32 struggle uniquely (as C ones did
	  not) with alleged redefinition of localtime_r() and gmtime_r()
	  which is in fact optionally present in headers but not found by
	  linking tests in AC_CHECK_FUNCS().
	* configure.ac: refactor with CODE_TIMEINCL
	* drivers/apc_modbus.c: indent code with TABs (cosmetic)
	* drivers/apc_modbus.c: indent optional includes (cosmetic)
	* tools/nutconf/nutconf-cli.cpp: indent nested preprocessor
	  directives (include)
	* common/common.c: nut_report_config_flags(): refactor with
	  describe_NUT_VERSION_once() copy of the code [#2573]
	* tools/nutconf/nutconf-cli.cpp: add a FIXME comment about lack of
	  "-D" CLI option
	* tools/nutconf/nutconf-cli.cpp: add a version printout to Usage
	  (both help and new standalone option) [#2573]
	* tools/nutconf/nutconf-cli.cpp: use just the xbasename() of prog
	  name [#2573]
	* drivers/upsdrvctl.c: refactor to common handling of "-V" CLI arg
	  and use of print_banner_once() [#2375]
	* drivers/main.c: upsdrv_banner(): rearrange the main version string
	  to follow common NUT pattern [#2573]
	* tools/nut-scanner/Makefile.am, tools/nut-scanner/nut-scanner.c:
	  tools/nut-scanner/nut-scanner.c: refactor to know its "progname"
	  and pass it to print_banner_once() and show_usage() [#2573]  Also
	  update tools/nut-scanner/Makefile.am to have the symbols in
	  libnutscan
	* tools/nut-scanner/nut-scanner.c: refactor to use
	  print_banner_once() with its copy of describe_NUT_VERSION_once()
	  instead of large code chunk in the program [#2573]
	* common/common.c: revise print_banner_once() to use
	  describe_NUT_VERSION_once() rather than directly UPS_VERSION
	  [#2573]
	* common/common.c, include/common.h: introduce a common method for
	  NUT programs to describe_NUT_VERSION_once() [#2573]
	* drivers/main.c: avoid printing upsnotify() warnings when just
	  querying program versions [#2573]
	* clients/upsc.c, clients/upscmd.c, clients/upslog.c,
	  clients/upsmon.c, clients/upsrw.c, drivers/main.c,
	  scripts/Windows/wininit.c, server/upsd.c,
	  tools/nut-scanner/nut-scanner.c: Revise programs to
	  print_banner_once(), use same style of comment for "-V" handling
	  [#2573]
	* clients/upsc.c, clients/upscmd.c, clients/upslog.c,
	  clients/upsmon.c, clients/upsrw.c, server/upsd.c: Revise program
	  descriptions in help(), use same pattern for message layout there
	  [#2573]
	* common/common.c, include/common.h: introduce a common method for
	  NUT programs to print_banner_once() [#2573]
	* NEWS.adoc: Fix uses of `banner_is_disabled()` to not preclude CLI
	  `-V` printouts [#2573]

2024-08-02  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/scan_usb.c: nutscan_scan_usb(): avoid
	  fatal_with_errno(), emit upsdebug_with_errno(0, ...) and return
	  NULL [#2575]  Commented away idea: assume nutscan_avail_usb=0 if we
	  failed to init or malloc? TODO: This might preclude cleanly
	  unloading the library, and also the problem of one loop cycle might
	  not repeat on another.
	* tools/gitlog2version.sh: in debug, report also SEMVER [#1949]

2024-08-01  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/upsdrvsvcctl/upsdrvsvcctl.in, docs/man/upsdrvsvcctl.txt:
	  complete the "upsdrvsvcctl status" feature [#2567]
	* scripts/upsdrvsvcctl/upsdrvsvcctl.in, docs/man/upsdrvsvcctl.txt:
	  add an option to display binary version (and fix the script one in
	  help) [#2567]
	* scripts/upsdrvsvcctl/upsdrvsvcctl.in: make path to UPSDRVCTL a
	  variable, like ENUMERATOR is used [#2567]
	* NEWS.adoc: new dstate LOGOUT command [#2567]
	* drivers/upsdrvquery.c: upsdrvquery_close(): track if we loggedOut
	  and so not complain about disconnection faults [#2567]
	* drivers/upsdrvctl.c: status: revise return values of
	  checkprocname() vs. sendsignalpid(), unite via pidAlive [#2567]
	* tools/gitlog2version.sh: comment why we repeat TRUNK candidate
	  branches, and add master in the end too [#1949]
	* drivers/dstate.c, drivers/dstate.h: drivers/dstate.{c,h}: err on
	  the safe side with LOGOUT, and only mark the connection - close
	  later [#2567]
	* server/netmisc.c: update net_help()
	* drivers/upsdrvquery.c: upsdrvquery_close(): take advantage of the
	  new LOGOUT command [#2567]
	* drivers/dstate.c, docs/sock-protocol.txt: introduce a LOGOUT
	  command [#2567]  Now that the driver Unix socket / Windows named
	  pipe connections can come and go (sibling drivers, `upsdrvctl
	  status`...) it is not pretty to see logged messages about an
	  unexpected connection loss. Having it coincide with a LOGOUT is
	  better for troubleshooting.
	* drivers/upsdrvctl.c, docs/man/upsdrvctl.txt: "status": detect a
	  RUNNING or not program using PID from *either* PID file or socket
	  protocol [#2567]
	* docs/man/upsdrvctl.txt: add an example of "list" with hidden banner
	  [#2567]
	* common/common.c: parsepid(): set errno in case of errors [#2567]
	* drivers/mge-hid.c: add Eaton 9En000 models "iau" suffix, and 9E3000
	  "ixl"/"ixlau" [#2562]  Per
	  https://github.com/networkupstools/nut/pull/2571#issuecomment-2261450468
	* drivers/mge-hid.c: add Eaton 9En000 models "iau" suffix, and 9E3000
	  "ixl"/"ixlau" [#2562]  Per
	  https://github.com/networkupstools/nut/pull/2571#issuecomment-2261450468

2024-08-01  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/upsdrvsvcctl.in: adjust SVC_NAME_WIDTH to
	  framework type too [#2567]
	* scripts/upsdrvsvcctl/upsdrvsvcctl.in: allow caller to customize
	  ENUMERATOR and UPSDRVCTL when testing [#2567]

2024-07-31  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/mge-hid.c: add Eaton 9E1000* models, and "ir" suffix for
	  rack [#2562]  According to
	  https://github.com/networkupstools/nut/pull/2571#issuecomment-2261337602
	* drivers/mge-hid.c: add Eaton 9E1000* models, and "ir" suffix for
	  rack [#2562]  According to
	  https://github.com/networkupstools/nut/pull/2571#issuecomment-2261337602
	* drivers/libusb0.c: libusb_open(): try to re-fetch
	  curDevice->Vendor, Product, Serial if NULL, after claiming it by
	  other criteria [#2562]
	* drivers/libusb0.c: libusb_open(): comment about `if
	  (!callback){...}` check
	* drivers/libusb1.c: nut_libusb_open(): try to re-fetch
	  curDevice->Vendor, Product, Serial if NULL, after claiming it by
	  other criteria [#2562]
	* drivers/libusb1.c: nut_libusb_open(): comment about `if
	  (!callback){...}` check
	* drivers/mge-hid.c: rephrase the presumed 9E2000*i* model [#2562]  I
	  did not find any actual mentions of plain "9E2000" without an "i",
	  only these: https://www.eaton.com/tr/en-gb/skuPage.9E2000I.html
	  Also prepared for "9E3000i" models while here.
	* tools/gitlog2version.sh: actively discover a newest known
	  NUT_VERSION_GIT_TRUNK if not provided explicitly [#1949]
	* drivers/upsdrvctl.c: fix use of nut_sendsignal_debug_level; add
	  nut_upsdrvquery_debug_level hushing around
	  upsdrvquery_connect_drvname_upsname() attempt [#2567]
	* drivers/upsdrvquery.c: upsdrvquery_connect(): fix pidfn=>sockname
	  var naming
	* drivers/upsdrvctl.c, docs/man/upsdrvctl.txt: status: print a header
	  with column names [#2567]
	* docs/man/upsdrvctl.txt: status: clarify PF_PID negative values
	  [#2567]
	* docs/man/upsdrvctl.txt: status: clarify print-out syntax just after
	  the example [#2567]
	* conf/nut.conf.sample: prepare to `export` envvars which are NUT
	  program configuration tweaks
	* docs/man/nut.conf.txt: update IMPORTANT NOTES
	* conf/nut.conf.sample: update heading comments (IMPORTANT NOTES)
	* drivers/upsdrvctl.c: status_driver(): no need to check for NULLness
	  of conn->buf [#2567]
	* drivers/upsdrvctl.c: status_driver(): upsdrvquery_close(conn) after
	  use [#2567]
	* scripts/upsdrvsvcctl/upsdrvsvcctl.in, docs/man/upsdrvsvcctl.txt:
	  provide a basic "status" operation [#2567]
	* drivers/upsdrvctl.c, docs/man/upsdrvctl.txt: complete "upsdrvctl
	  status" with socket protocol queries [#2567]
	* common/common.c, include/common.h: refactor parsepidfile() out of
	  sendsignalfn()
	* drivers/dstate.c, docs/sock-protocol.txt, docs/nut.dict: implement
	  DUMPVALUE and DUMPSTATUS queries
	* drivers/dstate.c, docs/sock-protocol.txt, docs/nut.dict: implement
	  GETPID query
	* drivers/dstate.c: refactor st_tree_dump_conn_one_node() out of
	  st_tree_dump_conn() [#2567]

2024-07-30  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/maintainer-guide.txt: note bumping wikipedia article
	* NEWS.adoc, docs/man/upsdrvctl.txt, drivers/upsdrvctl.c:
	  drivers/upsdrvctl.c: add "status" operation (initially triial
	  skeleton) [#2567]
	* drivers/upsdrvctl.c: only log suggestions about exec debugging if
	  we would start or shutdown
	* drivers/upsdrvctl.c: comment why pidfn is not used in apparent
	  WIN32 codepaths
	* tests/NIT/nit.sh: introduce NUT_FOREGROUND_WITH_PID=true tweak
	* tools/gitlog2version.sh: Set exit code based on availability of
	  default version info data point [#1949]
	* tools/gitlog2version.sh: getver_git(): "return 1" if we fail to
	  discover DESC or BASE data [#1949]
	* tools/gitlog2version.sh: report if Git-based version info discovery
	  failed and we fall back [#1949]
	* tools/gitlog2version.sh: only consider BASE after we get DESC
	  successfully (and abort if there is no common BASE) [#1949]
	* tools/gitlog2version.sh: refactor with a separate
	  NUT_VERSION_GIT_ALWAYS_DESC toggle envvar [#1949]
	* server/netget.c: get_var_server(): refer to PACKAGE_URL (and
	  hard-coded "https://www.networkupstools.org/" if PACKAGE_URL points
	  completely elsewhere) [#1949]  Tested with "GET VAR dummy
	  server.info" command
	* server/netmisc.c: net_ver(): refer to PACKAGE_URL (and hard-coded
	  "https://www.networkupstools.org/" if PACKAGE_URL points completely
	  elsewhere) [#1949]  Tested with "VER" command
	* tools/gitlog2version.sh: default PACKAGE_URL with "www" in the
	  string [#1949]
	* clients/upslog.c, clients/upsmon.c, drivers/main.c, server/upsd.c:
	  use banner_is_disabled() checking [#1789 vs. #316]
	* drivers/upsdrvctl.c, docs/man/upsdrvctl.txt: use
	  banner_is_disabled() checking [#1789 vs. #316]
	* NEWS.adoc, UPGRADING.adoc, common/common.c, conf/nut.conf.sample,
	  include/common.h: Introduce `NUT_QUIET_INIT_BANNER` envvar support
	  and `banner_is_disabled()` common method [balancing issues #1789
	  vs. #316]
	* conf/nut.conf.sample: document NUT_QUIET_INIT_SSL missed before
	  [#1662]
	* conf/nut.conf.sample, docs/man/nut.conf.txt: document
	  NUT_QUIET_INIT_UPSNOTIFY missed before [#2136]
	* conf/nut.conf.sample, docs/man/nut.conf.txt: document NUT_DEBUG_PID
	  missed before [#2118]
	* drivers/upsdrvctl.c: main(): revise reporting of command_name in
	  debug logs [#2567]  ...and avoid a potential argv array overflow
	  (or at least useless NULL reporting) along the way
	* drivers/upsdrvctl.c: send_all_drivers(): drop redundant "ups =
	  upstable" assignments
	* NEWS.adoc, docs/man/upsdrvctl.txt, drivers/upsdrvctl.c:
	  drivers/upsdrvctl.c: add "list" operation [#2567]

2024-07-29  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/maintainer-guide.txt: suggest also use of `VERSION_FORCED` and
	  `VERSION_FORCED_SEMVER` files in our release rituals, we have
	  support anyway and want to test it in-vivo [#1949]
	* NEWS.adoc, docs/man/usbhid-ups.txt, docs/nut.dict,
	  drivers/usbhid-ups.c: drivers/usbhid-ups.c,
	  docs/man/usbhid-ups.txt: introduce lbrb_log_delay_sec et al [#2347]
	* drivers/usbhid-ups.c: track start and end timestamps of calibration
	  [#2347]
	* NEWS.adoc, docs/new-drivers.txt, drivers/dstate.c,
	  drivers/dstate.h: drivers/dstate.{c,h}, docs/new-drivers.txt,
	  NEWS.adoc: introduce status_get()
	* drivers/usbhid-ups.c: avoid "\n" starting an upsdebugx() message
	  That "\n" gets printed as "#012"
	* NEWS.adoc: document the recent fixes for apcsmart [#704]
	* drivers/apcsmart.c: upsdrv_updateinfo(): if dstate_is_stale, log if
	  we fix it [#704]
	* drivers/apcsmart.c: upsdrv_updateinfo(): if dstate_is_stale, try to
	  reconnect every 60 retry attempts [#704]
	* drivers/apcsmart.c: upsdrv_updateinfo(): if dstate_is_stale, try to
	  flush the incoming data buffer [#704]
	* drivers/apcsmart.c: upsdrv_updateinfo(): if dstate_is_stale, retry
	  slowly [#704]
	* drivers/apcsmart.c: update upsdebugx() to report __func__ where
	  they did not
	* NEWS.adoc, docs/nut.dict, drivers/apcsmart.c: drivers/apcsmart.c:
	  constrain strcpy() => strncpy()  NOTE: Further improvement is
	  possible in that strncpy() does not guarantee a NUL byte in the end
	  of resulting string (if input is too long, it is only truncated).
	* drivers/apcsmart.c: revise comments and log messages

2024-07-28  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am: distribute VERSION_FORCED and/or VERSION_FORCED_SEMVER
	  if present [#1949]
	* docs/maintainer-guide.txt: clarify use of annotated Git tags
	  [#1949]
	* docs/maintainer-guide.txt: clarify for `tools/gitlog2version.sh`
	  now in the loop [#1949]
	* drivers/snmp-ups.h: neuter also PACKAGE_URL if present, to avoid
	  conflict with net-snmp-config.h [#1949]
	* tools/nut-scanner/scan_snmp.c: neuter also PACKAGE_URL if present,
	  to avoid conflict with net-snmp-config.h [#1949]
	* NEWS.adoc, data/driver.list.in, drivers/mge-hid.c:
	  drivers/mge-hid.c, NEWS.adoc: try to recognize Eaton 9E model and
	  info [#1925]  Also handle "unknown 2000" assuming it is a mis-read
	  "Eaton 9E 2000(i?)" which refused to tell libusb its
	  vendor/product/serial strings.  This may be the answer to such
	  issues as #1925, #2380 (re-opened), #2492

2024-07-27  Jim Klimov <jimklimov+nut@gmail.com>

	* .gitignore, UPGRADING.adoc, ci_build.sh, tools/gitlog2version.sh:
	  tools/gitlog2version.sh: allow NUT_VERSION_FORCED_SEMVER for some
	  distros [#1949]  Test:  :; ./clients/upsmon -DDV Network UPS Tools
	  upsmon 2.8.2.404.365-769-g96f0c9cb3 0.000000     [D1] Network UPS
	  Tools version 2.8.2.404.365-769-g96f0c9cb3 (development iteration
	  after 1.1.1) built with clang version 16.0.6...
	* .gitignore, UPGRADING.adoc, ci_build.sh, tools/gitlog2version.sh:
	  tools/gitlog2version.sh, ci_build.sh: allow VERSION_FORCED for some
	  distros [#1949]
	* tools/gitlog2version.sh: update comment [#1949]
	* Makefile.am, autogen.sh, configure.ac, include/Makefile.am,
	  tools/gitlog2version.sh: tools/gitlog2version.sh et al: change
	  configurable vars to NUT_VERSION_* namespace [#1949]
	* docs/config-prereqs.txt: kudos to Termux
	* autogen.sh: kill obsolete nut_version.h during regen [#1949]
	* autogen.sh, configure.ac: configure.ac: drop square brackets around
	  macro in AC_INIT [#1949]  Per suggestion from
	  https://github.com/NixOS/nix/issues/5832

2024-07-26  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/gitlog2version.sh: only PREFER_GIT blindly if abs_top_srcdir
	  is a git workspace [#1949]
	* tools/nut-scanner/nut-scanner.c: hush compiler warnings about
	  unreachable code paths with NUT_VERSION_IS_RELEASE macro decisions
	  [#1949]
	* common/common.c: hush compiler warnings about unreachable code
	  paths with NUT_VERSION_IS_RELEASE macro decisions [#1949]
	* autogen.sh: update comment about AC_INIT complaints for
	  m4_esyscmd_s() [#1949]
	* configure.ac: update comment about AC_INIT complaints for
	  m4_esyscmd_s() [#1949]
	* tools/gitlog2version.sh: provide a fallback for older git which
	  does not know how to --exclude [#1949]
	* ci_build.sh: check_gitignore(): define FILE_GLOB_EXCLUDE
	  differently [#1949]
	* common/common.c: convert nut_report_config_flags() to more
	  definitive behavior with NUT_VERSION_IS_RELEASE flag and
	  NUT_VERSION_SEMVER_MACRO string [#1949]
	* tools/nut-scanner/nut-scanner.c: use NUT_VERSION_IS_RELEASE and
	  NUT_VERSION_SEMVER_MACRO when printing version [#1949]  Note this
	  is a custom printer, separate from common.c
	* common/common.c, include/Makefile.am: include/Makefile.am:
	  nut_version.h: inject also NUT_VERSION_SEMVER_MACRO and
	  NUT_VERSION_IS_RELEASE [#1949]
	* configure.ac: introduce NUT_SOURCE_GITREV_IS_RELEASE and
	  NUT_SOURCE_GITREV_SEMVER [#1949]
	* ci_build.sh: update suggestion about Homebrew envvar setting
	  [#2522]
	* drivers/libshut.c: shut_control_msg(): restrict memcpy() amount
	  Avoid warning: libshut.c:1296:25: error: 'memcpy' forming offset
	  [11, 17] is out of the bounds [0, 11] of object 'shut_pkt' with
	  type 'unsigned char[11]' [-Werror=array-bounds=]
	* configure.ac: set PACKAGE_TARNAME and PACKAGE_URL verbatim via
	  AC_INIT() [#1949]
	* docs/config-prereqs.txt, docs/nut.dict: clarify envvar pre-sets for
	  MacOS/Homebrew [#2522, #2555]
	* common/common.c: compareprocname(): comment about libtool-wrapped
	  developer builds [#2463]
	* configure.ac: revise injection of "-O0" into debug-able C code
	  builds on some platforms
	* autogen.sh: add line separators around big blocks of scripted
	  messages
	* ci_build.sh: check_gitignore(): define FILE_GLOB_EXCLUDE
	  differently [#1949]

2024-07-25  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: clarify further work possible about NUT versioning
	  support [#1949]
	* NEWS.adoc, docs/nut.dict, UPGRADING.adoc: announce NUT
	  development-friendly versioning scheme [#1949]
	* tools/Makefile.am: EXTRA_DIST the gitlog2version.sh helper [#1949]
	* .gitignore, Makefile.am, autogen.sh, ci_build.sh,
	  tools/gitlog2version.sh: tools/gitlog2version.sh et al: add support
	  for (taballed) VERSION_DEFAULT file [#1949]
	* configure.ac: provide m4_esyscmd_s for builds with older autotools
	  releases [#1949]
	* configure.ac: refactor to use tools/gitlog2version.sh directly in
	  AC_INIT without hacks [#1949]
	* tools/gitlog2version.sh: refactor to share more code; introduce
	  PREFER_GIT toggle [#1949]
	* tools/gitlog2version.sh: add WANT_VER query support, 3-digit
	  SEMVER, and URL, and IS_RELEASE [#1949]
	* ci_build.sh: check_gitignore(): introduce FILE_GLOB_EXCLUDE and
	  handle FILE_GLOB allowing for multi-token values

2024-07-24  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: set PACKAGE_TARNAME and PACKAGE_URL [#1949]
	* configure.ac, include/Makefile.am: use consistently the
	  tools/gitlog2version.sh for version info [#1949]
	* tools/gitlog2version.sh: introduce new helper script to parse NUT
	  structured version from Git (if available) [#1949]
	* m4/nut_check_aspell.m4: avoid "exec -- 2>&1" trick, not all shells
	  like it
	* configure.ac: avoid square brackets in m4 script [#1949]

2024-07-23  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/sock-protocol.txt: update with examples of propagated flag
	  names [#266]
	* server/netset.c: comment about true meaning of "!val" clause [#266]
	* docs/net-protocol.txt: update examples of invalid numbers [#265]
	* server/netget.c: get_type(): reword logged message for assuming a
	  NUMBER [#266]
	* UPGRADING.adoc: document NUT_DEBUG_SYSLOG and its possible impact
	  on future packaging [#2394]

2024-07-22  Jim Klimov <jimklimov+nut@gmail.com>

	* server/netget.c: get_type(): report assuming UPS[%s] variable %s is
	  a NUMBER to help catch code that did not set the flags [#266]
	* server/sstate.c: fix upsdebugx() and upslogx() calls to refer to
	  __func__ and not hard-coded strings [#266]
	* drivers/dstate.c: fix upsdebugx() and upslogx() calls to refer to
	  __func__ and not hard-coded strings [#266]
	* common/state.c: fix upsdebugx() and upslogx() calls to refer to
	  __func__ and not hard-coded strings [#266]  This is more
	  streamlined and also fixes some mis-attributed messages (evolution?
	  copy-paste?)
	* server/netset.c: set_var(): trace-log why this method errors out
	  [#266]
	* drivers/main.c: comment about immutable (or not)
	  driver/default/override dstate values [#266]
	* common/state.c: log about not-updating an immutable value [#266]
	* clients/upsclient.c: when host is known NULL, report that directly,
	  no need for NUT_STRARG() [#2512]
	* common/common.c: compareprocname(): fix basename comparison
	  (copy-paste typo) [#2463]
	* common/common.c: refactor sendsignalpid() to check
	  checkprocname_ignored() and getprocname(pid) once for several tests
	  against its value, and report it in the end [#2463]
	* include/common.h, common/common.c: refactor apart
	  checkprocname_ignored() from checkprocname() and compareprocname()
	  [#2463]
	* include/common.h, common/common.c: refactor apart compareprocname()
	  from checkprocname() [#2463]
	* conf/hosts.conf.sample, conf/nut.conf.sample, conf/ups.conf.sample,
	  conf/upsd.conf.sample, conf/upsd.users.sample,
	  conf/upsmon.conf.sample.in, conf/upssched.conf.sample.in,
	  conf/upsset.conf.sample, docs/man/hosts.conf.txt,
	  docs/man/nut.conf.txt, docs/man/ups.conf.txt,
	  docs/man/upsd.conf.txt, docs/man/upsmon.conf.txt,
	  docs/man/upssched.conf.txt, docs/man/upsset.conf.txt:
	  docs/man/*.conf.txt, conf/*.sample*: note about ASCII-only contents
	  of parsed config files [#2543]
	* docs/nut.dict: update docs/nut-names.txt with items defined by
	  42ITy NUT fork [#2339]
	* NEWS.adoc: update docs/nut-names.txt with items defined by 42ITy
	  NUT fork [#2339]
	* drivers/usbhid-ups.c, NEWS.adoc: for devices with VendorID=`0x06da`
	  (Phoenixtec) suggest trying `nutdrv_qx` [#334]

2024-07-20  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: document fix of prefix for custom distchecks [#2541]
	* Makefile.am: re-define "prefix" to help both native distcheck and
	  its sub-make brethren pass [#2541]

2024-07-20  Alejandro González <me@alegon.dev>

	* drivers/cps-hid.c: support `ups.firmware` and `input.sensitivity`
	  These variables were tested to work fine on a CP1350EPFCLCD UPS.
	* drivers/cps-hid.c: use consistent indentation in recently added
	  code

2024-07-19  Jim Klimov <jimklimov@gmail.com>

	* Makefile.am, scripts/Makefile.am, scripts/udev/Makefile.am: use
	  AM_MAKEFLAGS when calling $(MAKE)
	* scripts/augeas/Makefile.am: EXTRA_DIST lens templates (including
	  the generated nutupsconf.aug.in) if not installing as DATA
	* Makefile.am: pass DISTCHECK_CONFIGURE_FLAGS explicitly to sub-makes
	  for different distcheck scenarios [#2541]
	* ci_build.sh: update log-trace messages about default-tgt:* running
	  a sequential or parallel build
	* ci_build.sh: update log-trace messages about Homebrew

2024-07-19  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: update for cps-hid bump [#2540]
	* drivers/cps-hid.c: tone down the version bump [#2540]
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  update MacOS build agent setup [#2522]

2024-07-18  Jim Klimov <jimklimov@gmail.com>

	* Jenkinsfile-dynamatrix: do not build "pure autoconf default"
	  scenario on MacOS+Homebrew
	* docs/config-prereqs.txt: update about NUT CI Jenkins agent on MacOS

2024-07-18  Jim Klimov <jimklimov+nut@gmail.com>

	* server/upsd.c: fix build on systems without IPV6_V6ONLY
	* configure.ac, tools/nut-scanner/nut-scanner.c:
	  tools/nut-scanner/nut-scanner.c: update build for systems that lack
	  all getifaddr() related methods [#2244]
	* common/str.c, configure.ac, include/nut_float.h: Provide fallback
	  strtof() for platforms where it is missing
	* include/timehead.h, configure.ac, common/Makefile.am,
	  common/timegm_fallback.c: add a fallback timegm()
	* configure.ac: refactor discovery of SEMLIBS (may be needed to
	  AX_RUN_OR_LINK_IFELSE() just a bit below) [#2522]
	* tools/nut-scanner/nut-scan.h, configure.ac: sem_open() usage needs
	  O_CREAT header [#2522]
	* clients/upssched.c: indent preprocessor clauses
	* tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/scan_*: typo fix from copy-pasted %i=>PRIuSIZE
	  [#2522]
	* tools/nut-scanner/nut-scanner.c: include nut_stdint.h always, not
	  only in threaded builds [#2522]

2024-07-17  Jim Klimov <jimklimov@gmail.com>

	* Makefile.am: check-scripts-syntax: fix to ignore old /bin/bash and
	  try something else if possible  MacOS ships 3.x and does not grok
	  our syntax; their HomeBrew version is ok.
	* configure.ac, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/nutscan-init.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/*: add ability to use named semaphores [#2522]
	* configure.ac: add a sem_open() detector of named semaphore support
	  [#2522]
	* configure.ac: try to run sem_init() detector to see if it is usable
	  [#2522]  Should fail e.g. on MacOS where it is present in headers
	  but not implemented and throws deprecation warnings which our
	  compile+link(+run) check can use to rule out the support.
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  note temurin JDK installation in MacOS/HomeBrew section
	* docs/config-prereqs.txt: fix typo in NetBSD section

2024-07-17  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/nut-scanner.c: bump RESERVE_FD_COUNT for NetSNMP
	  use of files [#2511]
	* m4/nut_check_libusb.m4: differentiate native and cross mingw
	  builds, they vary in preferences
	* NEWS.adoc: when cross-building with a non-cross pkg-config program,
	  neuter its PKG_CONFIG_LIBDIR
	* docs/Makefile.am: adjust to possibility of repeated date+author
	  title lines [#2510]  While we group by those (by default,
	  overridable) when generating the `ChangeLog`, we ignore the e-mail
	  for comparisons -- and different signatures can matter!
	* m4/nut_check_pkgconfig.m4: when cross-building with a non-cross
	  pkg-config program, neuter its PKG_CONFIG_LIBDIR  Imported from
	  wxWidgets project; their license is LGPL-based with extra
	  permissions:
	  https://github.com/wxWidgets/wxWidgets/blob/master/docs/licence.txt
	* m4/nut_check_pkgconfig.m4: report PKG_CONFIG_PATH and `pkg-config
	  --variable pc_path pkg-config` for troubleshooting

2024-07-17  Alejandro González <me@alegon.dev>

	* data/driver.list.in, drivers/cps-hid.c: drivers/cps-hid.c: support
	  variables available on CP1350EPFCLCD UPS

2024-07-16  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, configure.ac, docs/nut.dict, include/Makefile.am,
	  include/nut_bool.h, m4/nut_check_bool.m4, tests/.gitignore,
	  tests/Makefile.am, tests/nutbooltest.c: configure.ac,
	  m4/nut_check_bool.m4, include/nut_bool.h, tests/nutbooltest.c et
	  al: introduce a NUT_CHECK_BOOL scriptlet and a header with
	  nut_bool_t type [#1176]  Chose to use a unique type name to avoid
	  conflicts with third-party headers which deliver a `bool_t`
	  (currently commonly hacked into many NUT sources).  Using
	  lower-cased `true` and `false` values, hoping for maximum
	  compatibility with C99 and newer language standards (if the
	  compilers do implement them on whatever obscure platform NUT gets
	  built on, and then our new `nut_bool_t` definition can be just an
	  alias for what the language gives us).  A test case was added to
	  make sure it behaves as expected on different systems.  Converting
	  the sources from their custom type definitions and usages would be
	  a separate step.
	* drivers/bcmxcp.c, drivers/belkin-hid.c, drivers/isbmex.c,
	  drivers/libhid.c, drivers/powercom.c, drivers/powerp-bin.c,
	  drivers/powerp-txt.c, drivers/tripplite.c, drivers/tripplite_usb.c:
	  drivers/*.c: switch to #include "nut_float.h" instead of direct
	  <math.h> and/or <float.h> [#1176]
	* tools/nut-scanner/scan_snmp.c: cosmetic fixes, reconcile with DMF
	  branch
	* Makefile.am, NEWS.adoc, UPGRADING.adoc: for ChangeLog generation
	  from git metadata, default to
	  HANGELOG_REQUIRE_GROUP_BY_DATE_AUTHOR=true [#2510]
	* tools/gitlog2changelog.py.in: fixup! tools/gitlog2changelog.py.in:
	  cosmetic fixes
	* tools/gitlog2changelog.py.in: support
	  CHANGELOG_REQUIRE_GROUP_BY_DATE_AUTHOR mode [#2510]
	* tools/gitlog2changelog.py.in: cosmetic fixes
	* tools/gitlog2changelog.py.in: comment about possible interleaved
	  date+author entries [#2510]
	* docs/Makefile.am: "doc" target as part of "all" is not alone there
	  [#2510]
	* docs/Makefile.am: actually do fail with
	  ChangeLog.html-contentchecked recipe hits [#2510]  ...except for
	  when we deliberately generated nothing and report it in the
	  document

2024-07-15  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: try to make sure we only build ChangeLog.adoc
	  once (or keep the first built copy in a parallel fanout) [#2510]
	* docs/Makefile.am: clarify the message about
	  DOC-CHANGELOG-GENERATE-WRAPPER to differentiate it better from the
	  real build [#2510]
	* README.adoc: avoid double-dash in the TIP block, this somehow
	  breaks PDF generation
	* README.adoc: make "NUT GitHub Star History Chart" visible only in
	  GitHub/HTML auto-rendering but not in static PDF docs
	* docs/nut.dict, docs/man/hwmon_ina219.txt: update for OI aspell
	  dictionaries
	* README.adoc: reword the GitHub stars image
	* clients/Makefile.am: dlname_filter(): use a shell function to avoid
	  mixing backticks and double-quotes (upsets ksh) [#2431]
	* tools/nut-scanner/nutscan-init.c, tools/nut-scanner/Makefile.am,
	  NEWS.adoc: use client/libupsclient-version.h for
	  SOFILE_LIBUPSCLIENT/SOPATH_LIBUPSCLIENT [#2431]
	* clients/Makefile.am, clients/.gitignore: generate a
	  client/libupsclient-version.h from libtool information file [#2431]
	* tools/nut-scanner/Makefile.am, NEWS.adoc: bump "minor" semver
	  component [#2511, #2431, #2450 et al]  Earlier bump went to "patch"
	  component, but here we actually have an API expansion (and more
	  exported symbols), so the more important component should be
	  bumped.
	* tools/nut-scanner/nut-scanner.c: count auto-selected subnets,
	  loudly warn if none were chosen [#2244]
	* tools/nut-scanner/nut-scan.h: minor typo fix in comment
	* tools/nut-scanner/nutscan-init.c, include/nut_platform.h,
	  m4/ax_realpath_lib.m4: move definition of SOEXT to the header
	  [#2431]  This would allow the multiplatform-aware library-picking
	  logic to be used elsewhere (e.g. DMF) eventually.
	* drivers/libhid.c, drivers/libhid.h: drivers/libhid.{c,h}: clarify
	  "*NUT* HID Library - User API" in file headings
	* clients/upsclient.c, clients/upsclient.h, clients/upsmon.c,
	  common/nutwriter.cpp, drivers/apc-mib.c, drivers/hwmon_ina219.c,
	  drivers/libhid.c, drivers/libhid.h, drivers/masterguard.c,
	  drivers/mge-utalk.h, drivers/microdowell.c, drivers/nutdrv_qx.c,
	  drivers/usbhid-ups.c, include/nut_platform.h, include/parseconf.h,
	  server/netssl.c, server/nut_ctype.h,
	  tools/nut-scanner/nut-scanner.c: *.{c,h}: Revise indentation of
	  nested preprocessor clauses/code - vol.2  Conform to NUT code style
	  guide, and satisfy pre-processors that insist on "traditional" code
	  layout by default (hash sign must start the line for them).
	* docs/config-prereqs.txt: for platforms that offer a choice of
	  python2/3 package names, separate its installation sample from the
	  big block of unambiguous packages [#2467]
	* m4/ax_realpath_lib.m4, tools/nut-scanner/nutscan-init.c: add HP-UX
	  *.sl file name patterns into the loop [#2431]

2024-07-12  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: if remaking ChangeLog.html due to failed content
	  check, remove the faulty file [#2510]
	* docs/Makefile.am: ChangeLog.html-contentchecked: no dependencies,
	  avoids (re-)generation and log messages [#2510]
	* NEWS.adoc, UPGRADING.adoc, docs/man/usbhid-ups.txt, docs/nut.dict,
	  drivers/powercom-hid.c, drivers/usbhid-ups.c:
	  drivers/powercom-hid.c, docs et al: add
	  powercom_sdcmd_byte_order_fallback to send shutdown/stayoff in old
	  byte order [#2480]
	* docs/Makefile.am: make a retry of ChangeLog.html more visible
	  [#2510]
	* docs/Makefile.am: avoid lots of noise about symlinks to
	  prep-src-docs
	* docs/Makefile.am: avoid unbalanced double-quotes inside backticks
	  [#2510]
	* tests/Makefile.am: avoid "$^" which BSD make does not always
	  resolve
	* scripts/python/Makefile.am: avoid "$^" which BSD make does not
	  always resolve [#2529]
	* scripts/Solaris/Makefile.am: avoid "$^" which BSD make does not
	  always resolve
	* docs/Makefile.am: use ChangeLog.html-contentchecked to retry
	  building a broken document (once) [#2510]
	* .gitignore, docs/Makefile.am: docs/Makefile.am: turn
	  ChangeLog.html-contentchecked into a standalone recipe [#2510]
	* docs/Makefile.am: sanity-check html-single ChangeLog.html - report
	  it as FAILED only once, and list the current size etc. [#2510]
	* scripts/Windows/build-mingw-nut.sh: do not complain so loudly about
	  missing optional cgi dir
	* scripts/Windows/build-mingw-nut.sh: check the built docs [#2510]
	* docs/Makefile.am: report the amount of times the first/second/last
	  entries were seen (if not 2) [#2510]
	* docs/Makefile.am: sanity-check html-single ChangeLog.html for
	  presence of a few key entries (exactly once) [#2510]
	* ci_build.sh, scripts/Windows/build-mingw-nut.sh: consistently
	  report "configure phase complete" and use of PARMAKE_FLAGS [#2510]
	  Note that scripted WIN32 cross-build currently is sequential-only
	  and only with the `make` from `PATH`.

2024-07-11  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/Makefile.am: revise *.po => *.mo generation [#2529]
	* scripts/valgrind/.valgrind.supp: sem_open is broken in some libc
	  implementations [#2511]  Per
	  https://forums.freebsd.org/threads/named-semaphore-uninitialized-bytes.84850/
	  apparently BSD libc and GLibc at least do suffer
	* scripts/valgrind/.valgrind.supp, tools/nut-scanner/Makefile.am,
	  tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-display.c,
	  tools/nut-scanner/nutscan-ip.c, tools/nut-scanner/nutscan-serial.c,
	  tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_ipmi.c,
	  tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_nut_simulation.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-scanner/scan_xml_http.c: scripts/valgrind/.valgrind.supp:
	  update titles for libssl suppressions
	* tools/nut-scanner/nutscan-init.c, tools/nut-scanner/scan_avahi.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-scanner/scan_xml_http.c: tools/nut-scanner/scan_*.c:
	  reconcile coding style some more [#2511]
	* tools/nut-scanner/scan_xml_http.c: nutscan_scan_xml_http_thready():
	  revise trace-logging and comment markup [#2511]

2024-07-10  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/scan_snmp.c, scripts/valgrind/.valgrind.supp:
	  constrain warnings about library methods [#2511]
	* tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_avahi.c,
	  scripts/valgrind/.valgrind.supp: constrain warnings about library
	  methods [#2511]
	* tools/nut-scanner/scan_snmp.c, scripts/valgrind/.valgrind.supp:
	  constrain libnetsnmp leak reports [#2511]  It seems that although
	  `init_snmp()` is called once, every use of the library initializes
	  some data which it then does not release, at least on the test
	  system here.
	* tools/nut-scanner/scan_xml_http.c: close broadcast socket too,
	  avoid FD leak [#2511]
	* tools/nut-scanner/scan_nut.c: list_nut_devices_thready(): free
	  allocations more reliably [#2511]
	* tools/nut-scanner/scan_snmp.c: track nut_initialized_snmp to only
	  init_snmp() once per library load [#2511]
	* tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c:
	  tools/nut-scanner/scan_*.c: drop remaining usage of WSAStartup()
	  overlooked before
	* tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/scan_*.c: initialize "stwS" and "stwST" to better
	  track semaphore usage in debugger
	* tools/nut-scanner/nut-scanner.c, tools/nut-scanner/nutscan-init.c,
	  tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_ipmi.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/*.c: refactor nutscan_free() to actively
	  lt_dlclose() the loaded library modules [#2511]  Avoid some memory
	  leak reports
	* common/common.c: nut_prepare_search_paths(): avoid an FD leak, and
	  comment what we do about "dirname" with and without realpath()
	  support
	* Makefile.am, NEWS.adoc, docs/developers.txt, docs/nut.dict,
	  scripts/Makefile.am, scripts/valgrind/.valgrind.supp,
	  scripts/valgrind/README.adoc, scripts/valgrind/valgrind.sh:
	  Introduce scripts/valgrind with helper script+data to trace memory
	  usage [#2511]
	* tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: tools/nut-scanner/scan_*: revise
	  "thready" scanning methods [#2511]  * Clearly name "thread-ready"
	  scanning methods that can be used standalone or from
	  pthread_create() constraints * Settle on "thready" methods freeing
	  caller's data (so we do not worry about doing it after the parallel
	  loops, or at a wrong moment before) * Unify code mark-up in the
	  files to facilitate later comparisons * Update some comments
	* NEWS.adoc, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/nutscan-init.c,
	  tools/nut-scanner/scan_ipmi.c: tools/nut-scanner/scan_ipmi.c,
	  nut-scan.h, nutscan-init.c, nut-scanner.c, NEWS.adoc: implement
	  parallel scanning for remote IPMI controllers [#2523]
	* UPGRADING.adoc: Revert "UPGRADING.adoc: hush the changes of PR for
	  issue #2523 until it is in the codebase"  This reverts commit
	  d710adef2eba7003a0b42ae2d38709a7204befb4: the feature is here now.
	* UPGRADING.adoc: hush the changes of PR for issue #2523 until it is
	  in the codebase
	* tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  use blank lines in fallback not-built-here methods markup (as in
	  other files)
	* UPGRADING.adoc: highlight API (and a bit of ABI) changes to
	  `libnutscan`, version bumped [#2244, #2523 et al]
	* drivers/nut-libfreeipmi.c: fix indentation (TAB vs SPACE)
	* clients/upsclient.h, drivers/nut-libfreeipmi.c,
	  drivers/usb-common.c, drivers/usb-common.h,
	  tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c:
	  *.{c,h}: Revise indentation of nested preprocessor clauses/code
	  Conform to NUT code style guide, and satisfy pre-processors that
	  insist on "traditional" code layout by default (hash sign must
	  start the line for them).
	* tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/scan_{nut,snmp,xml_http}.c: update comments
	* tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-display.c,
	  tools/nut-scanner/nutscan-init.c, tools/nut-scanner/nutscan-ip.h,
	  tools/nut-scanner/scan_avahi.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-scanner/scan_xml_http.c: tools/nut-scanner/*: update (C)
	  headers

2024-07-09  Jim Klimov <jimklimov@gmail.com>

	* tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/scan_{ipmi,snmp,xml_http}.c: comment concerns
	  about bracketed IPv6 in "port" values [#2512]
	* tools/nut-scanner/scan_nut.c: report discovered IPv4 addresses in
	  brackets [#2512]

2024-07-09  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/nut-scanner.c: add a warning comment about
	  bit-counting for `-m auto` [#2244, #2516]
	* tools/nut-scanner/nut-scanner.c: implement "-m auto" for two WIN32
	  APIs [#2516]
	* NEWS.adoc: update `nut-scanner -m auto` note - WIN32 is now
	  supported too [#2516]
	* tools/nut-scanner/nutscan-init.c, tools/nut-scanner/nutscan-ip.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: tools/nut-scanner/*: move WIN32
	  WSAStartup() rituals to nutscan_init() so they only run once and
	  for all [#2516]
	* common/common.c: revise debug-tracing of get_libname*() methods
	* configure.ac: fix location of NUT_CHECK_HEADER_IPHLPAPI call
	  [#2516]
	* configure.ac, tools/nut-scanner/Makefile.am: detect WIN32 support
	  of newer GetAdaptersAddresses() and/or older GetAdaptersInfo()
	  [#2516]
	* configure.ac: clarify why we call "cygpath" or "pwd -W", constrain
	  their warnings if they fail (wrong "pwd"), and report the outcome
	* configure.ac: avoid checking "${PWD}" as a tool name (is a shell
	  builtin)
	* m4/nut_check_headers_windows.m4: introduce
	  NUT_CHECK_HEADER_IPHLPAPI [#2516]
	* tools/nut-scanner/nut-scanner.c, tools/nut-scanner/scan_xml_http.c:
	  nut-scanner: convert NetXML scan to use nutscan_ip_ranges_iter*()
	  [#2511]
	* tools/nut-scanner/nut-scanner.c, tools/nut-scanner/scan_snmp.c:
	  nut-scanner: convert SNMP scan to use nutscan_ip_ranges_iter*()
	  [#2511]
	* tools/nut-scanner/nut-scanner.c, tools/nut-scanner/scan_nut.c:
	  nut-scanner: convert Old NUT scan to use nutscan_ip_ranges_iter*()
	  [#2511]
	* tools/nut-scanner/nut-scanner.c, tools/nut-scanner/scan_ipmi.c:
	  nut-scanner: convert IPMI scan to use nutscan_ip_ranges_iter*()
	  [#2511]
	* docs/man/Makefile.am, docs/man/nutscan_add_ip_range.txt,
	  docs/man/nutscan_free_ip_ranges.txt,
	  docs/man/nutscan_init_ip_ranges.txt,
	  docs/man/nutscan_stringify_ip_ranges.txt, docs/nut.dict,
	  tools/nut-scanner/nutscan-ip.c, tools/nut-scanner/nutscan-ip.h:
	  nut-scanner: introduce nutscan_stringify_ip_ranges() [#2244, #2511]
	* tools/nut-scanner/nutscan-ip.c: nutscan_add_ip_range(): save
	  irl.start_ip<=irl.stop_ip in alphanumeric comparison order [#2511]
	* NEWS.adoc, docs/man/Makefile.am, docs/man/nutscan_add_ip_range.txt,
	  docs/man/nutscan_free_ip_ranges.txt,
	  docs/man/nutscan_init_ip_ranges.txt,
	  docs/man/nutscan_ip_ranges_iter_inc.txt,
	  docs/man/nutscan_ip_ranges_iter_init.txt,
	  docs/man/nutscan_scan_ipmi.txt, docs/man/nutscan_scan_nut.txt,
	  docs/man/nutscan_scan_snmp.txt,
	  docs/man/nutscan_scan_xml_http_range.txt, docs/nut.dict,
	  tools/nut-scanner/nut-scan.h, tools/nut-scanner/nutscan-ip.c,
	  tools/nut-scanner/nutscan-ip.h: nut-scanner: implement iteration
	  across nutscan_ip_range_list_t collection [#2511]
	* tools/nut-scanner/nutscan-ip.h: add nutscan_ip_range_list_t
	  structure comments [#2244, #2511]
	* tools/nut-scanner/nutscan-ip.c: fix comment markup
	* docs/man/nutscan_add_ip_range.txt: update wording and structure
	  comments [#2244, #2511]
	* docs/man/nutscan_add_ip_range.txt: fix copy-paste typo in title
	  [#2244, #2511]
	* docs/man/Makefile.am: extend HTML_DEV_MANS_FICTION to be on par
	  with .3 man pages
	* docs/man/Makefile.am: move a comment up to cover more relevant
	  entries
	* docs/man/nut-scanner.txt, docs/nut.dict: docs/man/nut-scanner.txt:
	  clarify about text host names as start/stop/cidr IPs [#2519]

2024-07-08  Jim Klimov <jimklimov@gmail.com>

	* tools/nut-scanner/Makefile.am, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-init.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/scan_*.c: trace parallel scan ability init
	  [#2511]
	* tools/nut-scanner/nutscan-ip.c: /tools/nut-scanner/nutscan-ip.c:
	  wrap iterated IPv6 addresses in square brackets [#2512]
	* clients/upsclient.c: comment about bracketed IP addresses/host
	  names [#2512]
	* clients/upsclient.c: troubleshoot wrong upsname@hostname where only
	  hostname was expected [#2512]
	* clients/upsclient.c: cosmetic fix
	* clients/upsclient.c: troubleshoot wrong hostname [#2512]
	* clients/upsc.c: enable support for NUT_DEBUG_LEVEL envvar [#2512]

2024-07-08  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsclient.c: troubleshoot wrong upsname@hostname where only
	  hostname was expected - use NUT_STRARG() for safety [#2512]
	* docs/man/Makefile.am, docs/man/nutscan.txt,
	  docs/man/nutscan_add_ip_range.txt,
	  docs/man/nutscan_free_ip_ranges.txt,
	  docs/man/nutscan_init_ip_ranges.txt, docs/nut.dict,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/nutscan-ip.c,
	  tools/nut-scanner/nutscan-ip.h: nut-scanner code and docs: refactor
	  with nutscan_ip_range_list_t type for ip_ranges[] list and helper
	  metadata, and methods as part of libnutscan [#2244, #2511]  Not
	  bumping library version, because it was recently bumped as part of
	  other PRs about this issue. Technically the scope of the library
	  has been changed by new exported methods and header lines.
	* tools/nut-scanner/nut-scanner.c, tools/nut-scanner/nutscan-ip.h:
	  move ip_range_t definition into header [#2244]
	* tools/nut-scanner/nut-scan.h: move __cplusplus extern "C" guard up
	  to before we declare vars and types
	* docs/man/nut-scanner.txt, NEWS.adoc: (fixed) IPv6 addresses must be
	  passed in square brackets [#2512]
	* tools/nut-scanner/nut-scanner.c: strip square brackets around
	  start_ip/end_ip, if any [#2512]
	* tools/nut-scanner/nutscan-ip.c: nutscan_cidr_to_ip(): strip square
	  brackets around first_ip, if any [#2512]
	* tools/nut-scanner/nutscan-ip.c: nutscan_cidr_to_ip(): sanity-check
	  for cidr==null [#2512]
	* tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_nut.c: fix
	  order of WIN32 active init calls vs. pthread variable declarations
	  [#2511]
	* tools/nut-scanner/nut-scanner.c: debug-log the Parallel scan
	  support status in this build and run [#2511]
	* tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/scan_*.c: update some comments [#2511]
	* tools/nut-scanner/scan_xml_http.c: collapse single and multiple IP
	  address cases into one [#2512]  This should apply formatting from
	  nutscan_ip_iter_init() to single-IP scans like it happens for other
	  protocols already.  Also take the chance to rectify indentations
	  through parallel threads code.
	* tools/nut-scanner/scan_xml_http.c: comment where logical blocks end
	* tools/nut-scanner/nut-scanner.c: `-t timeout`: fix to use strtol()
	  not atol() [#2244]
	* tools/nut-scanner/nut-scanner.c: handle_arg_cidr(): fix to use
	  strtol() not atoi() [#2244]
	* tools/nut-scanner/nut-scanner.c: handle_arg_cidr(): report ignoring
	  a subnet by family before checking for mask length [#2244]
	* tools/nut-scanner/nut-scanner.c: handle_arg_cidr() rename "optarg"
	  to "arg_addr" [#2244]  Avoid warning about clash with a global
	  variable. Fallout of refactoring original code into a method.  Also
	  make it `const` as we do not change the original value anyway.
	* tools/nut-scanner/nut-scanner.c, docs/man/nut-scanner.txt,
	  docs/nut.dict, NEWS.adoc: handle_arg_cidr(): add `-m auto*/ADDRLEN`
	  mode [#2244]
	* tools/nut-scanner/nut-scanner.c: handle_arg_cidr(): log why some
	  discovered subnets are filtered out [#2244]
	* tools/nut-scanner/nut-scanner.c: handle_arg_cidr(): line-wrap long
	  printouts [#2244]
	* tools/nut-scanner/nut-scanner.c: handle_arg_cidr(): tabs (style)
	  [#2244]
	* tools/nut-scanner/nut-scanner.c: refactor handle_arg_cidr() logic
	  to un-indent it some more [#2244]
	* tools/nut-scanner/nut-scanner.c: refactor handle_arg_cidr() into a
	  separate method [#2244]  Allow for some shorter indentation

2024-07-06  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/nut_check_libavahi.m4: fix detection of SOFILE/SOPATH - we need
	  only the client library [#2431]
	* NEWS.adoc, docs/man/nut-scanner.txt,
	  tools/nut-scanner/nut-scanner.c: tools/nut-scanner/nut-scanner.c:
	  implement "-m auto{4,6}" modes to limit selection of ranges to
	  IPv4/IPv6 only [#2244]
	* tools/nut-scanner/nut-scanner.c, NEWS.adoc: neuter networking "-m
	  auto" support for WIN32 (needs different implementation) [#2244]
	* tools/nut-scanner/nut-scanner.c: separate POSIX headers from WIN32
	  ones (for networking "-m auto" support) [#2244]

2024-07-05  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/nut-scanner.c: `-m auto` discovery: use shorter
	  addr/mask buffers [#2244]
	* tools/nut-scanner/nut-scanner.c: comment some TODOs [#2244]
	* tools/nut-scanner/nut-scanner.c: `-m auto`: implement actually
	  converting discovered subnets into CIDR and adding to IP ranges for
	  scanning [#2244]
	* tools/nut-scanner/nut-scanner.c: flush existing start_ip/end_ip
	  before handling whatever value of `-m` option [#2244]
	* tools/nut-scanner/nut-scanner.c: quieter debug about "Discovering
	  getifaddrs()" [#2244]
	* tools/nut-scanner/nut-scanner.c: use pre-allocated struct
	  sockaddr_in{,6} so it is aligned how-ever the platform likes
	  [#2244]
	* tools/nut-scanner/nut-scanner.c: use fatalx() instead of
	  hackarounds [#2244]
	* tools/nut-scanner/nut-scanner.c: retain getifaddrs() findings
	  printout as a real upsdebugx() trail [#2244]  Originally I intended
	  to use these to check that the address parsing code works, and drop
	  the printf() of these messages. But if I collect them into a string
	  and upsdebug() it - why not, can help troubleshooting in real life
	  later, too.
	* tools/nut-scanner/nut-scanner.c: upscale sockaddr flags to
	  uintmax_t for debug printouts to be predictable on different
	  platforms [#2244]
	* NEWS.adoc, docs/man/nut-scanner.txt,
	  tools/nut-scanner/nut-scanner.c: tools/nut-scanner/nut-scanner.c et
	  al: prepare for `-m auto` mode with detection of configured network
	  interfaces
	* drivers/libshut.c: libshut_open(): use static structs and memcpy()
	  to actually fix alignment warnings
	* tools/nut-scanner/nut-scanner.c: quieter debug about add_ip_range()
	  in-/semi-valid inputs [#2244]
	* tools/nut-scanner/nutscan-ip.c: refactor to name IPv4 vars with a
	  "4" in the name, and use static structs and memcpy() to actually
	  fix alignment warnings [#2244]
	* tools/nut-scanner/nutscan-ip.c: nutscan_cidr_to_ip(): update
	  comments and logged reports to help troubleshooting [#2244]
	* tools/nut-scanner/nut-scanner.c: use xcalloc() instead of
	  hackarounds [#2244]
	* tools/nut-scanner/Makefile.am, NEWS.adoc: expose more of libcommon*
	  symbols in libnutscan to use them in nut-scanner [#2244]

2024-07-04  Jim Klimov <jimklimov@gmail.com>

	* .circleci/config.yml: report IP address when re-running the job
	  with SSH
	* docs/developers.txt: document pragmas for unused code/vars
	* docs/developers.txt: document indentation style for nested
	  macros/pragmas  Inspired by weird bugs in code analysis tools on
	  some platforms (and their headers).  *
	  https://stackoverflow.com/questions/42031921/unterminated-unconditional-directive-error-when-preprocessing-c-code
	  * https://bugs.llvm.org/show_bug.cgi?id=31886
	* ci_build.sh: jump through some hoops to avoid use of "cpp" program
	  name if we can
	* .circleci/config.yml: try to install MC into "Re-run job with SSH"
	  envs
	* .circleci/config.yml: allow use of latest brew packages
	* .circleci/config.yml: force use of CPP="clang -E" with clang builds
	* .circleci/config.yml: force use of python3.12 for MacOS/Homebrew as
	  of now
	* ci_build.sh: cater for netsnmp+openssl intimacy on MacOS/Homebrew
	* m4/ax_realpath_lib.m4: fall back to use "uname -m" for MacOS linker
	  arch
	* configure.ac: refactor with PROBE_OS_GROUP/PROBE_OS_USER to try
	  "id" where "getent" is missing  Primarily this facilitates
	  "in-place replacement" builds

2024-07-04  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/nut-scanner.txt: document that currently different IP
	  range scans do not parallelize together [#2244]  See also:
	  https://github.com/networkupstools/nut/issues/2511
	* tools/nut-scanner/nut-scanner.c: drop unused DEFAULT_TIMEOUT macro
	  [#2244]  We actually use DEFAULT_NETWORK_TIMEOUT from common.h same
	  as in clients/upsclient.c
	* tools/nut-scanner/nutscan-device.c: protect
	  nutscan_add_device_to_device() from adding a list to itself
	* tools/nut-scanner/nut-scanner.c: use run*() methods for most of the
	  non-threaded scans too [#2244]
	* tools/nut-scanner/nut-scanner.c, docs/man/nut-scanner.txt,
	  NEWS.adoc: introduce a way to scan several IP address ranges
	  [#2244]
	* docs/man/nut-scanner.txt, docs/nut.dict: docs/man/nut-scanner.txt:
	  note that some protocols require IP address options and others
	  behave differently without them [#2244]
	* docs/man/nut-scanner.txt: update general markup
	* docs/man/nut-scanner.txt: update general wording about IP address
	  options [#2244]
	* tools/nut-scanner/nutscan-ip.c: tools/nut-scanner/nut-scanner.c:
	  comment some TODO for IPv6 netmask proper support [#2244]
	* tools/nut-scanner/nut-scanner.c: clarify some code comments [#2244]
	* tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/{scan_xml_http.c,scan_snmp.c,scan_nut.c,scan_ipmi.c}:
	  report the IP address (range, single, none) in the log [#2244]

2024-07-03  Jim Klimov <jimklimov@gmail.com>

	* m4/nut_check_libnetsnmp.m4: revise detection of the two headers
	* m4/ax_realpath_lib.m4: revise to better detect MacOS *.dylib files
	  [#2431]
	* tools/nut-scanner/nutscan-init.c: do not detect
	  NUT_PLATFORM_APPLE_OSX as WITH_MACOSX (driver)
	* m4/nut_check_libnetsnmp.m4: check for both headers we use
	  typically, and report the findings
	* .circleci/config.yml: relink net-snmp from brew to be in default
	  search paths  It seems the XCode version of the library and its
	  headers gets preferred, so we either find no symbols or load the
	  library variant built without them.
	* m4/nut_check_libnetsnmp.m4: report myCFLAGS_SOURCE and
	  myLIBS_SOURCE from which we learned the settings
	* .circleci/config.yml: clean up debugging around openssl@3 [#2502]
	* .circleci/config.yml: relink openssl package if needed, and fail
	  job if we can not
	* .circleci/config.yml: relink openssl package
	* .circleci/config.yml: report what "brew" knows about openssl*
	  package(s)
	* docs/config-prereqs.txt, .circleci/config.yml: we can detect
	  HOMEBREW_PREFIX from the running system [#2502]
	* .circleci/config.yml: try to ensure openssl@3 usability by
	  reinstalling it in the end, and report what pkg-config knows
	* ci_build.sh: do not set CPPFLAGS on MacOS/Homebrew builds [#2502]
	* .circleci/config.yml: use clang (not gcc) directly, gcc now seems
	  to just be an alias [#2502]
	* tools/nut-scanner/Makefile.am: undefine NETSNMP_USE_OPENSSL if
	  building without it
	* drivers/Makefile.am: undefine NETSNMP_USE_OPENSSL if building
	  without it
	* configure.ac: detect WITH_SSL variants before other libraries
	  (notably net-snmp)
	* .circleci/config.yml: stash resulting config.nut_report_feature.log
	  [#2501]
	* .circleci/config.yml: now ci_build.sh used for MacOS/Homebrew
	  builds knows to not distruct system include dirs by default [#2501]
	* ci_build.sh: for MacOS/Homebrew builds, do not distruct system
	  include dirs by default [#2501]
	* .circleci/config.yml, docs/config-prereqs.txt: enable cppunit with
	  MacOS/Homebrew builds [#2502]
	* ci_build.sh: try to mark Homebrew (MacOS) include paths as
	  "-isystem" to avoid some warnings [#2502]
	* tests/cpputest-client.cpp, tests/cpputest.cpp, tests/example.cpp,
	  tests/nutclienttest.cpp, tests/nutconf_parser_ut.cpp,
	  tests/nutconf_ut.cpp, tests/nutipc_ut.cpp, tests/nutstream_ut.cpp:
	  tests/*.cpp: wrap CPPUNIT includes with more pragmas to ignore
	  warnings [#2502]
	* m4/ax_c_pragmas.m4: add many C++ pragmas about CPPUNIT grief seen
	  on MacOS builds [#2502]
	* drivers/snmp-ups.h, tools/nut-scanner/scan_snmp.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_UNUSED_PARAMETER around net-snmp
	  headers
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_UNUSED_PARAMETER
	* NEWS.adoc: report changes about MacOS builds on NUT CI and
	  interactively [#2502]
	* .circleci/config.yml: pass just HOMEBREW_PREFIX to ./ci_build.sh
	  now, not customized paths anymore [#2502]
	* ci_build.sh: inject pkg-config, libltdl and libsnmp settings with
	  HOMEBREW_PREFIX automatically
	* ci_build.sh: guess CI_CCACHE_SYMLINKDIR with HOMEBREW_PREFIX
	  automatically
	* .circleci/config.yml, docs/config-prereqs.txt, docs/nut.dict:
	  .circleci/config.yml, docs/config-prereqs.txt: install docbook-xsl
	  and document nuances around it
	* ci_build.sh: set *FLAGS after detecting CI_OS_NAME nuances
	* .circleci/config.yml: use HOMEBREW_PREFIX variable as already used
	  by brew [#2502]
	* configure.ac: revise use of AC_SEARCH_LIBS for i2c methods (one per
	  call)
	* m4/nut_check_libregex.m4: further simplify work with AC_SEARCH_LIBS
	* m4/nut_check_libregex.m4: AC_SEARCH_LIBS is for one method at a
	  time
	* scripts/augeas/gen-nutupsconf-aug.py.in: mark regex strings as r""
	  [#2183]
	* .circleci/config.yml, docs/config-prereqs.txt: clarify dependencies
	  available via Homebrew on MacOS [#2502]

2024-07-03  Jim Klimov <jimklimov+nut@gmail.com>

	* .circleci/config.yml: introduce NUTCI_HOMEBREW_BASEDIR to
	  parameterize location of Homebrew libs, includes and ccache [#2502]
	* .circleci/config.yml: introduce NUTCI_HOMEBREW_BASEDIR to
	  parameterize location of Homebrew libs, includes and ccache [#2502]
	* docs/config-prereqs.txt, .circleci/config.yml: clarify the
	  different Homebrew locations are due to architecture, not age
	  [#2502]
	* configure.ac: fix capitalization of Python the language [#2183]
	* configure.ac: rectify adding to PYTHON_FAILED_TEST_DETAILS [#2183]
	* configure.ac: fix reported messages after refactoring [#2183]
	* configure.ac: trace decision-making about NUT-Monitor installation
	  (or not) [#2183]
	* configure.ac, m4/nut_check_python.m4: reshuffle Python detection
	  vs. capability probing [#2183]
	* configure.ac: refactor detection of usable Python interpreters;
	  report their module search paths and versions [#2183]
	* configure.ac: separate tests for nut_with_pynut_py* from
	  nut_have_telnetlib_py*, and in those separate tests of stock
	  telnetlib from fallback nut_telnetlib [#2183]
	* configure.ac: be sure to probe nut_telnetlib module from source dir
	  [#2183]  Avoid confusion for out-of-tree builds
	* COPYING, docs/nut.dict, scripts/python/module/nut_telnetlib.py:
	  COPYING, scripts/python/module/nut_telnetlib.py: clarify the
	  license for the copied file [#2183]
	* configure.ac: upper-case Python name in message [#2183]
	* configure.ac: typo in path to test with nut_telnetlib Python module
	  [#2183]

2024-07-02  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c, clients/upsmon.c, server/upsd.c: clarify PID-file
	  checks wording: "is running *or not*"
	* m4/ax_realpath_lib.m4: try to make use of LDFLAGS, LIBS and CFLAGS
	  when discovering libraries [#2431]  At least MacOS with Homebrew
	  seems puts each packaged library into its own directory, so args
	  like `-L/opt/homebrew/Cellar/neon/0.32.5/lib` would be required for
	  successful discovery.
	* UPGRADING.adoc: clarify about AX_REALPATH_LIB benefits that can
	  simplify packaging [#2431]
	* tests/NIT/nit.sh: log_debug the python shebang, and separate first
	* NEWS.adoc, docs/nut.dict, tools/nut-scanner/nutscan-init.c:
	  tools/nut-scanner/*, NEWS.adoc, docs/nut.dict: make use of
	  AX_REALPATH_LIB discovered libraries [#2431]
	* tools/nut-scanner/nutscan-init.c: set libname=NULL after we free()
	  it [#2431]
	* tools/nut-scanner/nutscan-init.c: rearrange pragma indentations and
	  update comments [#2431]
	* common/common.c: extend get_libname() to try exact hits if
	  `base_libname` includes path separator character(s) [#2431]
	* tools/nut-scanner/nutscan-init.c, m4/ax_realpath_lib.m4:
	  acknowledge MacOS Darwin "*.dylib" extension [#2431]
	* m4/nut_compiler_family.m4: fence NUT_COMPILER_FAMILY to only run
	  the logic once

2024-07-01  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/nut_check_libavahi.m4, m4/nut_check_libfreeipmi.m4,
	  m4/nut_check_libneon.m4, m4/nut_check_libnetsnmp.m4,
	  m4/nut_check_libusb.m4: m4/nut_check_lib*.m4: call AX_REALPATH_LIB
	  to discover SOPATH*/SOFILE* for nut-scanner third-party libs
	  [#2431]  libavahi, libfreeipmi, libneon, libnetsnmp, libusb0/1
	  NOTE: The libnutclient is separate, we build it - so can not detect
	  the final name in advance right here
	* m4/ax_realpath_lib.m4: introduce a way to find dynamic library
	  names [#2431]
	* .circleci/config.yml: add /opt/homebrew to include and lib choices
	  [#2502]
	* configure.ac: MacOS Darwin fails to run python scripts with proper
	  interpreter via shebang [#2502]
	* .circleci/config.yml: re-enable relinking libtool files  Allegedly
	  should help find ltdl.h
	* .circleci/config.yml: update Homebrew dependency list to facilitate
	  builds on newer baseline [#2502]
	* docs/config-prereqs.txt: update dependency list and
	  CI_CCACHE_SYMLINKDIR for newer Homebrew recipes [#2502]
	* .circleci/config.yml: update CI_CCACHE_SYMLINKDIR for newer
	  Homebrew recipes [#2502]
	* tests/NIT/nit.sh: report the detected python shebang
	* .circleci/config.yml: store config.log artifact for troubleshooting
	  [#1419]
	* NEWS.adoc, configure.ac, docs/nut.dict, scripts/python/Makefile.am,
	  scripts/python/README.adoc, scripts/python/module/Makefile.am,
	  scripts/python/module/PyNUT.py.in,
	  scripts/python/module/nut_telnetlib.py,
	  scripts/python/module/setup.py.in: Provide a fallback copy of
	  telnetlib module for PyNUTClient [#2183]
	* .circleci/config.yml: add a failfast implementation to abort broken
	  builds and use fewer resources [#2502]  The underlying problems are
	  usually shared.
	* .circleci/config.yml: bump XCode version to the oldest currently
	  available now [#2502]  Closes: #2502
	* ci_build.sh: allow to customize PYTHON implementation when
	  dev-building (without args)
	* scripts/python/module/test_nutclient.py.in: make internal debug
	  verbosity of the module optional

2024-06-25  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, docs/nut.dict: NEWS.adoc: update for
	  libserial-nutscan.la [#2490]
	* configure.ac: fix indentations for recently changed --with-docs
	  code [#2473]
	* Makefile.am: move distcheck-light-man up to distcheck-light [#2473]
	* common/Makefile.am: do not embed libnutwincompat.la pieces into
	  libcommonstr.la  Initially that embedding was done to help
	  libnutscan builds with libcommonstr.la helper, but then a separate
	  link with libnutwincompat.la was back-ported - so this line removal
	  helps both to constrain the helper size/scope, and against a
	  build-time conflict.

2024-06-24  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/Makefile.am: bump libnutscan version-info just in
	  case after recent recipe changes
	* tools/nut-scanner/Makefile.am: drop LINKED_SOURCE_FILES now that we
	  have libserial-nutscan.la
	* tools/nut-scanner/Makefile.am: append to common make variables
	  instead of defining them at first assignment  Would help later when
	  merging DMF/FTY branches; for now just a bit of syntactic sugar and
	  reduction of diffs against them.
	* drivers/Makefile.am, tools/nut-scanner/Makefile.am: introduce
	  libserial-nutscan.la to simplify nut-scanner recipes  Initiated in
	  DMF branch by commit 4fec99ab62977365c0fa3de12f77ed9b6a01cc20

2024-06-20  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/dstate.c, drivers/dstate.h: drivers/dstate.{c,h}: introduce
	  conn_t->readzero field and throttles around it [#2484]
	* clients/nutclient.h, clients/nutclientmem.h, clients/upsclient.h,
	  drivers/generic_gpio_common.h, drivers/generic_gpio_libgpiod.h,
	  drivers/hidparser.h, drivers/libhid.h, drivers/main.h,
	  drivers/upsdrvquery.h, server/upsd.h: Numerous headers: define
	  include-guard to a number value; revise names of these guards
	* drivers/dstate.c: indent ifdef-fenced includes
	* drivers/dstate.c, NEWS.adoc: a read() returning 0 after a select
	  with O_NDELAY means EOF (the other side closed socket) [#2484]
	* tests/NIT/nit.sh: report PID_* set by this script for NUT daemons
	  it has launched
	* tests/NIT/nit.sh: when we DEBUG_SLEEP, report practical steps after
	  dumping envvars - so dev/tester knows how they can proceed
	* tests/NIT/nit.sh: document a typical test sandbox preparation

2024-06-18  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: update for recent changes in NEWS.adoc [#2478]
	* NEWS.adoc: mention use of SSL linker deps for `snmp-ups` and
	  `netxml-ups` builds [#2479]
	* NEWS.adoc: mention libcommonstr.la [#2478]

2024-06-17  Jim Klimov <jimklimov+nut@gmail.com>

	* common/Makefile.am: libcommonstr_la_LIBADD += @BSDKVMPROCLIBS@
	  [#2463, #2478]

2024-06-15  Jim Klimov <jimklimov+nut@gmail.com>

	* common/Makefile.am, tools/nut-scanner/Makefile.am: Introduce
	  private `libcommonstr.la` recipe  A smaller helper library than
	  `libcommonclient.la` which is sometimes an overkill, e.g. in
	  `nut-scanner` where the `libupsclient.so/.dll` is loaded
	  dynamically for "Old NUT" scans and there is no specific use for
	  object files included into `libcommonclient.la`.  More use-cases
	  with DMF codebase (currently not yet upstreamed).  Combined from a
	  series of commits like * 3ba6b576cd2248484eaad41a9e2a480cbd2aa6a6 *
	  c418728e6ed7879f4a569ca0e3fd6f38fcb27eae *
	  5f16b7b7c89fa341090e886e7ca5cf8d981430eb *
	  bc4cd957280c67778a36b49b524092dc15d1aa8b
	* NEWS.adoc, docs/configure.txt: document `--with-doc=dist-auto`
	  option [#2473]
	* configure.ac: apply comment for nut_with_libltdl=no vs.
	  nut_with_nut_scanner=yes situation  Derived from commits
	  21d62421fea72c4f981bfa05fb259da65a795ac9 and
	  9322e2e3404b97615af799b7062e962030277830 in the FTY branch.
	* Makefile.am: use job-server for DMF-related targets with sub-makes:
	  cover distcheck-light-man
	* Makefile.am: `make distcheck-light-man` should test installability
	  of NUT-Monitor and PyNUT (even if as a co-bundle)  Modernize
	  `DISTCHECK_LIGHT_MAN_FLAGS` for 2022+  Replicate commit
	  e19fa235a7cecdf5bc5752ab87c3e6db81932dac from PR
	  https://github.com/networkupstools/nut/pull/1504
	* README.adoc: add a Star History Chart badge/image

2024-06-15  Fabrice Fontaine <fontaine.fabrice@gmail.com>

	* clients/upsclient.h: include sys/types.h  Include sys/types.h to
	  avoid the following uclibc build failure with collectd raised since
	  version 2.8.0 and
	  https://github.com/networkupstools/nut/commit/3f3851eab0d51e029f67e7db359860cc983557f4:
	  configure:109633: checking int type of port argument for NUT
	  upscli_splitname configure:109665:
	  /home/buildroot/instance-0/output-1/host/bin/x86_64-linux-gcc -c
	  -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64
	  -O2 -g0   -Wall -Werror -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE
	  -D_FILE_OFFSET_BITS=64  conftest.c >&5 In file included from
	  conftest.c:172:
	  /home/buildroot/instance-0/output-1/host/x86_64-buildroot-linux-uclibc/sysroot/usr/include/upsclient.h:114:1:
	  error: unknown type name 'ssize_t'; did you mean 'size_t'? 114 |
	  ssize_t upscli_sendline_timeout(UPSCONN_t *ups, const char *buf,
	  size_t buflen, const time_t timeout); | ^~~~~~~ | size_t  Fixes: -
	  http://autobuild.buildroot.org/results/205/2058f87ad7dbf7fbc62c8747855c82da4157ea35/collectd-5.12.0/config.log

2024-06-15  Bohdan <chbgdn@gmail.com>

	* drivers/powercom-hid.c: fix bytes order in shutdown commands

2024-06-13  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, UPGRADING.adoc, clients/upsmon.c, common/common.c,
	  drivers/main.c, drivers/upsdrvctl.c, include/common.h,
	  scripts/Windows/wininit.c, server/upsd.c: Extend sendsignal*() API
	  some more to optionally fall back to checkprocname() vs current
	  getpid() [#2463]
	* NEWS.adoc, UPGRADING.adoc, common/common.c, conf/nut.conf.sample,
	  docs/man/nut.conf.txt, docs/nut.dict, include/common.h: Introduce
	  NUT_IGNORE_CHECKPROCNAME=true support to skip PID process name
	  validation if it causes problems [#2463]
	* UPGRADING.adoc: warn that packaged program name mismatches can be a
	  problem [#2463]

2024-06-10  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsmon.c: for OB UPS and communications failure, leave just
	  the debug log message [#2454]
	* NEWS.adoc: explain the fix for #2454 via #2462
	* common/common.c: checkprocname(): case #5 is not "exact", fix the
	  message [#2463]

2024-06-09  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c, include/common.h: common/common.c: getprocname():
	  implement support for WIN32 parsing without a /proc [#2463]
	* common/common.c, configure.ac: common/common.c: getprocname():
	  implement support for /proc/NNN/psinfo (Solaris/illumos) parsing
	  [#2463]
	* common/common.c: getprocname(): revise printed messages [#2463]
	* common/Makefile.am, common/common.c, configure.ac: common/common.c:
	  getprocname(): implement support for (Open)BSD parsing without a
	  /proc [#2463]
	* common/common.c: getprocname(): implement support for
	  /proc/NNN/stat parsing [#2463]

2024-06-08  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: getprocname(): implement support for
	  /proc/NNN/cmdline parsing [#2463]
	* UPGRADING.adoc, clients/upsmon.c, common/common.c, docs/nut.dict,
	  drivers/main.c, drivers/upsdrvctl.c, include/common.h,
	  server/upsd.c: Pass "progname" through sendsignal*() methods to
	  verify that we sendsignal*() via old PID only to same progname
	  [#2463]  Internal API change for common.c/h
	* common/common.c: sendsignalpid(): comment about not-signaling PID<2

2024-06-07  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, common/common.c, configure.ac, include/common.h:
	  Introduce getprocname() and checkprocname() for suspicious PID
	  values, and helper parseprogbasename() [#2463]
	* NEWS.adoc: rearrange entries

2024-06-06  Jim Klimov <jimklimov+nut@gmail.com>

	* data/driver.list.in: shorten HCL title for Cyber Energy devices
	  Asked via mailing list to not deference the USB VID:PID in the HCL
	  title

2024-06-05  Andriy Gapon <avg@FreeBSD.org>

	* clients/upsmon.c: clients/upsmon: restore handling of comm failure
	  while on battery  Commit 2647f026f7f0 from #2108 updated
	  is_ups_critical() such that a communication failure (commstate ==
	  0) while on battery (linestate == 0) would be treated as
	  immediately entering critical state.  There was no way to disable
	  that behavior or add any grace period.  As such, that change made
	  DEADTIME parameter ineffective as lastpoll being stuck should be
	  equivalent to commstate == 0 because any lastpoll update sets
	  commstate to 1.  This change removes special handling of that
	  condition from is_ups_critical() and reverts to the prior behavior
	  where recalc() looks at lastpoll and deadtime to set LB flag after
	  the configured communication timeout.

2024-06-04  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/nit.sh: make use of NUT_DEBUG_SYSLOG tweak setting
	* NEWS.adoc, common/common.c, conf/nut.conf.sample,
	  docs/man/nut.conf.txt, include/common.h: Introduce a
	  `NUT_DEBUG_SYSLOG` environment variable [#2394]
	* include/common.h, common/common.c, drivers/dstate.c,
	  drivers/nutdrv_qx_blazer-common.c: define macros for
	  minimize_formatting_string() and validate_formatting_string()
	  verbosity argument values [#2450]  Custom builds that do not want
	  to require setting driver/tool debug levels can re-define their
	  NUT_DYNAMICFORMATTING_DEBUG_LEVEL to e.g. 0 and see any formatting
	  discrepancies instantly.

2024-06-03  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/documentation.txt: update URL for Configuration Examples to
	  directly fetch the latest PDF book, not go to the GH release page
	  (fix typo)
	* docs/documentation.txt: update links for Roger Price original page
	  and replicas in NUT GitHub org
	* docs/documentation.txt: update URL for Configuration Examples to
	  directly fetch the latest PDF book, not go to the GH release page

2024-06-02  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/nutlogtest.c: use support for plain "-Wformat" and for
	  "-Wformat-extra-args" in pragmas to quiesce "bogus-looking" test
	  cases [#2450]
	* m4/ax_c_pragmas.m4: detect support for plain "-Wformat" and for
	  "-Wformat-extra-args" [#2450]
	* tests/nutlogtest.c, common/common.c: validate_formatting_string():
	  tolerate dynamic formats that are sub-strings and beginnings of
	  reference (wasteful but survivable) [#2450]
	* common/common.c: minimize_formatting_string(): warn in doc that
	  this may produce invalid printf-style strings and not complain
	  (garbage in = garbage out) [#2450]
	* tools/nut-scanner/nutscan-serial.c: add /dev/cua* patterns for
	  different platforms
	* tools/nut-scanner/Makefile.am, tools/nut-scanner/nutscan-serial.c:
	  tools/nut-scanner/nutscan-serial.c: Harden NUT work with strings by
	  switching to snprintf_dynamic() instead of hushing potential flaws
	  with macros [#2450]
	* common/common.c: vsnprintf_dynamic(): NULL "dst" or its "size" are
	  a valid use-case for vsnprintf() [#2450]
	* common/common.c, include/common.h, drivers/dstate.c,
	  tests/nutlogtest.c: introduce verbosity option to
	  validate_formatting_string() and minimize_formatting_string()
	  [#2450]

2024-06-01  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx_blazer-common.c: blazer_process_command() for
	  "test.battery.start" might vary by applicable formatting strings
	  [#2450]
	* drivers/nutdrv_qx_bestups.c: bestups_get_pins_shutdown_mode():
	  comment the odd conversion, and harden with snprintf_dynamic()
	  [#2450]
	* drivers/nutdrv_qx_bestups.c: bestups_batt_packs(): range-check and
	  properly cast the value, and harden with snprintf_dynamic() [#2450]
	* clients/upsclient.c, clients/upsimage.c, clients/upsmon.c,
	  drivers/apc_modbus.c, drivers/apcupsd-ups.c, drivers/bcmxcp.c,
	  drivers/bestfortress.c, drivers/blazer.c, drivers/blazer_ser.c,
	  drivers/blazer_usb.c, drivers/huawei-ups2000.c,
	  drivers/liebert-esp2.c, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_bestups.c, drivers/nutdrv_qx_blazer-common.c,
	  drivers/nutdrv_qx_masterguard.c, drivers/nutdrv_qx_mecer.c,
	  drivers/nutdrv_qx_voltronic-qs-hex.c,
	  drivers/nutdrv_qx_voltronic-qs.c, drivers/nutdrv_qx_voltronic.c,
	  drivers/powerp-bin.c, drivers/powerp-txt.c, drivers/snmp-ups.c,
	  drivers/usbhid-ups.c: Harden NUT work with strings by switching to
	  snprintf_dynamic() instead of hushing potential flaws with macros
	  [#2450]  Found by pragmas to clean up, with  :; git grep -En
	  'Wformat-(sec|nonlit)'
	* clients/upsimage.c, clients/upssched.c, clients/upsset.c,
	  drivers/belkinunv.c, drivers/bestfortress.c, drivers/mge-utalk.c,
	  drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c,
	  drivers/serial.c: Harden NUT work with strings: comment which
	  use-cases we DID NOT switch to snprintf_dynamic() instead of
	  hushing potential flaws with macros [#2450]
	* drivers/nutdrv_qx_bestups.c: bestups_model(): fix bogus sprintf()
	  for an unknown model [#2450]

2024-05-31  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c, tests/nutlogtest.c: minimize_formatting_string():
	  collapse known different formats for same data type into same char
	  to ease sanity-check comparisons [#2450]
	* docs/developers.txt, docs/new-drivers.txt, docs/nut.dict: document
	  hardened *_dynamic() string methods [#2450]
	* drivers/dstate.c, drivers/dstate.h: drivers/dstate.{c,h}: add
	  vdstate_setinfo(), vdstate_addenum() and versions for hardened
	  dynamic format string support [#2450]

2024-05-30  Nicola Fontana <ntd@entidi.it>

	* docs/man/bicker_ser.txt: bicker_ser: improve styling of relay modes
	  doc
	* docs/man/bicker_ser.txt, drivers/bicker_ser.c: bicker_ser: move
	  unofficial variables into "experimental" namespace
	* drivers/bicker_ser.c: bicker_ser: register the shutdown.return
	  instcmd
	* drivers/bicker_ser.c: bicker_ser: enforce expected data size  When
	  receiving a packet of known data size, ensure that data size is
	  exactly what expected. That should avoid later surprises, e.g.
	  fiddling with bytes never received.

2024-05-30  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c, include/common.h, tests/nutlogtest.c, NEWS.adoc:
	  introduce snprintf_dynamic() and related methods [#2450]  Mitigate
	  the inherent insecurity of dynamically constructed formatting
	  strings vs. a fixed vararg list with its amounts and types of
	  variables printed by this or that method and pre-compiled in the
	  program.  * minimize_formatting_string() with caller-specified
	  buffer; * minimize_formatting_string_staticbuf() for one-shot
	  use-cases; * validate_formatting_string() to compare a dynamic and
	  expected formatting strings; * vsnprintf_dynamic(),
	  vsnprintfcat_dynamic() for practical applications (with fixed
	  va_list argument); * snprintf_dynamic(), snprintfcat_dynamic(),
	  mkstr_dynamic() for practical applications (with ... variadic
	  arguments); * added vsnprintfcat() with fixed va_list argument, for
	  good measure.

2024-05-28  Nicola Fontana <ntd@entidi.it>

	* drivers/bicker_ser.c: bicker_ser: avoid GCC warnings  Initialize
	  the `parameter` struct to avoid GCC complains about
	  "‘parameter.value’ may be used uninitialized in this function".
	  This is not a real error because, if `bicker_write` is successful,
	  that struct is populated properly.
	* drivers/bicker_ser.c: bicker_ser: bump driver version
	* docs/man/bicker_ser.txt: bicker_ser: add variables info to manpage
	  Variables are mapped 1:1 to Bicker parameters, so the descriptions
	  have been borrowed and adapted directly from the UPS Gen2 software
	  manual.
	* drivers/bicker_ser.c: bicker_ser: allow writing to Bicker
	  parameters  All Bicker parameters (at least the supported ones) can
	  be changed, so enable writing and set proper ranges. Expose all
	  parameters, even the non-standard ones.

2024-05-27  Nicola Fontana <ntd@entidi.it>

	* drivers/bicker_ser.c: bicker_ser: ensure battery.charge.low is
	  defined  According to RFC-9271, that variable is part of the
	  "Desktop PC Variables" set so it is expected to be present and its
	  default value is 20 seconds.
	* drivers/bicker_ser.c: bicker_ser: allow NULL dst in parameter
	  handling  The comments say to use `NULL` for discarding the results
	  but bicker_receive_parameter() was accessing `dst->id`, effectively
	  preventing it.  Fix that bug and improve the code: now
	  bicker_receive_parameter() validates the parameter id (so it can be
	  used freely) and it always logs debugging info about the parameter.
	* drivers/bicker_ser.c: bicker_ser: add id validation to bicker_get()
	* drivers/bicker_ser.c: bicker_ser: make `dst` optional in
	  bicker_write  The `dst` argument is optional in every other
	  function, so be consistent and make it optional also in this one.
	* drivers/bicker_ser.c: bicker_ser: rename `parameter` to `dst`  This
	  should make clear that argument is just used for destination.

2024-05-24  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/nut.exe.txt, docs/nut.dict: suggest some PowerShell magic
	  to prepare Windows Firewall for upsd [#2446, #2455]
	* scripts/Windows/wininit.c, docs/man/nut.exe.txt: introduce "nut.exe
	  start/stop" wrappings [#2455]
	* scripts/Windows/wininit.c: introduce an SvcExists() method [#2455]
	* scripts/Windows/wininit.c: clarify that this is what becomes
	  "nut.exe" normally [#2446]
	* docs/man/nut.exe.txt: mention `net start/stop` to manage Windows
	  services [#2446, #2455]

2024-05-23  Nicola Fontana <ntd@entidi.it>

	* drivers/bicker_ser.c: bicker_ser: expose mappable parameters  Every
	  Bicker parameter that has a correspondence in nut-names.txt has
	  been mapped. If the parameter is disabled on the device, no NUT
	  variable is created. If the NUT variable is set to an empty string,
	  the parameter is reset and disabled on the device and that NUT
	  variable is removed.
	* drivers/bicker_ser.c: bicker_ser: add sanity checks to bicker_set
	  These devices seem to be picky on what you use to set parameters.
	* drivers/bicker_ser.c: bicker_ser: make parameter handling less
	  error prone  Using an in/out struct and making some specific field
	  mandatory is cumbersome and error prone. Now the data needed for
	  setting or getting parameters is explicitly required by the
	  arguments.

2024-05-22  Nicola Fontana <ntd@entidi.it>

	* drivers/bicker_ser.c: bicker_ser: refactor to clarify packet
	  manipulation  Change BICKER_PACKET from a constant value to a macro
	  that depends on the data length. This should make clear that the
	  packet size depends directly from the data size.  Refactored some
	  code here and there trying to minimize the presence of magic
	  numbers and clarify the intentions.
	* drivers/bicker_ser.c: bicker_ser: use proper format modifiers in
	  logs  Ensure the format string in logging messages is the correct
	  one without subcasting. Furthermore, due to the promotion rules of
	  the C language (where any given type, even unsigned, is promoted to
	  int when possible), explicitly cast to unsigned where required.
	* drivers/bicker_ser.c: bicker_ser: use uint8_t for bytes instead of
	  char  `char` is by default signed and (as the name implies)
	  designed to access string characters. For accessing bytes, the
	  `uint8_t` type is more appropriate.
	* drivers/bicker_ser.c: bicker_ser: cosmetic fixes
	* drivers/bicker_ser.c: bicker_ser: fix alignment and endianness
	  problems  Accessing an uint16_t on odd addresses is not portable.
	  Avoid having to deal with that issue by always constructing words
	  mathematically from single bytes. This also solves any endianness
	  difference.
	* drivers/bicker_ser.c: bicker_ser: fix string dstate setting  User
	  provided strings could contain printf special sequences and as such
	  they should never be used in the format argument of
	  dstate_setinfo().
	* drivers/bicker_ser.c: bicker_ser: differentiate between error and
	  unsupported  When a command is unsupported, the
	  "\x01\x03\xEE\x07\x04" response packet is returned. This is
	  different from a response packet with a wrong command index.
	  WARNING: the "unsupported" packet has been found sperimentally and
	  it is an undocumented feature.

2024-05-21  Nicola Fontana <ntd@entidi.it>

	* drivers/bicker_ser.c: bicker_ser: add parameter support  Added the
	  needed infrastructure for getting and setting parameters. Actually
	  the only parameter that is surely working is "ups.delay.start".
	* drivers/bicker_ser.c: bicker_ser: use variable for low battery
	  limit
	* drivers/bicker_ser.c: bicker_ser: add more state variables
	  Identification fields are now queried from the device. Also
	  "battery.charge" is now set properly.
	* drivers/bicker_ser.c: bicker_ser: refactor to allow more complex
	  packet handling  I'm planning to add functions for reading strings,
	  i.e. without knowing beforehand the size of the response packets.
	  This required some refactoring of the receiving functions.  Also,
	  while at it, added docblocks to many Bicker functions, hopefully
	  easing the maintenance in the future.
	* drivers/bicker_ser.c: bicker_ser: explicitly pass the command index
	  In the previous implementation the command index was always '\x03',
	  as stated by the UPSIC manual. After new evidence has been found
	  (UPS-Gen2 software user manual), it came out there are much more
	  commands grouped in different indexes.
	* drivers/bicker_ser.c: bicker_ser: update protocol documentation
	  Bicker told me to refer to the UPS Gen software's user manual for
	  more details on their protocol, and in fact that manual contains
	  much more info. Added a summary of available commands to the
	  comments, as a quick reference for feature implementation.

2024-05-18  Nicola Fontana <ntd@entidi.it>

	* NEWS.adoc: announce bicker_ser driver [#2318]

2024-05-18  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/nut-scanner.c: clarify logs about "SKIPPED" scans
	  as not requested "or supported"
	* tools/nut-scanner/nut-scanner.c: clarify "old nut" (libupsclient)
	  vs. avahi detection in messages/help
	* tools/nut-scanner/nutscan-init.c: only set nutscan_avail_snmp=1 if
	  WITH_SNMP_STATIC in nutscan_init()  ...and let debug log know we
	  skipped the library search, and why.
	* tools/nut-scanner/nutscan-init.c, NEWS.adoc: avoid always
	  considering "Old NUT" method available [fallout of #2246]  If
	  `libupsclient.so` was not loaded, we can not really use this
	  search. Seems like a copy-paste problem mis-adding the NUT
	  Simulation support.

2024-05-17  Nicola Fontana <ntd@entidi.it>

	* docs/man/Makefile.am, docs/man/bicker_ser.txt, docs/nut.dict:
	  bicker_ser: add manpage
	* drivers/bicker_ser.c: bicker_ser: use length macros to increase
	  expressiveness
	* drivers/bicker_ser.c: bicker_ser: add big-endian platform support
	* data/driver.list.in: add bicker_ser based UPSes
	* drivers/bicker_ser.c: bicker_ser: add shutdown support  The
	  protocol supports shutdown after a custom delay settable between 0
	  and 255 seconds. Unfortunately the real device (UPSIC-2403D) seems
	  to always enforce a 2 seconds delay.

2024-05-16  Nicola Fontana <ntd@entidi.it>

	* drivers/Makefile.am, drivers/bicker_ser.c: bicker_ser: Bicker UPSes
	  based on PSZ-1063  Add a new driver for Bicker DC UPS systems based
	  on the PSZ-1063 extension module. This includes UPSIC-1205,
	  UPSIC-2403 and DC2412-UPS(LD) models.

2024-05-16  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am, .gitignore: use unique temporary filenames in
	  $(NUT_SPELL_DICT).usage-report, ChangeLog.adoc and
	  .adoc.adoc-parsed rules to avoid surprises  TODO: Look at why we
	  might call generation of ChangeLog.adoc several times
	  simultaneously and the make job server would not prevent that?
	* Makefile.am: avoid spurious "find: .../ChangeLog: No such file or
	  directory" with some "test" command implementations
	  [networkupstools/nut-website#52]  Some `test`'s evaluate all
	  conditions first and only handle them via boolean logic later. Oh
	  the audacity!
	* scripts/augeas/Makefile.am: fix check in out-of-tree builds (e.g.
	  distcheck) [#657]

2024-05-15  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, docs/Makefile.am: disable "make install" for
	  "html-chunked" documentation [#2445]  These documents are delivered
	  as an horde of files spread in a nested directory hierarchy for
	  each document, and the `install` scripts that automake uses seem to
	  struggle with that. Maybe just need to find a suitable automagic
	  keyword - but this can wait.
	* scripts/Windows/wininit.c: help(): report the confpath() to
	  configure the daemons [#2432]
	* NEWS.adoc, docs/man/Makefile.am, docs/man/nut.exe.txt: add a man
	  page of NUT for Windows wrapper for all-in-one service [#2432]
	* NEWS.adoc, UPGRADING.adoc, docs/nut.dict: note the enabled
	  installation of built PDF and HTML files [#2445]
	* scripts/Windows/build-mingw-nut.sh: make sure docs are built as
	  requested (and possible)
	* scripts/Windows/build-mingw-nut.sh: enable HTML (man) page builds
	  where possible
	* scripts/Windows/build-mingw-nut.sh: neuter the use-case of
	  --without-pkg-config (not implemented in m4 - do not confuse
	  ourselves)
	* Makefile.am: typo fix man-html=>html-man
	* configure.ac, docs/Makefile.am, docs/man/Makefile.am: support
	  actually installing built PDF and HTML docs

2024-05-14  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/wininit.c: introduce "-D" CLI option support to
	  request debug of this and called NUT programs
	* scripts/Windows/wininit.c: C pedantic warnings - mark methods with
	  no args as such (void)
	* scripts/Windows/wininit.c: when the service fails to start...
	  [#2430]  * as a console app that tried to be a service - report the
	  error not only in Event Log but also on console; * for other issues
	  write the LastError code to Event Log; * always exit with error
	  code
	* scripts/Windows/wininit.c: when the program fails to start and has
	  no arguments, report help() and exit with error code [#2432]
	* scripts/Windows/wininit.c: add help() and ways to request it and
	  NUT version info [#2432]
	* scripts/Windows/wininit.c: update comments
	* scripts/Windows/wininit.c: parse_nutconf(): update emitted messages
	  when starting/stopping daemons
	* scripts/Windows/wininit.c: rectify whitespace (coding style)
	* clients/upsmon.c: clear_pdflag(): fix message markup and content
	  for a non-NUT killpower file [#2444]
	* drivers/mge-hid.c, NEWS.adoc: extend mge_model_names[] for Eaton
	  5SC and 5PX series [#2380]
	* drivers/mge-hid.c: indent falback round() implem consistently
	* drivers/mge-hid.c: indent vendor ID macros consistently
	* drivers/mge-hid.c: bump (C) for AQ
	* NEWS.adoc, docs/nut.dict: announce hwmon_ina219 driver [#2430]
	* drivers/hwmon_ina219.c: battery_voltage_params_init() comment about
	  not re-evaluating during driver uptime [#2430]
	* drivers/hwmon_ina219.c: scan_hwmon_ina219(): make use of
	  detect_ina219() a bit more idiomatic and log a skipped non-ina219
	  location [#2430]
	* drivers/hwmon_ina219.c: upsdrv_help(): drop sysfs_dir setting - it
	  is an addvar() auto-documented feature [#2430]
	* drivers/hwmon_ina219.c: upsdrv_help(): clarify sysfs_dir setting
	  [#2430]
	* docs/man/hwmon_ina219.txt: update default.battery.voltage.nominal
	  description [#2430]  Clarified existing pre-set combos recognized
	  by the driver code.

2024-05-10  Jim Klimov <jimklimov@gmail.com>

	* docs/Makefile.am: re-evaluate calls to "make ../ChangeLog" always,
	  now that the parent Makefile knows when to slack off
	  [networkupstools/nut-website#52]
	* Makefile.am, docs/Makefile.am: Makefile.am: update ChangeLog recipe
	  to log messages about its work/skip/fail decisions
	  [networkupstools/nut-website#52]
	* Makefile.am: update ChangeLog recipe to be a no-op if the existing
	  file is newer than anything in a NUT_GITDIR (may be not "./git/"
	  directly) [networkupstools/nut-website#52]
	* Makefile.am: update ChangeLog recipe to be a no-op if the existing
	  file is newer than .git/HEAD [networkupstools/nut-website#52]  if
	  test -e .git/HEAD && ( rm -f "`find "$@" -not -newer .git/HEAD`" ||
	  true ) 2>/dev/null && ls -la .git/HEAD "$@" 2>/dev/null ; then SKIP
	  ; else WORK ; fi  Hopefully this takes care of corner cases:  * No
	  .git/HEAD => WORK (may be unsuccessfully, maybe not - e.g. Git
	  submodules referring to parent) * `rm` fails, maybe `find` returns
	  empty => DON'T CARE, go to LS * `ls` fails (one of target files is
	  absent - e.g. ChangeLog removed or never was there) => WORK  Only
	  if the ChangeLog is still there after the attempt on its life, SKIP
	  and keep it
	* docs/download.txt: update NetBSD links to use correct http(s)
	  schemas [networkupstools/nut-website#52]

2024-05-10  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: mention refactoring and warning-fixing during NUT v2.8.3
	  cycle
	* tools/nut-scanner/nutscan-display.c: fix the order of calloc()
	  parameters [#2437, #823]
	* autogen.sh: clarify that the script succeeded so it is easier to
	  see in build logs
	* tools/nut-usbinfo.pl: find_usbdevs(): do not explode if find() hits
	  the "." directory; also quickly skip some binary file patterns
	* tools/nut-usbinfo.pl: if DEBUG then trace visited directories and
	  files
	* include/nutipc.hpp: template-id not allowed for destructor in
	  C++20: clang(-14) insists on having it anyway [#2437]
	* include/nutipc.hpp: template-id not allowed for destructor in
	  C++20: C++11 also does not insist on having it [#2437]
	* include/nutipc.hpp: template-id not allowed for destructor in C++20
	  [#2437]

2024-05-07  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: update for hwmon_ina219 man page [#2430]
	* docs/nut.dict: apply changes from upstream NUT sources

2024-05-06  Jim Klimov <jimklimov+nut@gmail.com>

	* include/nutconf.hpp: annotate (for older C++) the methods which can
	  throw() [#2294]
	* include/nutconf.hpp: refactor exception-throwing in Settable<T>
	  getters [#2433]
	* include/nutconf.hpp: in Settable<T> operators to "return _value",
	  throw() if it was not yet set() at all or since last clear()
	  [#2294, #2433]
	* common/nutwriter.cpp: serializeCertHost(): try to avoid "may be
	  used uninitialized in this function" warnings [#2294, #2433]
	* NEWS.adoc: update the gamatronic news with a note that it fixed a
	  segfault seen in the field [#2427]

2024-05-03  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/gamatronic.c: report a response buffer overflow as well as
	  an invalid length string [#2427]
	* drivers/gamatronic.c: report a response buffer overflow (should not
	  happen though) [#2427]
	* NEWS.adoc: note the update of gamatronic driver [#2427]
	* drivers/gamatronic.c: avoid hard-coded buffer length, make it a
	  macro [#2427]

2024-05-02  Mike Jager <mike@mikej.net.nz>

	* drivers/gamatronic.c: bump driver version  Co-authored-by: Sam Cook
	  <github@sam.net.nz>
	* drivers/gamatronic.c: don't trust UPS-provided data length
	  Co-authored-by: Sam Cook <github@sam.net.nz>
	* drivers/gamatronic.c: don't strcpy overlapped strings
	  Co-authored-by: Sam Cook <github@sam.net.nz>

2024-05-02  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/usbhid-ups.c, NEWS.adoc: complete the support of
	  onlinedischarge_log_throttle_hovercharge setting [#2215, #2423]
	* drivers/usbhid-ups.c: update messages and comments about
	  onlinedischarge_log_throttle_*charge [#2215, #2423]

2024-05-01  Jan Viktorin <jan.viktorin@gmail.com>

	* data/driver.list.in, docs/man/Makefile.am,
	  docs/man/hwmon_ina219.txt, drivers/Makefile.am,
	  drivers/hwmon_ina219.c: Support for INA219 over hwmon on Linux
	  INA219 [1] is a monitor of current. It is accessible via I2C. In
	  the Linux Kernel, it is integrated via hwmon subsystem (thus, the
	  I2C is hidden). When INA219 is installed to monitor current of
	  batteries, it can be used as a simple UPS. This driver is intended
	  to be used with CM4-POE-UPS-BASE [2], a baseboard for Raspberry PI
	  Compute Module 4.  With default setting, using 3x3000 mAh
	  batteries, ~30% per-CPU avg load, ~200 kB/s of reads and writes to
	  SSD disk, the system withstood ~6 hours without power. When
	  remaining ~15 %, it took another 6,5 minutes before it died (that's
	  enough time to usually shutdown gracefully):  20240501 165801 100
	  NA NA [OL] NA NA 20240501 165831 96 NA NA [OB DISCHRG] NA NA ...
	  20240501 231306 21 NA NA [OB DISCHRG] NA NA 20240501 231336 19 NA
	  NA [OB DISCHRG] NA NA 20240501 231406 19 NA NA [OB DISCHRG] NA NA
	  20240501 231436 19 NA NA [OB DISCHRG] NA NA 20240501 231506 17 NA
	  NA [OB DISCHRG] NA NA 20240501 231536 17 NA NA [OB DISCHRG] NA NA
	  20240501 231606 17 NA NA [OB DISCHRG] NA NA 20240501 231636 14 NA
	  NA [FSD OB DISCHRG LB] NA NA 20240501 231706 13 NA NA [FSD OB
	  DISCHRG LB] NA NA 20240501 231736 13 NA NA [FSD OB DISCHRG LB] NA
	  NA 20240501 231806 13 NA NA [FSD OB DISCHRG LB] NA NA 20240501
	  231836 10 NA NA [FSD OB DISCHRG LB] NA NA 20240501 231906 11 NA NA
	  [FSD OB DISCHRG LB] NA NA 20240501 231936 11 NA NA [FSD OB DISCHRG
	  LB] NA NA 20240501 232006 9 NA NA [FSD OB DISCHRG LB] NA NA
	  20240501 232036 8 NA NA [FSD OB DISCHRG LB] NA NA 20240501 232106 7
	  NA NA [FSD OB DISCHRG LB] NA NA 20240501 232136 5 NA NA [FSD OB
	  DISCHRG LB] NA NA 20240501 232206 4 NA NA [FSD OB DISCHRG LB] NA NA
	  20240501 232236 2 NA NA [FSD OB DISCHRG LB] NA NA 20240501 232306 0
	  NA NA [FSD OB DISCHRG LB] NA NA  [1]
	  https://www.ti.com/lit/ds/symlink/ina219.pdf [2]
	  https://www.waveshare.com/wiki/CM4-POE-UPS-BASE
	* data/driver.list.in: fix whitespace  Fixes: a816677fcf0e
	  ("data/driver.list.in: add CP1350PFCLCD")

2024-04-29  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/augeas/Makefile.am: disable back augparse test - only
	  passes on some distros so far [#657]  Add make targets for custom
	  testing though
	* common/nutwriter.cpp: NutConfConfigWriter::writeConfig(): encase in
	  pragmas to hush warnings about macro code [#2294]
	* scripts/augeas/tests/test_nut.aug,
	  scripts/augeas/tests/test_nut_flaky.aug:
	  scripts/augeas/tests/test_nut_flaky.aug: added to relocate a test
	  case which passes on some distros and fails on others [#657]
	* scripts/augeas/nutupsconf.aug.tpl: avoid matching "/" in default.*
	  or override.* expressions [#2294]  Such possibility makes
	  augtools-1.12.0 upset (fixed since 1.13.0, see
	  https://github.com/hercules-team/augeas/issues/668 for details)
	* scripts/augeas/nutupsconf.aug.tpl: reshuffle end-of-line chars in
	  regex [#2294]
	* include/nutconf.hpp, common/nutwriter.cpp: error: must #include
	  <typeinfo> before using typeid [#2294]
	* NEWS.adoc: document that augeas lens have remaining issues
	* common/nutwriter.cpp: UpsmonConfigWriter::writeConfig(): try to
	  avoid "may be used uninitialized in this function" warnings [#2294]
	* scripts/augeas/tests/test_nut.aug: add a comment about passing
	  thest that probably should have failed [#657]
	* scripts/augeas/tests/test_nut_fixme.aug: Add
	  scripts/augeas/tests/test_nut_fixme.aug for known-broken corner
	  cases [#657]
	* include/nutconf.hpp: BoolInt: avoid "if (b)" constructs in favor of
	  explicit call to operator via "if (b == true)" [#2294]
	* include/nutconf.hpp: align new UpsConfiguration entries
	  cosmetically [#2294]
	* include/nutconf.hpp: fix comment to reconcile C and shell text
	  [#2294]
	* include/nutconf.hpp: handle more "ups.conf" keywords introduced
	  between NUT 2.6.5 and 2.8.2 [#2294]

2024-04-27  Jim Klimov <jimklimov+nut@gmail.com>

	* include/nutconf.hpp: document how to discover keywords for
	  UpsConfiguration class [#2294]

2024-04-26  Jim Klimov <jimklimov@gmail.com>

	* server/upsd.c, NEWS.adoc: log-trace daemon exit and clarify other
	  messages [#2417]

2024-04-26  Jim Klimov <jimklimov+nut@gmail.com>

	* include/nutconf.hpp: refactor UpsConfiguration methods which point
	  to "flag" not just "bool" or "str" entities [#2294]  Toss in other
	  GenericUPS_* values Sort alphabetically
	* include/nutconf.hpp, common/nutconf.cpp: extend setFlag() semantics
	  to true/false with implementation handling remove() where needed
	  [#2294]
	* drivers/blazer.c, drivers/blazer_ser.c, drivers/blazer_usb.c:
	  drivers/blazer*: fix "protocol" to be VAR_VALUE like elsewhere (and
	  de-facto), not VAR_FLAG
	* drivers/nut-ipmipsu.c: reformat commented-away contents of
	  upsdrv_makevartable()  Also restore planned "sensorid" line lost in
	  71a6c17a09f6ace3a71525e38c10d47daca78e60
	* scripts/augeas/tests/test_nut.aug: update comment [#657]
	* scripts/augeas/tests/test_nut.aug: add a test for comment
	  persistence in config
	* scripts/augeas/nutupsconf.aug.tpl,
	  scripts/augeas/tests/test_nut.aug:
	  scripts/augeas/nutupsconf.aug.tpl: fix and test detection of
	  wildcard keys (default|override).*
	* NEWS.adoc, docs/nut.dict, scripts/augeas/Makefile.am:
	  scripts/augeas/Makefile.am, NEWS.adoc: re-enable augeas
	  "check-local" [#657]
	* scripts/augeas/tests/test_nut.aug: revise handling of "Dummy UPS"
	  in tests [#657, #2294]
	* scripts/augeas/Makefile.am: rearrange "if HAVE_AUGPARSE =>
	  check-local" clause
	* scripts/augeas/nutnutconf.aug.in: handle "nut.conf" keywords
	  introduced between NUT 2.6.5 and 2.8.2 [#2294]
	* scripts/augeas/nutupsconf.aug.tpl: handle common "ups.conf"
	  keywords introduced between NUT 2.6.5 and 2.8.2 [#2294]
	* scripts/augeas/gen-nutupsconf-aug.py.in: bump (C) years
	* scripts/augeas/nutupsdusers.aug.in: reword
	  upsd_users_upsmon_type_re [#2294]
	* scripts/augeas/nutupsmonconf.aug.in: handle "upsmon.conf" keywords
	  introduced between NUT 2.6.5 and 2.8.2 [#2294]
	* include/nutconf.hpp, common/nutconf.cpp, common/nutwriter.cpp,
	  tests/nutconf_parser_ut.cpp, tests/nutconf_ut.cpp: typo fix
	  poolFreq* => pollFreq*
	* scripts/augeas/nutupsdconf.aug.in: handle "upsd.conf" keywords
	  introduced between NUT 2.6.5 and 2.8.2 [#2294]
	* include/nutconf.hpp, tests/nutconf_ut.cpp: revise
	  UpsConfiguration::setUsbSetAltInterface() logic to not save a bogus
	  -1 [#2294]

2024-04-25  Jim Klimov <jimklimov+nut@gmail.com>

	* common/nutconf.cpp, include/nutconf.hpp, tests/nutconf_ut.cpp:
	  include/nutconf.hpp, common/nutconf.cpp: introduce
	  GenericConfiguration::getDouble() and setDouble() methods [#2294]
	* include/nutconf.hpp, tests/nutconf_ut.cpp: add "IntHex" fields to
	  UpsConfiguration and test different parsing variants [#2294]
	* include/nutconf.hpp, common/nutconf.cpp: introduce
	  GenericConfiguration::getIntHex() and setIntHex() methods [#2294]
	* include/nutconf.hpp: include/nutconf.hpp, common/nutconf.cpp,
	  common/nutwriter.cpp, tests/nutconf_ut.cpp: handle and test
	  "ups.conf" keywords introduced between NUT 2.6.5 and 2.8.2 [#2294]
	* include/nutconf.hpp: comment concerns about "default.*" and
	  "override.*" supportability in UpsConfiguration class [#2294]
	* include/nutconf.hpp: refactor class UpsConfiguration methods with
	  idiomatic setBool()/getBool() [#2294]
	* include/nutconf.hpp, common/nutconf.cpp: introduce
	  GenericConfiguration::getBoolInt() and setBoolInt() method set
	  [#2294]
	* include/nutconf.hpp, common/nutconf.cpp: introduce
	  GenericConfiguration::getBool() and setBool() method set [#2294]
	* include/nutconf.hpp, common/nutconf.cpp: introduce
	  GenericConfiguration::getFlag() and setFlag() methods [#2294]
	* include/nutconf.hpp: add BoolInt constructors from supported data
	  types [#2294]
	* common/nutconf.cpp: wrap long lines and standardize style in method
	  declarations

2024-04-24  Jim Klimov <jimklimov+nut@gmail.com>

	* include/nutconf.hpp, common/nutconf.cpp, common/nutwriter.cpp,
	  tests/nutconf_ut.cpp: handle and test "nut.conf" keywords
	  introduced between NUT 2.6.5 and 2.8.2 [#2294]  Note that
	  "nut.conf" options follow shell syntax, unlike most other NUT
	  config files
	* common/nutwriter.cpp: introduce helper macro
	  SHELL_CONFIG_DIRECTIVEX() [#2294]
	* include/nutwriter.hpp, common/nutwriter.cpp: update comments to
	  match classes to config files [#2294]
	* conf/nut.conf.sample, docs/man/nut.conf.txt: document
	  NUT_DEBUG_LEVEL envvar support

2024-04-23  Jim Klimov <jimklimov+nut@gmail.com>

	* include/nutconf.hpp, common/nutconf.cpp, common/nutwriter.cpp,
	  tests/nutconf_ut.cpp: handle and test "upsmon.conf" keywords
	  introduced between NUT 2.6.5 and 2.8.2 [#2294]
	* common/nutwriter.cpp, include/nutconf.hpp: include/nutconf.hpp,
	  include/nutwriter.cpp: extend CertHost class with BoolInt fields
	* include/nutconf.hpp: extend BoolInt class with a constructor
	* include/nutconf.hpp, tests/nutconf_parser_ut.cpp: extend BoolInt
	  class with toString() and << for practical use (and test it)  It
	  seems that the assignment operator to string can only be done in
	  the std::string class - a casting operator does not suffice, so the
	  next best things are streaming and explicit methods to emit
	  strings.  While at it, also implement assignment into BoolInt
	  objects via <<
	* include/nutconf.hpp, tests/nutconf_parser_ut.cpp: extend BoolInt
	  class with a bool01 toggle (and test it)  Allows to enable/disable
	  comparison of bool value to int 0/1 values.
	* include/nutconf.hpp, tests/nutconf_parser_ut.cpp:
	  include/nutconf.hpp, common/nutwriter.cpp, tests/nutconf_ut.cpp:
	  introduce and unit-test a BoolInt helper class [#2402]
	* include/nutconf.hpp, common/nutwriter.cpp: introduce struct
	  nut::CertHost (for upsmon.conf...) [#2402]
	* tests/nutconf_parser_ut.cpp: typo fixes in test names; whitespace
	  rectification

2024-04-22  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: drop key words absent in both current NUT and
	  NUT-WEBSITE sources [#2402]

2024-04-22  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/nutconf_ut.cpp: NutConfigUnitTest::testUpsdConfiguration():
	  use NutConfigUnitTest::check() with the option to discard
	  double-quotes from content (paths) for a fallback comparison
	  Primarily useful to check this new check() method itself. And
	  because nutwriter.cpp implementation was updated to always use
	  double-quotes for the string values with paths (looking forward to
	  running on MacOS and Windows).
	* include/nutconf.hpp, common/nutwriter.cpp, common/nutconf.cpp:
	  handle "upsd.conf" keywords introduced between NUT 2.6.5 and 2.8.2
	  [#2294]
	* include/nutconf.hpp, common/nutwriter.cpp: introduce struct
	  nut::CertIdent (for upsd.conf, upsmon.conf...) [#2402]
	* common/nutconf.cpp: implement StringToSettableNumber() for
	  Settable<bool> with NUT boolean keyword support
	* tests/nutconf_ut.cpp: extend NutConfigUnitTest::check() with an
	  option to discard double-quotes from content for a fallback
	  comparison
	* include/nutconf.hpp, common/nutconf.cpp, common/nutwriter.cpp,
	  tools/nutconf/nutconf-cli.cpp: rename
	  nut::UpsmonConfiguration::Monitor::isMaster => isPrimary [#840]

2024-04-21  Jim Klimov <jimklimov+nut@gmail.com>

	* include/nutconf.hpp: UpsdUsersConfiguration: update comments about
	  existing methods [#2294]

2024-04-19  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut_driver_enumerator_main(): do not re-save name when live reload
	  of a driver sufficed [#2410]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut_driver_enumerator_main(): save new content checksum and name
	  when live reload of a driver sufficed and service is not redefined
	  [#2410]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut_driver_enumerator_main(): differentiate UPSS (service instance
	  name) and CURR_DEV (device section name) to reload a driver [#2410]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut_driver_enumerator_main(): if driver program reload failed,
	  retry verbosely (optionally) to help troubleshooting
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut_driver_enumerator_main(): report if we "Got some changes to
	  reconcile..." with specific service instance names [#2410]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: clarify that
	  upslist_savednames_find_mismatch() is reserved for future features
	  and is incomplete [#682, #2410]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: revisit
	  upslist_savednames_find_missing() and
	  upslist_savednames_find_mismatch() [#682, #2410]  * Document better
	  * Fix envvars used in queries * Fix matching of TABCHAR
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: log if
	  NEW_CHECKSUM is empty - that it happened and what it means [#2410]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in, NEWS.adoc: fix
	  round parentheses to curly braces, so we still recognize
	  NEW_CHECKSUM for nut-driver reloads [#2410, fallout of #682]

2024-04-18  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: remove words only relevant to nut-website (which are
	  parts of larger tokens) [#2402]
	* docs/Makefile.am: clarify the NUT_SPELL_DICT used when a spelling
	  check fails [#2402]

2024-04-17  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: remove words only relevant to nut-website [#2402]
	* common/nutipc.cpp: fix include order for common.h
	* NEWS.adoc, drivers/main.c: drivers/main.c: move "-d" CLI option
	  handling also to start of program [fallout of #2259]  We consult
	  the value of `dump_data` to decide about foreground mode, but after
	  moving the `-D` option handling (and this decision) upwards to
	  facilitate early debugging, the variable is never modified in time
	  anymore.  Thanks for the catch to Eric Clappier and IPM/42ity team.
	* drivers/snmp-ups.c: fix whitespace
	* tests/NIT/nit.sh: rename logged NIT_SCRIPT_PID=>PID_NIT_SCRIPT
	* tests/NIT/nit.sh: introduce testgroup_sandbox_upsmon_master() and
	  sandbox_start_upsmon_master()
	* clients/upsmon.c: clarify log message about absence of explicit
	  POWERDOWNFLAG setting [#321]
	* tests/NIT/nit.sh: introduce upsmon_start_loop() and PID_UPSMON
	  tracking
	* tests/NIT/nit.sh: generatecfg_upsmon*(): fix MONITOR line markup
	* server/upsd.c: get_ups_ptr(): log unresolved name for
	  troubleshooting
	* tests/NIT/nit.sh: generatecfg_upsmon_trivial(): fix SHUTDOWNCMD to
	  use the expanded NUT_STATEPATH value
	* clients/upsmon.c, common/common.c, drivers/main.c,
	  drivers/upsdrvctl.c, include/common.h, server/upsd.c:
	  common/common.c et al: Introduce
	  NUT_SENDSIGNAL_DEBUG_LEVEL_KILL_SIG0PING value for
	  nut_sendsignal_debug_level [#1782]
	* tests/NIT/nit.sh: avoid stopping daemons when handling NIT_CASE =~
	  generatecfg_*|is*
	* tests/NIT/nit.sh: avoid removing TESTDIR when handling NIT_CASE =~
	  generatecfg_*|is*
	* tests/NIT/nit.sh: unset DEBUG_SLEEP when handling NIT_CASE =~
	  generatecfg_*|is*
	* tests/NIT/nit.sh: in NIT.env, hide
	  "DEBUG_SLEEP|PATH|LD_LIBRARY_PATH*" settings as comments
	* tests/NIT/nit.sh: fix updatecfg_upsmon_supplies()
	* tests/NIT/nit.sh: add PATH into generated NIT.env
	* tests/NIT/nit.sh: add a warning comment about generated NIT.env vs.
	  re-runs of the script
	* common/nutipc.cpp, common/nutstream.cpp, include/nutipc.hpp,
	  include/nutstream.hpp, include/nutwriter.hpp,
	  tests/cpputest-client.cpp, tests/cpputest.cpp, tests/example.cpp,
	  tests/nutclienttest.cpp, tests/nutconf_parser_ut.cpp,
	  tests/nutipc_ut.cpp, tests/nutstream_ut.cpp: C++ test and other
	  sources: bump and format (C) headings
	* NEWS.adoc, common/common.c, common/nutipc.cpp, include/common.h:
	  common/common.c et al: introduce a rootpidpath() method
	* common/common.c: cache a non-NULL "path" found by altpidpath(),
	  confpath(), dflt_statepath() on the first call  Speed up work upon
	  subsequent calls, and be sure to return the same value
	  consistently.
	* tests/NIT/nit.sh: also set NUT_PIDPATH for e.g. upsmon
	* tests/NIT/nit.sh: allow to run generatecfg*() helpers as a NIT_CASE
	* tests/NIT/nit.sh: generatecfg_upsmon_trivial(): tweak SHUTDOWNCMD
	  to record its attempts into a "$NUT_STATEPATH/upsmon.sd.log" file
	* tests/NIT/nit.sh: extend generatecfg_upsmon_*() methods with a way
	  to customize power supply count (served by MONITOR, required by
	  MINSUPPLIES)
	* tests/NIT/nit.sh: fix comment typo
	* tests/NIT/nit.sh: populate a "$NUT_CONFPATH/NIT.env" to facilitate
	  external testing (notably with DEBUG_SLEEP and test daemons left
	  running)

2024-04-16  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, clients/upsmon.c, clients/upsmon.h,
	  conf/upsmon.conf.sample.in, docs/man/upsmon.conf.txt,
	  docs/nut.dict: clients/upsmon.c et al: introduce OBLBDURATION
	  config toggle [#321]
	* NEWS.adoc, data/driver.list.in, docs/nut.dict: data/driver.list.in,
	  NEWS.adoc: add support-known for Visench C1K [#2395]
	* drivers/nutdrv_qx.c: fix whitespace

2024-04-15  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: update for nut-website

2024-04-15  Jim Klimov <jimklimov+nut@gmail.com>

	* .gitignore, Makefile.am, docs/Makefile.am: Makefile.am,
	  docs/Makefile.am: add recipe for spellcheck-report-dict-usage to
	  prepare a $(NUT_SPELL_DICT).usage-report [#2402]  Facilitate
	  maintenance of nut-website's spell checking dictionary with words
	  unique to the site sources.
	* scripts/installer/Makefile.am: make sure
	  scripts/installer/common/README_ipp-os-shutdown.adoc-spellchecked
	  is cleaned away
	* NEWS.adoc, drivers/libusb0.c, drivers/libusb1.c:
	  drivers/libusb{0,1}.c, NEWS.adoc: avoid spurious syslog of
	  "(nut_)libusb_get_string: Success" [#2399]

2024-04-13  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c: Hush the fopen(pidfile) messages *before* dealing
	  with "INSTCMD driver.exit" so that we can make that verbose again
	  if dialog started but failed to stop the other driver [#2384,
	  #2392]
	* drivers/main.c: change messages around "INSTCMD driver.exit"
	  activity [#2392]
	* drivers/main.c: silence compiler warnings about NUT_STRARG() for
	  "INSTCMD driver.exit" in some builds [#2392]
	* drivers/main.c: use nut_upsdrvquery_debug_level verbosity toggle to
	  hush scary noise from attempts to "driver.exit" a sibling [#1782,
	  #2392, #2384]
	* drivers/main.c: when looping to SIGTERM a duplicate driver, check
	  if we got a signal ourselves (e.g. user pressed Ctrl+C)
	* drivers/upsdrvquery.c, drivers/upsdrvquery.h:
	  drivers/upsdrvquery.{c,h}: extend with nut_upsdrvquery_debug_level
	  verbosity toggle [#1782, #2392, #2384]
	* drivers/upsdrvctl.c: stop_driver(), signal_driver_cmd(): use
	  nut_sendsignal_debug_level verbosity toggle to hush initial
	  fopen(pidfile) scary noise [#1782]
	* drivers/upsdrvctl.c: annotate "ifdef WIN32" locations waiting for
	  #1916 to be solved

2024-04-12  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, data/cmdvartab, docs/man/nutupsdrv.txt,
	  docs/man/upsdrvctl.txt, drivers/main.c, drivers/main.h,
	  drivers/upsdrvctl.c: drivers/main.{c,h}, drivers/upsdrvctl.c,
	  data/cmdvartab, man pages: Implement "INSTCMD driver.exit" [#2392]
	* drivers/upsdrvctl.c: help(): prepend sections with a blank line
	* drivers/upsdrvctl.c: bump (C) years and primary authors
	* drivers/main.c: bump (C) year
	* drivers/main.c: properly indent cmd/pidfile handling and annotate
	  ends of large clauses
	* drivers/main.c, NEWS.adoc: handle "-FF" to process PID files (and
	  competing driver instances) same as when backgrounding [#2384]
	* drivers/main.c: add debug tracing for interactions with PID file
	  and "Duplicate driver instance" [#2384]

2024-04-11  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/riello_ser.txt, drivers/riello_ser.c, NEWS.adoc: port
	  "localcalculation" feature from riello_ser [#1692, #2390]
	* docs/man/riello_usb.txt: drop extra "EXTRA ARGUMENTS" title; wrap
	  long lines [#1692]

2024-04-07  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/developers.txt, docs/nut.dict: document some caveats about
	  using IDEs to develop NUT

2024-04-06  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsmon.c, server/upsd.c, drivers/main.c,
	  drivers/upsdrvctl.c: fflush(stdout) after printing the NUT program
	  banner [#1783]  Forking daemons suffer from unflushed buffers
	  cloned into every fork() and printed for every exit() -- of each
	  forked child process.
	* clients/upsmon.c: pepper with a few debug printouts
	* scripts/systemd/README.adoc: suggest use of systemd drop-ins for
	  unit customization [#1783]
	* scripts/misc/notifyme-debug: Introduce scripts/misc/notifyme-debug
	  helper/example
	* docs/Makefile.am: update URL to asciidoc issue with
	  --destination-dir [#281]  The "asciidoc" github repo was apparently
	  hidden as the python2 codebase, with "asciidoc-py(3?)" surviving
	  with a separate issue/PR/... history. The discussion of interest is
	  available in a snapshot on Archive.Org so far.
	* docs/Makefile.am: refine SUFFIXES to not cause "bogus spellcheck
	  call" situations  Per experimentation, calls to create e.g.
	  "asciidoc-vars.conf-spellchecked" without a SPELLCHECK_SRC_ONE
	  (reported as bogus events) happened because of Makefile SUFFIXES
	  entry "-spellchecked" causing it to be tried as an implicit
	  prerequisite, e.g.:  Considering target file 'asciidoc-vars.conf'.
	  Looking for an implicit rule for 'asciidoc-vars.conf'. Trying
	  pattern rule with stem 'asciidoc-vars.conf'. Trying implicit
	  prerequisite 'asciidoc-vars.conf-spellchecked'. Found an implicit
	  rule for 'asciidoc-vars.conf'. Considering target file
	  'asciidoc-vars.conf-spellchecked'. Looking for an implicit rule for
	  'asciidoc-vars.conf-spellchecked'. Trying pattern rule with stem
	  'asciidoc-vars.conf-spellchecked'. Trying implicit prerequisite
	  'asciidoc-vars.conf-spellchecked,v'. Trying pattern rule with stem
	  'asciidoc-vars.conf-spellchecked'. Trying implicit prerequisite
	  'RCS/asciidoc-vars.conf-spellchecked,v'. Trying pattern rule with
	  stem 'asciidoc-vars.conf-spellchecked'. Trying implicit
	  prerequisite 'RCS/asciidoc-vars.conf-spellchecked'. Trying pattern
	  rule with stem 'asciidoc-vars.conf-spellchecked'. Trying implicit
	  prerequisite 's.asciidoc-vars.conf-spellchecked'. Trying pattern
	  rule with stem 'asciidoc-vars.conf-spellchecked'. Trying implicit
	  prerequisite 'SCCS/s.asciidoc-vars.conf-spellchecked'. No implicit
	  rule found for 'asciidoc-vars.conf-spellchecked'. Finished
	  prerequisites of target file 'asciidoc-vars.conf-spellchecked'. No
	  need to remake target 'asciidoc-vars.conf-spellchecked'. Finished
	  prerequisites of target file 'asciidoc-vars.conf'. Prerequisite
	  'asciidoc-vars.conf-spellchecked' is newer than target
	  'asciidoc-vars.conf'. Must remake target 'asciidoc-vars.conf'.
	  Makefile:1302: update target 'asciidoc-vars.conf' due to:
	  asciidoc-vars.conf-spellchecked  ...and indeed it is bogus. This
	  little fix removes the situation and does not preclude the files
	  without `.txt` exception (license etc.) getting spellchecked or
	  prepped.
	* clients/upsmon.c: clarify that lack of a running daemon PID file is
	  OK when checking_flag (for POWERDOWNFLAG)
	* NEWS.adoc, docs/nut.dict: use nut_sendsignal_debug_level verbosity
	  toggle to hush initial fopen(pidfile) scary noise [#1782]
	* server/upsd.c: use nut_sendsignal_debug_level verbosity toggle to
	  hush initial fopen(pidfile) scary noise [#1782]
	* drivers/main.c: use nut_sendsignal_debug_level verbosity toggle to
	  hush initial fopen(pidfile) scary noise [#1782]
	* clients/upsmon.c: use nut_sendsignal_debug_level verbosity toggle
	  to hush initial fopen(pidfile) scary noise [#1782]
	* common/common.c, include/common.h: extend with
	  nut_sendsignal_debug_level verbosity toggle [#1782]
	* clients/upsmon.c: do not be verbose in loadconfig() if we are just
	  quietly checking killpower flag [#2383]

2024-04-05  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: americanize the verb ending [#321]
	* clients/upsmon.c: support "reload_flag = -1" for help() [#321]
	* docs/man/upsmon.conf.txt: suggest use of "upsmon -K" instead of
	  direct lookups into POWERDOWNFLAG file; note recommended locations
	  [#321]
	* conf/upsmon.conf.sample.in, docs/man/upsmon.conf.txt: suggest the
	  minimal functional content of upsmon.conf [#321]
	* clients/upsmon.c: help(): call loadconfig() quietly and report the
	  value or absence of explicit POWERDOWNFLAG setting [#321]
	* clients/upsmon.c: loadconfig(): report absence of explicit
	  POWERDOWNFLAG setting [#321]
	* clients/upsmon.c: loadconfig(): report entering the method (and the
	  config file used)
	* clients/upsmon.c: loadconfig(): only upslogx() if active
	  nut_debug_level is not negative
	* clients/upsmon.c: addups(): only upslogx() if active
	  nut_debug_level is not negative
	* conf/upsmon.conf.sample.in, docs/man/upsmon.conf.txt: document that
	  POWERDOWNFLAG must be configured (no compiled-in default in upsmon)
	  [#321]
	* NEWS.adoc: document the situation about POWERDOWNFLAG setting
	  [#321]

2024-04-04  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/maintainer-guide.txt: remind to prepare a GitHub label for
	  eventual issues with the new release
	* docs/maintainer-guide.txt: remind to verify GPG checksums (and make
	  sure sources are published) [#2381]

2024-04-03  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, drivers/libhid.c: Fix comments/docs around the
	  `maxreport` flag for `usbhid-ups` driver, vs. `max_report_size`
	  setting in code

2024-04-02  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/maintainer-guide.txt: update release ritual details
	* data/driver.list.in: fix some comments with double quotes
	* data/driver.list.in: note about comments
	* docs/nut.dict: update for nut-website

2024-04-01  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/maintainer-guide.txt: update commit instructions for AC_INIT
	  bumps
	* configure.ac: bump AC_INIT to development version 2.8.2.1
	* NEWS.adoc, UPGRADING.adoc, docs/docinfo.xml.in: Revert "NEWS.adoc,
	  UPGRADING.adoc, docs/docinfo.xml.in: finalize text before NUT
	  v2.8.2 release"  This reverts commit
	  fc9d6211b46955ce7961536cac53a2e10e248584.
	* configure.ac: mark exact NUT v2.8.2 release  Happy Fools' Day!
	* docs/maintainer-guide.txt: update instruction
	* Makefile.am: avoid parallelizing "doc" and "all-recursive" just in
	  case (only follow up by "make doc")  Maybe this is behind duplicate
	  man page builds which tend to step on each other's toes.
	* docs/maintainer-guide.txt: example command for tag remake
	* docs/maintainer-guide.txt: example command fix
	* .github/workflows/PyNUTClient.yml, NEWS.adoc, appveyor.yml,
	  configure.ac, docs/docinfo.xml.in,
	  scripts/Windows/build-mingw-nut.sh: Update versions for release of
	  NUT v2.8.2
	* drivers/adelsystem_cbi.c, drivers/al175.c, drivers/apcsmart.c,
	  drivers/apcupsd-ups.c, drivers/asem.c, drivers/bcmxcp.c,
	  drivers/belkin.c, drivers/belkinunv.c, drivers/bestfcom.c,
	  drivers/bestfortress.c, drivers/bestuferrups.c, drivers/bestups.c,
	  drivers/blazer_ser.c, drivers/blazer_usb.c, drivers/clone-outlet.c,
	  drivers/clone.c, drivers/dummy-ups.c, drivers/etapro.c,
	  drivers/everups.c, drivers/gamatronic.c,
	  drivers/generic_gpio_libgpiod.c, drivers/generic_modbus.c,
	  drivers/genericups.c, drivers/huawei-ups2000.c, drivers/isbmex.c,
	  drivers/ivtscd.c, drivers/liebert-esp2.c, drivers/liebert.c,
	  drivers/macosx-ups.c, drivers/masterguard.c, drivers/metasys.c,
	  drivers/mge-utalk.c, drivers/microdowell.c, drivers/microsol-apc.c,
	  drivers/netxml-ups.c, drivers/nut-ipmipsu.c,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_siemens_sitop.c,
	  drivers/oneac.c, drivers/optiups.c,
	  drivers/phoenixcontact_modbus.c, drivers/pijuice.c,
	  drivers/powercom.c, drivers/powerman-pdu.c, drivers/powerpanel.c,
	  drivers/rhino.c, drivers/richcomm_usb.c, drivers/riello_ser.c,
	  drivers/safenet.c, drivers/skel.c, drivers/sms_ser.c,
	  drivers/snmp-ups.c, drivers/socomec_jbus.c, drivers/solis.c,
	  drivers/tripplite.c, drivers/tripplite_usb.c,
	  drivers/tripplitesu.c, drivers/upscode2.c, drivers/usbhid-ups.c,
	  drivers/victronups.c: drivers/*.c: mass-bump DRIVER_VERSION values
	  due to changes in main.c since NUT v2.8.1 release
	* NEWS.adoc, UPGRADING.adoc, docs/docinfo.xml.in: finalize text
	  before NUT v2.8.2 release
	* docs/maintainer-guide.txt: top note about (not-)spellchecking this
	  doc
	* docs/maintainer-guide.txt: update release instructions, fix typos

2024-03-31  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: mention belkin-hid fix as also a regression fix [#2371]
	* drivers/riello_usb.c: upsdrv_initinfo(): set batt_volt_* limit vars
	  from nominal voltage alignment, then apply from settings or initial
	  reading [#1692]
	* drivers/riello_usb.c: upsdrv_initinfo(): set batt_volt_* limit vars
	  from settings or initial reading [#1692]

2024-03-26  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/Makefile.am: EXTRA_DIST the test mock "program" source
	* NEWS.adoc: document fixes for Belkin/Liebert readings
	* tests/getexponenttest-belkin-hid.c, drivers/belkin-hid.c: absorb
	  liebert_psi5_line_voltage_fun() into common
	  liebert_line_voltage_fun()  Hopefully should help more devices than
	  those which serve this or that HID subtree only. Follows up from PR
	  #2369

2024-03-25  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/belkin-hid.c: fix liebert_line_voltage_fun() and friends
	  for 0..500V range (cover 3-pole while we are at it)  Not touching
	  liebert_config_voltage_fun() at the moment as have no non-integer
	  examples under hand to test against.
	* tests/getexponenttest-belkin-hid.c: add tests for larger value
	  ranges (over 200V)
	* drivers/belkin-hid.c: comment expectations for
	  liebert_line_voltage_fun() and friends
	* tests/.gitignore, tests/Makefile.am: tests: no longer need a
	  replica of belkin-hid.c in tests/ to build
	  getexponenttest-belkin-hid  Suffices that we #include it in the
	  test source, and drivers/ are among include dirs
	* tests/.gitignore, tests/Makefile.am, tests/driver-stub-usb.c,
	  tests/{getexponenttest.c => getexponenttest-belkin-hid.c}: tests:
	  rename getexponenttest => getexponenttest-belkin-hid since it
	  became quite specific to that subdriver source  Still, can serve as
	  an example/blueprint for other drivers' tests.
	* tests/getexponenttest.c: use our macros to avoid "comparing
	  floating point with == or != is unsafe [-Werror,-Wfloat-equal]"
	  [#2371]
	* drivers/belkin-hid.c, tests/Makefile.am, tests/driver-stub-usb.c,
	  tests/getexponenttest.c: drivers/belkin-hid.c: Revert modifications
	  for unit-testing, arrange its build differently [#2371]
	* drivers/belkin-hid.c, tests/.gitignore, tests/Makefile.am,
	  tests/driver-stub-usb.c, tests/getexponenttest.c: Add unit tests
	  for belkin-hid liebert_line_voltage_fun() and related methods
	  [#2370]
	* drivers/belkin-hid.c: whitespace fix
	* drivers/belkin-hid.c: update (C) heading [#2369 follow-up]

2024-03-24  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/riello_usb.c: extend built-in default battery low/high
	  range to match nutdrv_qx data for PbAc batteries [#1692]
	* drivers/riello_usb.c, docs/man/riello_usb.txt: pick battery
	  low/high range via known or configured battery.voltage.nominal
	  [#1692]
	* drivers/riello_usb.c, docs/man/riello_usb.txt: allow configurable
	  battery.voltage.low/.high for localcalculation guesstimates [#1692]
	* drivers/riello_usb.c: bump (C) and DRIVER_VERSION for
	  "localcalculation" related support [#1692]
	* drivers/riello_usb.c: comment the meaning of logical blocks changed
	  by PR #1692

2024-03-23  Jim Klimov <jimklimov+nut@gmail.com>

	* UPGRADING.adoc, NEWS.adoc: mention changes in
	  tools/gitlog2changelog.py.in [#2360, #2366]
	* tools/gitlog2changelog.py.in: when authorMustBeASCII, only parse
	  str via unicode() if we did not shortcut it earlier, and fix a typo
	  in encoding value
	* tools/gitlog2changelog.py.in: trace absence of "unicode" type in
	  some python bundles
	* NEWS.adoc: Add Liebert PSI5 [#2369]

2024-03-22  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am, docs/Makefile.am: use abs_top_builddir for wrapper
	  rules
	* docs/Makefile.am, docs/man/Makefile.am: clarify default "all"
	  target variants as requiring a prep
	* Makefile.am: be sure to prep before the many docs-related targets
	* Makefile.am: fix typo for "docs/man" prep for spellcheck target
	* Makefile.am: clarify default "all" target variants
	* docs/man/Makefile.am: typo fix in comments
	* docs/man/apc_modbus.txt: update comments for libmodbus+rtu_usb
	  builds - with a static library suggestion [#2063]
	* Jenkinsfile-dynamatrix: enable "autotools driven build with default
	  configuration ... with fatal warnings" for all branch types
	  Earlier enabled for fightwarn and PRs against stable branches, but
	  not for master-branch builds themselves.
	* tools/nut-scanner/scan_xml_http.c, tools/nut-scanner/scan_snmp.c:
	  ignore potentially unreachable code in platforms-dependent range
	  checks  Same as 34056dd43261c92e9230e2d18ddf5e8f498d98e9 earlier.

2024-03-22  James R. Parks <jrjparks@zathera.com>

	* drivers/belkin-hid.c, drivers/usbhid-ups.c, drivers/usbhid-ups.h:
	  feat: Add support for Liebert PSI5  Adding support for the Liebert
	  PSI5 model of UPS.

2024-03-21  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/apc_modbus.txt, docs/nut.dict: update manpage with
	  instructions for USB-capable builds [#2063]
	* m4/nut_check_libmodbus.m4: make it visible when some libmodbus is
	  found, but does not support libusb while we want it (and will fail
	  NUT configure later) [#2063]

2024-03-19  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/installer/make_package.sh: update comments
	* scripts/installer/README.adoc, docs/nut.dict: update about
	  directory layout and contents expected by make_package.sh
	* scripts/installer/Makefile.am, scripts/installer/README.adoc,
	  scripts/installer/nut: scripts/installer: avoid SCM-tracking a
	  symlink to NUT source root

2024-03-18  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: for autotools-only builds, select by
	  OS_DISTRO (avoide duplicates with OS_FAMILY)
	* Jenkinsfile-dynamatrix: exclude GCC on OpenBSD 6.5 from autotools
	  CI builds  Old compiler that won't hush about warnings, pollutes CI
	  dashboard. Equivalent builds handled by `ci_build.sh` are in quiet
	  mode for the first compilation attempt (usually the only one, if
	  all is OK) so these warnings are just not seen by build-log
	  analysis parser.
	* configure.ac, Makefile.am, docs/Makefile.am,
	  tools/gitlog2changelog.py.in: detect if we should mangle
	  ChangeLog.pdf section titles with non-ASCII contributor names
	* docs/Makefile.am: hint to asciidoc/dblatex to trivialize section
	  names into ASCII themselves  Inspired by
	  http://aerostitch.github.io/misc/asciidoc/asciidoc-title_uft8.html
	  but did not directly help at least for Ubuntu 14.04 worker  NOTE:
	  Fallback suggestion to add
	  --dblatex-opts="--param=latex.encoding=utf8" actually broke the PDF
	  doc builds, not only for ChangeLog.
	* tools/gitlog2changelog.py.in: trivialize author names into plain
	  ASCII  Older asciidoc/a2x/dblatex stack fails with non-ASCII
	  characters in section titles (date and commit author become
	  ChangeLog sections).  Inspired by:  *
	  http://aerostitch.github.io/misc/asciidoc/asciidoc-title_uft8.html
	  *
	  https://stackoverflow.com/questions/51710082/what-does-unicodedata-normalize-do-in-python
	  *
	  https://stackoverflow.com/questions/38697037/how-to-convert-python-2-unicode-function-into-correct-python-3-x-syntax
	* Makefile.am: make sure that "make all" ends up making all types of
	  docs
	* common/nutconf.cpp, common/nutwriter.cpp, include/nutconf.hpp,
	  tests/nutconf_ut.cpp, tools/nutconf/nutconf-cli.cpp:
	  nutconf-related C++ sources: deprecate certain terminology and
	  keywords [#840]
	* common/nutconf.cpp, common/nutwriter.cpp, include/nutconf.hpp,
	  tests/nutconf_parser_ut.cpp: nutconf-related C++ sources: fix typo
	  in source var names: hotSync => hostSync
	* common/nutconf.cpp, common/nutwriter.cpp, include/nutconf.hpp,
	  tools/nutconf/nutconf-cli.cpp: nutconf-related C++ sources: add new
	  UPSMON-style notification keywords to vocabulary

2024-03-14  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: rectify passing of CONFIG_OPTS [relies on
	  nut/jenkins-dynamatrix#34]
	* Jenkinsfile-dynamatrix: wrap unstashing of sources into their own
	  pipeline sub-stage
	* Jenkinsfile-dynamatrix: fix passing of (multi-token)
	  DISTCHECK_FLAGS to autotools build/test variants
	* Jenkinsfile-dynamatrix: add a section for direct use of autotools
	  (once per platform) in all stable-branch builds  In fallout of PR
	  #2256 we had situations "caused" by tighter integration for NUT CI
	  builds (and developer convenience via ./ci_build.sh) which were not
	  seen on the NUT CI farm but could bite the common approach of
	  `./autogen.sh && ./configure && make` on some (not all) platforms.
	* common/nutstream.cpp: avoid pedantic warning about a const/static
	  variable
	* tools/nutconf/Makefile.am: apply convenience CCACHE exports like
	  for other compiled sources [#2256]
	* Makefile.am, clients/Makefile.am, common/Makefile.am, configure.ac,
	  drivers/Makefile.am, include/Makefile.am, lib/Makefile.am,
	  server/Makefile.am, tests/Makefile.am, tests/NIT/Makefile.am,
	  tools/Makefile.am, tools/nut-scanner/Makefile.am: configure.ac,
	  *.am: wherever we export CCACHE_* envvars for convenience - avoid
	  doing so if they were not set at configure time [#2256]

2024-03-07  Jim Klimov <jimklimov+nut@gmail.com>

	* .github/workflows/codeql.yml: revise APT preinstallation  * clang
	  or gcc/g++ depending on matrix.compiler * collapse other pkgs into
	  one call * add libneon*-dev
	* .github/workflows/codeql.yml: use C/C++ buids with "native"
	  autogen+configure (and a single run for each config combo)
	* .github/workflows/codeql.yml: exile "python" analysis into one
	  "included" matrix cell

2024-03-06  Jim Klimov <jimklimov+nut@gmail.com>

	* .github/workflows/codeql.yml: add ./ci_build.sh options to
	  constrain build/check scenario workload sprawl
	* .github/workflows/codeql.yml: make a CodeQL matrix of
	  compiler/NUT_SSL_VARIANTS/NUT_USB_VARIANTS instead of single
	  fightwarn-all
	* .github/workflows/codeql.yml: fix stringification of
	  "ubuntu-latest"
	* .github/workflows/codeql.yml: make "ubuntu-latest" formally a part
	  of "matrix.os" for "if" clause
	* .github/workflows/codeql.yml: install prerequisite packages and
	  ensure a "BUILD_TYPE=fightwarn-all ./ci_build.sh" loop for C/C++
	  "Autobuild" implementation
	* .github/workflows/codeql.yml: non-default C/C++ "Autobuild"
	  implementation
	* .github/workflows/codeql.yml, .github/codeql/codeql-config.yml: add
	  "paths" for Python scripts
	* Jenkinsfile-dynamatrix: fiddle with BUILD_WARNFATAL settings
	* .github/workflows/codeql.yml: extend with python

2024-03-04  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: fix naming for cross-Windows builds
	  ("Strict C" part is optional)
	* Jenkinsfile-dynamatrix: add a TODO about "completely out-of-tree"
	  builds
	* autogen.sh: in the end of successful execution, lead interactive
	  users to running the ./configure script

2024-03-03  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/systemd/nut-driver-enumerator-daemon-activator.path.in:
	  clarify the unit description (it does not strictly restart the
	  daemon, can reload if running too)
	* docs/config-prereqs.txt: clarify that FreeBSD likely does not want
	  to "pkg add openssl" in fact [#2275]
	* README.adoc: update phrasing on DigitalOcean and NUT CI farm

2024-03-02  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/systemd/nut-server.service.in: summarize LimitNOFILE
	  increase and ExecStartPost to monitor that it was applied, from FTY
	  branch  Originates from FTY commits:  * 062d1868fa (Jim Klimov
	  2018-01-16 13:11:08 +0100) * 0e28cc865c (Jim Klimov    2018-01-16
	  13:37:39 +0100) * e9a67100a0 (Jim Klimov    2018-01-16 13:41:52
	  +0100)
	* tools/nut-scanner/scan_snmp.c: apply comments from FTY branch
	* tools/nut-usbinfo.pl: quietly skip editor backup files, and those
	  prepared by "git difftool" for comparisons
	* scripts/systemd/.gitignore: do not GitIgnore nut-driver.target, it
	  lives in SCM now
	* drivers/snmp-ups.c: apply comments and formatting from FTY branch
	* drivers/dstate.c: apply comments from FTY branch  Originally from
	  commits 9723e08096 and 6909e965a9 (Jan 2017)
	* docs/man/nut-scanner.txt: reconcile asciidoc markup with FTY branch
	* docs/config-prereqs.txt: reconcile markup with FTY branch
	* docs/config-notes.txt: reconcile markup with FTY branch
	* common/common.c: reconcile markup with FTY branch
	* autogen.sh: reconcile markup with FTY branch
	* UPGRADING.adoc: fix basic asciidoc list markup for releases v2.6.x
	  and older
	* NEWS.adoc, UPGRADING.adoc: clarify drop of oldmge-shut from NUT
	  codebase
	* NEWS.adoc: rephrase the text about Eaton-contributed installer from
	  news prepared in FTY branch
	* tools/nut-scanner/nut-scanner.c: bump (C) years, reconcile with
	  master branch

2024-03-01  Yifeng Li <tomli@tomli.me>

	* docs/nut.dict: nut.dict: add model "KRTL" to dictionary.
	* docs/man/huawei-ups2000.txt: huawei-ups2000.txt: add
	  UPS2000-G-3KRTL to the confirmed list  A user has reported that
	  UPS2000-G-3KRTL is confirmed working, thus this commit adds it to
	  the list of known-working models. A remark about standard and long
	  runtime variants has also been added.
	* docs/Makefile.am: reminder about missing dictionary when aspell is
	  unavailable  When aspell is not unavailable, the cause can either
	  be that aspell itself is not installed, or it has no English
	  dictionary (aspell-en). I've wasted several minutes due to this
	  oversight. Add this reminder in the error message to give clue to
	  future developers.

2024-03-01  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/ax_c_pragmas.m4: comment where "-Wcast-function-type-strict"
	  comes from
	* tools/nut-scanner/nut-scanner.c: use same conservative base level
	  of USB scan verbosity when scanning all media types (-C) [#2334]
	* tools/nut-scanner/scan_nut_simulation.c: do not abort if CONFPATH
	  is missing [#2235]
	* NEWS.adoc, conf/ups.conf.sample, docs/man/nut_usb_addvars.txt,
	  docs/man/ups.conf.txt, docs/nut.dict, drivers/arduino-hid.c,
	  drivers/libshut.c, drivers/libusb0.c, drivers/libusb1.c,
	  drivers/main.c, drivers/powervar-hid.c,
	  tools/nut-scanner/scan_usb.c: Multiple USB-capable drivers: add
	  ways to tune USB HID config, report, descriptor indexes and in/out
	  endpoints [#2149]
	* docs/Makefile.am: comment typo fix
	* drivers/usb-common.c: free() USB matcher structures if called again
	  [#2309]  e.g. when reconnecting after link loss

2024-02-29  Jim Klimov <jimklimov@gmail.com>

	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_ADDRESS

2024-02-29  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt: clarify libneon.so symlink on OpenBSD
	* common/common.c: get_libname_in_dir(): report first found "related"
	  name (if any), if got no hits
	* docs/config-prereqs.txt: document hacks to get pip for Python 2.7
	  ...on systems that only support it partially  Courtesy of
	  https://stackoverflow.com/a/65125295/4715872
	* conf/Makefile.am, data/Makefile.am, data/html/Makefile.am,
	  docs/man/Makefile.am, scripts/Makefile.am,
	  scripts/Solaris/Makefile.am, scripts/Windows/Makefile.am,
	  scripts/devd/Makefile.am, scripts/hotplug/Makefile.am,
	  scripts/installer/Makefile.am, scripts/python/Makefile.am,
	  scripts/systemd/Makefile.am, scripts/udev/Makefile.am,
	  scripts/upsdrvsvcctl/Makefile.am, tests/NIT/Makefile.am:
	  */Makefile.am: fix comment referring to
	  "$(top_builddir)/install-sh"
	* drivers/hidparser.h, drivers/libhid.h, drivers/nutdrv_qx.h,
	  drivers/serial.h, drivers/snmp-ups.h, drivers/usb-common.h,
	  drivers/usbhid-ups.h, include/common.h, include/nut_float.h,
	  include/nut_stdint.h, include/proto.h: */*.h: use NUT_NETVERSION as
	  a header guard for #include "config.h"
	* NEWS.adoc: fix for battery_voltage_reports_one_pack flag handling
	  [#2324]

2024-02-28  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/nut_check_libltdl.m4: fix detection on OpenBSD
	* docs/config-prereqs.txt: clarify how to get pip on OpenBSD
	* indent.sh, scripts/HP-UX/makedepot.sh,
	  scripts/Windows/build-mingw-nut.sh,
	  scripts/installer/make_package.sh,
	  scripts/subdriver/gen-snmp-subdriver.sh,
	  scripts/subdriver/gen-usbhid-subdriver.sh: NUT shell scripts: use a
	  better portable shebang for bash interpreter discovery  NOTE: Some
	  scripts require BASH syntax; maybe not all of them do (did not
	  revise at this time)
	* scripts/HP-UX/makedepot.sh: fix whitespace

2024-02-27  Jim Klimov <jimklimov@gmail.com>

	* Makefile.am: ChangeLog: fix shell-scripting typo

2024-02-27  Jim Klimov <jimklimov+nut@gmail.com>

	* include/state.h: include time headers (we use timespec/timeval
	  here)
	* configure.ac: report if deliberately avoiding hardlinks for LN_S_R
	  implementation
	* ci_build.sh: support CI_FAILFAST also to bail out from
	  parallel/sequential build_to_only_catch_errors_target() logic -
	  ensure parallel builds succeed "as is"
	* configure.ac: revise detection of LN_S_R
	* Makefile.am: avoid what some makes see as a loop for ChangeLog
	* Makefile.am: make sure "make ChangeLog" does some work  ...even
	  with OpenBSD make implementation
	* docs/Makefile.am: produce proper asciidoc markup for ChangeLog.adoc
	  if "FAILED to resolve input or output filename with this make
	  implementation..."
	* Makefile.am: fix out-of-tree build of ChangeLog file

2024-02-27  Denny Page <dennypage@me.com>

	* drivers/nutdrv_qx.c: Correct access method used for flag
	  battery_voltage_reports_one_pack

2024-02-26  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/Makefile.am: use libnutwincompat.la where
	  appropriate
	* tools/nut-scanner/Makefile.am: fix libnutscan_la_LIBADD vs.
	  libnutscan_la_LDFLAGS
	* common/Makefile.am: define libnutwincompat.la recipe
	* common/Makefile.am: annotate automake if/else/endif with the
	  appropriate macro name, and indent  Should help with
	  navigation/maintenance of the code base
	* common/Makefile.am: pre-define CLEANFILES along with other vars of
	  that sort
	* tools/nut-scanner/Makefile.am: annotate automake if/else/endif with
	  the appropriate macro name  Should help with navigation/maintenance
	  of the code base
	* tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_xml_http.c:
	  nut-scanner sources : fix leading indentation (SPACEs to TABs) to
	  be consistent in the same file
	* tools/nut-scanner/Makefile.am: rearrange and deduplicate lines for
	  $(top_builddir)/include/nut_version.h target

2024-02-22  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: note revised recipes [#2318]
	* Makefile.am, clients/Makefile.am, common/Makefile.am,
	  conf/Makefile.am, data/Makefile.am, data/html/Makefile.am,
	  docs/Makefile.am, drivers/Makefile.am, scripts/Makefile.am,
	  scripts/Solaris/Makefile.am, scripts/Windows/Makefile.am,
	  scripts/devd/Makefile.am, scripts/hotplug/Makefile.am,
	  scripts/installer/Makefile.am, scripts/python/Makefile.am,
	  scripts/python/module/Makefile.am, scripts/systemd/Makefile.am,
	  scripts/udev/Makefile.am, scripts/upsdrvsvcctl/Makefile.am,
	  server/Makefile.am, tests/Makefile.am, tests/NIT/Makefile.am,
	  tools/nut-scanner/Makefile.am, tools/nutconf/Makefile.am:
	  */Makefile.am: be sure to use AM_MAKEFLAGS and invoke jobserver (+)
	  everywhere we call another $(MAKE)
	* docs/Makefile.am: fix AM_FLAGS => AM_MAKEFLAGS
	* scripts/python/module/Makefile.am: fix AM_FLAGS => AM_MAKEFLAGS
	* conf/Makefile.am, data/Makefile.am, data/html/Makefile.am,
	  docs/man/Makefile.am, scripts/Makefile.am,
	  scripts/Solaris/Makefile.am, scripts/Windows/Makefile.am,
	  scripts/devd/Makefile.am, scripts/hotplug/Makefile.am,
	  scripts/installer/Makefile.am, scripts/python/Makefile.am,
	  scripts/systemd/Makefile.am, scripts/udev/Makefile.am,
	  scripts/upsdrvsvcctl/Makefile.am, tests/NIT/Makefile.am:
	  */Makefile.am: pass (top_)(src|build)dir, MKDIR_P and AM_MAKEFLAGS
	  of caller into docs/Makefile parsing
	* Makefile.am: comment how to maintain list of subdirs for
	  spellchecking  TOTHINK: Do we want to just automate this discovery?
	* Makefile.am: use jobserver for spellcheck* callouts; ensure
	  .prep-src-docs are pre-generated
	* Makefile.am, docs/nut.dict,
	  scripts/installer/common/README_ipp-os-shutdown.adoc: Makefile.am:
	  spellcheck "scripts/installer" too [#2288]
	* README.adoc, docs/Makefile.am, ...g_Host_Dark_56px.png =>
	  fosshost_org_Host_Dark_56px.png}, ...st_Light_309px.png =>
	  fosshost_org_Host_Light_309px.png}, ...Host_Light_38px.png =>
	  fosshost_org_Host_Light_38px.png}, docs/images/ci/jenkins-nut.css,
	  docs/images/ci/jenkins-nut.txt, docs/nut.dict: docs: rename
	  FossHost logo files to not include a dot in the name  ...it upsets
	  some versions of `dblatex` (used in PDF generation) which treat
	  everything after the *first* dot as a file extension.
	* ci_build.sh: do not claim "Could not query git repo" if it was just
	  clean
	* docs/Makefile.am, docs/man/Makefile.am, .gitignore: fix back the
	  "-prepped" suffix (with a dash)
	* docs/Makefile.am, docs/man/Makefile.am: fix clean-up of *_prepped
	  files
	* scripts/installer/common/README_ipp-os-shutdown.adoc:
	  scripts/installer/README_ipp-os-shutdown.adoc: fix asciidoc list
	  style
	* docs/nut.dict, scripts/python/module/README.adoc:
	  scripts/python/module/README.adoc: fix spelling error
	* docs/Makefile.am: when touching a *-spellchecked file, ensure its
	  dir exists  This file may be the only (or first) build product, so
	  nobody else made that dir for us!

2024-02-21  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: abolish dependency from spellcheck on
	  .prep-src-docs
	* docs/Makefile.am: spellcheck recipes: pass an explicitly empty
	  SPELLCHECK_SRC list to sub-makes (do not confuse .prep-src-docs
	  dependency)
	* docs/Makefile.am: spellcheck recipes: report "pwd" when complaining
	  about bogus paths
	* docs/Makefile.am: do not hard-code running dpkg (for diags)
	  everywhere
	* docs/Makefile.am, docs/man/Makefile.am: use full path relative to
	  abs_top_builddir for .prep-src-docs  Facilitate running the
	  docs/Makefile from other dirs (to spell-check their docs)
	* docs/nut.dict: learn about "wildcard" (singular)
	* docs/Makefile.am, docs/man/Makefile.am: do not "ls" files for
	  PREP_SRC, suffices to sort|uniq the names in a diferent manner
	* docs/Makefile.am, docs/man/Makefile.am: drop shell debug tracing
	  from .prep-src-docs rules
	* docs/Makefile.am, docs/man/Makefile.am: chop non-trivial "srcdir"
	  from PREP_SRC pathnames, if present
	* docs/Makefile.am, docs/man/Makefile.am: list PREP_SRC pathnames
	  starting from builddir as "make" crafts them, not from srcdir
	* docs/Makefile.am, docs/man/Makefile.am: try to accomodate different
	  "make" implementations for .prep-src-docs file discovery

2024-02-20  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am, docs/man/Makefile.am: only the paths deal in
	  absolutes!
	* docs/Makefile.am: depend spellcheck on .prep-src-docs too, for
	  completeness
	* docs/Makefile.am, docs/man/Makefile.am: .prep-src-docs: for in-tree
	  builds, cover all PREP_SRC names even if they do not yet exist
	* docs/Makefile.am, docs/man/Makefile.am: revise calling the prep vs.
	  document products again
	* .gitignore, docs/Makefile.am, docs/man/Makefile.am:
	  docs/man/Makefile.am, docs/Makefile.am, Makefile.am: use
	  *.txt_prepped (with underscore) for suffix rules
	* docs/man/Makefile.am, docs/Makefile.am: insist on having a
	  "$(builddir)/.prep-src-docs"  ...do not get distracted by one
	  in-tree, if any, when doing out-of-tree builds
	* docs/.gitignore: GitIgnore .prep-src-docs* touch-files
	* .gitignore, Makefile.am, docs/Makefile.am, docs/man/Makefile.am:
	  docs/man/Makefile.am, docs/Makefile.am, Makefile.am: avoid hacky
	  rules to pre-call .prep-src-docs; use hacky touch-files instead
	* Makefile.am: try to be sure to use the job server for docs-related
	  sub-makes  ...when using custom make targets to build specific docs
	  or checks
	* docs/man/Makefile.am: enable the opportunistic suffix rule for
	  build products to depend on .prep-src-docs  Hopefully avoids
	  duplicate parallel runs of the helper where the make implementation
	  would support it (courtesy above standard requirements).
	* docs/Makefile.am, docs/man/Makefile.am: play with VPATH to help
	  prefer PREP_SRC symlinks
	* docs/Makefile.am, docs/man/Makefile.am: when creating PREP_SRC
	  symlinks, report current workdir (help with relative src/build
	  dirs)
	* docs/Makefile.am, docs/man/Makefile.am: when cleaning PREP_SRC
	  symlinks, be sure to only hit symlinks
	* docs/man/Makefile.am: be sure to include LINKMAN_INCLUDE_GENERATED
	  into PREP_SRC
	* docs/man/Makefile.am: simplify clean-up
	* docs/man/Makefile.am, docs/Makefile.am: rearrange dependencies on
	  .prep-src-docs, avoid sub-makes where we can
	* docs/man/Makefile.am, docs/Makefile.am: make sure that "all" target
	  is first

2024-02-19  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/nutscan-display.c: revise use of nutdev_num in
	  nutscan_display_sanity_check_serial()  Actually rewind it back to
	  the number which the first entry for this device type had in the
	  "continuous numbering" we track for this scan report.
	* docs/man/Makefile.am: fix out-of-tree build check for
	  linkman-driver{,tool}-names.txt recipes
	* docs/Makefile.am, docs/man/Makefile.am: touch .prep-src-docs if
	  called for in-tree builds too
	* docs/Makefile.am, docs/man/Makefile.am: do not hard-depend common
	  targets on .prep-src-docs
	* tools/nut-scanner/nutscan-display.c: convert nutdev_num and
	  last_nutdev_num to size_t
	* tools/nut-scanner/nutscan-display.c: update comments about methods
	  iterating WHOLE lists, not just parsing one "device"
	* tools/nut-scanner/nutscan-display.c: fix nutdev_name rendition (it
	  is NOT always a "nut-serialX"!)
	* docs/Makefile.am, docs/man/Makefile.am: PREP_SRC: symlink from
	  abs_srcdir to avoid the mess with relative paths and ".." offsets
	* docs/Makefile.am, docs/man/Makefile.am: prefix sub-make calls with
	  "+" to invoke jobserver
	* docs/Makefile.am, Makefile.am: explicitly "make .prep-src-docs"
	  before calling (possibly parallel) sub-make for docs or docs/man
	* docs/Makefile.am, docs/man/Makefile.am: report "Preparing to
	  generate" separately from actually "Generating"
	* docs/Makefile.am, docs/man/Makefile.am: augment with .prep-src-docs
	  target for building out-of-tree
	* docs/Makefile.am: do not make a "NOTE:..." line into a heading
	* Makefile.am: ChangeLog: re-use one from tarball when not building
	  from git
	* Makefile.am: call tools/gitlog2changelog.py in SOURCE dir (where
	  git repo is) and use CHANGELOG_FILE to store the result in BUILD
	  dir
	* Makefile.am: add a shortcut to "make ChangeLog.adoc"; fix formal
	  markup if we "failed to generate the ChangeLog" to produce a sane
	  adoc=>pdf note anyway
	* tools/gitlog2changelog.py.in: allow to use CHANGELOG_FILE="-" for
	  redirect to stdout
	* tools/gitlog2changelog.py.in: allow to customize CHANGELOG_FILE
	* tools/nut-scanner/nutscan-display.c: update comments about
	  last_nutdev_num

2024-02-17  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt: update for LUA pacakge naming on new
	  Ubuntu/Debian distros
	* drivers/eaton-ups-pwnm2-mib.c: bump version after edit in be29b to
	  drop values not needed in this fork of the mapping

2024-02-16  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/nutipc_ut.cpp: use NutFile::tmp_dir() and NutFile::path_sep()
	  for temporary PID file path construction [#2314]
	* include/nutstream.hpp: expose NutFile::tmp_dir() and
	  NutFile::path_sep() for good measure
	* tests/nutipc_ut.cpp: NutIPCUnitTest::testSignalSend(): report PID
	  file name and contents when in verbose mode
	* tests/nutipc_ut.cpp: use unique PID filenames for each test run
	  Closes: #2314

2024-02-15  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/nit.sh: introduce upsd_start_loop()  Improve chances of
	  passing the test suite even on congested CI farm agents
	* tests/nutconf_ut.cpp: with fixed ABS_TOP_SRCDIR for WIN32, un-block
	  config file parsing tests
	* configure.ac: The more slashes - the better! One can never fully
	  escape them!
	* .github/workflows/codeql.yml: update to v3  Due to
	  https://github.blog/changelog/2024-01-12-code-scanning-deprecation-of-codeql-action-v2/
	* docs/config-prereqs.txt: fix Windows sub-section heading levels
	* drivers/ever-hid.c: clarify a comment about USB VID 0x0483
	* NEWS.adoc, data/driver.list.in, drivers/cps-hid.c,
	  scripts/upower/95-upower-hid.hwdb: drivers/cps-hid.c et al: add
	  support for Cyber Energy branded devices [#2312]
	* common/nutstream.cpp: NutFile::open(): add a big comment about
	  POSIX/WIN32 (absolute) path concerns  Copied from tests, but would
	  hopefully evaporate there eventually as that particular acute issue
	  gets resolved.
	* tests/nutconf_ut.cpp: add a big comment about POSIX/WIN32
	  (absolute) path concerns
	* common/nutstream.cpp: checkExistsWritableDir(): add debuggging, fix
	  use of access() check
	* configure.ac: fix WIN32 resolution of build/src paths for tests

2024-02-14  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: fix up ABS_TOP_SRCDIR/ABS_TOP_BUILDDIR for builds of
	  NUT directly on Windows agents
	* common/nutstream.cpp: NutFile::open(): try to report the filename
	  which was problematic
	* appveyor.yml: be sure to have a NUT_STATEPATH spelled in a way that
	  is writeable by WIN32 system methods (e.g. not mangled by
	  mingw/msys)
	* common/nutstream.cpp: try more locations for getTmpDirPath(),
	  particularly on WIN32
	* tests/nutstream_ut.cpp: improve chances on parallel CI testing:
	  retry listen_sock.bind() a few times; freeze/thaw the writer PID
	* common/nutstream.cpp: neuter fallback localtime_r(), gmtime_r() on
	  mingw builds
	* configure.ac: fix nut_with_debuginfo*="legacy" to consider flag
	  list snapshots made just after autoconf might have mangled them
	* configure.ac: to not change nut_with_debuginfo* from "no" to
	  "legacy", leave it strictly as caller asked  Recent changes are
	  more careful about the "LEGACY FALLBACK" application. Let users ask
	  for it explicitly though.
	* common/nutstream.cpp: NutFile(anonymous_t): trace the attempted
	  m_tmp_dir and filename (if known) in theexception (so far WIN32
	  code path)
	* common/nutstream.cpp: NutFile(anonymous_t): use tmp file as binary
	  in both POSIX and WIN32 code
	* common/nutstream.cpp: NutFile(anonymous_t): pre-zero filename
	  buffer
	* common/nutstream.cpp: getTmpDirPath(): return "/tmp" not "/var/tmp"
	  by default
	* common/nutstream.cpp: getTmpDirPath(): comment about a C++17
	  equivalent to maybe call later
	* common/nutstream.cpp: :NutFile(anonymous_t), getTmpDirPath(): use
	  ASCII char variants of Windows path related methods
	* configure.ac: typo fix (--with-cppunit => --enable-cppunit) in
	  messages
	* NEWS.adoc, docs/nut.dict: NEWS.adoc: document "configure
	  --with-debuginfo" possibility [#2310]
	* m4/nut_report_feature.m4: adjust NUT_REPORT_COMPILERS to note about
	  debug optimizations
	* configure.ac: move CONFIG_C(XX)FLAGS definition back down to where
	  we check AC_PROG_C* macros
	* configure.ac: rename C(XX)FLAGS_ORIG to CONFIG_C(XX)FLAGS to avoid
	  conflict with m4 scripts and to maintain similarly to CONFIG_FLAGS
	* configure.ac: move stashing of CFLAGS_ORIG/CXXFLAGS_ORIG higher in
	  the script; only do it if they are not yet set (and do set them if
	  re-entering for an in-place build)
	* configure.ac: add C(XX)FLAGS_ORIG tracing printouts to where we
	  check nut_with_debuginfo
	* configure.ac: hide C(XX)FLAGS_(BEFORE|AFTER)_ACPROG tracing
	  printouts; move "LEGACY DEFAULT FALLBACK" CFLAGS to the same block
	  where we check AC_PROG_C*
	* configure.ac: fix typo in shell test
	* configure.ac: avoid needless quoting in AC_MSG_RESULT() printouts
	* configure.ac: do not mangle C(XX)FLAGS added by autotools; just
	  stash and consult original values when deciding --with-debuginfo
	  behavior
	* configure.ac: rearrange mangling of CFLAGS and CXXFLAGS by
	  autotools defaults (optimizations/debug barged in) and our script
	* m4/nut_report_feature.m4: adjust NUT_REPORT_COMPILERS to note about
	  debug optimizations
	* configure.ac: move CONFIG_C(XX)FLAGS definition back down to where
	  we check AC_PROG_C* macros
	* configure.ac: rename C(XX)FLAGS_ORIG to CONFIG_C(XX)FLAGS to avoid
	  conflict with m4 scripts and to maintain similarly to CONFIG_FLAGS
	* configure.ac: move stashing of CFLAGS_ORIG/CXXFLAGS_ORIG higher in
	  the script; only do it if they are not yet set (and do set them if
	  re-entering for an in-place build)
	* configure.ac: add C(XX)FLAGS_ORIG tracing printouts to where we
	  check nut_with_debuginfo
	* configure.ac: hide C(XX)FLAGS_(BEFORE|AFTER)_ACPROG tracing
	  printouts; move "LEGACY DEFAULT FALLBACK" CFLAGS to the same block
	  where we check AC_PROG_C*
	* NEWS.adoc, docs/nut.dict: NEWS.adoc: document "configure
	  --with-debuginfo" possibility [#2290]
	* configure.ac: fix typo in shell test
	* configure.ac: avoid needless quoting in AC_MSG_RESULT() printouts
	* configure.ac: do not mangle C(XX)FLAGS added by autotools; just
	  stash and consult original values when deciding --with-debuginfo
	  behavior
	* configure.ac: rearrange mangling of CFLAGS and CXXFLAGS by
	  autotools defaults (optimizations/debug barged in) and our script

2024-02-13  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: avoid autoconf-added debug/optimization settings
	* configure.ac: allow to --enable-cppunit=force for dev-testing
	* common/nutstream.cpp, common/Makefile.am: augment getTmpDirPath()
	  with NUT altpidpath() support
	* common/nutstream.cpp: drop fflush() for sockets, not applicable
	  type
	* common/nutstream.cpp: refactor getTmpDirPath() with
	  checkExistsWritableDir() helper
	* configure.ac: avoid autoconf-added debug/optimization settings
	* include/nutstream.hpp: make flush() methods in the NutStream
	  classes part of the interface API
	* common/nutstream.cpp, include/nutstream.hpp,
	  tests/nutstream_ut.cpp: introduce flush() methods in the classes;
	  use in NutFile stream tests between write() and read() parts
	  [#2293]  WIN32 builds failed due to lack of flush() and read an
	  empty temporary file. Apparently the OS does not read() from a
	  queued write() buffer/FS cache for a file.
	* common/nutstream.cpp, include/nutstream.hpp: track NutSocket domain
	  and type (e.g. AF_INET and SOCK_STREAM)  Also sanity-check if they
	  fit when used.
	* common/nutstream.cpp: avoid use of hard-coded temporary path; fix
	  WIN32 use-case [#2293]  In WIN32 builds, ::tmpfile() tries to write
	  to C:\ root dir and usually has no permissions to do so. Here we
	  actively probe common envvars for temporary directories (or also
	  use a WIN32 syscall for the effect) to try and get a realistic
	  TMPDIR.  TODO: Consider NUT statepath/(alt)pidpath... maybe not
	  available in tests though. Probe if the chosen dir actually exists?
	* tests/nutstream_ut.cpp: use global "verbose" setting to trace
	  readTestData()/writeTestData() helpers
	* tests/cpputest.cpp, tests/nutstream_ut.cpp: let individual tests
	  see the global "verbose" setting from CLI
	* tests/nutstream_ut.cpp: Revert "tests/nutstream_ut.cpp: let the
	  destructor alone close() the bound socket"  This reverts commit
	  f93c31fa9a5804d8aadbefb0cfb98e0cc03b6e7d.
	* configure.ac: allow to --enable-cppunit=force for dev-testing
	* common/nutstream.cpp: fix NutSocket calls to
	  read/write/close/connect methods to use our WIN32/POSIX friendly
	  wrappers
	* tests/nutstream_ut.cpp: let the destructor alone close() the bound
	  socket
	* tests/nutstream_ut.cpp: getFreePort(): use sock.closex() with
	  exceptions on errors right away

2024-02-12  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac, tests/Makefile.am: define CPPUNIT_NUT_CXXFLAGS
	  properly
	* configure.ac: if we apply nut_with_debuginfo_CXX, avoid separate
	  settings for CPPUNIT_NUT_CXXFLAGS debugging
	* configure.ac: separate internally nut_with_debuginfo into
	  nut_with_debuginfo_C vs. nut_with_debuginfo_CXX
	* configure.ac, ci_build.sh: introduce --with-debuginfo
	  (BUILD_DEBUGINFO) setting
	* ci_build.sh: empty BUILD_TYPE is not an "error", fix the warning
	  message
	* ci_build.sh: add "TAKING SHORTCUT" to re-generate if current
	  configure script syntax is broken
	* appveyor.yml: try to print "make check" post-mortem details with a
	  subshell  It is surprisingly difficult to do in-line scripts for
	  Windows via YAML
	* configure.ac, tests/Makefile.am: define CPPUNIT_NUT_CXXFLAGS
	  properly
	* configure.ac: if we apply nut_with_debuginfo_CXX, avoid separate
	  settings for CPPUNIT_NUT_CXXFLAGS debugging
	* appveyor.yml: Revert "appveyor.yml: use double-quotes to wrap bash
	  calls (windows shell is quirky with single quotes)"  This reverts
	  commit abf2a9e24e2d122f10c6b74121439f88a43f1d57.
	* tests/nutstream_ut.cpp: on IWN32, use WSAStartup() before socket
	  methods
	* include/nutipc.hpp, tests/nutipc_ut.cpp: accomodate the likes of
	  OSX where sigemptyset() is a macro
	* appveyor.yml: use double-quotes to wrap bash calls (windows shell
	  is quirky with single quotes)
	* ci_build.sh: empty BUILD_TYPE is not an "error", fix the warning
	  message
	* tests/nutipc_ut.cpp: testSignalRecvQuick(): avoid switch/case over
	  an enum  Avoids warning about "enumeration values not explicitly
	  handled in switch: ..."
	* appveyor.yml: print trace files if "make check" failed
	* tests/cpputest.cpp: avoid segfault with debug-trace progress
	  printer and certain compiler optimizations
	* tests/cpputest.cpp: be sure to avoid debug-trace segfaults if
	  "test" is NULL
	* tests/nutstream_ut.cpp: avoid forked helper continuing with another
	  copy of tests
	* configure.ac: separate internally nut_with_debuginfo into
	  nut_with_debuginfo_C vs. nut_with_debuginfo_CXX
	* ci_build.sh: add "TAKING SHORTCUT" to re-generate if current
	  configure script syntax is broken
	* configure.ac, ci_build.sh: introduce --with-debuginfo
	  (BUILD_DEBUGINFO) setting
	* tests/nutipc_ut.cpp: be sure to caught_signals.clear() early in
	  testSignalRecv*()
	* tests/nutipc_ut.cpp, tests/nutconf_ut.cpp: register each test
	  separately to trace them better
	* tests/cpputest.cpp: be sure to flush the printout of starting test
	  name before churning CPU on it
	* tests/nutstream_ut.cpp: try to actively probe an available port
	  number for the test
	* tests/nutipc_ut.cpp: separate tests about received signal count
	  (rapid-fire) and order (staggered)

2024-02-10  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: warn early if building with mingw and strict/ansi
	  C/C++ mode
	* drivers/mge-hid.c: fix includes and defines for WIN32 build with
	  strict C89
	* common/common.c: avoid "FOR loop initial declarations" (are only
	  allowed in C99 or C11 mode) for a WIN32 codepath
	* server/netssl.c: include common.h=>config.h first
	* drivers/riello_ser.c: include common.h=>config.h first
	* drivers/riello.c: include common.h=>config.h first
	* server/sockdebug.c: include common.h=>config.h first
	* drivers/snmp-ups.h: rearrange commented-away code
	* drivers/riello_ser.c: rearrange commented-away code
	* clients/upsmon.c, drivers/dstate.c, drivers/eaton-pdu-marlin-mib.c,
	  drivers/main.c, drivers/nutdrv_qx.c, drivers/snmp-ups.c,
	  drivers/tripplite_usb.c, drivers/upsdrvctl.c,
	  drivers/upsdrvquery.c,
	  scripts/Windows/DriverInstaller/wdi-simple.c, server/conf.c,
	  server/pipedebug.c, server/sstate.c: Fix comment style from
	  double-slash to C89 compatible
	* common/strptime.c: fix indentations and comment style
	* drivers/nutdrv_qx_ablerex.c: rearrange commented-away code
	* common/strptime.c: use NUT config.h
	* drivers/pijuice.c: indent nested #if/#endif macros for readability
	* clients/cgilib.c: include common.h=>config.h first; be sure to have
	  stdio.h for snprintf()
	* docs/developers.txt: extend notes about NUT CI farm hosting (with
	  DigitalOcean) [#2192]
	* docs/developers.txt, docs/nut.dict: docs/developers.txt: extend
	  notes about baseline supported C/C++ standards
	* UPGRADING.adoc, NEWS.adoc: mention fixed C/C++ standard support in
	  builds
	* tests/generic_gpio_utest.c: "int main()" requires a return value
	* tests/generic_gpio_utest.c, tests/generic_gpio_liblocal.c: avoid
	  "FOR loop initial declarations" (are only allowed in C99 or C11
	  mode)  A little fallout for recent fix of actually doing C89 bulids
	  via ci_build.sh
	* configure.ac, m4/nut_compiler_family.m4: extend sensitivity for
	  "-std=..." to also cover "-ansi" option
	* ci_build.sh: update comment for "ignored" BUILD_WARNOPT and
	  BUILD_WARNFATAL settings when BUILD_TYPE is empty
	* Jenkinsfile-dynamatrix: constrain cross-mingw builds to GNU C
	  standard by default (Strict C seems broken on OS side)
	* drivers/raritan-px2-mib.c: fix NULL from string to pointer
	  (raritanpx2_outlet_status_info[] sentinel)  Closes: #2304
	* drivers/raritan-px2-mib.c: add a comment about daisy-chain features
	  anticipated by this vendor MIB
	* drivers/raritan-px2-mib.c: add more values to
	  raritanpx2_outlet_status_info[]  Found per
	  https://www.circitor.fr/Mibs/Html/P/PDU2-MIB.php#SensorStateEnumeration
	* drivers/delta_ups-mib.c: fix typo for "split-phase" UPS type
	  mapping  Closes: #2302
	* Jenkinsfile-dynamatrix: constrain cross-mingw builds to GNU C
	  standard by default (Strict C seems broken on OS side)

2024-02-09  Jim Klimov <jimklimov@gmail.com>

	* drivers/tripplite_usb.c: update comments and logging for unit id
	  matcher

2024-02-09  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/sms_ser.c, clients/upssched.c: avoid "FOR loop initial
	  declarations" (are only allowed in C99 or C11 mode)  A little
	  fallout for recent fix of actually doing C89 bulids via ci_build.sh
	* m4/nut_compiler_family.m4: fix detection of a compiler standard
	  already requested by caller
	* tests/NIT/nit.sh: support NIT_CASE=isBusy_NUT_PORT for
	  troubleshooting
	* tests/NIT/nit.sh: isBusy_NUT_PORT(): check known sockets also with
	  "ss" tool
	* tests/NIT/nit.sh: isBusy_NUT_PORT(): do not test for non-emptiness
	  of /proc/net/tcp* (they have contents AND are reported empty on
	  some distros)
	* tests/NIT/nit.sh: isBusy_NUT_PORT(): add log_debug() tracing about
	  detected or not detected information
	* tests/NIT/nit.sh: make sure log_debug() never errors out
	* tests/NIT/nit.sh: support NIT_CASE=isBusy_NUT_PORT for
	  troubleshooting
	* tests/NIT/nit.sh: isBusy_NUT_PORT(): check known sockets also with
	  "ss" tool
	* tests/NIT/nit.sh: isBusy_NUT_PORT(): do not test for non-emptiness
	  of /proc/net/tcp* (they have contents AND are reported empty on
	  some distros)
	* tests/NIT/nit.sh: isBusy_NUT_PORT(): add log_debug() tracing about
	  detected or not detected information
	* tests/NIT/nit.sh: make sure log_debug() never errors out
	* drivers/sms_ser.c, clients/upssched.c: avoid "FOR loop initial
	  declarations" (are only allowed in C99 or C11 mode)  A little
	  fallout for recent fix of actually doing C89 bulids via ci_build.sh
	* ci_build.sh: refine CANBUILD_NUTCONF handling vs.
	  CXXFLAGS="-std=..."
	* tests/nutstream_ut.cpp: try to fix the use of really random port
	  numbers (again)
	* tests/nutipc_ut.cpp: try to fix the occasional fault of
	  testSignalRecv() - also with USER1 after USER2 (and a sleep)
	* tests/nutipc_ut.cpp: try to fix the occasional fault of
	  testSignalRecv()
	* m4/nut_compiler_family.m4: fix detection of a compiler standard
	  already requested by caller
	* drivers/eaton-pdu-marlin-mib.c, drivers/hpe-pdu-mib.c:
	  drivers/*-mib.c: fix "open" to "opened" (again) for dry contact
	  states  Re-apply commit d3b6ea4d89 to modernized codebase of PR
	  #2285 and newly cover drivers/hpe-pdu-mib.c as well
	* drivers/baytech-mib.c, drivers/eaton-ups-pwnm2-mib.c,
	  drivers/huawei-mib.c: drivers/*-mib.c: clean up typos for PR #2285
	* drivers/tripplite_usb.c: typo fix in formatting string
	* common/nutstream.cpp, include/nutstream.hpp: NutFile class:
	  refactor constructor with access_t mode to not use tmpnam() [#2295]
	  The method for NutFile::tmpName() was private and only used in this
	  constructor, and relied on the unsafe tmpnam() method to openx()
	  the resulting file with a given mode.  With this change, the file
	  is created via tmpfile() and freopen()'ed with the desired mode.
	  Downside: name inherently unknown.  Upside: auto-deletion of the
	  temporary file.  Closes: #2295
	* common/nutstream.cpp, include/nutstream.hpp: NutFile class:
	  refactor strAccessMode() helper into a separate method [#2295]
	* common/nutstream.cpp: NutFile class: take more care about empty
	  m_name or null m_impl values (sanity-checks etc.)
	* common/nutstream.cpp, include/nutstream.hpp: wrap some long
	  exception-printing lines
	* tools/nutconf/nutconf-cli.cpp: rearrange getMode() default handling
	  Avoid claims that "control reaches end of non-void function
	  [-Wreturn-type]"
	* tools/nutconf/Makefile.am, tools/nutconf/{nutconf.cpp =>
	  nutconf-cli.cpp}: tools/nutconf/nutconf.cpp: rename to
	  nutconf-cli.cpp to reduce ambiguity
	* tests/Makefile.am, tests/{nutconf.cpp => nutconf_parser_ut.cpp}:
	  tests/nutconf.cpp: rename to nutconf_parser_ut.cpp to reduce
	  ambiguity
	* drivers/tripplite_usb.c: harden the int types used to detect and
	  report unit id
	* NEWS.adoc: update for tripplite_usb unit id matcher [#2297]

2024-01-31  sapireli <114778791+sapireli@users.noreply.github.com>

	* drivers/tripplite_usb.c: Fix for undefined upsid in config small
	  fix restoring matching when upsid is undefined in config closes
	  #2282

2024-01-30  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/cpputest.cpp: initialize random number generator with srand()
	  Ensure better that the ports used by nutstream_ut.cpp can end up
	  random.
	* common/nutwriter.cpp: avoid UPSD_DIRECTIVEX and UPSMON_DIRECTIVEX
	  macros claiming "unreachable code" warnings
	* tests/nutstream_ut.cpp: make use of
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_DEPRECATED_DECLARATIONS to fix
	  warnings on CentOS7 (older clang, older cppunit)
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_DEPRECATED_DECLARATIONS
	* tools/nutconf/nutconf.cpp: getMode(): wrap potentially unreachable
	  de-enumeration code into pragmas
	* drivers/snmp-ups-helpers.c: convert to info_lkp_fun_vp2s() and
	  info_lkp_sentinel
	* tests/nutstream_ut.cpp: use CPPUNIT_ASSERT_MESSAGE with prepared
	  C++ string, not inlined
	* tests/nutstream_ut.cpp: troubleshoot
	  listen_sock.bind(m_listen_address) hiccups
	* tests/nutstream_ut.cpp: nutconf related tests: CPPUNIT_MACROS raise
	  warnings (for older compilers/distros), try some workarounds
	* common/nutconf.cpp, tools/nutconf/nutconf.cpp: nutconf related
	  code: where we use pragmas for "-Wcovered-switch-default", do also
	  use "-Wunreachable-code" (for older compilers)
	* tests/nutstream_ut.cpp: troubleshoot writer_exit!=0
	* tests/nutipc_ut.cpp: not all shells have "test" with two equality
	  chars
	* tests/nutstream_ut.cpp: cast the random() port number to uint16_t

2024-01-29  Jim Klimov <jimklimov+nut@gmail.com>

	* include/nutipc.hpp, include/nutstream.hpp: Revert "nutconf related
	  headers: tell clang to ignore "unknown" \retval in Doxygen
	  comments"  This reverts commit
	  9ec19231ced75d942955a31108613cecdb4a75fe.  Some clang versions warn
	  about unknown pragma. Not a quick win...
	* NEWS.adoc: document addition of nutconf [#2290]
	* NEWS.adoc: update info about installer
	* drivers/snmp-ups.h: do not lose function pointers in non-DMF builds
	  with info_lkp_fun_s2l() and info_lkp_nuf_vp2s()
	* drivers/eaton-ats16-nm2-mib.c: rename
	  eaton_ats16_ambient_drycontacts_info[] =>
	  eaton_ats16_nm2_ambient_drycontacts_info[] to match other table
	  naming patterns
	* drivers/eaton-ats16-nm2-mib.c: wrap new EMP002 snmp_info_t entries
	  into snmp_info_default() macros
	* NEWS.adoc, docs/nut.dict: NEWS.adoc: document recently addressed
	  issues and merged PRs that would be part of NUT v2.8.2 eventually
	* configure.ac: tell clang to ignore "unknown" \retval in Doxygen
	  comments
	* include/nutipc.hpp, include/nutstream.hpp: nutconf related headers:
	  tell clang to ignore "unknown" \retval in Doxygen comments
	* common/nutipc.cpp: disarm NUT fallbacks for time methods (as may be
	  defined in our common.h) for C++ (notably on mingw)
	* tests/nutstream_ut.cpp: ensure random() symbol for WIN32 builds
	* common/nutstream.cpp: comment not-use of wincompat.h wq
	* tools/nutconf/nutconf.cpp: avoid bogus warnings about uninitialized
	  map
	* common/Makefile.am: add NETLIBS to libnutconf (esp. needed on WIN32
	  builds)
	* tests/nutstream_ut.cpp: Randomize bind(port) to try avoiding
	  collisions in parallel testing

2024-01-28  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* clients/upsmon.c: debug information to rectify unwanted OFF
	  criticalities

2024-01-28  Jim Klimov <jimklimov+nut@gmail.com>

	* common/nutipc.cpp, common/nutstream.cpp, include/nutipc.hpp,
	  tests/nutconf_ut.cpp, tests/nutipc_ut.cpp, tests/nutstream_ut.cpp:
	  nutconf related codebase: neuter code parts that need WIN32
	  implementations (process IPC, etc.)
	* common/nutstream.cpp: radically avoid the hassle with sa_family
	  type
	* include/nutstream.hpp, common/nutstream.cpp: currently neuter
	  AF_UNIX support code under WIN32
	* common/nutstream.cpp: add a comment about NutFile::m_tmp_dir
	  (should not be hard-coded in the long run)
	* common/nutconf.cpp: rename "system" and "word" vars to avoid
	  clashes with some build environments
	* common/nutstream.cpp: adapt socket operations to Win/Lin cross
	  builds, similar to nutclient.cpp solution
	* common/nutconf.cpp, common/nutipc.cpp, common/nutstream.cpp,
	  common/nutwriter.cpp, include/nutipc.hpp, include/nutstream.hpp,
	  tests/nutconf.cpp, tests/nutipc_ut.cpp, tests/nutstream_ut.cpp:
	  nutconf related sources: revise include file lists and order
	  (config.h, WIN32...)
	* drivers/snmp-ups.h: reshuffle in main codebase for unrecognized DMF
	  macros
	* scripts/installer/Makefile.am, .../{README_ipp-os-shutdown.txt =>
	  README_ipp-os-shutdown.adoc}: scripts/installer/Makefile.am:
	  spellcheck common/README_ipp-os-shutdown.adoc
	* scripts/installer/Makefile.am: EXTRA_DIST all the files
	* configure.ac, scripts/Makefile.am, scripts/installer/Makefile.am,
	  scripts/installer/{README.txt => README.adoc}:
	  scripts/installer/Makefile.am: added to distribute and spell-check
	  README.adoc
	* scripts/installer/README.txt: comments on nutconf and authors
	* m4/nut_check_libgd.m4: fall back to checking with explicit -lpng in
	  the LDFLAGS loop
	* docs/nut.dict: Update nut.dict

2024-01-27  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/snmp-ups.h: adapt to non-DMF SNMP NUT driver builds
	* scripts/subdriver/gen-snmp-subdriver.sh: bump version and copyright
	* drivers/apc-ats-mib.c, drivers/apc-epdu-mib.c,
	  drivers/apc-pdu-mib.c, drivers/bestpower-mib.c,
	  drivers/delta_ups-mib.c, drivers/eaton-pdu-nlogic-mib.c,
	  drivers/eaton-pdu-pulizzi-mib.c, drivers/emerson-avocent-pdu-mib.c,
	  drivers/hpe-pdu3-cis-mib.c, drivers/huawei-mib.c,
	  drivers/raritan-pdu-mib.c, drivers/raritan-px2-mib.c,
	  drivers/xppc-mib.c: drivers/*-mib.c: convert versions to at least
	  double digits
	* Makefile.am, clients/Makefile.am, common/Makefile.am,
	  data/html/Makefile.am: */Makefile.am: standardize to have the
	  export commands on top, just after title comment line
	* scripts/python/module/Makefile.am: avoid "make clean" invalidating
	  the NUT build area  Otherwise we can not find the test script
	  (generated from .in by configure normally)
	* common/nutconf.cpp: NutConfigParser::parseConfig(): reshuffle base
	  vs. overridden call for parser to work again  Fine piece of C++
	  magic and inheritance. Wrong call got called.
	* NEWS.adoc: untie OFF from linestate in upsmon FSD [#2279]

2024-01-26  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* clients/upsmon.c: fix offstate not being a requirement for a
	  critical UPS on OFF

2024-01-25  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: use -Wno-exit-time-destructors and
	  -Wno-global-constructors with clang++ to not worry about "(static)
	  const something" variables
	* tests/nutconf.cpp, tests/nutipc_ut.cpp: nutconf related tests:
	  avoid "old-style cast" usage
	* tests/nutconf_ut.cpp, tests/nutipc_ut.cpp, tests/nutstream_ut.cpp:
	  nutconf related tests: avoid "no out-of-line virtual method
	  definitions" (weak-vtables)
	* tests/nutipc_ut.cpp: declare the override of nut::Signal::Handler
	  methods
	* tests/nutconf.cpp, tests/nutconf_ut.cpp, tests/nutipc_ut.cpp,
	  tests/nutstream_ut.cpp: nutconf related tests: declare the override
	  of CPPUNIT methods
	* tests/nutstream_ut.cpp: fix cast of size_t vs. double for "pivot"
	* tools/nutconf/nutconf.cpp: avoid shadowing a class property with
	  method arg name
	* tools/nutconf/nutconf.cpp: mark almost all methods in the tool as
	  static
	* tools/nutconf/nutconf.cpp: align "us_timeout" to be "useconds_t"
	  not "long" (per libnutscan API evolution)
	* common/nutconf.cpp: cast around std::getline() for parenthesized
	  syntax  Why didn't the original author just receive the word into
	  target string?.. e.g.:  std::getline(system, monitor.upsname, '@');
	  std::getline(system, monitor.hostname);
	* common/nutconf.cpp, include/nutconf.hpp: include/nutconf.{c,h}pp:
	  align port type to uint16_t (not plain or short int as mismatched
	  in older code)
	* common/nutwriter.cpp: include/nutwriter.hpp: comment away a
	  currently unused static method
	* common/nutstream.cpp: include/nutstream.hpp: align size_t vs
	  ssize_t maths
	* common/nutipc.cpp: include/nutipc.hpp: align size_t vs ssize_t
	  maths
	* common/nutipc.cpp: include/nutipc.hpp: align array deleter with
	  allocator
	* include/nutipc.hpp: align templated class destructor name with
	  class name
	* include/nutstream.hpp: decorate unimplemented methods which only
	  throw with noreturn (for C++11 and newer)
	* common/nutwriter.cpp, include/nutconf.hpp,
	  tools/nutconf/nutconf.cpp: include/nutconf.hpp: align
	  UpsmonConfiguration::notifyFlags type with clients/upsmon.h
	  (notifylist->flags)  Note that here we have "unsigned int" and
	  there a plain "int" at the moment; but even with short signed ints
	  we currently do not have too many values :)  This fix also drops a
	  warning about shortening the cast when assigning from a temporary
	  "unsigned int flags" in UpsmonConfigParser::onParseDirective()
	* common/nutconf.cpp: include/nutconf.cpp:
	  NutConfigParser::parseConfig(): explicitly handle all enum values
	  in switch/case (and allow "default" to be safe)
	* common/nutconf.cpp: include/nutconf.cpp:
	  NutConfigParser::parseConfig(): be explicit about the infinite loop
	  Assignment of tok=parseToken() does not return a boolean (nor even
	  a nullptr) so should not be a while(...) condition by itself.
	* common/nutconf.cpp: include/nutconf.cpp: avoid annotating a
	  switch/case fallthrough
	* common/nutconf.cpp: include/nutconf.hpp: err on the safe side by
	  having a default handler in a currently exhaustive switch(enum)
	* common/nutconf.cpp, common/nutipc.cpp, common/nutstream.cpp,
	  include/nutipc.hpp: nutconf related sources: avoid "old-style cast"
	  usage
	* include/nutconf.hpp: avoid naming clash for Token "type" and "str"
	  properties vs. method args
	* common/nutconf.cpp, common/nutipc.cpp, common/nutstream.cpp,
	  common/nutwriter.cpp, include/nutconf.hpp, include/nutipc.hpp,
	  include/nutstream.hpp, include/nutwriter.hpp: nutconf related
	  sources: avoid "no out-of-line virtual method definitions"
	  (weak-vtables)
	* common/nutconf.cpp, common/nutipc.cpp, common/nutstream.cpp,
	  include/nutconf.hpp, include/nutipc.hpp, include/nutstream.hpp,
	  tests/nutipc_ut.cpp, tests/nutstream_ut.cpp,
	  tools/nutconf/nutconf.cpp: nutconf related changes: avoid NULL
	  ("zero as null pointer constant"), use "::" prefix for C methods
	* include/nutipc.hpp: avoid naming clash for QUIT signal and command

2024-01-25  Jim Klimov <jim@jimklimov.com>

	* tools/nut-usbinfo.pl: avoid dying on unknown file name patterns
	  (e.g. *-mib.c.bak), just warn and skip them

2024-01-24  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/eaton-ats16-nm2-mib.c, drivers/eaton-pdu-marlin-mib.c,
	  drivers/eaton-ups-pwnm2-mib.c, drivers/mge-mib.c,
	  drivers/raritan-pdu-mib.c: drivers/*-mib.c: convert to use
	  info_lkp_sentinel, info_lkp_default et al wrapping
	* ci_build.sh: update that nutconf is now fair game for builds and
	  tests
	* configure.ac: default --with-nutconf=auto (based on have_cxx11) and
	  add it to --with-all
	* drivers/apc-ats-mib.c, drivers/apc-epdu-mib.c, drivers/apc-mib.c,
	  drivers/apc-pdu-mib.c, drivers/baytech-mib.c,
	  drivers/bestpower-mib.c, drivers/compaq-mib.c,
	  drivers/cyberpower-mib.c, drivers/delta_ups-mib.c,
	  drivers/eaton-ats16-nm2-mib.c, drivers/eaton-ats16-nmc-mib.c,
	  drivers/eaton-ats30-mib.c, drivers/eaton-pdu-genesis2-mib.c,
	  drivers/eaton-pdu-marlin-mib.c, drivers/eaton-pdu-nlogic-mib.c,
	  drivers/eaton-pdu-pulizzi-mib.c,
	  drivers/eaton-pdu-revelation-mib.c, drivers/eaton-ups-pwnm2-mib.c,
	  drivers/eaton-ups-pxg-mib.c, drivers/emerson-avocent-pdu-mib.c,
	  drivers/hpe-pdu-mib.c, drivers/hpe-pdu3-cis-mib.c,
	  drivers/huawei-mib.c, drivers/ietf-mib.c, drivers/mge-mib.c,
	  drivers/netvision-mib.c, drivers/raritan-pdu-mib.c,
	  drivers/raritan-px2-mib.c, drivers/xppc-mib.c: drivers/*-mib.c:
	  convert to use snmp_info_sentinel wrapping
	* drivers/apc-ats-mib.c, drivers/apc-epdu-mib.c, drivers/apc-mib.c,
	  drivers/apc-pdu-mib.c, drivers/baytech-mib.c,
	  drivers/bestpower-mib.c, drivers/compaq-mib.c,
	  drivers/cyberpower-mib.c, drivers/delta_ups-mib.c,
	  drivers/eaton-ats16-nm2-mib.c, drivers/eaton-ats16-nmc-mib.c,
	  drivers/eaton-ats30-mib.c, drivers/eaton-pdu-genesis2-mib.c,
	  drivers/eaton-pdu-marlin-mib.c, drivers/eaton-pdu-nlogic-mib.c,
	  drivers/eaton-pdu-pulizzi-mib.c,
	  drivers/eaton-pdu-revelation-mib.c, drivers/eaton-ups-pwnm2-mib.c,
	  drivers/eaton-ups-pxg-mib.c, drivers/emerson-avocent-pdu-mib.c,
	  drivers/hpe-pdu-mib.c, drivers/hpe-pdu3-cis-mib.c,
	  drivers/huawei-mib.c, drivers/ietf-mib.c, drivers/mge-mib.c,
	  drivers/netvision-mib.c, drivers/raritan-pdu-mib.c,
	  drivers/raritan-px2-mib.c, drivers/xppc-mib.c: drivers/*-mib.c:
	  convert to use snmp_info_default() wrapping
	* drivers/apc-ats-mib.c, drivers/apc-epdu-mib.c, drivers/apc-mib.c,
	  drivers/apc-pdu-mib.c, drivers/baytech-mib.c,
	  drivers/bestpower-mib.c, drivers/compaq-mib.c,
	  drivers/cyberpower-mib.c, drivers/delta_ups-mib.c,
	  drivers/eaton-ats16-nm2-mib.c, drivers/eaton-ats16-nmc-mib.c,
	  drivers/eaton-ats30-mib.c, drivers/eaton-pdu-marlin-mib.c,
	  drivers/eaton-pdu-nlogic-mib.c, drivers/eaton-pdu-pulizzi-mib.c,
	  drivers/eaton-pdu-revelation-mib.c, drivers/eaton-ups-pwnm2-mib.c,
	  drivers/eaton-ups-pxg-mib.c, drivers/emerson-avocent-pdu-mib.c,
	  drivers/hpe-pdu-mib.c, drivers/hpe-pdu3-cis-mib.c,
	  drivers/huawei-mib.c, drivers/ietf-mib.c, drivers/mge-mib.c,
	  drivers/netvision-mib.c, drivers/raritan-pdu-mib.c,
	  drivers/raritan-px2-mib.c, drivers/xppc-mib.c: drivers/*-mib.c:
	  convert to use info_lkp_sentinel, info_lkp_default et al wrapping
	* drivers/snmp-ups.h: introduce also info_lkp_nuf_vp2s(),
	  info_lkp_nuf_s2l() and info_lkp_fun_s2l() wrappers
	* scripts/subdriver/gen-snmp-subdriver.sh, drivers/snmp-ups.h:
	  introduce short-hand snmp_info_sentinel and info_lkp_sentinel
	* scripts/subdriver/gen-snmp-subdriver.sh: convert C table generator
	  to propose info_lkp_default(...) instead of fixed C structure items
	* scripts/subdriver/gen-snmp-subdriver.sh: convert C table generator
	  to propose snmp_info_default(...) instead of fixed C structure
	  items
	* drivers/snmp-ups.h: introduce wrappers to handle optionally-defined
	  NULL fields for snmp_info_t and info_lkp_t [DMF]
	* scripts/subdriver/gen-snmp-subdriver.sh: start subdriver versions
	  as 0.01 for double digits
	* tests/nutconf_ut.cpp: update expectations for current
	  ups.conf.sample default contents
	* configure.ac, tests/nutconf_ut.cpp: rearrange to use ABS_TOP_SRCDIR
	  and ABS_TOP_BUILDDIR in the test program
	* tools/nutconf/nutconf.cpp: adapt nutscan_scan_usb() to libnutscan
	  API evolution
	* common/nutstream.cpp: address a run-time warning about tempnam()
	* include/nutipc.hpp: Process::Child<M>::wait(): fix error-case check
	* common/nutstream.cpp: formatIPv{4,6}addr(): code typo fix (bit
	  maths, not boolean expressions!)
	* common/nutconf.cpp, include/nutconf.hpp, include/nutipc.hpp,
	  include/nutstream.hpp, include/nutwriter.hpp: nutconf related
	  sources: fix implicit copy/move operator warnings - use explicit
	  defaults, destructors, and clarify overrides
	* common/nutconf.cpp: NutConfigParser::parseConfig(): fix switch/case
	  that did not check all enum values
	* common/nutconf.cpp, include/nutconf.hpp, include/nutipc.hpp,
	  include/nutstream.hpp, tools/nutconf/nutconf.cpp: nutconf related
	  sources: use NUT_UNUSED_VARIABLE() to decorate the code where
	  needed
	* common/nutconf.cpp, common/nutwriter.cpp, include/Makefile.am,
	  include/{nutconf.h => nutconf.hpp}, include/nutwriter.hpp,
	  tests/nutconf.cpp, tests/nutconf_ut.cpp, tools/nutconf/nutconf.cpp:
	  Rename include/nutconf.h => .hpp as a C++ specific source file
	* common/nutconf.cpp, common/nutstream.cpp, common/nutwriter.cpp,
	  include/nutconf.h, include/nutipc.hpp, include/nutstream.hpp,
	  include/nutwriter.hpp, tests/nutconf.cpp, tests/nutconf_ut.cpp,
	  tools/nutconf/nutconf.cpp: nutconf related sources: fix typos and
	  wording in comments
	* common/nutipc.cpp, common/nutstream.cpp, include/nutconf.h,
	  include/nutipc.hpp, include/nutstream.hpp,
	  tools/nutconf/nutconf.cpp: nutconf related sources: fix deprecated
	  throw() declarations to not be used since C++11  They are invalid
	  in C++17 as the code did fence against; however C++11 already shows
	  them as deprecated, and with "fatal warnings" this bites!
	* common/nutconf.cpp: NutConfigParser::parseConfig(): pre-initialize
	  "sep" to avoid surporises
	* common/nutconf.cpp, common/nutipc.cpp, common/nutstream.cpp,
	  common/nutwriter.cpp, include/nutconf.h, include/nutipc.hpp,
	  include/nutstream.hpp, include/nutwriter.hpp, tests/nutconf.cpp,
	  tests/nutconf_ut.cpp, tests/nutipc_ut.cpp, tests/nutstream_ut.cpp,
	  tools/nutconf/nutconf.cpp: nutconf related sources: fix whitespace
	  style
	* tools/nutconf/nutconf.cpp: fix file description
	* tools/nutconf/Makefile.am: update Makefile markup and comments

2024-01-23  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/eaton-pdu-marlin-mib.c: marlin_device_count_fun(): decorate
	  a NUT_UNUSED_VARIABLE()

2024-01-21  Jim Klimov <jimklimov+nut@gmail.com>

	* server/netssl.c: fix decl-after-statement  NUT_UNUSED_VARIABLE()
	  implementation counts as a code statement, so should be after true
	  declarations.

2024-01-21  Duncan Webb <duncan@linuxowl.com>

	* server/netssl.c: Fix possible buffer overrun calls to
	  PR_GetErrorText  Removed call to NSS_NoDB_Init as certfile will be
	  defined. Copy paste from upscli change to ssl_init.

2024-01-20  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsmon.c: fix comment wording [#840, #2240]
	* scripts/upower/95-upower-hid.hwdb: update for recent changes in
	  drivers/belkin-hid.c [#2271]

2024-01-19  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  upsconf_getSection_content(): optimize string emptiness checks
	* NEWS.adoc, docs/nut.dict: update for nut-driver-enumerator [#682]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: fix
	  systemd_findSavedDeviceName() to use common SYSTEMD_CONFPATH
	  variable
	* drivers/belkin-hid.c: add Liebert PowerSure PST UPS productid
	  [#2271]
	* docs/ci-farm-lxc-setup.txt: errata for virt-top too new to work
	  with LXC

2024-01-19  Charles Lepple <clepple+nut@gmail.com>

	* drivers/belkin-hid.c: fix Liebert GXT4 UPS productid  Follow-up to
	  3e1b00ec3ff105a05e67ae8602996cf7436f816b which intended to add the
	  ID after NUT v2.7.4 release, but fell prey to copy-paste typo (got
	  0x0004 instead of intended 0x0000):  commit
	  3e1b00ec3ff105a05e67ae8602996cf7436f816b Date:   Sat Jun 3 12:24:15
	  2017 -0400  usbhid-ups: add Liebert GXT4 USB VID:PID [10AF:0000]
	  Source:
	  http://lists.alioth.debian.org/pipermail/nut-upsuser/2017-June/010682.html
	  Voltage and ConfigVoltage appear to be scaled improperly per the
	  debug output.

2024-01-18  Vytautas Survila <vytautas.survila@gmail.com>

	* drivers/nutdrv_qx.c: use correct read_size for 'too much data read'
	  message

2024-01-18  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/security.txt: typography: fix quoting style
	* docs/security.txt, docs/man/upsd.conf.txt,
	  docs/man/upsmon.conf.txt: stress that multi-word "Certificate Name"
	  values should be double-quoted; fix examples [#2265]
	* docs/man/upsmon.conf.txt: fix multi-paragraph attachments in the
	  very nested MONITOR section  Blanks and pluses are the trick:
	  https://stackoverflow.com/a/52164722/4715872
	* docs/man/upsd.conf.txt: fix multi-paragraph attachments in sections

2024-01-15  Vytautas Survila <vytautas.survila@gmail.com>

	* drivers/nutdrv_qx.c: return actual number of bytes we copied to
	  buffer

2024-01-15  Jim Klimov <jimklimov@gmail.com>

	* drivers/apc-mib.c: bump DRIVER_VERSION to double-digits  1.60 is
	  more future-proof than 1.7 (after 1.6) :)

2024-01-15  Christian Manal <manal@uni-bremen.de>

	* drivers/apc-mib.c: update MIB values

2024-01-14  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/Makefile.am: neuter the fictive
	  nutscan_add_commented_option_to_device.html recipe for now [#2221]
	* docs/man/Makefile.am: fix
	  nutscan_add_commented_option_to_device.html recipe for BSD make
	  [#2221]

2024-01-13  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/scan_usb.c: code after declarations [#2221]
	* docs/man/nutscan_add_option_to_device.txt, docs/man/Makefile.am:
	  fix markup for a single asciidoc text describing several command
	  names [#2221]  https://asciidoc-py.github.io/userguide.html#X1
	* tools/nut-scanner/nut-scanner.c: disambiguate and un-shadow
	  link_detail_level variables [#2221]

2024-01-12  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/scan_usb.c, UPGRADING.adoc: make use of
	  nutscan_add_commented_option_to_device() for link-specific details
	  if not suggesting to use them directly [#2221]
	* NEWS.adoc, docs/man/nutscan_add_option_to_device.txt,
	  tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-display.c: libnutscan API: add a concept
	  of commented-away suggested option values instead of hacks in
	  prepared config data [#2221]
	* NEWS.adoc: reword the entry about desktop integration [#2205]
	* NEWS.adoc, docs/man/nut-scanner.txt, docs/man/nutscan_scan_usb.txt,
	  docs/nut.dict, tools/nut-scanner/Makefile.am,
	  tools/nut-scanner/README.adoc, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/scan_usb.c:
	  nut-scanner: change "-U" handling to tweak generated device
	  configuration section level of detail [#2221]
	* NEWS.adoc, drivers/Makefile.am: drivers/Makefile.ami, NEWS.adoc:
	  fix builds --without-usb [#2262]
	* docs/nut.dict, NEWS.adoc: document recent improvements to
	  nut-scanner
	* docs/man/nut-scanner.txt: change markup for code and output
	  examples [#2247]
	* NEWS.adoc: debug level initialized earlier now [#2259]  Checked for
	  a similar need in other programs - nut-scanner does it already, and
	  others start with the getopt() loop.
	* drivers/main.c: move NUT_DEBUG_LEVEL and "-D" CLI option handling
	  to start of program [#2259]  This allows to use upsdebugx() in
	  early initialization methods like upsdrv_makevartable()

2024-01-11  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: add info about #2259
	* drivers/main.c: if nutdrv_qx is built for serial-only support but
	  asked to use USB options at run-time, help the user about the
	  discrepancy [#2259]
	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{0,1}.c: report
	  in debug trace which USB implementation is used [#2259]

2024-01-03  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/images/ci/jenkins-nut.css: update hosting logo from FH to DO
	  [#2192]  Imported from NUT CI farm where this CSS was edited in the
	  beginning of the month
	* tests/NIT/nit.sh: testcase_sandbox_nutscanner_list(): adjust
	  generated section names to nut-scanner evolution
	* tools/nut-scanner/scan_avahi.c: fix indentation to match
	  surrounding code [#2246]
	* tools/nut-scanner/Makefile.am: bump libnutscan version due to
	  scan_nut_simulation.c [#2246]
	* tools/nut-scanner/scan_avahi.c: fix indentation to match
	  surrounding code [#2246]
	* tools/nut-scanner/Makefile.am: bump libnutscan version due to
	  scan_nut_simulation.c [#2246]
	* scripts/Windows/DriverInstaller/README.adoc: update link to libwdi
	* docs/ci-farm-lxc-setup.txt: note path to DHCP lease file for
	  troubleshooting

2024-01-02  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: fix NUT_AM_MAKE_CAN_EXPORT test syntax for Solaris
	  ksh
	* Makefile.am, clients/Makefile.am, common/Makefile.am, configure.ac,
	  drivers/Makefile.am, include/Makefile.am, lib/Makefile.am,
	  server/Makefile.am, tests/Makefile.am, tests/NIT/Makefile.am,
	  tools/Makefile.am, tools/nut-scanner/Makefile.am: */Makefile.am,
	  configure.ac: constrain makefile exports to implementations where
	  NUT_AM_MAKE_CAN_EXPORT
	* Makefile.am, clients/Makefile.am, common/Makefile.am,
	  drivers/Makefile.am, include/Makefile.am, lib/Makefile.am,
	  server/Makefile.am, tests/Makefile.am, tests/NIT/Makefile.am,
	  tools/Makefile.am, tools/nut-scanner/Makefile.am: */Makefile.am:
	  export PATH and CCACHE_* envvars to be used during rebuilds
	* configure.ac: remember PATH_DURING_CONFIGURE
	* configure.ac: track selected CCACHE_* envvars as "precious"
	* configure.ac: allow to specify --with-CCACHE_NAMESPACE=... for the
	  build
	* docs/Makefile.am, docs/cables/Makefile.am, docs/man/Makefile.am,
	  include/Makefile.am, scripts/python/module/Makefile.am,
	  tests/NIT/Makefile.am, tools/Makefile.am,
	  tools/nut-scanner/Makefile.am: */Makefile.am: add top line
	  descriptions where missing
	* ci_build.sh: fix reporting of used envvars (avoid shell
	  functions/aliases/...)

2023-12-24  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/scan_nut_simulation.c: Fix declaration-after-code
	  in scan_nut_simulation.c

2023-12-24  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-scanner/scan_nut_simulation.c: nut-scanner: actually
	  simplify simulation scan code  Reimplement scan algorithm, and
	  remove non-portable scandir code. Get back to my early
	  implemention, using opendir/readdir, as in common/common.c. This
	  works and is portable!
	* tools/nut-scanner/scan_nut_simulation.c: nut-scanner: simplify
	  simulation scan code  Remove non-portable directory-filtering code,
	  since there is no actual need for it, and very few chances of false
	  positive results.
	* tools/nut-scanner/scan_nut_simulation.c: nut-scanner: don't require
	  alphasort  Sorting is not needed, and despite alphasort being
	  supported since: * Since glibc 2.10: (_POSIX_C_SOURCE >= 200809L) *
	  || Glibc versions <= 2.19: (_BSD_SOURCE || _SVID_SOURCE) it seems
	  still not supported on some platforms.
	* tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/scan_nut_simulation.c: nut-scanner: fix
	  nutscan_scan_nut_simulation prototype  Please CI and add void args

2023-12-23  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/nut-scanner.txt: nut-scanner: spell checks
	* docs/man/nut-scanner.txt, tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-display.c: nut-scanner: fix device-name
	  collisions in generated conf  When nut-scanner is called
	  separately, to scan different buses, it will generate similar names
	  for each of these: * USB scan > [nutdev1] > ... * NUT scan >
	  [nutdev1] > ... * ... As a result, one can't just redirect
	  nut-scanner outputs directly to ups.conf, without a 'sed' hack
	  workaround.  Solution: simply refine the device names, like
	  "nutdev-<method><id>". Ex: nutdev-usb1, nutdev-usb2, nutdev-nut1,
	  nutdev-snmp1, nutdev-simulation1, ...

2023-12-22  Arnaud Quette <arnaud.quette@gmail.com>

	* NEWS.adoc, data/driver.list.in, docs/developer-guide.txt,
	  docs/man/Makefile.am, docs/man/nut-scanner.txt,
	  docs/man/nutscan_init.txt,
	  docs/man/nutscan_scan_nut_simulation.txt,
	  tools/nut-scanner/Makefile.am, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-init.c, tools/nut-scanner/nutscan-init.h,
	  tools/nut-scanner/scan_avahi.c,
	  tools/nut-scanner/scan_nut_simulation.c: nut-scanner: detect and
	  configure NUT simulation devices (#2246)  * nut-scanner: detect and
	  configure NUT simlation devices  Provide an additional nut-scanner
	  "-n | --nut_simulation_scan" option to detect and configure dummy
	  simulation (.dev & .seq) from the default $sysconfdir.  Also
	  advertise NUT Simulation Devices in HCL.  This should standardize
	  and streamline the use of nut-scanner as an automatic detection and
	  configuration tool.  Closes: #networkupstools/nut/issues/2242
	* NEWS.adoc, data/driver.list.in, tools/nut-scanner/scan_avahi.c,
	  tools/nut-scanner/scan_nut.c: 2236 nut scanner reports non existent
	  driver for nut discovery (#2245)  * Start to advertise NUT support
	  of itself * nut-scanner: NUT scan (old and Avahi) points at
	  dummy-ups the previously pointed driver "nutclient" does not exist
	  yet. At least points to a sane working default * Document in NEWS
	  Closes: #networkupstools/nut/issues/2236

2023-12-15  Jim Klimov <jim@jimklimov.com>

	* docs/ci-farm-lxc-setup.txt, docs/nut.dict: suggest dependency
	  packages for LXC and QEMU

2023-12-10  Matt Merhar <mattmerhar@protonmail.com>

	* NEWS.adoc, drivers/libusb0.c, drivers/libusb1.c:
	  drivers/libusb{0,1}.c: reset driver parameters while enumerating
	  With an Arduino Leonardo compatible board attached alongside a
	  CyberPower CP1500PFCLCD, usbhid-ups would incorrectly conclude that
	  there was no kernel driver attached to the UPS and then fail
	  subsequent steps accordingly.  The cause is the global
	  usb_communication_subdriver_t struct; when a subdriver (e.g.
	  arduino-hid) sets different values during the enumeration loop,
	  they're not set back to defaults afterwards, causing issues with
	  other subdrivers (e.g. cps-hid).  So, if a subdriver doesn't match,
	  set a selection of fields back to their default values using the
	  newly added nut_usb_subdriver_defaults() before the next attempt.

2023-12-10  Jim Klimov <jimklimov+nut@gmail.com>

	* README.adoc: use DigitalOcean referral campaign identifier in badge
	  URL [#2192]
	* tools/nut-scanner/scan_usb.c: hide bcdDevice logic behind ifdef
	  WITH_BCD_DEVICE [#2221]  Earlier approaches to only partially
	  comment away code trigger static analysis warnings here or there,
	  and we do not want to fully drop it here just yet.
	* tools/nut-scanner/scan_usb.c: comment away bcdDevice which we do
	  not currently use [#2221]

2023-12-10  Arnaud Quette <Arnaud.Quette@free.fr>

	* tools/nut-scanner/scan_usb.c: nut-scanner USB: disable some output
	  results  Some additional fields, like 'device' (device number /
	  path), may introduce more issues than solving. Hence disable these

2023-12-05  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, docs/man/usbhid-ups.txt, docs/nut.dict,
	  drivers/usbhid-ups.c: drivers/usbhid-ups.c,
	  docs/man/usbhid-ups.txt, NEWS.adoc: introduce
	  "onlinedischarge_log_throttle_hovercharge" setting [#2215]
	* drivers/usbhid-ups.c, docs/man/usbhid-ups.txt, NEWS.adoc: introduce
	  "onlinedischarge_log_throttle_sec" setting and/or throttling by
	  changes of battery.charge [#2214]
	* NEWS.adoc, docs/man/usbhid-ups.txt, docs/nut.dict,
	  drivers/usbhid-ups.c: drivers/usbhid-ups.c,
	  docs/man/usbhid-ups.txt, NEWS.adoc: deprecate "onlinedischarge" in
	  favor of "onlinedischarge_onbattery" option name [#2213]
	* docs/man/upsmon.txt: update with NOTCAL state
	* conf/upsmon.conf.sample.in: update NOTIFYFLAG examples

2023-12-01  Jim Klimov <jimklimov+nut@gmail.com>

	* data/driver.list.in: note that "NEW Keor Multiplug" is not
	  supported as of 2023  ...per "mrc989" report on IRC channel
	* server/conf.c, clients/upsmon.c: align logged DEBUG_MIN NUM casing
	  and wording with the setting/docs
	* clients/upsmon.c: when POLLFAIL_LOG_THROTTLE_MAX>0 takes effect,
	  report also how often it would report in seconds [#2207]
	* clients/upsmon.c: align logged POLLFAIL_LOG_THROTTLE_MAX casing
	  with the setting/docs
	* NEWS.adoc, clients/upsmon.c: clients/upsmon.c: forget poll-failure
	  error-states and the counts involved when we reload config [#2207]
	* clients/upsmon.c: markup/style typo fix
	* NEWS.adoc, clients/upsmon.c, conf/upsmon.conf.sample.in,
	  docs/man/upsmon.conf.txt, docs/man/upsmon.txt: clients/upsmon.c,
	  NEWS.adoc: fix an off-by-one error with POLLFAIL_LOG_THROTTLE_MAX
	  loop counting [#2207]
	* clients/upsmon.c, NEWS.adoc: Forget POLLFAIL_LOG_THROTTLE_MAX
	  before configuration reload [#2207]
	* clients/upsmon.c: clarify wording about POLLFAIL_LOG_THROTTLE_MAX
	  "standard behavior"
	* docs/man/upsmon.txt, docs/man/upsmon.conf.txt,
	  conf/upsmon.conf.sample.in: clarify wording about
	  POLLFAIL_LOG_THROTTLE_MAX "standard behavior"

2023-11-28  Jim Klimov <jim@jimklimov.com>

	* m4/nut_check_aspell.m4: check if aspell can use the discovered tex
	  module (binary arch match) and try to fall back to built-in
	  defaults if not  Either way, avoid an unusable `make spellcheck`
	  which just reports a massive failure.

2023-11-27  Laurent Bigonville <bigon@bigon.be>

	* NEWS.adoc, scripts/python/app/NUT-Monitor-py3qt5.in: Set the
	  DesktopFileName in scripts/python/app/NUT-Monitor-py3qt5  This
	  binds the application with the desktop file and allow the Desktop
	  to display the proper icon and application name.

2023-11-27  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/app/NUT-Monitor-py2gtk2.in: leave a comment to
	  suggest using g_set_prgname()  Suggested by Laurent Bigonville
	  Currently I've failed to find a test system with Py2 + GTK2
	  preinstalled (the one I had was updated and half the old
	  dependencies are missing), and did not quickly find python syntax
	  examples for it as well.
	* scripts/python/app/NUT-Monitor-py3qt5.in: take a cautious approach
	  to setDesktopFileName()
	* NEWS.adoc, docs/nut.dict: checking and formatting for the entry
	  about DesktopFileName in NUT-Monitor-py3qt5 [#2205]

2023-11-27  Jim Klimov <jim@jimklimov.com>

	* m4/nut_check_aspell.m4: run a live check if the detected aspell is
	  useful
	* m4/nut_check_aspell.m4: AC_SUBST detected paths after checking if
	  detected aspell is useful

2023-11-25  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/app/NUT-Monitor, NEWS.adoc: check if implementation
	  scripts exist before looking into them for a PYTHON* version
	  Closes: #2201
	* NEWS.adoc: note the fix for #2198
	* scripts/python/app/NUT-Monitor, NEWS.adoc: fix typo (qt3=>qt5)
	  Closes: #2199

2023-11-24  Axel Gembe <axel@gembe.net>

	* configure.ac, include/timehead.h: build: Add a fallback for timegm
	  on Windows / MINGW  MINGW headers do not provide a `timegm`
	  implementation but there is a `_mkgmtime` which does the same:
	  https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/mkgmtime-mkgmtime32-mkgmtime64

2023-11-23  Xin LI <delphij@FreeBSD.org>

	* drivers/libusb1.c: Remove unnecessary validation for bus_num  The
	  libusb_get_bus_number() function serves as a simple accessor for
	  the bus number of the opaque device struct. Unlike
	  libusb_get_port_number(), it does not have the ability to convey
	  errors back to the caller, and a bus number of 0 is a valid value.
	  Therefore, any validation around bus_num is redundant.  This commit
	  removes the unnecessary validation code related to bus_num.

2023-11-23  Axel Gembe <axel@gembe.net>

	* drivers/apc_modbus.c: apc_modbus: Add target outlet group to load.*
	  and shutdown.* commands  Maybe this is needed, needs to be
	  confirmed.
	* drivers/apc_modbus.c: apc_modbus: Always store times in UTC  This
	  changes `_apc_modbus_date_from_nut` to use `timegm` instead of
	  `mktime` which does not add the current time zone information. This
	  fixes dates that are off-by-one compared to what was set.
	* drivers/apc_modbus.c: apc_modbus: Fix re-read of values at the end
	  of setvar  The for loop searching for the correct register map kept
	  on looping after finding the value which caused the `apc_map`
	  mariable to potentially point to the wrong register map.  This can
	  cause the re-read of the set value at the end of the function to
	  fail.
	* drivers/apc_modbus.c, drivers/apc_modbus.h: apc_modbus: Add
	  ups.test.result  This outputs the test result, the source of the
	  start of the test and a result modifier.

2023-11-22  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx.c: armac_command(): avoid
	  "-Wdeclaration-after-statement"  Also minor cleanup with comments
	  markup
	* drivers/nutdrv_qx.c: load_armac_endpoint_cache(): avoid
	  "-Wdeclaration-after-statement" situations  Also log if effectively
	  skipping the method (not libusb-1.x build)
	* README.adoc: add links to custom Jenkins Dynamatrix library and
	  setup for NUT
	* README.adoc: do our best to top-align the cells in acknowledgements
	  table, and comment about caveats of known renderers
	* README.adoc: rephrase the sponsoring/starring tip section
	* README.adoc: dumb down the table format for GitHub renderer
	* README.adoc: no need for a plus in table for multi-paragraph cells
	* README.adoc: align columns in vendor logo table; leave a FIXME
	  comment for PDF renditions
	* README.adoc: try to fix vendor acknowledgements table width
	* README.adoc: refer from "NUT and Ecosystem" to "Acknowledgements
	  for NUT CI and Ops" table with vendor logos [#2192]
	* README.adoc: use single PNG for OpenCollective vendor logo
	* README.adoc, docs/nut.dict: README.adoc: use alt/url/width/height
	  markup for vendor logo images
	* docs/Makefile.am, docs/images/ci/OC_logo_merged_140x26.png,
	  docs/images/ci/OC_logo_merged_171x32.png:
	  docs/images/ci/OC_logo_merged_XxY.png: add merged (and also
	  resized) single image files
	* docs/asciidoc-vars.conf: fix "imagesdir" for GitHub rendering
	* README.adoc: fix title markup
	* README.adoc, docs/nut.dict: README.adoc: make "NUT and the
	  ecosystem" a separate chapter (including a "TIP" on GitHub
	  starring)
	* .github/pull_request_template.md: remind to Please star NUT on
	  GitHub, this helps with sponsorships [#2192]
	* README.adoc: start with a note about sponsorship and GitHub stars

2023-11-21  Jim Klimov <jimklimov+nut@gmail.com>

	* README.adoc, docs/nut.dict: README.adoc: fix GitHub rendering of
	  logos in the README [#2192]
	* docs/Makefile.am, docs/images/ci/jenkins-nut.txt: docs/Makefile.am:
	  list IMAGE_LOGO_FILES andi IMAGE_LOGO_FILES_JENKINS_NUT for
	  EXTRA_DIST
	* scripts/python/module/MANIFEST.in,
	  scripts/python/module/Makefile.am,
	  scripts/python/module/setup.py.in:
	  scripts/python/module/MANIFEST.in: distribute "tox.ini" in a
	  different way so it is only in sdist [#2193]
	* drivers/main.c, NEWS.adoc: fix fallout of TOCTOU fixes for socket
	  file non-default permissions [#2185]

2023-11-20  Jim Klimov <jimklimov+nut@gmail.com>

	* README.adoc, docs/images/ci/DO_Powered_by_Badge_blue_140pxW.png,
	  docs/images/ci/GitHub-Mark-140pxW.png,
	  docs/images/ci/jenkins-nut-transparent-bg-140pxW.png,
	  docs/nut.dict: README.adoc: try to adjust logo image widths
	* README.adoc: use PNG versions of logos (avoid requirement of
	  inkscape etc. to build PDF)
	* docs/images/ci/AppVeyor_logo-ar21.png,
	  docs/images/ci/AppVeyor_logo-ar21.svg:
	  docs/images/ci/AppVeyor_logo-ar21.png: convert from SVG to PNG with
	  Inkscape
	* docs/images/ci/AppVeyor_logo-ar21.svg: copy from
	  https://www.vectorlogo.zone/logos/appveyor/appveyor-ar21.svg
	* docs/images/ci/OC_logotype.png, docs/images/ci/OC_logotype.svg:
	  docs/images/ci/OC_logotype.png: convert from SVG to PNG with
	  Inkscape
	* docs/images/ci/OC_logo-watercolor-256.png: copy from
	  https://next-images.opencollective.com/_next/image?url=%2Fstatic%2Fimages%2Foc-logo-watercolor-256.png&w=32&q=75
	* docs/images/ci/gandi-ar21.png: convert from SVG to PNG with
	  Inkscape
	* docs/images/ci/DO_Powered_by_Badge_blue.png,
	  docs/images/ci/DO_Powered_by_Badge_blue.svg:
	  docs/images/ci/DO_Powered_by_Badge_blue.png: copy from
	  https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/PoweredByDO/DO_Powered_by_Badge_blue.png
	* docs/images/ci/CircleCI_vertical_black_logo.png,
	  docs/images/ci/CircleCI_vertical_black_logo.svg:
	  docs/images/ci/CircleCI_vertical_black_logo.png: copy from
	  https://brand.circleci.com/api/asset/download.png?asset_id=47134418&auth=XCzXjqT6lGYuIc0lH9SjTA
	* README.adoc: use locally stored logos of acknowledged helper
	  projects
	* docs/images/ci/CircleCI_vertical_black_logo.svg: copy from
	  https://brand.circleci.com/api/asset/download.svg?asset_id=47134422&auth=XCzXjqT6lGYuIc0lH9SjTA
	* docs/images/ci/AppVeyor_logo-2x.png: copy from
	  https://ci.appveyor.com/assets/images/logo-2x.png
	* docs/images/ci/OC_logotype.svg: copy from
	  https://opencollective.com/static/images/logotype.svg
	* docs/images/ci/DO_Powered_by_Badge_blue.svg: copy from
	  https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/PoweredByDO/DO_Powered_by_Badge_blue.svg
	  [#2192]
	* docs/images/ci/GitHub-Mark-ea2971cee799.png: copy from
	  https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png
	* docs/images/ci/gandi-ar21.svg: docs/images/gandi-ar21.svg: copy
	  from nut-website
	* README.adoc: extend the Acknowledgements chapter with logos of
	  organizations and projects which help ensure NUT project operations
	  on a continuous basis [#2192]
	* drivers/main.c: clarify numeric errno for faults of
	  fstat/chmod/chown/... for socket file [#2185]
	* scripts/python/module/tox.ini: revise relative paths made available
	  for source testing [#2186]
	* scripts/python/module/Makefile.am: arrange for "make tox"

2023-11-19  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/module/.gitignore: Update .gitignore
	* .github/workflows/PyNUTClient.yml: Update PyNUTClient.yml
	* .github/workflows/PyNUTClient.yml: Update PyNUTClient.yml
	* .github/workflows/PyNUTClient.yml: Update PyNUTClient.yml
	* .github/workflows/PyNUTClient.yml: Update PyNUTClient.yml
	* .github/workflows/PyNUTClient.yml: Update PyNUTClient.yml
	* .github/workflows/PyNUTClient.yml: Update PyNUTClient.yml
	* .github/workflows/PyNUTClient.yml: Update PyNUTClient.yml
	* .github/workflows/PyNUTClient.yml: Update PyNUTClient.yml

2023-11-18  Jim Klimov <jimklimov+nut@gmail.com>

	* .github/workflows/PyNUTClient.yml: convert to use
	  scripts/python/module/Makefile.am directly, to avoid discrepancies
	  in two logic impementations
	* scripts/python/module/tox.ini: update pip as a "commands_pre"
	  action [#2186]
	* .github/workflows/PyNUTClient.yml: fix typo determining TAG_NAME
	* scripts/python/module/Makefile.am,
	  scripts/python/module/setup.py.in, scripts/python/module/tox.ini:
	  Py: try to beat sense into packaging all the files
	* scripts/python/module/Makefile.am: add "py-in" and "redist" targets
	  for manual iterations
	* scripts/python/module/.gitignore,
	  scripts/python/module/Makefile.am, scripts/python/module/tox.ini:
	  scripts/python/module: add Python testing framework handling
	  (tox.ini etc) [#2186]

2023-11-16  Jim Klimov <jimklimov@gmail.com>

	* drivers/Makefile.am: dist the apc_modbus.h file

2023-11-16  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/module/setup.py.in: update "keywords" to refer to
	  NUT
	* scripts/python/module/setup.py.in: constrain lowest known
	  compatible python version
	* scripts/python/module/setup.py.in: clean up formatting
	* scripts/python/module/Makefile.am: create the PyNUTClient/src
	  directory for better module naming
	* scripts/python/module/Makefile.am: clean the many .pypi-dist*
	  touch-files we have now
	* scripts/python/module/Makefile.am: allow "make clean dist" to do a
	  sane thing
	* NEWS.adoc: update for arduino-hid [#2188]
	* NEWS.adoc: Update NEWS.adoc
	* drivers/arduino-hid.c: Update arduino-hid.c
	* scripts/systemd/nut-driver-enumerator-daemon-activator.path.in,
	  scripts/systemd/nut-driver-enumerator-daemon-activator.service.in,
	  scripts/systemd/nut-driver-enumerator-daemon.service.in,
	  scripts/systemd/nut-driver-enumerator.path.in:
	  scripts/systemd/nut-driver-enumerator-daemon*.in: add NUT headers
	  like in other systemd units

2023-11-15  Kelly Byrd <kbyrd@memcpy.com>

	* drivers/arduino-hid.c: battery.runtime, status OL/OB and more for
	  Arduino subdriver  Add support for the common status flags as well
	  as time remaining, battery voltage and other variables found in
	  other HID subdrivers. The Arduino library always supported these
	  items, just the NUT subdriver didn't pick them up so things like
	  status were always OB.

2023-11-14  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/module/setup.py.in: do not install_require telnetlib
	  which is not a standalone project [#2181]
	* .github/workflows/PyNUTClient.yml,
	  scripts/python/module/.gitignore,
	  scripts/python/module/Makefile.am,
	  scripts/python/module/setup.py.in:
	  scripts/python/module/setup.py.in: reference the license file
	  (GPLv3 per NUT COPYING doc) [#2180]
	* scripts/python/module/setup.py.in: rectify whitespace
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: AVOID_REPARSE of
	  the (empty) ups.conf in the main loop method [#2178]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: consider two
	  empty UPS lists (conf and svc) as a valid situation (nothing to
	  reconcile yet) [#2178]
	* scripts/Solaris/nut-driver-enumerator.xml.in: do not return
	  exit-code 42 if "No more changes to reconcile"
	* server/conf.c, drivers/snmp-ups.c, clients/upsmon.c,
	  clients/upssched.c: report if config errors were seen and we
	  ignored them (went on)
	* scripts/Solaris/nut.xml.in: revise "refresh" handling in umbrella
	  service

2023-11-14  Axel Gembe <axel@gembe.net>

	* drivers/apc_modbus.c, drivers/apc_modbus.h, drivers/upshandler.h:
	  apc_modbus: Updates, command, writable variables and outlet group
	  support  This adds support for commands, writable variables and
	  outlet groups.  - For commands there is a new table called
	  `apc_modbus_command_map` which defines the supported commands as a
	  tuple of command name, register offset and value to write. This
	  also adds a new instcmd status called
	  `STAT_INSTCMD_CONVERSION_FAILED` for when conversion of values
	  fails. On startup all the commands are registered using
	  `dstate_addcmd`. This also adds support for the `upsdrv_shutdown`
	  function. - For writable variables we added a new flag called
	  `APC_VF_RW` to the existing variables that indicates a writable
	  variable. We added code to convert from a string to UINT/INT/STRING
	  variables with output in APCs register format. There is a new
	  `_apc_modbus_setvar` function that handles setting variables and
	  rereading them from the device. This also adds a new setvar status
	  called `STAT_SET_CONVERSION_FAILED` for when conversion of values
	  fails. Variables are now correctly set as `ST_FLAG_STRING` and
	  `ST_FLAG_RW` and we call `dstate_setaux` to give a maximum length
	  for strings. - For outlet groups, we now have names, configurable
	  delays and commands per outlet group. Devices have an outlet group
	  called MOG (Main outlet group) that switches all the outputs of the
	  UPS and 1-3 SOGs (Switched outlet groups) that can be controlled
	  independently. Note that MOG is `outlet.group.0` and the SOGs start
	  at `outlet.group.1`. The outlet groups should have markings with
	  the same index at the back of the unit. - This also reduces the
	  length of some of the defines to make the variable maps more
	  readable. - It also adds a comment to when the reopen matcher is
	  created that clarifies why we create it.
	* drivers/apcsmart-old.c: apcsmart-old: Fix return value for not
	  writable variable  The code returned `STAT_SET_UNKNOWN`, which is
	  for variables that were not found, instead this should return
	  `STAT_SET_INVALID`, which means that the variable is not writable.

2023-11-13  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: when used to `make spellcheck` from different
	  directories (and of other-directory files) try to report the path
	  to text source relative to NUT source
	* scripts/augeas/README.adoc: for paragraph-quote block markup
	* NEWS.adoc, UPGRADING.adoc, autogen.sh, configure.ac, docs/nut.dict,
	  scripts/devd/.gitignore, scripts/devd/Makefile.am,
	  tools/Makefile.am, tools/nut-usbinfo.pl: tools/nut-usbinfo.pl:
	  generate FreeBSD style quirks information [#2159]
	* data/html/README.adoc, docs/nut.dict, scripts/Windows/README.adoc,
	  scripts/augeas/README.adoc, scripts/python/README.adoc,
	  scripts/python/app/README.adoc, scripts/usb_resetter/README.adoc:
	  scripts/*/README.adoc: revise markup for proper rendered visuals
	* Makefile.am, data/html/Makefile.am, data/html/README,
	  data/html/README.adoc, docs/nut.dict: data/html/README.adoc: rename
	  to .adoc extension, refresh text and markup, add to spell-checking
	  laundry list
	* Makefile.am, tests/NIT/Makefile.am, tests/NIT/{README =>
	  README.adoc}: tests/NIT/README.adoc: rename to .adoc extension,
	  refresh text and markup, add to spell-checking laundry list
	* scripts/Makefile.am, scripts/RedHat/README,
	  scripts/RedHat/README.adoc: scripts/RedHat/README.adoc: rename to
	  .adoc extension, refresh text and markup, add to spell-checking
	  laundry list
	* docs/nut.dict, scripts/Makefile.am, scripts/usb_resetter/{README.md
	  => README.adoc}: scripts/usb_resetter/README.adoc: convert from .md
	  to .adoc, refresh text, add to spell-checking laundry list (also do
	  EXTRA_DIST this directory)
	* Makefile.am, scripts/hotplug/Makefile.am, scripts/hotplug/README,
	  scripts/hotplug/README.adoc: scripts/hotplug/README.adoc: rename to
	  .adoc extension, refresh text and markup, add to spell-checking
	  laundry list
	* Makefile.am, scripts/udev/Makefile.am, scripts/udev/README,
	  scripts/udev/README.adoc: scripts/udev/README.adoc: rename to .adoc
	  extension, refresh text and markup, add to spell-checking laundry
	  list
	* Makefile.am, docs/nut.dict, scripts/upsdrvsvcctl/Makefile.am,
	  scripts/upsdrvsvcctl/README, scripts/upsdrvsvcctl/README.adoc:
	  scripts/upsdrvsvcctl/README.adoc: rename to .adoc extension,
	  refresh text and markup, add to spell-checking laundry list
	* scripts/Makefile.am, scripts/Solaris/Makefile.am,
	  scripts/Windows/Makefile.am, scripts/augeas/Makefile.am,
	  scripts/devd/Makefile.am, scripts/hotplug/Makefile.am,
	  scripts/systemd/Makefile.am, scripts/udev/Makefile.am,
	  scripts/ufw/Makefile.am, scripts/upsdrvsvcctl/Makefile.am:
	  scripts/*/Makefile.am: add/update headings about the NUT
	  scripts/subdir for easier navigation
	* Makefile.am, scripts/devd/Makefile.am, scripts/devd/README,
	  scripts/devd/README.adoc: scripts/devd/README.adoc: rename to .adoc
	  extension, refresh text and markup, add to spell-checking laundry
	  list
	* scripts/augeas/Makefile.am: comment about spellchecking and markup
	  of README.adoc
	* scripts/ufw/Makefile.am: comment about spellchecking and markup of
	  README.adoc
	* Makefile.am, docs/nut.dict, scripts/systemd/Makefile.am,
	  scripts/systemd/README, scripts/systemd/README.adoc:
	  scripts/systemd/README.adoc: rename to .adoc extension, refresh
	  text and markup, add to spell-checking laundry list
	* Makefile.am, scripts/Makefile.am: scripts/README.adoc: add to
	  spell-checking laundry list
	* scripts/README.adoc: refresh text and markup
	* scripts/Makefile.am, scripts/{README => README.adoc}:
	  scripts/README: rename to .adoc extension
	* Makefile.am, docs/nut.dict, scripts/python/Makefile.am,
	  scripts/python/app/README.adoc, scripts/python/module/README.adoc:
	  scripts/python/*/README.adoc: add to spell-checking laundry list
	* Makefile.am, docs/nut.dict, scripts/Windows/Installer/README.adoc,
	  scripts/Windows/Makefile.am, scripts/Windows/README.adoc:
	  scripts/Windows/*/README.adoc: add to spell-checking laundry list
	* .../DriverInstaller/{README.txt => README.adoc},
	  scripts/Windows/Makefile.am: scripts/Windows/Makefile.am: fix
	  EXTRA_DIST to cover many other scripts and resource files
	* Makefile.am, docs/nut.dict, scripts/Solaris/Makefile.am:
	  scripts/Solaris/README.adoc: add to spell-checking laundry list
	* scripts/Solaris/README.adoc: refresh text and markup
	* scripts/Solaris/Makefile.am, scripts/Solaris/{README =>
	  README.adoc}: scripts/Solaris/README: rename to .adoc extension

2023-11-12  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, clients/upsmon.c, clients/upsmon.h,
	  conf/upsmon.conf.sample.in, docs/man/upsmon.conf.txt,
	  docs/nut.dict: clients/upsmon.{c,h} et al: add notification support
	  for NOTCAL state change [#2169]
	* NEWS.adoc, docs/nut.dict: NEWS.adoc: document fix of INSTCMD NPE
	  [#2155]
	* NEWS.adoc: inject a new NUT v2.8.3 expectations plan
	* NEWS.adoc: refer to PR #2156 for powerpanel fix
	* docs/maintainer-guide.txt: ensure PyNUT publication
	* .github/workflows/PyNUTClient.yml: only update TestPyPI repo if
	  PyNUT sources changed

2023-11-11  root <root@deb128.rd-dpis77.local>

	* clients/upsmon.c: It is important to reset the "CAL" status. This
	  will be reset later if necessary.

2023-11-11  Jim Klimov <jim@jimklimov.com>

	* .github/workflows/PyNUTClient.yml: limit auto-runs to NUT upstream
	  [#2158]  Other repos lack needed pypi credentials anyway.

2023-11-10  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/Makefile.am, autogen.sh: cause USB (and SNMP) file
	  re-generation if generating script was changed
	* autogen.sh, m4/nut_check_python.m4: update ad-hoc lists for
	  python3.x program name detection
	* drivers/powervar-hid.c: fix file perms
	* autogen.sh: re-generate USB ID listing files if we updated sources
	* tools/nut-usbinfo.pl: add a big scary header that nutscan-usb.h is
	  generated

2023-11-09  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, conf/nut.conf.sample, conf/upsd.conf.sample,
	  docs/config-notes.txt, docs/man/nut.conf.txt,
	  docs/man/upsd.conf.txt, scripts/augeas/nutupsdconf.aug.in,
	  server/conf.c, server/upsd.c, server/upsd.h: upsd: introduce
	  support for ALLOW_NOT_ALL_LISTENERS configuration toggle [#723]
	* NEWS.adoc, server/upsd.c: server/upsd.c: server_load(): if
	  listenersTotal != listenersValid, default to fatal start-up failure
	  [#723]
	* server/upsd.c: server_load(): if discrepancy of listenersTotal vs.
	  listenersValid amounts to localhost-related addresses, let it slide
	  [#723]
	* server/upsd.c: server_load(): keep track of listenersTotal vs.
	  listenersValid for certain localhost-related string names and IP
	  addresses [#723]
	* NEWS.adoc, server/upsd.c: server/upsd.c: server_load(): keep track
	  of listenersTotal vs. listenersValid, and base "no listening
	  interface available" diagnosis on the latter, not on the
	  firstaddr->sock_fd [#723]
	* server/upsd.c: setuptcp(): warn if requested to LISTEN on
	  "localhost" by name (in case it misfires for IPv4 vs. IPv6)
	* server/Makefile.am: limit SSL and LIBWRAP options to upsd
	  (sockdebug/pipedebug is not networked)
	* scripts/python/module/.gitignore: .pypi* touch-files [#2158]
	* .github/workflows/PyNUTClient.yml: fix testpypi repo url argument
	  [#2158]
	* .github/workflows/PyNUTClient.yml: publish from our non-default
	  directory location [#2158]
	* .github/workflows/PyNUTClient.yml: update pypa action to
	  "release/v1" (not chasing specific tag) [#2158]
	* .github/workflows/PyNUTClient.yml: update doc reference comments
	  [#2158]
	* .github/workflows/PyNUTClient.yml: separate source preparation from
	  distro preparation [#2158]
	* scripts/python/module/README.adoc: reshuffle paragraphs for
	  readability, fix a few typos [#2158]
	* docs/maintainer-guide.txt: make note to check PyPI resources
	  [#2158]
	* .github/workflows/PyNUTClient.yml: refine yaml vs. shell syntax
	  some more [#2158]
	* .github/workflows/PyNUTClient.yml: refine yaml vs. shell syntax
	  [#2158]
	* scripts/python/module/setup.py.in: scripts/python/module/setup.py:
	  refer to README.txt made for sdist [#2158]
	* .github/workflows/PyNUTClient.yml,
	  scripts/python/module/Makefile.am: actually better prefer "pip
	  build" as the newest designed solution [#2158]
	* .github/workflows/PyNUTClient.yml,
	  scripts/python/module/Makefile.am: prefer setup.py for its sdist
	  support [#2158]
	* .github/workflows/PyNUTClient.yml: align with recent changes in
	  scripts/python/module/Makefile.am [#2158]
	* scripts/python/module/Makefile.am: use quieter "pip" build wrapper,
	  not directly calling setup.py [#2158]
	* scripts/python/module/Makefile.am: make sure the src/... module is
	  found (wants __init__.py) [#2158]
	* scripts/python/module/setup.py.in: fix README quoting as the long
	  description [#2158]
	* .github/workflows/PyNUTClient.yml,
	  scripts/python/module/.gitignore,
	  scripts/python/module/Makefile.am:
	  scripts/python/module/Makefile.am: PyPI standard wants a README.txt
	  to be present [#2158]
	* scripts/python/module/Makefile.am: revise verbosity and selection
	  of upload target [#2158]
	* configure.ac, .github/workflows/PyNUTClient.yml: refine definition
	  of NUT_SOURCE_GITREV_NUMERIC to avoid dash separator and use a dot
	  (major.minor.patch.commitnumsince) [#2158]
	* scripts/python/module/Makefile.am: revise GENERATED_DIST artifacts
	  [#2158]
	* scripts/python/module/setup.py.in: fix README content type [#2158]
	* .github/workflows/PyNUTClient.yml, configure.ac,
	  scripts/python/module/Makefile.am,
	  scripts/python/module/setup.py.in: Introduce
	  NUT_SOURCE_GITREV_NUMERIC for scripts/python/module/Makefile.am
	  [#2158]
	* configure.ac, scripts/python/Makefile.am,
	  scripts/python/module/.gitignore,
	  scripts/python/module/Makefile.am: Introduce
	  scripts/python/module/Makefile.am to allow PyPI repo activities
	  from command line [#2158]

2023-11-09  Greg Troxel <gdt@lexort.com>

	* scripts/python/Makefile.am: python: Do not install setup.py

2023-11-09  Doug Nazar <nazard@nazar.ca>

	* NEWS.adoc: Update with powerpanel driver changes

2023-11-08  Vytautas Survila <vytautas.survila@gmail.com>

	* drivers/nutdrv_qx.c: support Armac O/850E/PSW #2153  Support for
	  Armac UPS that uses interrupt instead of control msg. It will be
	  enabled automatically only for devices that reports 0x82 as in
	  endpoint address with interrupt transfer type

2023-11-08  Jim Klimov <jimklimov+nut@gmail.com>

	* .github/workflows/PyNUTClient.yml, configure.ac,
	  scripts/python/Makefile.am, scripts/python/module/.gitignore,
	  scripts/python/module/{setup.py => setup.py.in}:
	  .github/workflows/PyNUTClient.yml, scripts/python/module/setup.py:
	  rename setup.py into a .in template; use @NUT_SOURCE_GITREV@
	  [#2158]
	* .github/workflows/PyNUTClient.yml: publish (master) branch builds
	  to TestPyPI repository [#2158]
	* .github/workflows/PyNUTClient.yml: follow warnings for token access
	  [#2158]
	* .github/workflows/PyNUTClient.yml: update set-output action =>
	  GITHUB_OUTPUT file [#2158]  Follow warnings into
	  https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/
	* .github/workflows/PyNUTClient.yml: use definitive version of pypa
	  action - v1.8.10 (current latest) [#2158]
	* .github/workflows/PyNUTClient.yml: use definitive version of pypa
	  action [#2158]
	* scripts/python/module/setup.py: note the renaming of README.adoc
	* .github/workflows/PyNUTClient.yml: fix shell syntax [#2158]
	* .github/workflows/PyNUTClient.yml: fix shell syntax [#2158]
	* .github/workflows/PyNUTClient.yml: fix shell syntax [#2158]
	* .github/workflows/PyNUTClient.yml: use default github-hosted runner
	  [#2158]
	* .github/workflows/PyNUTClient.yml: also publish master-branch
	  rolling changes [#2158]
	* NEWS.adoc, scripts/python/Makefile.am, scripts/python/{README =>
	  README.adoc}, scripts/python/app/{README => README.adoc},
	  scripts/python/module/{README => README.adoc}:
	  scripts/python/*/README: rename to *.adoc extension [#1953]

2023-11-08  Jim Klimov <jim@jimklimov.com>

	* .github/workflows/PyNUTClient.yml, NEWS.adoc,
	  scripts/python/module/README, scripts/python/module/setup.py: Add
	  recipes for PyPI publishing of PyNUTClient bindings for NUT [#2158]
	  Note: PyPI names are case-insensitive, and "pynut" was occupied.

2023-11-07  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-usbinfo.pl: track preference of certain drivers over
	  others [#1021]
	* NEWS.adoc, docs/man/nutscan_add_device_to_device.txt,
	  docs/man/nutscan_add_option_to_device.txt, docs/nut.dict,
	  tools/nut-scanner/Makefile.am, tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-display.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-usbinfo.pl: tools/nut-usbinfo.pl, nut-scanner: extend to
	  track alt_driver_names in generated config suggestions
	* tools/nut-usbinfo.pl: track all suitable driver names (in comments)

2023-11-07  Doug Nazar <nazard@nazar.ca>

	* drivers/powerp-txt.c: powerpanel: Rewrite status parsing of text
	  protocol to be generic  Instead of having several scanf formats for
	  different devices, parse the individual fields provided only.
	* drivers/powerp-bin.c: powerpanel: Don't report errors about output
	  voltage if not available
	* drivers/libhid.c: Fix passing of errors up from libusb 1.x.  The
	  api for get_item_buffered() requires the actual error to be in
	  errno which was automatic for libusb 0.x but libusb 1.x doesn't use
	  errno.  Otherwise a poll-only driver will miss errors like
	  disconnects and never try to reconnect.
	* drivers/dstate.c: Fix SIGSEGV while preforming INSTCMD  Parameter
	  arg[2] is not guaranteed to be valid while preforming INSTCMD.
	  Don't pass directly to main_instcmd().

2023-11-06  Jim Klimov <jim@jimklimov.com>

	* configure.ac: quiece -Wincompatible-function-pointer-types-strict
	  for clang-17 on some platforms [#823]

2023-11-05  Kelly Byrd <kbyrd@memcpy.com>

	* drivers/libusb0.c, drivers/libusb1.c, drivers/nut_libusb.h,
	  drivers/usb-common.h: Add usb_config_index to
	  usb_communication_subdriver_s, default to 0.  The tactical goal of
	  this change is to change ret = libusb_get_config_descriptor(device,
	  (uint8_t)usb_subdriver.hid_rep_index, &conf_desc); to ret =
	  libusb_get_config_descriptor(device,
	  (uint8_t)usb_subdriver.usb_config_index, &conf_desc);  Before this
	  change, libusb1.c did libusb_get_config_descriptor() with a config
	  index equal to the interface number. For composite devices using an
	  interface index > 0, this is usally the wrong choice. Concretely,
	  I'm using an Arduino for a DIY UPS project and these are composite
	  devices with multiple interfaces under the first (and only) config
	  descriptor.  In the USB descriptor heirarchy, deivce descriptors
	  have config descriptors which have interface descriptors. Also,
	  nearly all USB devices have a single configuration (index 0).  In
	  order to do this, I added a new member alongside the existing
	  hid_rep_idex and hid_desc_index. I chose to do this instead of
	  using the add_var method because this member is used in places in
	  very similar ways to how hid_rep_index and hid_desc_index is used.
	  This new member defaults to 0 which covers the majority of USB
	  devices. Any future subdriver is able to use this if a device
	  requires it. For existing subdrives, we'll just use an index of 0.
	  I also changed some debug logging to print out the config index
	  where the code was already printing the interface index.

2023-11-05  Fabrice Fontaine <fontaine.fabrice@gmail.com>

	* m4/nut_check_python.m4: allow overriding of
	  PYTHON{2,3}_SITE_PACKAGES  Allow the end-user to override
	  PYTHON{2,3}_SITE_PACKAGES as this can be useful when
	  cross-compiling

2023-11-03  Fabrice Fontaine <fontaine.fabrice@gmail.com>

	* m4/nut_compiler_family.m4: fix cross-compilation  Do not use
	  isystem with host paths when cross-compiling

2023-11-02  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: nut_enable_inplace_runtime: pass libexecdir if
	  specified
	* docs/man/upsmon.txt: avoid characters (some unicode space) that
	  some versions of asciidoc dislike
	* NEWS.adoc, docs/nut.dict, lib/libnutclientstub.pc.in: Clarify what
	  is libnutclientstub
	* docs/config-prereqs.txt, docs/nut.dict: clarify about /dev/shm and
	  noexec option [#2143 follow-up]
	* docs/config-prereqs.txt: small fixes to Slackware 15 chapter [#2143
	  follow-up]
	* docs/man/al175.txt, docs/man/apc_modbus.txt,
	  docs/man/apcupsd-ups.txt, docs/man/asem.txt, docs/man/bcmxcp.txt,
	  docs/man/bcmxcp_usb.txt, docs/man/belkin.txt,
	  docs/man/belkinunv.txt, docs/man/bestfcom.txt,
	  docs/man/bestfortress.txt, docs/man/bestuferrups.txt,
	  docs/man/bestups.txt, docs/man/blazer_ser.txt,
	  docs/man/blazer_usb.txt, docs/man/clone.txt,
	  docs/man/dummy-ups.txt, docs/man/etapro.txt, docs/man/everups.txt,
	  docs/man/gamatronic.txt, docs/man/genericups.txt,
	  docs/man/isbmex.txt, docs/man/ivtscd.txt,
	  docs/man/liebert-esp2.txt, docs/man/liebert.txt,
	  docs/man/macosx-ups.txt, docs/man/masterguard.txt,
	  docs/man/metasys.txt, docs/man/microdowell.txt,
	  docs/man/microsol-apc.txt, docs/man/netxml-ups.txt,
	  docs/man/nutdrv_atcl_usb.txt, docs/man/nutdrv_qx.txt,
	  docs/man/nutdrv_siemens_sitop.txt, docs/man/oneac.txt,
	  docs/man/optiups.txt, docs/man/pijuice.txt, docs/man/powercom.txt,
	  docs/man/powerpanel.txt, docs/man/rhino.txt,
	  docs/man/richcomm_usb.txt, docs/man/safenet.txt, docs/man/skel.txt,
	  docs/man/snmp-ups.txt, docs/man/solis.txt, docs/man/tripplite.txt,
	  docs/man/tripplitesu.txt, docs/man/upscode2.txt,
	  docs/man/usbhid-ups.txt, docs/man/victronups.txt: Fix man pages to
	  have SYNOPSIS as the second section per standard
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  update about docbook-xml / linuxdoc-tools [#2142]
	* m4/nut_check_asciidoc.m4, configure.ac: separate A2X_MIN_VERSION
	  from ASCIIDOC_MIN_VERSION [#2142]
	* docs/config-prereqs.txt, docs/nut.dict: add diffutils to Slackware
	  baseline (not in default install)
	* scripts/Windows/Makefile.am: avoid "Using $< in a non-suffix rule
	  context is a GNUmake idiom" for non-GNU makes
	* docs/Makefile.am: avoid "Using $< in a non-suffix rule context is a
	  GNUmake idiom" for non-GNU makes
	* docs/config-prereqs.txt, docs/nut.dict: docs/nut.dict: update
	  spellchecker to make older systems happy
	* configure.ac: dumb down the check for HAVE_WINDOWS_H to cater for
	  older autotools

2023-11-01  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt, docs/nut.dict: add a chapter on Slackware
	  15 build environment - clarify Sotirov's SlackPack
	* configure.ac: only define that we HAVE_WINDOWS if both the
	  minimally required tools and headers are in place
	* m4/nut_check_headers_windows.m4: add automake conditionals for
	  detected header files
	* docs/config-prereqs.txt, docs/nut.dict: add a chapter on Slackware
	  15 build environment - clarify Alien Slack Builds
	* docs/config-prereqs.txt, docs/nut.dict: add a chapter on Slackware
	  15 build environment
	* scripts/Windows/Makefile.am: limit binary builds to cases where we
	  HAVE_WINDOWS [#2142]
	* docs/man/huawei-ups2000.txt, docs/man/liebert-esp2.txt: fix titles
	* configure.ac: bump AC_INIT to development version 2.8.1.1

2023-10-31  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, UPGRADING.adoc, docs/docinfo.xml.in: Revert "NEWS.adoc,
	  UPGRADING.adoc, docs/docinfo.xml.in: finalize text before NUT
	  v2.8.1 release"  This reverts commit
	  909705233877a45953f9c739abd9bc8156a05627.
	* configure.ac: update AC_INIT for NUT v2.8.1 release
	* docs/configure.txt, scripts/Windows/README.adoc,
	  scripts/Windows/build-mingw-nut.sh: update examples for NUT v2.8.1
	  release
	* appveyor.yml: update for NUT v2.8.1 release
	* docs/maintainer-guide.txt: revise procedures for NUT v2.8.1 release
	* docs/maintainer-guide.txt: update filenames to adjust for changes
	  leading up to NUT v2.8.1 release
	* docs/docinfo.xml.in: set the date for NUT v2.8.1 release
	* NEWS.adoc, UPGRADING.adoc, docs/docinfo.xml.in: finalize text
	  before NUT v2.8.1 release
	* ci_build.sh: for default developer builds without parameters,
	  nowadays we should have default warnings active and fatal
	* tests/NIT/nit.sh: take advantage of NUT_QUIET_INIT_UPSNOTIFY=true
	  [#2136]
	* scripts/Windows/Installer/README.adoc: add initial notes on the NUT
	  for Windows Installer [#1485]
	* scripts/Windows/build-mingw-nut.sh: handle optional cgi-bin
	  location and lack of NUT libs among system dependencies more
	  eloquently (WRT build log)
	* scripts/Windows/build-mingw-nut.sh: allow caller to customize
	  WINDIR, TOP_DIR, BUILD_DIR and INSTALL_DIR
	* scripts/Windows/build-mingw-nut.sh: double-quote path variables
	* scripts/Windows/build-mingw-nut.sh: handle optional cgi-bin
	  location more eloquently (WRT build log)
	* INSTALL.nut.adoc, NEWS.adoc, appveyor.yml, ci_build.sh,
	  docs/config-prereqs.txt, scripts/Windows/Makefile.am,
	  scripts/Windows/{README => README.adoc},
	  scripts/Windows/build-mingw-prereqs.sh: Rename
	  scripts/Windows/README => scripts/Windows/README.adoc
	* docs/man/apc_modbus.txt: update the man page with caveats
	  applicable at the publication time (Oct 2023) [#2063 follow-up]

2023-10-30  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac, scripts/Windows/Installer/.gitignore,
	  scripts/Windows/Installer/{NUT-Installer.xml =>
	  NUT-Installer.xml.in}: scripts/Windows/Installer/NUT-Installer.xml:
	  make it a .in template and substitute NUT PACKAGE_VERSION
	* clients/upsc.c: typo fix in self-identification message
	* drivers/upsdrvctl.c: fix formatting string for wstat debug-print
	  [#2135]
	* NEWS.adoc, drivers/riello.c, drivers/riello_ser.c,
	  drivers/riello_usb.c: drivers/riello*.c: fix back bit maths changed
	  with #1106
	* UPGRADING.adoc: revise envvars that tweak specific message
	  verbosity

2023-10-29  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/upsdrvctl.c: trace (and timestamp) the exit paths from tool
	  [#2135]
	* scripts/Aix/nut.init.in, scripts/HP-UX/nut-drvctl.sh,
	  scripts/HP-UX/nut-upsd.sh, scripts/HP-UX/nut-upsmon.sh,
	  scripts/RedHat/upsd.in, scripts/RedHat/upsmon.in,
	  scripts/Solaris/nut.in, scripts/Solaris/svc-nut-monitor.in,
	  scripts/Solaris/svc-nut-server.in, scripts/Solaris8/S99upsmon:
	  Suggest NUT_QUIET_INIT_UPSNOTIFY=true in sample init-scripts
	  [#2136]
	* common/common.c, NEWS.adoc, docs/nut.dict: support
	  NUT_QUIET_INIT_UPSNOTIFY envvar to hide upsnotify "failed...will
	  not spam more" messages [#2136]
	* drivers/upsdrvctl.c: differentiate waitpid(..., WNOHANG) returns of
	  "-1" vs "0" [#2135]
	* drivers/upsdrvctl.c: make use of return value from execv()
	* drivers/upsdrvctl.c: trace-debug the waitpid() return info
	* drivers/upsdrvctl.c: forkexec(): fix comments and whitespaces
	* drivers/upsdrvctl.c: forkexec(): fix return type of waitpid()
	* drivers/upsdrvctl.c: do not treat a driver initialization timeout
	  as immediate error for upsdrvctl exit code - review the results
	  again [#2134]

2023-10-28  Jim Klimov <jimklimov+nut@gmail.com>

	* conf/ups.conf.sample, docs/man/ups.conf.txt: further clarify
	  behavior of maxstartdelay [#2134]
	* conf/ups.conf.sample, docs/man/ups.conf.txt: clarify behavior of
	  maxstartdelay [#2134]
	* clients/upsmon.c: Revert "clients/upsmon.c: remove doshutdown()
	  __attribute__((noreturn)) annotation, now it can [#2133]"  This
	  reverts commit 2e7263812b4f97cb0d667550e0e660ab50c2ed9e.
	* NEWS.adoc, clients/upsmon.c, conf/upsmon.conf.sample.in,
	  docs/man/upsmon.conf.txt: clients/upsmon.c et al: adjust definition
	  of SHUTDOWNEXIT to allow a finite delay between SHUTDOWNCMD and
	  exit() [#2133]
	* clients/upsmon.c: remove doshutdown() __attribute__((noreturn))
	  annotation, now it can [#2133]

2023-10-27  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc, clients/upsmon.c, conf/upsmon.conf.sample.in,
	  docs/man/upsmon.conf.txt, docs/nut.dict: clients/upsmon.c et al:
	  introduce SHUTDOWNEXIT boolean option [#2133]

2023-10-26  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* NEWS.adoc: reference respective PR for
	  repeater_disable_strict_start option
	* drivers/dummy-ups.c, docs/man/dummy-ups.txt, NEWS.adoc: introduce
	  repeater_disable_strict_start config option

2023-10-26  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: update list of dummy-ups improvements for NUT v2.8.1

2023-10-25  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* drivers/dummy-ups.c: relax error handling to prevent premature
	  driver termination

2023-10-25  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/apcsmart.c: apc_getcaps(): revert to behavior like in NUT
	  v2.7.4 about invalid nument/entlen value(s) [#1941]
	* drivers/apcsmart-old.c: fix DRIVER_NAME to reflect "old"ness of
	  this driver

2023-10-24  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* clients/upsmon.c: debug msgs for possible FSD conditions on conn
	  drop
	* clients/upsmon.c: sanity check status for debug msg on conn drop
	* clients/upsmon.c: print last remembered line state in connection
	  drop debug msg

2023-10-24  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/apcsmart-old.c: do_capabilities(): revert to behavior like
	  in NUT v2.7.4 about invalid nument/entlen value(s) [#1941]
	* Jenkinsfile-dynamatrix: leave
	  "enableDebugTraceGithubStatusHighlights=true" default just for
	  fightwarn-like branches

2023-10-23  desertwitch <24509509+desertwitch@users.noreply.github.com>

	* clients/upsmon.c: keep last UPS linestate on drop_connection

2023-10-21  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: add a
	  dynamatrixGlobalState.enableDebugTraceGithubStatusHighlights toggle

2023-10-21  Axel Gembe <axel@gembe.net>

	* drivers/apc_modbus.c: apc_modbus: Add an early exit if a USB regex
	  is non-zero  A minuscule optimization.
	* drivers/apc_modbus.c: apc_modbus: Use snprintf instead of strncpy
	  `strncpy` does not necessarily zero terminate the buffer so we
	  replace it with `snprintf` and add error checking.  This also fixes
	  an off-by-one in the `snprintf` error checking of the
	  `_apc_modbus_double_to_nut` and `_apc_modbus_power_to_nut`
	  functions and adds error checking to every `snprintf` call.
	* drivers/apc_modbus.c, drivers/apcsmart.c, drivers/belkinunv.c,
	  drivers/openups-hid.c, drivers/optiups.c, drivers/tripplitesu.c,
	  include/common.h, tests/getvaluetest.c: Add `SIZEOF_ARRAY` macro
	  and use where applicable  This adds a new `SIZEOF_ARRAY` to
	  `common.h` and changes some code to use it.

2023-10-19  Jim Klimov <jimklimov+nut@gmail.com>

	* .gitignore: GitIgnore .ci*.txt* if some are left over in the NUT CI
	  farm work area
	* .gitignore: GitIgnore .ci*.txt* if some are left over in the NUT CI
	  farm work area
	* tests/NIT/nit.sh: avoid printing "Error:..." in successful cases
	  This confuses CI log analyzer

2023-10-18  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/nit.sh: testcase_sandbox_nutscanner_list(): fix reporting
	  * report why a test case failed sanity-checks; * avoid grep output
	  spilling to test log to avoid confusion; * revise that exactly
	  expected port count was seen (that was the confusion); * use
	  log_*() in that sanity-check block
	* tests/NIT/nit.sh: tag more progress messages with respective
	  testcase; revise upsd stopping after
	  testcase_upsd_allow_no_device()
	* tests/NIT/nit.sh: use log_separator() before
	  sandbox_forget_configs() in testgroup*()
	* tests/NIT/nit.sh: use NUT_DEBUG_PID envvar to help test-log
	  readability
	* NEWS.adoc, UPGRADING.adoc, common/common.c: common/common.c:
	  optionally support NUT_DEBUG_PID envvar presence to include PID
	  number in debug-level identifiers
	* tests/NIT/nit.sh: sandbox_start_drivers(): report success or
	  failure
	* tests/NIT/nit.sh: report driver PIDs when debugging
	* tests/NIT/nit.sh: tag progress/report messages emitted by test
	  cases to help log readability
	* tests/NIT/nit.sh: testcase_sandbox_start_drivers_after_upsd(): fix
	  matching expression and explain why
	* tests/NIT/nit.sh: testcase_sandbox_start_drivers_after_upsd(): bump
	  timeout and explain why
	* tests/NIT/nit.sh: better filter the processes we look at after
	  sandbox_start_drivers() if debugging
	* drivers/dummy-ups.c: bump (C) and version due to recent changes
	* drivers/dummy-ups.c: avoid blank line in debug logs
	* drivers/dummy-ups.c: refactor prepare_filepath() into one helper
	  method
	* drivers/dummy-ups.c: use better-qualified "fn" rather than
	  potentially short "device_path" to stat the paths
	* drivers/dummy-ups.c: clarify that "upsfd" is not really used in
	  file-based dummy-ups; check for invalid FD for good measure (to
	  avoid fstat() on that)
	* drivers/dummy-ups.c: reconcile method prototype with implem
	* drivers/dummy-ups.c: clarify a nested if/elif/... tree
	* drivers/dummy-ups.c: clarify some debug messages
	* configure.ac: relax the check warning for gmtime_[rs] and
	  localtime_[rs]  As long as we have one, it is okay  Closes: #2115
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: handle service
	  dependencies for apc_modbus [#139, #2063]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: update a comment
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: revise service
	  dependencies for apcupsd-ups relay driver
	* NEWS.adoc: announce the new apc_modbus driver [#139, #2063]

2023-10-18  Axel Gembe <axel@gembe.net>

	* tools/nut-usbinfo.pl: nut_usbinfo.pl: Lowercase the USB ids before
	  inserting  If we don't normalize the case before inserting
	  VID/PID/Driver into `$vendor` we can have duplicate entries.

2023-10-17  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/libusb1.c: nut_libusb_open(): do not keep
	  Bus/Device/BusPort pointers to random malloc() block if we did not
	  get a number to print there from libusb  Avoid (un-)pretty prints
	  like: 0.031364     [D2] - Bus: 006 0.031366     [D2] - Bus Port:
	  ▒UV▒▒U 0.031368     [D2] - Device: 001

2023-10-16  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsmon.c: clients/upsmon.{c,h}: refactor restoring pollfreq
	  (from alert to normal) [#2108]
	* clients/upsmon.c, clients/upsmon.h: clients/upsmon.{c,h}: untie
	  OFF/BYPASS states from ONLINE/ONBATT and linestate attr [#2108]
	* data/cmdvartab: define descriptions for recently added commands and
	  variables [#2112]
	* m4/ax_run_or_link_ifelse.m4: revise to only impose gcc/clang
	  warning option requirements into compilers that identify as GCC or
	  CLANG [#2096 fallout]
	* m4/ax_run_or_link_ifelse.m4: C++ does not support
	  -Werror=implicit-function-declaration [#2109, #2096 fallout]
	* include/str.h, m4/ax_c_pragmas.m4, tests/Makefile.am: Refactor uses
	  of HAVE_PRINTF_STRING_NULL vs. REQUIRE_NUT_STRARG for printf("%s",
	  NULL) support [#2109]
	* m4/ax_c_pragmas.m4, configure.ac: merge two tests for printf("%s",
	  NULL) [#2109]
	* m4/ax_c_pragmas.m4: extend AX_C_PRINTF_STRING_NULL with use of
	  AX_RUN_OR_LINK_IFELSE option to ignore certain warnings [#2109]
	* configure.ac: fix logged output of inet_pton() test
	* m4/ax_run_or_link_ifelse.m4: extend with options to customize
	  CFLAGS and CXXFLAGS [#2109]
	* drivers/usbhid-ups.c, docs/man/usbhid-ups.txt, NEWS.adoc: introduce
	  onlinedischarge_calibration config option [#2104]

2023-10-15  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: Update NEWS.adoc: clarify wording
	* clients/upsmon.c: revise is_ups_critical() with OFF, BYPASS and CAL
	  considerations [#2104]
	* clients/upsmon.c: reword a message for critically lost primary UPS
	* NEWS.adoc, clients/upsmon.c, clients/upsmon.h,
	  conf/upsmon.conf.sample.in, docs/man/upsmon.conf.txt,
	  docs/nut.dict: clients/upsmon.c et al: introduce OFFDURATION config
	  toggle [#2104]
	* drivers/usbhid-ups.c: set CAL status before reporting other
	  possibly critical power states [#2104, #2044, fallout of #2055]

2023-10-13  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/sms_ser.txt: update some wording
	* NEWS.adoc: sms_ser introduced [#2090]

2023-10-12  Jim Klimov <jimklimov@gmail.com>

	* drivers/tripplite_usb.c: avoid varname shadowing
	* drivers/sms_ser.c: use explicit void in function prototypes
	* NEWS.adoc: tripplite_usb allows `upsid` setting [#2075]
	* drivers/tripplite_usb.c: cosmetic fixes (whitespace)

2023-10-11  sapireli <114778791+sapireli@users.noreply.github.com>

	* drivers/tripplite_usb.c: @jimklimov my apologies please dont kill
	  me for closing the pull request just saw your typo fix on the old
	  one implemented it here.
	* docs/man/tripplite_usb.txt, docs/nut.dict, drivers/tripplite_usb.c:
	  @jimklimov my apologies i royally screwed up the pull request with
	  a rebase. I just started a new to have a clean slate scnario. also
	  added the NUT_UNUSED_VARIABLE  per your recommendation.
	  tripplite_usb.c Added UPS ID (upsid) Support: The code now includes
	  support for matching and uniquely identifying UPS devices using the
	  UPS ID (upsid). The upsid configuration option has been added,
	  which accepts a regular expression to match the UPS ID string. This
	  was done by adding a new function called match_by_unitid, that
	  reads the upsid from the config file, then reads the upsid from the
	  device, and checks if they match. This function is now passed to
	  the comm_driver matcher on first connect and reconnects.  Added the
	  upsid to the upsdrv_makevartable function so it is read and stored
	  from the config file.  tripplite_usb.txt Updated Documentation: The
	  driver documentation was updated to reflect the new functionality.
	  The "EXTRA ARGUMENTS" section now includes information about the
	  upsid configuration option, and how to set it.  thank you to
	  @jimklimov for pointing me in the right direction and hand holding.

2023-10-11  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: enable @Library('jenkins-dynamatrix@')
	  notation for custom-built plugin on NUT CI farm

2023-10-10  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsclient.c, server/netssl.c, m4/ax_c_pragmas.m4: hush
	  -Wcast-function-type-strict due to void* vs. practical pointers
	  with NSS method pointers [#2084]
	* tests/generic_gpio_utest.c: cosmetic fixes
	* tests/generic_gpio_utest.c: avoid "error: variable might be
	  clobbered by longjmp or vfork" [#2092]
	* data/driver.list.in: add CP1350PFCLCD
	* tests/Makefile.am: refer to nutlogtest$(EXEEXT) for clarity in
	  dependencies

2023-10-10  Clappier, Eric <EricClappier@eaton.com>

	* drivers/compaq-mib.c: Fix issues in compaq mib

2023-10-09  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/nutlogtest.c: revise include statements

2023-10-08  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict for PR #2090

2023-10-08  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c: follow TOCTOU analysis suggestions about file
	  permissions check and enforcement
	* Jenkinsfile-dynamatrix: hush down groovy debug verbosity, use
	  BRANCH_NAME patterns as the default toggle to be loud and slow

2023-10-08  Alex W Baulé <alexwbaule@gmail.com>

	* docs/man/Makefile.am, docs/man/sms_ser.txt: Add man file and update
	  Makefile.am

2023-10-07  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/generic_gpio_utest.c: avoid NULL deref in printf() on some
	  platforms
	* Jenkinsfile-dynamatrix: warn about lack of
	  dynacfgPipeline.configureEnvvars when we "Investigate envvars"
	* drivers/sms_ser.h: drivers/sms_ser.c: fix use of methods without a
	  prototype - expose in header
	* drivers/sms_ser.c: Revert "drivers/sms_ser.c: fix use of methods
	  without a prototype - make them static"  This reverts commit
	  8de11079a80754af38ad67524009003028a6912e to try a different
	  approach.
	* drivers/sms_ser.c: fix use of methods without a prototype - make
	  them static
	* drivers/sms_ser.c: fix mixing of "unsigned int" and "long" delays
	* drivers/sms_ser.c: fix printf(ssize_t)
	* drivers/Makefile.am: "dist" the new sms_ser.h header

2023-10-06  Jim Klimov <jimklimov@gmail.com>

	* NEWS.adoc: optiups fixes [#2089]

2023-10-06  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: enable tracing for fightwarn branches
	* tests/generic_gpio_utest.c: more fscanf() width warnings

2023-10-05  moonbuggy <3319867+moonbuggy@users.noreply.github.com>

	* drivers/optiups.c: use str_to_short() instead of atoi()
	* drivers/optiups.c: use short instead of long/float
	* data/driver.list.in: updated driver.list.in

2023-10-05  Jim Klimov <jimklimov@gmail.com>

	* drivers/optiups.c: Shuffle lines to keep declarations before
	  operations

2023-10-05  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: bail out of spellcheck of empty
	  SPELLCHECK_SRC_ONE filenames  Sometimes we get this:
	  Makefile:1216: update target 'asciidoc-vars.conf' due to:
	  asciidoc-vars.conf-spellchecked rm -f "asciidoc-vars.conf" || true
	  ; \ echo "  ASPELL   Spell checking on ./"; \ ...  touch
	  "asciidoc-vars.conf"  ASPELL   Spell checking on ./ sed: read error
	  on stdin: Is a directory  Only seen for "asciidoc-vars.conf" so
	  far:  :; git checkout -f ; touch docs/asciidoc-vars.conf ; make
	  spellcheck ; clear ; make dist -j 20 --trace V=1
	* docs/man/Makefile.am: fix EXTRA_DIST of driver man page sources
	  even if the build was configured for just some subset of drivers
	  [#2081]
	* drivers/apcupsd-ups.c: use detected availability of struct pollfd
	  to define or not the fallback
	* configure.ac: detect availability of struct pollfd
	* m4/ax_run_or_link_ifelse.m4: make more effort to detect
	  undefined-ness of methods
	* include/wincompat.h: comment correct portable arg type for
	  inet_ntop()

2023-10-04  moonbuggy <3319867+moonbuggy@users.noreply.github.com>

	* drivers/optiups.c: correct voltages for Opti-UPS 230V AC models;
	  correct battery capacity for 24V models

2023-10-04  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: upsnotify(): make first/only notification faults
	  visible  They can be important for troubleshooting, e.g. services
	  that rely on sd_notify() but never get the READY message would loop
	  in restarts.
	* clients/Makefile.am: refactor definitions of LDADD_FULL and
	  LDADD_CLIENT for easier reuse  upsmon is a daemon with systemd
	  notify among other things, and uses the full libcommon upssched
	  should suffice with the client version
	* docs/configure.txt, docs/nut.dict: docs/configure.txt: document
	  --libexecdir
	* scripts/systemd/nutshutdown.in: also log critical progress messages
	  to /dev/console if available (and not-quiet mode)

2023-10-04  Axel Gembe <axel@gembe.net>

	* configure.ac: Fix out of source tree builds  The code to detect the
	  available drivers does so by parsing `Makefile.am` but it does not
	  do so relative to "$srcdir" so trying to do a configure outside of
	  the source directory will fail.

2023-10-04  Alex W Baulé <alexwbaule@gmail.com>

	* docs/sms-brazil-protocol.txt, drivers/Makefile.am,
	  drivers/sms_ser.c, drivers/sms_ser.h: add support to SMS 1phase
	  brazil from #1987  Tested on Nobreak SMS PREMIUM 1500 VA (with
	  WiFi) and M3 Senoidal.

2023-10-03  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/apcupsd-ups.c: port bits of poll.h to have this buildable
	  on older WIN32
	* common/wincompat.c, configure.ac, include/wincompat.h,
	  tools/nut-scanner/scan_xml_http.c: Add a fallback inet_ntop()
	  implementation  Needed for tools/nut-scanner/scan_xml_http.c on
	  MinGW cross-builds
	* drivers/clone.c: fix casting warnings
	* drivers/upsdrvquery.c: fix casting warnings
	* drivers/main.c: fix cmdret=upsdrvquery_oneshot() as a generally
	  ssize_t value
	* drivers/main.c: fix indentation
	* drivers/main.c: fix portability of chown() used as chgrp()  Initial
	  implementation passed -1 as uid to have it not changed. Not all
	  OSes support that behavior.
	* drivers/dummy-ups.c: fix casting warnings
	* clients/upssched.c: fix casting warnings
	* common/common.c: fix casting warnings
	* tests/generic_gpio_utest.c: fix warnings about formatting strings
	* docs/nut.dict: update for nut-website additions

2023-10-02  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: default a MAKE=make envvar if somehow
	  missing (strange bug for autotools build scenarios)
	* Jenkinsfile-dynamatrix: default a MAKE=make envvar if somehow
	  missing (strange bug for autotools build scenarios)
	* docs/Makefile.am: avoid defining "check-local" target twice to
	  include optional "spellcheck", not all tools like that [#2081]
	* scripts/systemd/nutshutdown.in: simplify with sourcing of the
	  optional config file
	* scripts/systemd/nutshutdown.in: make it useful for NUT clients
	  (which shut down and may want to avoid power races)
	* tests/generic_gpio_liblocal.c, tests/generic_gpio_utest.c:
	  tests/generic_gpio_*.c: fix clang warnings [#823]
	* drivers/snmp-ups.c: fix the dangling pointer warning some compilers
	  have found [#823]

2023-10-01  Jim Klimov <jimklimov+nut@gmail.com>

	* conf/nut.conf.sample, docs/man/nut.conf.txt, docs/nut.dict,
	  scripts/systemd/nutshutdown.in: Introduce POWEROFF_QUIET for
	  nutshutdown et al
	* docs/man/nut.conf.txt: document ALLOW_NO_DEVICE setting
	* conf/nut.conf.sample: document other options currently highlighted
	  in the man page
	* conf/nut.conf.sample: fixup! conf/nut.conf.sample: update existing
	  comments
	* conf/nut.conf.sample: refer to `man nut.conf` for more info
	* conf/nut.conf.sample: update existing comments
	* scripts/systemd/nutshutdown.in: update indentations and comments
	* scripts/systemd/nutshutdown.in: fixup!
	  scripts/systemd/nutshutdown.in: add copyright header, update
	  practical comments
	* configure.ac, scripts/systemd/nut-driver-enumerator.path.in,
	  scripts/systemd/nut-driver-enumerator.service.in,
	  scripts/systemd/nut-driver.target,
	  scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in, scripts/systemd/nut.target:
	  scripts/systemd/*.in: add short copyright header to unit files
	* scripts/systemd/nutshutdown.in: add copyright header, update
	  practical comments

2023-09-30  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: nut_prepare_search_paths(): use realpath() where
	  available, and so xstrdup()/free() in general [#317]
	* NEWS.adoc, common/common.c, include/common.h,
	  tools/nut-scanner/Makefile.am, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-init.c: common, nut-scanner: Introduce
	  nut_prepare_search_paths() to pre-filter the usable set [#317]
	* tools/nut-scanner/nutscan-ip.c: WIN32 builds require WSAStartup()
	  before getaddrinfo() et al
	* tools/nut-scanner/nutscan-ip.c: trace getaddrinfo() failures
	* tests/NIT/nit.sh: consider an empty output of nut-scanner an error
	  (to retry from one mode to another)
	* tools/nut-scanner/nut-scanner.c: typo (lacking newline) in an usage
	  message
	* NEWS.adoc, common/common.c: common/common.c: vupslogx():
	  dynamically adjust the needed buffer size for longer printouts,
	  e.g. PATH in upsdebugx_report_search_paths() [#317]
	* common/common.c: vupslog(): stash errno value at start of method,
	  so later calls do not corrupt what we want to report; fix
	  declarations-on-top for windows builds
	* common/common.c: fix get_libname_in_pathset() increment of
	  checked-directory counter  Be sure to bump the number, not the
	  pointer!
	* common/common.c: fix get_libname_in_pathset() mutilating the input
	  pathset string  It was unexpected to see just one entry in
	  getenv("PATH") after the first loop...
	* configure.ac, common/common.c: search_paths[]: introduce
	  MULTIARCH_TARGET_ALIAS as/if suggested by compiler [#317]
	* common/common.c: vupslog(): print timestamp+buf in one operation
	* common/common.c: extend upsdebugx_report_search_paths() to follow
	  actual search order of get_libname() with more locations possibly
	  checked [#317]
	* common/common.c: comment about peculiarities of search_paths[]
	  contents [#317]
	* NEWS.adoc, UPGRADING.adoc, tools/nut-scanner/Makefile.am,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/nutscan-init.c:
	  nut-scanner: use upsdebugx_report_search_paths() [#317]  Also bumps
	  public API version of libnutscan due to added symbol.
	* common/common.c, include/common.h: common.{c,h}: introduce
	  upsdebugx_report_search_paths() [#317]
	* data/driver.list.in: leave a note about Riello Netman "not-plus"
	  SNMP card naming [#1878]

2023-09-30  Axel Gembe <axel@gembe.net>

	* AUTHORS, data/driver.list.in, docs/man/Makefile.am,
	  docs/man/apc_modbus.txt, docs/nut.dict, drivers/Makefile.am,
	  drivers/apc_modbus.c, m4/nut_check_libmodbus.m4,
	  tools/nut-usbinfo.pl: apc_modbus: Support for APC Modbus protocol
	  This adds a new driver called `apc_modbus` to support the APC
	  Modbus protocol over serial ports, TCP connections and USB ports.
	  For USB support to work it needs a [patched `libmodbus` that has
	  support for the APC USB Modbus
	  encapsulation](https://github.com/EchterAgo/libmodbus/commits/rtu_usb).
	  If a `libmodbus` without USB support is detected the driver will
	  build with just the serial and TCP/IP support.

2023-09-21  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut-names.txt: clarify that the tables of short SPEC names is
	  just a component in longer phase-aware naming scheme
	* docs/nut-names.txt: add a section to define and discuss Structured
	  naming
	* ci_build.sh: only impose GNU make as default if spellchecking via
	  script

2023-09-20  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: update dictionary for nut-website changes

2023-09-20  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: define MAKE=... fallback default in one place
	* ci_build.sh: --disable-spellcheck in many default BUILD_TYPE=...
	  scenarios geared towards binary builds and checks (do not waste
	  time on aspell in matrix checking loops) [#2065]
	* ci_build.sh: make sure our MAKE envvar is defined and not empty -
	  in all cases [networkupstools/jenkins-dynamatrix#24]

2023-09-19  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/usb-common.c: make sure to have settings like HAVE_LIBREGEX
	  visible when processing other headers [#1369]
	* drivers/usbhid-ups.c: fix visibility of vars used only in builds
	  with HAVE_LIBREGEX [#1369]
	* docs/developers.txt, docs/nut.dict: clarify that
	  NUT_UNUSED_VARIABLE goes after variable declarations, add chapter
	  headings, revise some text [#2056]
	* docs/Makefile.am: fix ChangeLog.adoc preparation for OpenBSD make
	  [#1953]
	* conf/Makefile.am, data/Makefile.am, docs/Makefile.am,
	  docs/man/Makefile.am: */Makefile.am: spellcheck targets:
	  differentiate SPELLCHECK_SRCDIR vs. SPELLCHECK_BUILDDIR [#2067]
	* docs/Makefile.am: EXTRA_DIST asciidoc-vars.conf [#1953]
	* Makefile.am: Introduce LICENSE-DCO into the source codebase [#1994]
	* configure.ac: configure: fix handling of --enable-cppcheck
	* NEWS.adoc, UPGRADING.adoc, configure.ac, docs/Makefile.am,
	  docs/configure.txt: configure.ac: introduce --enable-spellcheck to
	  have it as part of "make check" where available [#2067]
	* configure.ac, m4/nut_check_asciidoc.m4, m4/nut_check_aspell.m4:
	  externalize detection of aspell tool and ability
	* m4/nut_check_asciidoc.m4: consider a separate
	  ASPELL_FILTER_SHARE_PATH [#2065]
	* appveyor.yml: enable spellchecks [#2065]
	* m4/nut_check_asciidoc.m4: if there is no "tex.amf", do not yield a
	  useless ASPELL_FILTER_TEX_PATH (e.g. ".") [#2065]
	* docs/man/nut_usb_addvars.txt, docs/nut.dict:
	  docs/man/nut_usb_addvars.txt: clarify where "busport" can be
	  verified in the OS [#2043]
	* m4/nut_check_asciidoc.m4, docs/Makefile.am: cater to different ways
	  of packaging aspell with ASPELL_FILTER_TEX_PATH [#2065]

2023-09-18  Jim Klimov <jimklimov@gmail.com>

	* drivers/Makefile.am: Update Makefile.am  Steamline use of
	  LIBREGEX_CFLAGS via AM_CFLAGS, same as others.
	* tools/nut-scanner/nutscan-display.c: fix report for "same serial in
	  different devices"
	* tools/nut-scanner/nutscan-display.c: do not drop out after the
	  first (non-NULL) report, let all complaints be known
	* tools/nut-scanner/nutscan-display.c: report trailing blanks in
	  serial numbers
	* configure.ac: hush down some more clang "-Wextra" or "-Weverything"
	  warnings that we can not really address [#2055, #823]
	* docs/nut.dict: Update with words missing in some platform default
	  dictionaries
	* NEWS.adoc, drivers/ever-hid.c: drivers/ever-hid.c: fix
	  "powerfactor" without a namespace

2023-09-18  Jim Klimov <jimklimov+nut@gmail.com>

	* .gitignore: GitIgnore leftover conf1234.file patterns
	* m4/nut_check_asciidoc.m4, docs/Makefile.am: detect and use
	  ASPELL_FILTER_PATH where available  Thanks to
	  https://github.com/msys2/MSYS2-packages/issues/2088 for hints
	* drivers/nutdrv_qx.c, docs/man/nutdrv_qx.txt: list available
	  "protocol" setting values in command-line usage request (--help)
	  [#1369]
	* drivers/usbhid-ups.c, docs/man/usbhid-ups.txt: list available
	  "subdriver" setting values in command-line usage request (--help)
	  [#1369]
	* docs/man/nutdrv_qx.txt, docs/man/usbhid-ups.txt: update man page
	  notes about subdriver settings [#1369]
	* m4/nut_check_libregex.m4: avoid using cached reply for the absent
	  library name, when checking for -lregex
	* ci_build.sh: introduce initial clean-up shortcut (used if recipes
	  change)
	* .gitattributes: make sure docs/nut.dict is always LF (no CR)

2023-09-17  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/usbhid-ups.c: match_function_subdriver_name(): require (or
	  recommend) vendorid/productid [#1369]
	* drivers/usbhid-ups.c: match_function_subdriver_name(): report the
	  name of found USB HID subdriver [#1369]
	* drivers/usbhid-ups.c: match_function_subdriver_name(): automate use
	  of regex "somename.*" [#1369]
	* NEWS.adoc, docs/man/usbhid-ups.txt, drivers/usbhid-ups.c:
	  drivers/usbhid-ups.c: implement match_function_subdriver_name() for
	  "subdriver" matching option; update docs about it [#1369]
	* clients/Makefile.am: build clients against libcommonclient.la
	  (fewer link and run-time deps pulled), not libcommon.la
	* common/Makefile.am, common/common.c, drivers/usb-common.c,
	  include/common.h: common.{c,h}: move here general REGEX helper
	  methods from drivers/usb-common.{c,h} [#1369]
	* configure.ac, drivers/Makefile.am, m4/nut_check_libregex.m4,
	  m4/nut_check_libusb.m4: m4/nut_check_libregex.m4: move detection
	  from m4/nut_check_libusb.m4; adapt configure.ac and */Makefile.am
	  accordingly
	* NEWS.adoc, clients/cgilib.c, clients/upsclient.c, clients/upslog.c,
	  clients/upsmon.c, clients/upsset.c, common/common.c,
	  drivers/adelsystem_cbi.c, drivers/al175.c, drivers/bcmxcp.c,
	  drivers/bcmxcp_ser.c, drivers/bestuferrups.c, drivers/blazer_usb.c,
	  drivers/dstate.c, drivers/eaton-pdu-marlin-mib.c,
	  drivers/ever-hid.c, drivers/generic_modbus.c, drivers/hidparser.c,
	  drivers/hpe-pdu-mib.c, drivers/libusb0.c, drivers/mge-hid.c,
	  drivers/mge-utalk.c, drivers/mge-xml.c, drivers/netxml-ups.c,
	  drivers/nut-libfreeipmi.c, drivers/nutdrv_atcl_usb.c,
	  drivers/nutdrv_qx.c, drivers/nutdrv_qx_ablerex.c,
	  drivers/nutdrv_qx_bestups.c, drivers/nutdrv_qx_masterguard.c,
	  drivers/nutdrv_siemens_sitop.c, drivers/phoenixcontact_modbus.c,
	  drivers/pijuice.c, drivers/richcomm_usb.c, drivers/riello.c,
	  drivers/riello_ser.c, drivers/riello_usb.c, drivers/snmp-ups.c,
	  drivers/socomec_jbus.c, drivers/solis.c, drivers/tripplite.c,
	  drivers/tripplite_usb.c, drivers/tripplitesu.c,
	  drivers/upsdrvctl.c, drivers/upsdrvquery.c, server/netssl.c,
	  server/upsd.c, tests/getvaluetest.c, tests/nuttimetest.c,
	  tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-init.c, tools/nut-scanner/nutscan-ip.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c:
	  Fightwarn: numerous complaints from clang-15 [#823]  Surprised that
	  so many of these were not found sooner. Almost all fall into a few
	  simple categories: * method(void) declared without a "void" *
	  declarations after code ** NUT_UNUSED_VARIABLE() is code ** scoping
	  in switch() cases * a few smartly detected unused variables =>
	  added reasonable use-cases (logging or better)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: detect USB
	  drivers by "busport" among config options [#2043]
	* scripts/augeas/nutupsmonconf.aug.in: update for new notification
	  types [#2044 and before]

2023-09-16  Jim Klimov <jimklimov+nut@gmail.com>

	* conf/upsmon.conf.sample.in, docs/man/upsmon.conf.txt,
	  docs/man/upsmon.txt, docs/nut.dict: upsmon(.conf) docs and samples
	  - update for new notification types [#2044 and before]
	* NEWS.adoc: upsmon now handles OFF and BYPASS states [#2044]
	* clients/upsmon.c, clients/upsmon.h: clients/upsmon.{c,h}: enhance
	  with support of OFF and BYPASS state reporting (entry/exit) [#2044]
	* clients/upsmon.c, clients/upsmon.h: upsmon: add support for
	  administrative "OFF" state [#2044]  Based on patch by "Bomorav"
	  posted at
	  https://github.com/networkupstools/nut/issues/2044#issuecomment-1720752199
	* drivers/usbhid-ups.c: initialize BusPort where used [#2043]
	* drivers/libshut.h: update with formal support of "busport" (no-op
	  for serial mode) [#2043]
	* tools/nut-scanner/scan_usb.c: add support for "busport" discovery
	  where possible [#2043]
	* drivers/blazer_usb.c, drivers/libshut.c, drivers/libusb0.c,
	  drivers/libusb1.c, drivers/nutdrv_qx.c, drivers/riello_usb.c,
	  drivers/tripplite_usb.c, drivers/usb-common.c,
	  drivers/usb-common.h, drivers/usbhid-ups.c: USB driver: adjust to
	  WITH_USB_BUSPORT normally being always defined, just not always
	  active [#2043]
	* m4/nut_check_libusb.m4: detect if we can support "busport" USB
	  matching value [#2043]
	* docs/man/nut_usb_addvars.txt: fix markup for a NOTE about "device"
	  value
	* docs/man/nut_usb_addvars.txt: add "busport" info [#2043]
	* docs/man/nut_usb_addvars.txt: fix typo about Linux path to usb
	  device info
	* NEWS.adoc, docs/nut.dict: NEWS.adoc: document the addition of
	  "busport" config option [#2043]
	* drivers/libusb0.c: use logging for bus port consistent with other
	  USB-related libs [#2043]
	* drivers/libshut.c: avoid potential small memory leak
	* drivers/libshut.c: update with formal support of "busport" (no-op
	  for serial mode) [#2043]
	* drivers/usb-common.c: constrain regex_matcher_data_t array size to
	  USBMATCHER_REGEXP_ARRAY_LIMIT too (not a hardcoded number like
	  before) [#2043]
	* drivers/blazer_usb.c, drivers/libusb0.c, drivers/libusb1.c,
	  drivers/nutdrv_qx.c, drivers/riello_usb.c, drivers/tripplite_usb.c,
	  drivers/usbhid-ups.c: USB drivers: bump versions due to new
	  "busport" config option support; free the variables in order of
	  definition (ease maintenance) [#2043]
	* drivers/blazer_usb.c, drivers/nutdrv_qx.c, drivers/riello_usb.c,
	  drivers/usbhid-ups.c: USB drivers: warn if "busport" is configured
	  but will be ignored by current build [#2043]
	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{0,1}.c: allow
	  configuring "busport" in ups.conf always, just note it may be
	  ignored in certain builds [#2043]
	* drivers/libusb1.c: allow configuring "busport" always, just note it
	  may be ignored in certain builds [#2043]
	* drivers/libusb0.c: log a notice that BusPort==0 for libusb0 [#2043]
	* drivers/blazer_usb.c, drivers/libusb1.c, drivers/nutdrv_qx.c:
	  Revise "ifdef" indentations
	* drivers/blazer_usb.c, drivers/nutdrv_qx.c, drivers/riello_usb.c,
	  drivers/tripplite_usb.c, drivers/usb-common.c,
	  drivers/usb-common.h, drivers/usbhid-ups.c: Rename
	  REGEXP_ARRAY_LIMIT=>USBMATCHER_REGEXP_ARRAY_LIMIT [#2043]
	* common/common.c: extend xstrdup() definition to return NULL if
	  input was NULL (and log it) [#2052]
	* common/common.c: Revert "common/common.c: extend xbasename(),
	  xstrdup() and xrealloc() definition to return NULL if input was
	  NULL (and log it) [#2052]"  This reverts commit
	  05610d1564c9ea75d7e10780e2c0f8973e5795ab. Seems to cause segfaults
	  on its own, maybe something relied on older behavior (non-NULLs
	  returned in case of bad inputs?) To investigate separately later...

2023-09-15  fa <wavebvg@gmail.com>

	* drivers/blazer_usb.c, drivers/libusb0.c, drivers/libusb1.c,
	  drivers/nutdrv_qx.c, drivers/riello_usb.c, drivers/tripplite_usb.c,
	  drivers/usb-common.c, drivers/usb-common.h, drivers/usbhid-ups.c:
	  Update blazer_usb.c, libusb0.c, and 7 more files...

2023-09-14  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsclient.c: upscli_splitname(): add explicit checks for
	  empty upsname and/or hostname[:port] parts, to report problems as
	  such [#2052]
	* NEWS.adoc: update for issue #2052 fix
	* clients/upsclient.c: fix strdup()=>xstrdup() to not segfault with
	  bad inputs [#2052]
	* common/common.c: extend xbasename(), xstrdup() and xrealloc()
	  definition to return NULL if input was NULL (and log it) [#2052]
	* docs/developers.txt: update links for SVN to Git migrations  Thanks
	  for Tomas Laurinavicius <tomas@saas.group> for the suggestion.

2023-09-13  Jim Klimov <jimklimov@gmail.com>

	* UPGRADING.adoc: Update UPGRADING.adoc

2023-09-13  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am, docs/Makefile.am: ensure clean-up of (now-)generated
	  README file
	* UPGRADING.adoc: highlight changes to documentation source and
	  delivered filenames [#1953]
	* README.adoc: Update NUT documentation sources with current
	  docs/asciidoc-vars.conf: 7c5e90132 (2023-09-13)
	* docs/asciidoc-vars.conf: fence against re-definitions of
	  website-url and (top_)(src|build)dir attributes
	* docs/asciidoc-vars.conf: fence against duplicate includes
	* README.adoc: Update NUT documentation sources with current
	  docs/asciidoc-vars.conf: 36f4f0334 (2023-09-13)
	* docs/asciidoc-vars.conf: update maintenance and reasoning comments
	* README.adoc: fix xref values for user-manual generation
	* .gitignore: GitIgnore /.vscode
	* configure.ac: revert AM_INIT_AUTOMAKE foreign option (may disable
	  "portability checks" per GNU docs)
	* README.adoc, docs/Makefile.am, docs/asciidoc-vars.conf,
	  docs/nut.dict: docs/nut.dict: update for new
	  docs/asciidoc-vars.conf contents
	* README.adoc: Update NUT documentation sources with current
	  docs/asciidoc-vars.conf: 234b70422 (2023-09-13)
	* README.adoc, docs/asciidoc-vars.conf: docs/asciidoc-vars.conf:
	  finish the file with newline
	* docs/asciidoc-vars.conf: refer to make maintainer-asciidocs
	* README.adoc: mangle with "make maintainer-asciidocs"
	* .gitignore, Makefile.am, docs/.gitignore: Makefile.am: introduce
	  "make maintainer-asciidocs" recipe
	* docs/asciidoc-vars.conf: prepare for GH_MARKUP_1095 workarounds
	* README.adoc: prepare for GH_MARKUP_1095 workarounds
	* docs/asciidoc-vars.conf: Revert "docs/asciidoc-vars.conf: define
	  our attributes in a different syntactic fashion"  This reverts
	  commit 300942904bef0921bba382103c9c4b96cc1c5f04.
	* docs/asciidoc-vars.conf: Revert "docs/asciidoc-vars.conf: add a
	  debug NOTE"  This reverts commit
	  07a39b950b40857c8d8e5c806551e1c40278d3bb.
	* README.adoc: refer to top_srcdir first, it WILL be defined after
	  the include
	* docs/asciidoc-vars.conf: add a debug NOTE
	* docs/asciidoc-vars.conf: define our attributes in a different
	  syntactic fashion
	* README.adoc: avoid a blank line between document header and
	  include::docs/asciidoc-vars.conf
	* docs/asciidoc-vars.conf: reshuffle and make it a single block of
	  markup as far as asciidoc is concerned
	* README.adoc: move renderer-dependent attribute definitions into
	  includable docs/asciidoc-vars.conf
	* docs/asciidoc-vars.conf: add an includable asciidoc file with
	  renderer-dependent attribute definitions
	* docs/ChangeLog.txt, docs/Makefile.am, docs/man/Makefile.am,
	  docs/man/index.txt, docs/man/nutupsdrv.txt, docs/man/upsd.txt,
	  docs/release-notes.txt, docs/user-manual.txt: docs: in asciidoc
	  markup (and relevant Makefile rules) require that the trailing
	  slash is part of `(top_)srcdir` and `(top_)builddir` attributes, so
	  empty values are non-toxic
	* Makefile.am: separate EXTRA_DIST for *.adoc and other filename
	  patterns [#1953]
	* docs/history.txt: add "Backwards and Forwards Compatibility"
	  chapter evicted from README.adoc

2023-09-12  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: add (Eaton) IPM
	* docs/Makefile.am: adjust for BSD make implementation
	* .gitignore: GitIgnore *.adoc*.tmp leftovers, if present [#1953]
	  Probably meaning a broken build, though...
	* .gitignore: GitIgnore old NEWS file by name [#1953]
	* NEWS.adoc, UPGRADING.adoc, docs/Makefile.am,
	  docs/release-notes.txt: docs/release-notes.txt: include UPGRADING
	  as a chapter - it is also release-related info [#1953]

2023-09-11  Jim Klimov <jimklimov@gmail.com>

	* NEWS.adoc: change asciidoc link tag
	* docs/nut.dict: Update nut.dict

2023-09-11  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS.adoc: revise asciidoc markup for old-release entries [#1953]
	* NEWS.adoc: highlight documentation/recipe changes per #1953
	* docs/Makefile.am: specify "builddir" path to generated docinfo.xml,
	  and just ship a copy [follow-up from #2046 and probably before]
	* docs/Makefile.am: do not refer to generatable "../*.adoc-parsed"
	  files via hardcoded ".."
	* .gitignore, NEWS.adoc, docs/ChangeLog.txt, docs/Makefile.am,
	  docs/documentation.txt, docs/release-notes.txt,
	  docs/user-manual.txt: Introduce buildable (HTML/PDF) release-notes
	  and ChangeLog documents [#1953]
	* .gitignore, Makefile.am, NEWS.adoc, docs/Makefile.am,
	  docs/user-manual.txt: Use *.adoc-parsed extension for
	  post-processed asciidoc files used in rendering to HTML/PDF
	  artifacts [#1953]
	* Makefile.am, NEWS => NEWS.adoc, autogen.sh, docs/Makefile.am:
	  Convert NEWS => NEWS.adoc (basic section structure) and render it
	  as release-notes (HTML, PDF) [#1953]
	* docs/Makefile.am: implement DOCBUILD_FILTER_GITHUB_LINKS [#1953]
	* .editorconfig, .gitignore, INSTALL.nut => INSTALL.nut.adoc,
	  Makefile.am, TODO => TODO.adoc, UPGRADING => UPGRADING.adoc,
	  docs/Makefile.am, docs/developer-guide.txt, docs/nut.dict,
	  docs/security.txt, docs/user-manual.txt, lib/.gitignore,
	  lib/Makefile.am, lib/{README => README.adoc}, scripts/Makefile.am,
	  scripts/augeas/.gitignore, scripts/augeas/Makefile.am,
	  scripts/augeas/{README => README.adoc}, scripts/ufw/.gitignore,
	  scripts/ufw/Makefile.am, scripts/ufw/{README => README.adoc},
	  tools/nut-scanner/.gitignore, tools/nut-scanner/Makefile.am,
	  tools/nut-scanner/{README => README.adoc}: Rename asciidoc-ready
	  documentation sources to *.adoc [#1953 et al]  Follows up from
	  #226, #669 and facilitates #1953
	* UPGRADING: suggest --enable-option-checking=fatal for packagers
	* docs/docinfo.xml.in: populate remaining "refremark" fields up to
	  (prospective) NUT v2.8.1 release [#2046]
	* docs/docinfo.xml.in, docs/docinfo.xml.sh: Revert
	  "docs/docinfo.xml.sh: reference the NEWS file (GitHub URL for
	  interactive PDFs) [#2046]"  This reverts commit
	  fa8721d98ee3031daed234d50643074e65a9c3a1 and changes for
	  docinfo.xml.in applying it.  Referencing the NEWS files for each
	  release proved problematic: the revremark tag does not expect
	  nested tags (like <a href> or even <p>).
	* docs/docinfo.xml.in: populate "refremark" fields [#2046]
	* docs/docinfo.xml.sh: reference the NEWS file (GitHub URL for
	  interactive PDFs) [#2046]

2023-09-10  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/docinfo.xml.in: update to list releases 2.6.1-2.8.0 missed
	  before [#2046]  First use of docinfo.xml.sh - looks decent
	* docs/.gitignore, docs/Makefile.am, docs/docinfo.xml.in,
	  docs/docinfo.xml.sh, docs/maintainer-guide.txt: Introduce
	  docs/docinfo.xml.sh to help maintain docinfo.xml.in (currently
	  limited to ensuring presence of existing tags) [#2046]
	* tools/gitlog2changelog.py.in: bump (C)
	* configure.ac, docs/docinfo.xml.in: use current NUT_SOURCE_GITREV
	  for doc revision history if available
	* configure.ac: update comments
	* docs/docinfo.xml.in: update "current version (snapshot)" comment
	* docs/developer-guide.txt: update author list
	* docs/maintainer-guide.txt: update release procedure
	* docs/developers.txt, docs/nut.dict: docs/developers.txt: fix
	  section-level warning, and add AppVeyor CI and CircleCI sections
	* docs/new-drivers.txt: cosmetix fix (indent)
	* docs/hid-subdrivers.txt, docs/nut.dict: docs/hid-subdrivers.txt:
	  add a "screenshot" of rexx usage

2023-09-07  Jim Klimov <jim@jimklimov.com>

	* drivers/cyberpower-mib.c: Update cyberpower-mib.c  Bump version
	  after #2041

2023-09-06  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/cyberpower-mib.c: restore upsAdvanceControlUpsSleep as
	  "shutdown.return" [follow-up from #2029]

2023-09-05  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c: comment why we do not solve VAR_SENSITIVE for
	  override/default right now [#1891]
	* NEWS: formatting fix
	* drivers/snmp-ups.c, NEWS: clearer messages for skipped mib2nut
	  mappings  New message example: 0.001836     [D2] load_mib2nut: skip
	  the "tripplite" entry from the mapping table which is not "ietf"
	  (and which in turn is not "auto")
	* drivers/snmp-ups.c: add a TODO for multi-MIB approach [#2036]
	* drivers/blazer.c: fix typo in comment

2023-09-04  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx.c: dial back down the batt.volt.high
	  guesstimation to 130/120 of the nominal (back from experimental
	  150/120) [#1652]

2023-09-02  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/blazer_ser.c, drivers/blazer_usb.c, drivers/nutdrv_qx.c:
	  drivers/blazer_{ser,usb}.c, drivers/nutdrv_qx.c: re-bump driver
	  versions since master versions moved while the PR #1652 was queued

2023-09-01  Jim Klimov <jimklimov+nut@gmail.com>

	* data/driver.list.in: Add APC SmartUPS 750 (SMT750I) reports [#1261]

2023-08-31  Jim Klimov <jimklimov+nut@gmail.com>

	* data/driver.list.in: Add APC SmartUPS X 750 (USB) reports [#1261]
	* data/driver.list.in: Add APC SmartUPS SUA1000 (SNMP) reports
	  [#1740]
	* data/driver.list.in: Add UltraMax 1000SC reports
	  [networkupstools/nut#1634]
	* data/driver.list.in: Update PowerCool 1200 report nuances [#1539]
	* data/driver.list.in: Add UPSonic IRT-3K 2U [#441]
	* data/driver.list.in: Add Ippon Smart Power Pro II 1200/1600/...
	  series [#701]

2023-08-30  Ross Williams <ross@ross-williams.net>

	* drivers/cyberpower-mib.c: Revert "cyberpower-mib: fix instant
	  command declarations"  This reverts commit
	  8bcf255b624e6ba6c89a2a3eeab37658d9cb8cb4.  Cyberpower `snmp_info_t`
	  got updated to conform with pre 5d97d07 instant commands layout,
	  but got merged after it. Reverting 8bcf255 so that command values
	  are correctly in `su_info_t->dfl`.

2023-08-30  Jim Klimov <jimklimov@gmail.com>

	* NEWS: fix for cyberpower-mib instcmd definitions [#2029]

2023-08-30  Jim Klimov <jimklimov+nut@gmail.com>

	* data/driver.list.in: Update Riello SNMP HCL names (no vendor in
	  model name usually)
	* data/driver.list.in: Update Riello SER/USB/SNMP HCL per vendor
	  report [#1878]
	* data/driver.list.in: Add FSP Fortron UPS Champ 1000VA, 2000VA and
	  3000VA Towers [networkupstools/nut-ddl#22,
	  networkupstools/nut#1691, networkupstools/nut#1741,
	  networkupstools/nut#1872]  Closes: #1691 Closes: #1741 Closes:
	  #1872
	* data/driver.list.in: Add APC Smart-UPS 3000
	  [networkupstools/nut-ddl#24]

2023-08-25  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/libshut.c: libshut_open(): calculate
	  desc->wDescriptorLength differently (closer to what libusbX.c do
	  and NUT v2.7.4 did); bump driver version [#2022]
	* drivers/libshut.c: libshut_open(): populate curDevice->Device to be
	  on par with USB drivers (remember a copy of arg_device_path here)
	* drivers/libshut.c: libshut_open(): be sure that arg_device_path is
	  not null
	* NEWS: fix for MGE SHUT broken by changes in 2.8.0 [#2022]
	* drivers/usbhid-ups.c: upsdrv_initups(): only report "Initializing
	  an USB-connected UPS with library..." when not in SHUT_MODE [#2022]
	* drivers/libhid.c: HIDGetEvents(): be sure to not overflow
	  sizeof(buf)
	* drivers/hidparser.h, drivers/libhid.c, drivers/libhid.h,
	  drivers/mge-hid.c, drivers/usbhid-ups.c: Reword "#if(n)def
	  SHUT_MODE" clauses, comment their "#else/#endif" parts [#2022]
	* drivers/hidparser.c, drivers/mge-hid.c, drivers/usbhid-ups.c: A few
	  cosmetic fixes (typos, indents...)

2023-08-17  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nutdrv_qx-subdrivers.txt, docs/nut.dict: fix some typos and
	  update the dictionary [#2005]

2023-08-14  Jim Klimov <jimklimov+nut@gmail.com>

	* server/upsd.c: setuptcp(): when informing about possible IPv6/IPv4
	  "ANY" address listener conflict, consult actual state in
	  "canhaveAnyV6" and not the possibility via "serverAnyV6!=null"
	  [#2013]
	* server/upsd.c: setuptcp(): update big comment about "LISTEN *"
	  nuances to match current logic; drop GitHub reference [#2013 review
	  for #2012]
	* configure.ac: explicitly check for inet_ntop() support along with
	  both AF_INET and AF_INET6 (we have IPv4 and IPv6 capability
	  everywhere, right?) [#2012]
	* NEWS, UPGRADING: finish full sentences with a period [#2012]
	* server/upsd.c: setuptcp(): drop the trickery to get IPv4 first just
	  to see if we can, then release it, then get IPv6 and then IPv4
	  again [#2013 review for #2012]
	* server/upsd.c: setuptcp(): drop commented-away optional sleep()
	  [#2012]
	* server/upsd.c: simplify `LISTEN *` handling to not fiddle with
	  optionality of `require_IPV6_V6ONLY` for one use-case [#2013
	  review, #2012]

2023-08-13  Tomasz Fortuna <bla@thera.be>

	* NEWS, docs/nut.dict, docs/nutdrv_qx-subdrivers.txt:
	  drivers/nutdrv_qx.c: Add documentation file.  Document various
	  possible transmissions. Might be required to construct testcases
	  one day - adding new UPS shouldn't cause regressions in older ones.

2023-08-13  Jim Klimov <jimklimov@gmail.com>

	* NEWS: cyberpower-mib.c supports more data points now [#1982]
	* drivers/cyberpower-mib.c: bump version for new entries

2023-08-13  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS, UPGRADING, conf/upsd.conf.sample, docs/config-notes.txt,
	  docs/man/upsd.conf.txt, docs/security.txt,
	  scripts/augeas/nutupsdconf.aug.in: Revise doc changes about LISTEN
	  * support per PR #2013 discussion  Notably: * move from "would" to
	  "will" verbiage; * specify IPv6 listening first, IPv4 next, as it
	  goes in code; * lean towards trying to listen on two sockets
	  separately always (unless the OS refuses to avoid IPv4-mapped IPv6
	  addressing).

2023-08-12  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS, drivers/apcsmart-old.c, drivers/apcsmart.c:
	  drivers/apcsmart(-old).c: do not abort on bad caps, skip them like
	  before [#2015]  Closes: #2015

2023-08-08  Tomasz bla Fortuna <bla@thera.be>

	* drivers/nutdrv_qx.c: Support a quirk in Vultech V2000 UPS.  This
	  UPS seems to use null bytes within status bits. This might mean
	  "unsupported". We will treat them as zeroes.

2023-08-06  Craig Holyoak <craig@helmsdeep.org>

	* drivers/cyberpower-mib.c: Moved additional ups.status to ups.alarm

2023-08-05  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS, UPGRADING, conf/upsd.conf.sample, docs/config-notes.txt,
	  docs/man/upsd.conf.txt, docs/security.txt,
	  scripts/augeas/nutupsdconf.aug.in, server/upsd.c: server/upsd.c and
	  docs/config examples: handle "LISTEN *" deterministically (for both
	  IPv4 and IPv6 if we can) [#2012]
	* server/upsd.c, NEWS, UPGRADING: setuptcp(): when asked to LISTEN on
	  IPv6 addresses, try to disable IPv4-mapping support [#2012]
	* server/upsd.c: refactor server_free() with a new stype_free()
	  [#2012]
	* server/upsd.c: setuptcp(): warn if we bound to one address for a
	  name and end the loop while there seem to be more resolved
	  addresses for it [#2012]
	* server/upsd.c: server_load(): log if defaulting to localhost
	  (IPv4/IPv6) due to lack of LISTEN directive [#2012]
	* NEWS: typo fix
	* server/upsd.c, NEWS, UPGRADING: listen_add(): firstaddr should
	  remain first [#2012]
	* drivers/nutdrv_qx.c: convert to ARMAC_READ_SIZE as a macro

2023-08-04  Jim Klimov <jimklimov+nut@gmail.com>

	* common/state.c: in state_delinfo_olderthan() do upsdebugx(6,...)
	  that we are deleting an entry because it is too old [#2007]
	* common/state.c: update comment for st_tree_node_compare_timestamp()
	  [#2007]
	* drivers/apcupsd-ups.c: fix use of INVALID_FD_SOCK() macro over
	  complex expression [#2007]
	* docs/Makefile.am: spellcheck LICENSE-DCO file [#1995 follow-up]
	* NEWS: move apcupsd fixes mis-placed into 2.8.0 notes block [#2007]
	* NEWS: announce support for state entry timestamping [#2010]
	* tests/.gitignore, tests/Makefile.am, tests/nuttimetest.c: Introduce
	  nuttimetest (sanity-check difftime*() methods, etc.) [#2007, #1777]
	* configure.ac: fix broken test for clock_gettime(CLOCK_MONOTONIC,ts)
	  [#1777 follow-up]
	* common/common.c: fix build scope for calls to timespec_load() and
	  use of got_monoclock in upsnotify() [#1777 follow-up]
	* drivers/nutdrv_qx.c: cast signed/unsigned int comparison

2023-08-03  Jim Klimov <jimklimov@gmail.com>

	* drivers/nutdrv_qx.c: Update drivers/nutdrv_qx.c  Fix debug printout

2023-08-03  Jim Klimov <jimklimov+nut@gmail.com>

	* common/state.c: initialize "lastset" in "state_setinfo()" when
	  adding a new value
	* NEWS: use dstate_delinfo_olderthan() to clean up obsoleted readings
	  AFTER refreshing data from apcupsd daemon [#2007]
	* drivers/apcupsd-ups.c: use dstate_delinfo_olderthan() to clean up
	  obsoleted readings AFTER refreshing data from apcupsd daemon
	  [#2007]
	* drivers/dstate.c, drivers/dstate.h: drivers/dstate.{c,h}: introduce
	  dstate_delinfo_olderthan()
	* drivers/apcupsd-ups.c: refactor getdata() return code paths [#2007]
	* common/state.c, include/state.h: introduce
	  state_delinfo_olderthan()
	* common/state.c, include/state.h: introduce st_tree_timespec_t and
	  state_get_timestamp() and st_tree_node_compare_timestamp() to track
	  age of state entries
	* common/common.c, include/common.h: introduce difftimespec() for
	  completeness
	* common/common.c: clarify "nsec" as "numsec" (not "nanosec") in
	  difftimeval()
	* NEWS: fix check for POLL_INTERVAL_MIN [#2007, #797 fallout]
	* NEWS: fix markup for "new devices" in 2.7.4
	* drivers/apcupsd-ups.c: fix check for POLL_INTERVAL_MIN [#2007, #797
	  fallout]
	* tools/nut-ddl-dump.sh: suggest posting the file to nut-ddl repo
	* tools/nut-ddl-dump.sh: update generated markup

2023-08-02  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-ddl-dump.sh: generate the report with use of
	  DEVICE:COMMENT: and DEVICE:COMMENT-BLOCK:FIXME:(UPSRW|UPSCMD):
	  sections (and place them after upsc dump)  Related-to:
	  https://github.com/networkupstools/nut-ddl/issues/32
	* tools/nut-ddl-dump.sh: update scripting style (quotes, comments,
	  etc)

2023-07-31  Tomasz Fortuna <bla@thera.be>

	* NEWS, data/driver.list.in, drivers/nutdrv_qx.c:
	  drivers/nutdrv_qx.c: improve Armac subdriver  Based on a debug
	  output from a newer device (*/PF1) we've improved understanding on
	  how: - those devices encode the length of a chunk of data. - how
	  the end of transmission can be marked / detected.  Changed: - Empty
	  buffer before sending command to clear any residual data. - Detect
	  end of message by end of line character \r (0x0d). - Refactor "6"
	  into a READ_SIZE constant. - Limit bytes_available nibble to
	  available READ_SIZE.

2023-07-31  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS, drivers/cyberpower-mib.c, drivers/cyberpower-mib.h,
	  drivers/snmp-ups.c: drivers/cyberpower-mib.c, NEWS: extend support
	  to devices which report the shorter Vendor OID as their sysOID
	  [#1997]  Closes: #1997

2023-07-30  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/features.txt: update notes about networked devices and about
	  Windows builds
	* docs/user-manual.txt, docs/features.txt: bump manufacturer count
	* docs/nut.dict: nut.dict: bump for nut-website changes
	* docs/nut.dict: nut.dict: bump for nut-website changes
	* docs/nut.dict: nut.dict: bump for nut-website changes

2023-07-30  Jim Klimov <jim@jimklimov.com>

	* COPYING: Update COPYING about LICENSE-DCO file  Follow-up to #1995

2023-07-18  Jim Klimov <jimklimov+nut@gmail.com>

	* .github/pull_request_template.md, docs/developers.txt,
	  docs/nut.dict: docs/developers.txt: add a chapter on DCO
	  (Signed-Off-By) [#1994]
	* LICENSE-DCO: Introduce LICENSE-DCO into the source codebase [#1994]

2023-07-09  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: try to ensure that stageName matches the
	  dsbc contents [networkupstools/jenkins-dynamatrix#15]

2023-07-07  Craig Holyoak <cholyoak@redlands.qld.edu.au>

	* drivers/cyberpower-mib.c: Added more variables from the CyberPower
	  MIB

2023-07-03  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/security.txt: fix ASCIIDOC markup [#1976]
	* docs/download.txt: chunked-HTML chapter for "security.txt" moved
	  due to daisychain years ago
	* scripts/python/Makefile.am: no need to (re)define Makefile variable
	  MSGFMT - already handled by autotools [#1977]

2023-07-02  Jim Klimov <jimklimov@gmail.com>

	* scripts/python/Makefile.am: refactor gettext translations to grep
	  up source (text) file instead the output
	* scripts/python/Makefile.am: refactor gettext translations
	* scripts/python/Makefile.am: avoid POT-Creation-Date in gettext
	  translations

2023-07-02  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/Makefile.am: be sure target dirs for MSGFMT exist -
	  regardless of ABS paths
	* scripts/python/Makefile.am: be sure target dirs for MSGFMT exist
	* docs/config-prereqs.txt: be sure to use pip3 for python3 examples
	* scripts/python/Makefile.am: fix msgfmt call syntax for non-GNU
	  makes

2023-07-01  Jim Klimov <jimklimov+nut@gmail.com>

	* .../python/app/locale/fr/LC_MESSAGES/NUT-Monitor.mo,
	  scripts/python/app/locale/fr/fr.po: scripts/python/app/locale/fr/*:
	  set custom Project-Id-Version same as in other translations
	* .../python/app/locale/fr/LC_MESSAGES/NUT-Monitor.mo,
	  .../python/app/locale/it/LC_MESSAGES/NUT-Monitor.mo,
	  .../python/app/locale/ru/LC_MESSAGES/NUT-Monitor.mo:
	  scripts/python/app/locale/*/LC_MESSAGES/NUT-Monitor.mo: update
	  binary translation files
	* configure.ac, docs/config-prereqs.txt, docs/nut.dict,
	  scripts/python/Makefile.am: scripts/python/Makefile.am,
	  configure.ac, docs/config-prereqs.txt: use gettext msgfmt to
	  compile binary translation files

2023-06-30  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/security.txt, docs/nut.dict: add a chapter on checksum file
	  verification [#1963]
	* docs/security.txt: add maintainer notes on updating nut-key.gpg
	  [#1963]
	* docs/security.txt, docs/nut.dict: update "verifySourceSig" chapter
	  with new GPG key set for "Jim Klimov ..." DE0184DA7043DCF7 [#1963]
	* docs/security.txt: clarify that GPG tool output varied over eons
	* AUTHORS, NEWS, README, data/html/header.html.in,
	  data/html/index.html, docs/FAQ.txt, docs/asciidoc.conf,
	  docs/documentation.txt, docs/download.txt, docs/features.txt,
	  docs/hid-subdrivers.txt, docs/history.txt,
	  docs/man/adelsystem_cbi.txt, docs/man/al175.txt,
	  docs/man/apcsmart-old.txt, docs/man/apcsmart.txt,
	  docs/man/apcupsd-ups.txt, docs/man/asem.txt, docs/man/bcmxcp.txt,
	  docs/man/bcmxcp_usb.txt, docs/man/belkin.txt,
	  docs/man/belkinunv.txt, docs/man/bestfcom.txt,
	  docs/man/bestfortress.txt, docs/man/bestuferrups.txt,
	  docs/man/bestups.txt, docs/man/blazer-common.txt,
	  docs/man/clone.txt, docs/man/dummy-ups.txt, docs/man/etapro.txt,
	  docs/man/everups.txt, docs/man/gamatronic.txt,
	  docs/man/generic_gpio.txt, docs/man/generic_modbus.txt,
	  docs/man/genericups.txt, docs/man/hosts.conf.txt,
	  docs/man/huawei-ups2000.txt, docs/man/isbmex.txt,
	  docs/man/ivtscd.txt, docs/man/libupsclient-config.txt,
	  docs/man/liebert-esp2.txt, docs/man/liebert.txt,
	  docs/man/macosx-ups.txt, docs/man/masterguard.txt,
	  docs/man/metasys.txt, docs/man/mge-shut.txt,
	  docs/man/mge-utalk.txt, docs/man/microdowell.txt,
	  docs/man/microsol-apc.txt, docs/man/netxml-ups.txt,
	  docs/man/nut-driver-enumerator.txt, docs/man/nut-ipmipsu.txt,
	  docs/man/nut-recorder.txt, docs/man/nut-scanner.txt,
	  docs/man/nut.conf.txt, docs/man/nutdrv_atcl_usb.txt,
	  docs/man/nutdrv_qx.txt, docs/man/nutdrv_siemens_sitop.txt,
	  docs/man/nutupsdrv.txt, docs/man/oneac.txt, docs/man/optiups.txt,
	  docs/man/phoenixcontact_modbus.txt, docs/man/pijuice.txt,
	  docs/man/powercom.txt, docs/man/powerman-pdu.txt,
	  docs/man/powerpanel.txt, docs/man/rhino.txt,
	  docs/man/richcomm_usb.txt, docs/man/riello_ser.txt,
	  docs/man/riello_usb.txt, docs/man/safenet.txt, docs/man/skel.txt,
	  docs/man/snmp-ups.txt, docs/man/sockdebug.txt,
	  docs/man/socomec_jbus.txt, docs/man/solis.txt,
	  docs/man/tripplite.txt, docs/man/tripplite_usb.txt,
	  docs/man/tripplitesu.txt, docs/man/ups.conf.txt, docs/man/upsc.txt,
	  docs/man/upscmd.txt, docs/man/upscode2.txt, docs/man/upsd.conf.txt,
	  docs/man/upsd.txt, docs/man/upsd.users.txt, docs/man/upsdrvctl.txt,
	  docs/man/upsdrvsvcctl.txt, docs/man/upsimage.cgi.txt,
	  docs/man/upslog.txt, docs/man/upsmon.conf.txt, docs/man/upsmon.txt,
	  docs/man/upsrw.txt, docs/man/upssched.conf.txt,
	  docs/man/upssched.txt, docs/man/upsset.cgi.txt,
	  docs/man/upsset.conf.txt, docs/man/upsstats.cgi.txt,
	  docs/man/upsstats.html.txt, docs/man/usbhid-ups.txt,
	  docs/man/victronups.txt, docs/new-clients.txt, docs/nut-names.txt,
	  docs/security.txt, docs/snmp.txt, docs/support.txt,
	  docs/user-manual.txt, drivers/apcsmart.c, drivers/blazer.c,
	  drivers/blazer.h, drivers/blazer_ser.c, drivers/blazer_usb.c,
	  drivers/delta_ups-mib.c, drivers/eaton-pdu-marlin-mib.c,
	  drivers/hpe-pdu-mib.c, drivers/libhid.c, drivers/libusb0.c,
	  drivers/libusb1.c, drivers/nut_libusb.h, drivers/optiups.c,
	  drivers/riello.c, drivers/riello.h, drivers/riello_ser.c,
	  drivers/riello_usb.c, indent.sh, scripts/Aix/nut-aix.spec.in,
	  scripts/Solaris/pkginfo.in, scripts/Windows/build-mingw-nut.sh,
	  scripts/perl/Nut.pm, scripts/python/app/locale/NUT-Monitor.pot,
	  .../app/locale/fr/LC_MESSAGES/NUT-Monitor.mo,
	  scripts/python/app/locale/fr/fr.po,
	  .../app/locale/it/LC_MESSAGES/NUT-Monitor.mo,
	  scripts/python/app/locale/it/it.po,
	  .../app/locale/ru/LC_MESSAGES/NUT-Monitor.mo,
	  scripts/python/app/locale/ru/ru.po,
	  scripts/python/app/ui/aboutdialog1.ui,
	  scripts/python/app/ui/gui-1.3.glade,
	  scripts/python/app/ui/gui-1.3.glade.h, server/netget.c,
	  server/netmisc.c, tools/nut-ddl-dump.sh, tools/nut-usbinfo.pl:
	  Wholesale update of website URL to
	  "https://www.networkupstools.org"
	* drivers/generic_gpio_common.h, drivers/generic_gpio_libgpiod.h:
	  drivers/generic_gpio*.h: style (whitespace) fixes
	* drivers/apcsmart.c, drivers/apcsmart.h,
	  drivers/generic_gpio_libgpiod.c, drivers/generic_gpio_libgpiod.h:
	  drivers/generic_gpio_libgpiod.{c,h}, drivers/apcsmart.{c,h}: move
	  DRIVER_NAME and DRIVER_VERSION from header to C source file as in
	  other drivers
	* drivers/adelsystem_cbi.c, drivers/al175.c, drivers/apcsmart-old.c,
	  drivers/apcsmart.h, drivers/apcupsd-ups.c, drivers/asem.c,
	  drivers/bcmxcp.c, drivers/bcmxcp_ser.c, drivers/belkin.c,
	  drivers/belkinunv.c, drivers/bestfcom.c, drivers/bestfortress.c,
	  drivers/bestuferrups.c, drivers/bestups.c, drivers/blazer_ser.c,
	  drivers/blazer_usb.c, drivers/clone-outlet.c, drivers/clone.c,
	  drivers/dummy-ups.c, drivers/etapro.c, drivers/everups.c,
	  drivers/gamatronic.c, drivers/generic_gpio_libgpiod.h,
	  drivers/generic_modbus.c, drivers/genericups.c,
	  drivers/huawei-ups2000.c, drivers/isbmex.c, drivers/ivtscd.c,
	  drivers/liebert-esp2.c, drivers/liebert.c, drivers/macosx-ups.c,
	  drivers/masterguard.c, drivers/metasys.c, drivers/mge-utalk.c,
	  drivers/microdowell.c, drivers/microsol-apc.c,
	  drivers/netxml-ups.c, drivers/nut-ipmipsu.c,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_qx.c,
	  drivers/nutdrv_siemens_sitop.c, drivers/oneac.c, drivers/optiups.c,
	  drivers/phoenixcontact_modbus.c, drivers/pijuice.c,
	  drivers/powercom.c, drivers/powerman-pdu.c, drivers/powerpanel.c,
	  drivers/rhino.c, drivers/richcomm_usb.c, drivers/riello_ser.c,
	  drivers/riello_usb.c, drivers/safenet.c, drivers/skel.c,
	  drivers/snmp-ups.c, drivers/socomec_jbus.c, drivers/solis.c,
	  drivers/tripplite.c, drivers/tripplite_usb.c,
	  drivers/tripplitesu.c, drivers/upscode2.c, drivers/usbhid-ups.c,
	  drivers/victronups.c: Bump all driver versions before NUT v2.8.1
	  release [#1951]  Follow-up after core driver changes (main.c etc.)
	  with `driver.state` #1767, driver reload command #1903, driver
	  inter-instance communications via socket #1922 and others.  Also
	  convert remaining single-digit X.Y versions to X.<Y+1>0
	  double-digits.

2023-06-29  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/nut-scanner.txt, docs/man/snmp-ups.txt: clarify that
	  `secLevel` is required to use non-trivial authentication [#734]

2023-06-26  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/maintainer-guide.txt: stress the release git tag rituals
	  [#1971]

2023-06-18  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut-names.txt: reference `docs/new-drivers.txt` by name for
	  device status data definitions

2023-06-17  Blaz Zakrajsek <zakrajsek.blaz@gmail.com>

	* drivers/liebert-hid.c: Apply code review fixes  - Replace
	  non-standard variable names for Full charge capacity and Design
	  capacity - Prefix with experimental

2023-06-16  Blaz Zakrajsek <zakrajsek.blaz@gmail.com>

	* drivers/liebert-hid.c: Improve liebert-hid driver  - Add additional
	  properties by analyzing the HID descriptor of the PowerWalker VI
	  1200 SHL - Existing properties were kept as they are to avoid
	  breakage with other devices using the same driver

2023-06-14  Jim Klimov <jimklimov@gmail.com>

	* clients/upssched.c: add enter/exit log tracing of sock_read()
	  [#1964]

2023-06-13  Jim Klimov <jimklimov@gmail.com>

	* NEWS: upssched CPU burn fixed [#1965, #1964]
	* NEWS, docs/man/upssched.txt, clients/upssched.c: warn that enabled
	  debug remains noisy for daemon part too [#1965]
	* clients/upssched.c: start_daemon() loop (POSIX builds): generally
	  throttle in case we have empty sock_read()s [#1964]
	* clients/upssched.c: if we consistently get read()==0, abort
	  eventually (even if no formal errors are reported) [#1964]
	* clients/upssched.c: do not close STDERR of the daemon (to re-open
	  as /dev/null) when nut_debug_level!=0 (follow-up from [#1879,
	  #1889])
	* clients/upssched.c: log-trace when the process (daemon or CLI)
	  exits

2023-06-13  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upssched.c: improve logging of client connection life cycle
	* tests/NIT/nit.sh: typo fix

2023-06-08  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/download.txt: update references to NUT client for VMWare ESXi
	  - fix wording [#1961]
	* docs/download.txt: update references to NUT client for VMWare ESXi
	  - fix asciidoc markup [#1961]
	* NEWS: update with reference to NUT client for VMware ESXi" project
	  on GitHub [#1961]
	* docs/download.txt: update references to NUT client for VMware ESXi
	  And link to NUT Wiki for further setup suggestions

2023-06-05  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/new-drivers.txt, docs/nut-names.txt: no need for custom anchor
	  for _status_data, change link style instead [#1957]
	* docs/man/upslog.txt: refer to documentation on supported variable
	  names [#1957]
	* docs/new-drivers.txt: add anchor for _status_data [#1957]

2023-06-02  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS, UPGRADING: make note that ChangeLog file markup will differ
	  from that in older NUT releases [#1955]
	* tools/gitlog2changelog.py.in: update TextWrapper settings to not
	  break up file paths  Follows up from #1945

2023-06-01  Xavier Delaruelle <xavier.delaruelle@cea.fr>

	* tools/gitlog2changelog.py.in: tools/gitlog2changelog.py: fix
	  bitwise AND into regular AND  Several if conditions where using
	  bitwise AND whereas the intent was to do a regular AND test.

2023-06-01  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: update with OpenPGP [#1410]
	* NEWS, docs/nut.dict: NEWS: published new maintainer GPG key
	  DE0184DA7043DCF7 [#1410]
	* configure.ac, include/Makefile.am: constrain use of "git describe"
	  to release tags [#1949, networkupstools/nut-website#35,
	  networkupstools/nut-website#34]

2023-05-26  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/documentation.txt: refer to NUT GitHub Wiki
	* docs/documentation.txt: refer to HCL from near DDL
	* docs/developers.txt: reword a bit about IDE support

2023-05-24  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: bump for IntelliJ

2023-05-23  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/developers.txt: typo fix
	* docs/developers.txt: add a mention of IntelliJ IDEA
	* docs/developers.txt: fix asciidoc table markup; update a few
	  comments for Windows development environments
	* Jenkinsfile-dynamatrix: withEnvOptional() was refactored from
	  "infra" to a standalone step

2023-05-19  Xavier Delaruelle <xavier.delaruelle@cea.fr>

	* tools/gitlog2changelog.py.in: tools/gitlog2changelog.py: apply
	  Flake8 suggestions  Apply on gitlog2changelog.py most code change
	  suggestions from Flake8 Python style guide enforcement tool.
	* tools/gitlog2changelog.py.in: tools/gitlog2changelog.py: apply
	  Black suggestions  Apply on gitlog2changelog.py code change
	  suggestions from Black Python code formatter.
	* tools/gitlog2changelog.py.in: tools/gitlog2changelog.py: fix
	  expected git log format  Update gitlog2changelog.py script to
	  ensure git log format is not influenced by user git configuration.

2023-05-19  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/developers.txt, docs/nut.dict: docs/developers.txt: chapter on
	  VSCode setup
	* docs/developers.txt: update notes for IDE setup for debug symbols
	* docs/nut.dict: docs/developers.txt: update notes for IDE
	  (specifically NetBeans on Windows) setup
	* docs/developers.txt: update notes for IDE (specifically NetBeans on
	  Windows) setup

2023-05-13  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/Makefile.am: typo fix to not override man8_MANS definition

2023-05-12  Jim Klimov <jim@jimklimov.com>

	* docs/man/sockdebug.txt: Update sockdebug.txt  Fix markup (and a
	  progname mention), add original code authors.

2023-05-11  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/sockdebug.txt: fix formatting; clarify standard state path
	  handling (POSIX builds) [#1936]
	* docs/man/index.txt: mention new sockdebug[8] man page
	* clients/upssched.c: start_daemon(): transplant
	  STDIN_FILENO/STDOUT_FILENO/STDERR_FILENO handling instead of
	  hardcoded numbers, from common.c [#1879, #1881]
	* drivers/upsdrvquery.c: upsdrvquery_read_timeout(): only log
	  subsequent sleep-time diffs if we retried a sleep
	* drivers/upsdrvquery.c: upsdrvquery_read_timeout(): fix retry-delays
	  to 0.1sec (100msec, 100000usec)
	* drivers/upsdrvquery.c: clearer parentheses and markup
	* drivers/upsdrvquery.c: upsdrvquery_prepare(): fix time subtraction
	* drivers/upsdrvquery.c: upsdrvquery_oneshot(): bump the sleep for
	  upsdrvquery_read_timeout() PING/PONG
	* drivers/upsdrvquery.c: upsdrvquery_read_timeout(): more tracing of
	  time tracking
	* drivers/upsdrvquery.c: use difftimeval() and better-precision
	  struct timeval
	* common/common.c, include/common.h: introduce a difftimeval()
	* drivers/upsdrvquery.c: fix multipliers around tv_usec (10e6 not
	  10e3)
	* drivers/upsdrvquery.c: upsdrvquery_read_timeout(): accept shorter
	  delays, Windows does not guarantee a minimum sleep it seems
	* drivers/upsdrvquery.c: fix whitespace
	* server/sockdebug.c: address clang warnings

2023-05-10  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/upsdrvquery.c: fix whitespace
	* drivers/upsdrvquery.c: upsdrvquery_prepare(): fix finishing quickly
	  after a PONG
	* drivers/upsdrvquery.c: enable a timeout and PING/PONG when
	  preparing the connection
	* docs/man/sockdebug.txt: update for unified ability to "make
	  sockdebug" and no longer required fully-qualified path to socket in
	  POSIX builds
	* docs/sock-protocol.txt: update for unified ability to "make
	  sockdebug" and no longer required fully-qualified path to socket in
	  POSIX builds
	* drivers/upsdrvquery.c: use PING after NOBROADCAST to minimize
	  delays while playing safe [#1928]
	* drivers/upsdrvquery.c: whitespace fixes
	* server/sockdebug.c: fall back to dflt_statepath() when not using a
	  full path to socket
	* server/Makefile.am, NEWS, UPGRADING: install sockdebug if
	  configured --with-dev
	* docs/man/Makefile.am, docs/man/sockdebug.txt, docs/nut.dict:
	  Introduce docs/man/sockdebug.txt
	* Makefile.am: add a way to "make sockdebug" regardless of target
	  platform

2023-04-24  Jim Klimov <jimklimov+nut@gmail.com>

	* conf/upsset.conf.sample, docs/man/upsset.conf.txt, docs/nut.dict:
	  docs/man/upsset.conf.txt, conf/upsset.conf.sample: document CGI
	  securing syntax for modern Apache  Thanks to Phil Stracchino <phils
	  at caerllewys.net> for suggestions:
	  https://alioth-lists.debian.net/pipermail/nut-upsuser/2023-April/013262.html
	* drivers/upsdrvctl.c: when starting to send_all_drivers() or
	  send_one_driver(), reset exec_error to 0 [#1927]
	* drivers/main.c, drivers/upsdrvctl.c: drivers/upsdrvctl.c,
	  drivers.main.c: use upsdrvquery_oneshot() caller-provided timeouts
	  [#1929]  Closes: #1929
	* drivers/upsdrvquery.c, drivers/upsdrvquery.h:
	  drivers/upsdrvquery.c: upsdrvquery_oneshot(): support optional
	  caller-provided timeouts [#1929]
	* drivers/upsdrvquery.c: upsdrvquery_request(): report how long we
	  wait (and support indefinite waits) [#1914]
	* docs/new-drivers.txt, docs/nut.dict: docs/new-drivers.txt:
	  upsdrv_shutdown() must not exit() anymore [#1923]
	* drivers/dummy-ups.c: do not ignore return of getcwd() [#1921]
	* NEWS: Update about reload ability [#1903, #1914, #1924] and new use
	  of driver.killpower instcmd [#1917, #1923]
	* drivers/upsdrvquery.c: typo fix
	* drivers/dummy-ups.c: handle "-x port=./path" or "C:\somepath"
	  (WIN32) [#1921]  Closes: #1921
	* drivers/main.c: try to do_forceshutdown via socket protocol with a
	  running driver first [#1923]  Closes: #1923
	* drivers/al175.c, drivers/apcupsd-ups.c, drivers/asem.c,
	  drivers/bcmxcp.c, drivers/blazer.c, drivers/clone-outlet.c,
	  drivers/clone.c, drivers/dummy-ups.c,
	  drivers/generic_gpio_common.c, drivers/generic_modbus.c,
	  drivers/genericups.c, drivers/huawei-ups2000.c, drivers/isbmex.c,
	  drivers/ivtscd.c, drivers/liebert.c, drivers/macosx-ups.c,
	  drivers/main.c, drivers/netxml-ups.c, drivers/nut-ipmipsu.c,
	  drivers/nutdrv_qx.c, drivers/phoenixcontact_modbus.c,
	  drivers/powercom.c, drivers/powerman-pdu.c, drivers/riello_ser.c,
	  drivers/riello_usb.c, drivers/safenet.c, drivers/skel.c,
	  drivers/snmp-ups.c, drivers/socomec_jbus.c, drivers/usbhid-ups.c:
	  drivers/*: Avoid exit() and fatalx() in upsdrv_shutdown() handlers;
	  set_exit_flag() instead [#1923]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: clarify in logged
	  messages that we are *reloading or* restarting daemons
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: avoid
	  re-definition of the driver if we can just reload it [#1924]
	  Closes: #1924
	* drivers/upsdrvquery.c: upsdrvquery_request(): drop received
	  unrecognized queued replies [#1914]
	* drivers/upsdrvquery.c, drivers/upsdrvquery.h:
	  drivers/upsdrvquery.{c,h}: add a way to request new ReadFile()
	  operation on WIN32 [#1914]
	* drivers/upsdrvquery.c: update messages [#1914]
	* drivers/upsdrvquery.c: rectify timeout processing precision [#1914]

2023-04-23  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/upsdrvquery.c: upsdrvquery_oneshot(): do not wait for
	  NOBROADCAST to flush, we now support not-bailing on unexpected
	  lines [#1920]
	* drivers/upsdrvquery.c: upsdrvquery_read_timeout(): support
	  zeroed-out "tv" as disable of wait
	* drivers/upsdrvquery.c: upsdrvquery_prepare(): support zeroed-out
	  "tv" as disable of wait
	* drivers/upsdrvctl.c: enable "-c reload-or-error" on WIN32 [#1914,
	  #1903]
	* drivers/upsdrvquery.c, drivers/upsdrvquery.h:
	  drivers/upsdrvquery.{c,h}: refactor to pass udq_pipe_conn_t around,
	  and complete WIN32 fixes [#1914]
	* docs/developers.txt: expand with a few IDE notes on Windows
	* drivers/upsdrvquery.c: fix upsdrvquery_read_timeout() for WIN32
	  builds [#1903, #1914]
	* ci_build.sh: suggest follow-up to poor maintainer-clean handling in
	  autotools
	* include/upsconf.h, common/upsconf.c, server/conf.c, server/upsd.c,
	  drivers/main.c, drivers/upsdrvctl.c: change read_upsconf() API so
	  it is not always fatal [#1903]
	* drivers/main.c, drivers/main.h: drivers/main.c: enable
	  SIGCMD_RELOAD_OR_ERROR handling for WIN32 [#1914, #1903]
	* drivers/main.c: address compiler style warning
	* drivers/upsdrvquery.c: upsdrvquery_connect(): copy-paste fixes for
	  WIN32 part [#1903, #1914]
	* drivers/main.c: address compiler style warning

2023-04-22  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/nutupsdrv.txt, docs/man/upsdrvctl.txt, drivers/main.c,
	  drivers/main.h, drivers/upsdrvctl.c: drivers/main.{c,h}, upsdrvctl
	  sources and docs: add "reload-or-error" CLI handling [#1903, #1914]
	  Handle SIGCMD_RELOAD_OR_ERROR commands to running drivers via
	  upsdrvquery_oneshot()y
	* drivers/Makefile.am, drivers/upsdrvquery.c, drivers/upsdrvquery.h:
	  drivers/upsdrvquery.{c,h}, drivers/Makefile.am: Introduce a socket
	  protocol client for quickshot commands [#1903, #1914]
	* docs/man/nutupsdrv.txt: add placeholder for "-c reload-or-restart"
	  CLI argument [#1903]
	* drivers/main.c: main_instcmd(): add placeholder for
	  "driver.reload-or-restart" support [#1903, #1914]
	* drivers/main.c: main_instcmd(): set_reload_flag() by SIGCMD_*
	  macros, not numbers [#1903, #1914]
	* drivers/main.c: add socket-protocol handling for
	  "driver.reload-or-error" INSTCMD [#1903, #1914]

2023-04-21  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c: main(): register "driver.reload(-or-exit)" commands
	  so `upsd` would accept them and `upscmd` can request them [#1903]
	* drivers/dstate.c: sock_arg(): if shared
	  main_instcmd()/main_setvar() did recognize and somehow process the
	  request, honour TRACKING if present [#1903, #1920]
	* drivers/main.c: un-hide nut_debug_level_args for mock-driver builds
	  aka DRIVERS_MAIN_WITHOUT_MAIN now that it is referenced in
	  main_setvar()=>assign_debug_level() [#1903, #1285]
	* server/pipedebug.c: seems WIN32 needs fflush(stdout)
	* docs/sock-protocol.txt: clarify use of sockdebug in WIN32 builds
	* common/common.c: vupslog(): only print timestamps to stderr if
	  xbit_test(upslog_flags, UPSLOG_STDERR) at all, not just that the
	  debug is enabled; also mark upslog_start when we first call the
	  method, even if debu is not currently verbose (may change at run
	  time) [#1903]
	* common/common.c: vupslog(), nut_report_config_flags(): seems WIN32
	  needs fflush(stderr)
	* drivers/dstate.c: sock_arg() (NO)BROADCAST handling => POSIX/WIN32
	  preparation of string: satisfy platforms where snprintf is a macro
	  [#1914]
	* drivers/main.c: main_instcmd()/main_setvar() POSIX/WIN32
	  preparation of string: satisfy platforms where snprintf is a macro
	  [#1914]
	* drivers/main.c: un-hide assign_debug_level() for mock-driver builds
	  aka DRIVERS_MAIN_WITHOUT_MAIN now that it is referenced in
	  main_setvar() [#1903, #1285]
	* drivers/main.c: set_reload_flag (and SIGUSR1) are currently only
	  for non-WIN32 builds [#1903, #1916]
	* server/pipedebug.c: whitespace fixes (indentations et al)
	* server/sockdebug.c, server/pipedebug.c: support -h/--help on CLI
	* docs/sock-protocol.txt: suggest also server/sockdebug for
	  dev/testing
	* server/sockdebug.c: check return of fgets()
	* server/sockdebug.c: #include "nut_stdint.h" for PRI* macros

2023-04-20  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c: driver/main.c: main_instcmd() with basic
	  "driver.reload" and "driver.reload-or-exit" support [#1903, #1914]
	* drivers/dstate.c, drivers/dstate.h, drivers/main.c, drivers/main.h:
	  driver/(main|dstate).(c|h): extend main_instcmd()/main_setvar()
	  with knowledge of conn_t involved [#1914]\
	* NEWS, docs/nut.dict, docs/sock-protocol.txt, drivers/dstate.c,
	  drivers/dstate.h: docs/sock-protocol.txt, drivers/dstate.{c,h}:
	  extend driver-server socket protocol with (NO)BROADCAST option
	  [#1914]
	* docs/man/nutupsdrv.txt, docs/man/upsdrvctl.txt,
	  docs/man/upsmon.txt, docs/man/upssched.txt: docs: update about
	  NUT_*PATH envvars support
	* docs/man/upssched.txt: mention UPSNAME and NOTIFYTYPE among
	  supported envvars
	* clients/upssched.c: comment how checkconf() is the processing loop
	* clients/upssched.c: debugging does not impact backgrounding (update
	  help text)
	* NEWS, clients/upsmon.c, clients/upssched.c, docs/man/nutupsdrv.txt,
	  docs/man/upsd.txt, docs/man/upsdrvctl.txt, docs/man/upsmon.txt,
	  docs/man/upssched.txt, drivers/main.c, drivers/upsdrvctl.c,
	  server/upsd.c: upsd, upsdrvctl, drivers, upsmon, upssched progs and
	  docs, NEWS: introduce NUT_DEBUG_LEVEL envvar support (if no "-D"
	  option(s) among CLI args) [#1915]  Closes: #1915
	* NEWS, docs/man/ups.conf.txt, drivers/main.c: drivers/main.c, NEWS:
	  constrain INSTCMD "driver.killpower" by
	  "driver.flag.allow_killpower" setting [#1917]  Closes: #1917
	* drivers/dstate.c: if main_setvar()/main_instcmd() return
	  STAT_*_INVALID, do not proceed to driver handler [#1914]
	* NEWS, drivers/main.c: drivers/main.c: add support for INSTCMD
	  "driver.killpower" [#1917]
	* NEWS, drivers/main.c: drivers/main.c: introduce a way to show and
	  set "driver.debug" level via socket protocol (upsrw etc.) [#1285]
	  Closes: #1285
	* drivers/main.c: debug-trace (and so use) args to main_instcmd() and
	  main_setvar() handlers [#1285, #1914]
	* drivers/dstate.c, drivers/main.c, drivers/main.h:
	  drivers/main.{c,h}, drivers/dstate.c: introduce and handle shared
	  main_instcmd() and main_setvar() handlers [#1285, #1914]
	* docs/sock-protocol.txt: update with some clarifications
	* tests/NIT/nit.sh: report test case names at start of ther methods,
	  to find error reports in log more easily

2023-04-20  Clappier Eric <ericclappier@eaton.com>

	* drivers/snmp-ups.c: Acquisition failed with daisychain epdu G3 with
	  sensors (#1911)  * Hot fix for infinite loop during discovery
	  daisychain epdu G3 with sensors  * Change log message in
	  guesstimate_template_count function

2023-04-19  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/upsdrvctl.c: buildability for WIN32 (unused code warnings)
	  [#1903]
	* drivers/upsdrvctl.c: fix main loop buildability for WIN32 [#1903]
	* drivers/upsdrvctl.c: set_signal_flag(): relax const-ness to save
	  the signal
	* drivers/upsdrvctl.c: fix builds for WIN32 [#1903]
	* NEWS: clarify nut-driver-enumerator vs. debug_min edits [#1903]
	* scripts/systemd/nut-driver@.service.in: exec upsdrvctl to avoid
	  another extra fork
	* scripts/Solaris/nut-driver.xml.in: fix refresh to send SIGUSR1 now
	  [#1903]
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: use systemd
	  ExecReload for drivers now [#1903]
	* scripts/systemd/nut-driver@.service.in: fix ExecReload to send
	  SIGUSR1 now [#1903]
	* configure.ac: set SYSTEMD_DAEMON_ARGS_DRIVER="-FF" to avoid excess
	  forking (thanks to #1903)
	* drivers/main.c: fix WIN32 buildability
	* drivers/upsdrvctl.c: help() exits here, so leave just fatalx() with
	  diagnosis
	* drivers/upsdrvctl.c: avoid name shadowing after including main.h
	  (for #1903)
	* drivers/main.c: main(): rectify handling of "foreground" variants,
	  fix a typo [#1903]
	* NEWS, docs/nut.dict: NEWS: update for signal support with drivers
	  and upsdrvctl [#1903]
	* drivers/upsdrvctl.c: recycle drivers that aborted due to
	  SIGCMD_RELOAD_OR_EXIT [#1903]
	* drivers/main.c: reload-or-exit: exit with 128+SIGNUM on POSIX
	  systems [#1903]
	* drivers/upsdrvctl.c: actually forward supported signals accumulated
	  by a running upsdrvctl [#1903]
	* drivers/upsdrvctl.c: refactor reset_signal_flag() [#1903]
	* docs/man/upsdrvctl.txt: update for new signal-sending support
	  [#1903]
	* drivers/main.c: handle_reload_flag(): log for which device (help
	  mass-mgmt via upsdrvctl) [#1903]
	* drivers/upsdrvctl.c: error out for dangling CLI arguments
	* drivers/upsdrvctl.c: implement signal handling and "-c COMMAND" to
	  pass on to drivers [#1903]
	* drivers/main.c, drivers/main.h: drivers/main.{c,h}: move SIGCMD_*
	  definitions to header for re-use [#1903]
	* server/upsd.c, clients/upsmon.c: optargs: check other command
	  options only if we did not have a hit earlier
	* drivers/main.c: do not need a "port=..." to handle a command/signal
	  option (with -s TMPUPSNAME) [#1903]
	* drivers/main.c: optargs: only accept command/signal option once
	  [#1903]
	* drivers/main.c: optargs: check other command options only if we did
	  not have a hit earlier [#1903]  In particular, avoid finding
	  "reload" again in longer command names
	* drivers/main.c: set_reload_flag(), optargs: log the command signal
	  posted/received [#1903]
	* drivers/main.c: set_reload_flag(): rearrange comments and log
	  messages [#1903]
	* docs/man/upsdrvctl.txt, drivers/upsdrvctl.c: drivers/upsdrvctl.c:
	  add "-FF" mode to match driver abilities [#1299]
	* docs/man/nutupsdrv.txt, drivers/main.c: drivers/main.c: refactor
	  "background_flag" => "foreground" and add "-FF" mode to match
	  upsd/upsmon [#1299]
	* docs/man/nutupsdrv.txt, drivers/main.c: drivers/main.c: add support
	  for command-line "reload", "reload-or-exit" (reserved
	  "reload-or-restart" not implemented/offered yet), and -P OLDPID
	  options [#1903]
	* drivers/main.c: use macros to define SIGCMD_DATA_DUMP (moved from
	  SIGUSR2 to SIGURG/SIGWINCH by default), SIGCMD_RELOAD,
	  SIGCMD_RELOAD_OR_EXIT (and clarify difference from reserved
	  SIGCMD_RELOAD_OR_RESTART) [#1903]
	* drivers/main.c: rename temporary "buffer" to "pidfnbuf" for a bit
	  of readability
	* server/conf.c: parse_upsd_conf_args(): only warn about ignoring
	  STATEPATH in favor of NUT_STATEPATH if the two strings are not
	  equal [#1908]

2023-04-18  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c: hide nut_debug_level_args as for
	  DRIVERS_MAIN_WITHOUT_MAIN [#1903]
	* docs/man/generic_gpio.txt: do not suggest non-standard
	  "description", use "desc" instead [#1892]
	* drivers/generic_gpio_common.c, drivers/generic_gpio_libgpiod.c: fix
	  "upsdebugx(LOG_DEBUG,...)" calls  We debug with somewhat
	  arbitrarily assigned verbosity numbers. The LOG_* definitions are
	  from syslog (and equivalents for WIN32 event log).
	* drivers/main.c: log that a VAR_SENSITIVE value is not saved (and
	  comment that override/default bypasses this) [#1892]
	* drivers/generic_gpio_common.c, tests/generic_gpio_utest.c:
	  mfr/model vars are not "sensitive" and "desc(ription)" are not
	  handled via addvar() at all [#1892]
	* drivers/main.c, NEWS: support SIGUSR2 to immediately dstate_dump()
	  and move on [#1907]
	* server/conf.c: parse_upsd_conf_args(): prefer NUT_STATEPATH envvar
	  to STATEPATH from file [#1908]
	* server/upsd.c: trace-log the statepath actually used [#1908]
	* server/sstate.c: sstate_connect(): trace-log the paths involved if
	  failed to connect() to a driver pipe [#1908]
	* drivers/main.c: testvar_reloadable(): fix logic botched by
	  refactoring [#1903]
	* drivers/main.c: test*_reloadable(): trace-log the verdict in all
	  cases [#1903]
	* drivers/main.c: move reload_flag support in main loop to be more
	  reactive and refactor as handle_reload_flag() [#1903]
	* drivers/main.c: refactor reload_flag support for existing flags
	  (log that skipped) [#1903]
	* drivers/main.c: support SIGUSR1 => reload_flag=2 => driver may
	  exit() if changed configs that can not be applied on the fly
	  [#1903]
	* drivers/main.c: cover assign_debug_level() under
	  DRIVERS_MAIN_WITHOUT_MAIN [#1903]
	* common/common.c: #if => #ifdef+if [#1903]

2023-04-17  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: AM_COND_IF macro supported since aclocal-1.11; fall
	  back to raw vars for older tools
	* scripts/Solaris/nut-driver.xml.in: define basic SMF "refresh"
	  support to send SIGHUP to a driver [#1903]
	* NEWS: Implemented basic support for `ups.conf` reloading in NUT
	  drivers [#1903]
	* configure.ac: do fail checks due to unknown tokens with
	  SYSTEMD_ANALYZE_PROGRAM [#1903, #1590]
	* configure.ac: do not make noise with SYSTEMD_ANALYZE_PROGRAM
	  [#1903, #1590]
	* configure.ac: fix "end-user" square brackets for M4 markup [#1903]
	* configure.ac: for common.c::upsnotify(): detect actual support for
	  systemd Type=notify for good measure [#1903, #1590]
	* configure.ac: for common.c::upsnotify(): detect support for systemd
	  Type=notify-reload and enable it for nut-driver@.service if
	  applicable [#1903]
	* configure.ac: for common.c::upsnotify(): detect support for
	  HAVE_CLOCK_GETTIME and HAVE_CLOCK_MONOTONIC [#1903]
	* common/common.c: upsnotify(): support posting MONOTONIC_USEC when
	  RELOADING/READY [#1903]
	* scripts/systemd/nut-driver@.service.in: typo fix in comment
	* scripts/systemd/nut-driver@.service.in: support ExecReload via
	  "kill -SIGHUP" [#1903]
	* drivers/main.c: assign_debug_level(): update messages and comments,
	  report if nut_debug_level_args overrides smaller/unset
	  nut_debug_level_upsconf
	* drivers/main.c: fix do_global_args() and main_arg() to not ignore
	  unmodified settings during reload [#1903]
	* drivers/main.c: actually read_upsconf() to handle reload (SIGHUP)
	  [#1903]
	* drivers/main.c: always setup_signals() if we are not a one-shot run
	  (fore- or back-ground)
	* drivers/main.c: upsdebugx() raising the flags due to signals (exit,
	  reload) [#1903]
	* drivers/main.c: do_upsconf_args(): fix handling of "driver" value
	  [#1903]
	* drivers/main.c: pepper test*_reloadable() and do_upsconf_args()
	  with upsdebugx() [#1903]
	* drivers/main.c: testvar_reloadable(): handle known flags
	  conservatively [#1903]
	* drivers/main.c: introduce (and honour) nut_debug_level_args [#1903]
	* drivers/main.c: refactor assign_debug_level()
	* drivers/main.c: do_global_args(), main_arg(): respect reload_flag
	  [#1903]
	* drivers/main.c: move pollinterval handling from do_upsconf_args()
	  to main_arg()
	* drivers/main.c: testvar_reloadable(), testval_reloadable(): clarify
	  if the driver must be restarted to apply a value change [#1903]
	* drivers/main.c, drivers/main.h: drivers/main.{c,h}: make
	  testvar_reloadable(), testval_reloadable(), testinfo_reloadable() a
	  public API in case drivers would need to know [#1903]
	* drivers/main.c: add skeleton handling for reload_flag [#1903]
	* drivers/main.c, drivers/main.h: driver/main.{c,h}: extend internal
	  API with addvar_reloadable() and vartab_t->reloadable field [#1903]

2023-04-12  Jim Klimov <jimklimov@gmail.com>

	* scripts/usb_resetter/README.md: Update README.md  Some more
	  formatting/wording fixes
	* scripts/usb_resetter/README.md: Update README.md  Reformatted line
	  widths and code examples, incorporated PR discussion notes

2023-04-04  Jim Klimov <jimklimov@gmail.com>

	* drivers/salicru-hid.c: Update salicru-hid.c  Whitespace and
	  alphabetic fixes, subdriver version bump

2023-04-04  David Martinez <dmartinez.martin@atsistemas.com>

	* data/driver.list.in, drivers/salicru-hid.c,
	  scripts/upower/95-upower-hid.hwdb: feat: Added support for Salicru
	  SPS 3000 ADV RT2

2023-04-01  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: adapt to newer website preparations

2023-04-01  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx_voltronic.c: cover another path to
	  "battery.voltage" with qx_multiply_battvolt()

2023-03-31  Orsiris de Jong <ozy@netpower.fr>

	* scripts/usb_resetter/README.md: usb_resetter: add --list-hubs
	  command example
	* docs/FAQ.txt: Add driver disconnected usb_resetter entry
	* scripts/usb_resetter/nut-driver.service: Add usb_resetter enabled
	  nut-driver systemd service
	* scripts/usb_resetter/README.md: Add usb_resetter instructions

2023-03-31  Jim Klimov <jimklimov@gmail.com>

	* NEWS: integration with usb_resetter documented [#1887]
	* docs/nut.dict: Update nut.dict

2023-03-31  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx.c: should we not use correct
	  battery_voltage_reports_one_pack_considered every loop?
	* Makefile.am: MAINTAINERCLEANFILES+=ar-lib
	* common/common.c: background(): use
	  STDIN_FILENO/STDOUT_FILENO/STDERR_FILENO macros instead of
	  hard-coded FD 0-1-2 numbers [#1879, #1881]  Closes: #1879 Closes:
	  #1881
	* include/common.h: define STDIN_FILENO/STDOUT_FILENO/STDERR_FILENO
	  if absent on the platform
	* configure.ac: detect support of dup() and/or dup2() on the platform
	* .gitignore: GitIgnore ar-lib tool, if added by automake (see
	  AM_PROG_AR in configure.ac)
	* configure.ac: use m4_ifdef for optional AM_SILENT_RULES support
	* configure.ac: use AM_PROG_AR if available (quiesce autoreconf
	  portability warning)  Inspired by
	  https://github.com/vlm/asn1c/pull/63/files
	* autogen.sh: add "-v" or "export (CI_)DEBUG=true" support

2023-03-30  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: test C++11 nuances that NUT uses and which fail with
	  older gcc-4.x with intermediate levels of support
	* configure.ac: typo fix for "have_cxx11=no," verdict
	* clients/nutclient.cpp, clients/nutclient.h: clients/nutclient.h:
	  declare NutException&Co destructors as "noexcept" to match some
	  system headers std::except
	* autogen.sh: suggest what to do in case of m4 "ifdef" errors
	* docs/config-prereqs.txt: typo and markup fixes
	* docs/ci-farm-lxc-setup.txt: split container installation and setup
	  into visible sub-chapters
	* docs/ci-farm-lxc-setup.txt, docs/nut.dict:
	  docs/ci-farm-lxc-setup.txt: clarify use of expired keys for ancient
	  Debian releases

2023-03-23  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS, drivers/baytech-mib.c: drivers/baytech-mib.c: update
	  baytech_outlet_status_info[] valid values [#1871]

2023-03-22  Evgeny Klimov <jimklimov+nut@gmail.com>

	* drivers/upsdrvctl.c: avoid another warning (WIN32 builds)

2023-03-21  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/upsdrvctl.c: fix build warnings
	* drivers/upsdrvctl.c: only check for child process PIDs on POSIX
	  platforms
	* drivers/upsdrvctl.c: track if any of launched foreground-mode
	  drivers exited, and then abort the whole bundle (so it can be
	  consistently restarted)
	* drivers/upsdrvctl.c: fix some WIN32 code style
	* drivers/upsdrvctl.c: track started foregrounded driver PID(s) to
	  stop when exiting on signal
	* drivers/upsdrvctl.c: fix logged message markup and TODO comments
	  for foregrounded mode
	* docs/man/upsdrvctl.txt, NEWS: update info about upsdrvctl
	  foregrounding mode support
	* drivers/upsdrvctl.c: update logged messages about foregrounding
	  mode
	* drivers/upsdrvctl.c: do not exit the tool if foregrounding was
	  requested
	* drivers/upsdrvctl.c: log when the tool is exiting
	* drivers/upsdrvctl.c: count the UPSes we would command;
	  foregrounding behavior depends on that number
	* drivers/upsdrvctl.c: complete the fix for upsdrvctl explicit
	  fore-/back-grounding mode [#1806 follow-up]
	* tests/NIT/nit.sh: double-quote the driverpath value so it is
	  properly parsed

2023-03-14  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: fixup! NEWS: libdummy_mockdrv.la added [#1855]

2023-03-13  Jim Klimov <jimklimov@gmail.com>

	* tests/Makefile.am: simplify recipe for gpiotest
	* NEWS: libdummy_mockdrv.la added [#1855]
	* drivers/generic_gpio_common.c, drivers/generic_gpio_common.h,
	  tests/Makefile.am, tests/generic_gpio_utest.c:
	  tests/generic_gpio_utest.c, tests/Makefile.am: avoid "include
	  generic_gpio_common.c generic_gpio_liblocal.c
	  generic_gpio_libgpiod.c" in test code
	* tests/generic_gpio_utest.c, tests/Makefile.am: avoid sourcing
	  "main.c" and "dstate.c" right into test code
	* drivers/Makefile.am, drivers/main.c, drivers/main.h:
	  drivers/main.{c,h} drivers/Makefile.am: introduce
	  libdummy_mockdrv.la (and DRIVERS_MAIN_WITHOUT_MAIN)
	* tests/generic_gpio_utest.c, tests/Makefile.am: EXTRA_DIST and use
	  for out-of-tree builds the generic_gpio_test.txt resource file
	* tests/Makefile.am: refer to "tests/" as include-dir for gpiotest
	* tests/generic_gpio_utest.c: add a declaration of ignore() to
	  override the original main() from included main.c
	* drivers/dstate.c: sock_fail(): rename "struct passwd *user" to
	  avoid clash with global varname in main.c (due to
	  tests/generic_gpio_utest.c construction)
	* drivers/generic_gpio_common.h, tests/generic_gpio_liblocal.c,
	  tests/generic_gpio_utest.c: Define NUT_GPIO_SUBTYPEBUF and
	  NUT_GPIO_CHIPNAMEBUF for consistency, avoid local/global varname
	  clashes for chipName
	* drivers/generic_gpio_libgpiod.c: rename "num_lines" to avoid global
	  varname clash (in tests)
	* tests/Makefile.am, tests/generic_gpio_liblocal.c,
	  tests/generic_gpio_utest.c, tests/generic_gpio_utest.h: Introduce
	  tests/generic_gpio_utest.h
	* tests/Makefile.am: drivers/Makefile.am: relocate "endif" lines so
	  sources of tests are always redistributed
	* drivers/generic_gpio_libgpiod.c: rename "(gpio)upsfd" method
	  arguments to avoid shadowing global varnames
	* drivers/generic_gpio_common.c: rename "(gpio)upsfd" method
	  arguments to avoid shadowing global varnames
	* drivers/generic_gpio_common.c, drivers/generic_gpio_common.h,
	  drivers/generic_gpio_libgpiod.h: drivers/generic_gpio*.h: move
	  "extern struct gpioups_t *gpioupsfd" to generic_gpio_common.h
	* tests/.gitignore: GitIgnore tests/gpiotest* artifacts

2023-03-13  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/Makefile.am: clean away symlinked gpiotest sources
	* tests/Makefile.am, tests/.gitignore: refer to
	  generic_gpio_libgpiod.c/generic_gpio_common.c differently for
	  portability
	* tests/Makefile.am: relocate "endif" lines back, with a different
	  way for sources of tests are always redistributed
	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{0,1}.c:
	  suggest Zadig tool to handle UPS with WinUSB (for WIN32 builds)

2023-03-11  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: do not require --with-gpio=yes for builds --with-all
	  even on Linux: only the newer distros support the tech
	* NEWS, UPGRADING, docs/configure.txt: clarify that libgpiod is for
	  Linux released after ~2018
	* docs/config-prereqs.txt: add installation of (lib)gpio(d)-dev(el)
	  where feasible
	* docs/configure.txt: update prereq note for GPIO drivers
	* configure.ac, m4/nut_check_libgpiod.m4: fix actual --with-gpio
	  handling
	* drivers/Makefile.am: add generic_gpio*.h to dist_noinst_HEADERS
	* configure.ac: relocate all "NUT_ARG_WITH(build and install GPIO
	  driver)" to other drivers, so they are nearby in configure --help
	* m4/nut_check_pkgconfig.m4: fix AS_HELP_STRING (program name; not
	  optional)
	* configure.ac: relocate all "NUT_ARG_WITH(build and install ...
	  driver)" together, so they are nearby in configure --help
	* NEWS, UPGRADING, docs/configure.txt, docs/packager-guide.txt:
	  mention new category of GPIO drivers
	* configure.ac: currently --with-gpio defaults are platform-dependent

2023-03-07  modrisb <modrisb@apollo.lv>

	* drivers/generic_gpio_libgpiod.c: fixed debug print in common
	* tests/Makefile.am, tests/generic_gpio_liblocal.c,
	  tests/generic_gpio_test.txt, tests/generic_gpio_utest.c: added
	  tests for gpio
	* drivers/generic_gpio_libgpiod.c: libgpiod formatting
	* drivers/generic_gpio_libgpiod.c, m4/nut_check_libgpiod.m4: adding 2
	  missed commits

2023-03-07  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: add rudimentary support for "./ci_build.sh
	  spellcheck-interactive"
	* docs/developers.txt, docs/nut.dict: docs/developers.txt: add a
	  chapter on IDEs

2023-03-06  modrisb <modrisb@apollo.lv>

	* drivers/generic_gpio_common.c: 2n round of refactoring after test

2023-03-06  Jim Klimov <jimklimov@gmail.com>

	* tools/nut-scanner/scan_xml_http.c: Update scan_xml_http.c

2023-03-06  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c:
	  nut-scanner: reformat "Cannot load ... library" reports, fix
	  varname for libneon

2023-03-05  modrisb <modrisb@apollo.lv>

	* drivers/generic_gpio_common.c: fixes after extensive rules& states
	  calc tests

2023-03-05  Jim Klimov <jimklimov@gmail.com>

	* drivers/libusb1.c: Update libusb1.c  Change to conventional
	  error-message format

2023-03-05  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: become_user(): "pw" is not NUT_UNUSED_VARIABLE()
	  anymore
	* drivers/libusb1.c: report text of libusb_error when
	  libusb_kernel_driver_active() fails
	* ci_build.sh: try to ensure a TMPDIR

2023-03-04  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: become_user(): fix behavior with NULL arg
	* tools/nut-scanner/nutscan-init.c: pepper with upsdebugx(1,...) to
	  track overview progress of library loading (or not)
	* tools/nut-scanner/nutscan-init.c: first search for contemporary
	  libupsclient DLL on Windows
	* tools/nut-scanner/nutscan-init.c: fix searching for libneon and
	  libnetsnmp on Windows
	* common/common.c: fix checking for DLLs in "../lib" relative to EXE
	  location
	* common/common.c: be sure to check for DLLs in EXE location (even if
	  it is not "." workdir)
	* drivers/main.c: use common nut_report_config_flags() to debug-log
	  details of the driver build
	* common/common.c: reword stderr printout as upsdebugx(1,...) pattern
	* common/common.c: externalize (and rename) struct timeval
	  upslog_start so other methods can use the same accounting

2023-03-02  modrisb <modrisb@apollo.lv>

	* drivers/generic_gpio_common.c, drivers/generic_gpio_libgpiod.c:
	  removed test code and finalized styling

2023-03-01  modrisb <modrisb@apollo.lv>

	* drivers/generic_gpio_libgpiod.c: removed define for debug

2023-03-01  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/scheduling.txt: align example timeouts in different paragraphs
	* configure.ac: extend search for RUN_AS_USER in upsmon.conf [#1859]
	* configure.ac: reshuffle for --enable-inplace-runtime=reenter
	  support; detect sysconfdir/user/group in one place where we care
	  for "inplace" mode [#1859]
	* configure.ac: fix re-entry of the script when handling
	  --enable-inplace-runtime [#1859]
	* configure.ac: comment that in some systems, the upsd in PATH is a
	  shell wrapper [#1859]  e.g. in Debian packaging where it is tied
	  into "MODE" of nut.conf

2023-02-28  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/developers.txt: update coding style guide about braces after
	  if/while/for/... even for a single line
	* clients/upssched.c: parse_at(): add upsdebugx() tracing [#1858]
	* clients/upsc.c, clients/upscmd.c, clients/upslog.c,
	  clients/upsmon.c, clients/upsrw.c, server/upsd.c,
	  tools/nut-scanner/nut-scanner.c: Fix help()/usage() in many
	  programs to suggest "-h" and/or "-V" options
	* clients/upssched.c: enable command-line argument handling [#1863]
	  Closes: #1863
	* clients/upssched.c: Revert "clients/upssched.c: main(): find use
	  for argc"  This reverts commit
	  dca2315fa8fb9a80528726cbc235310f19aa948f. Not needed anymore, and
	  actually added a bug (prog not remembered).
	* m4/ax_realpath.m4: comment about recursion involved [#1859]
	* configure.ac: disable UNITTEST_AX_REALPATH and the exit afterwards
	  [#1859]
	* m4/ax_realpath.m4: AX_REALPATH(): quote reported pathnames
	  consistently [#1859]
	* m4/ax_realpath.m4: AX_REALPATH(): report if resolved pathname
	  differs from input value [#1859]
	* m4/ax_realpath.m4: AX_REALPATH(): try AX_REALPATH_SHELL_RECURSIVE
	  even if file is not found initially; fix how we decide it is not
	  found [#1859]
	* m4/ax_realpath.m4: AX_REALPATH_SHELL_RECURSIVE()
	  AX_REALPATH_SHELL_ONELEVEL(): drop support for LVL (shell vars
	  misbehave here so not interesting) [#1859]
	* m4/ax_realpath.m4: split AX_REALPATH_SHELL_RECURSIVE() into a loop
	  and its called method [#1859]
	* m4/ax_realpath.m4: UNITTEST_AX_REALPATH(): relocate shell logic
	  into AX_REALPATH_SHELL_RECURSIVE() [#1859]
	* m4/ax_realpath.m4: UNITTEST_AX_REALPATH(): reword a test
	  description [#1859]
	* m4/ax_realpath.m4: UNITTEST_AX_REALPATH(): avoid using /tmp
	  directly if possible [#1859]
	* m4/ax_realpath.m4: format messages in UNITTEST_AX_REALPATH() and
	  UNITTEST_AX_REALPATH_EXPECT() in a friendlier fashion [#1859]
	* m4/ax_realpath.m4: refactor UNITTEST_AX_REALPATH() with
	  UNITTEST_AX_REALPATH_EXPECT() helper [#1859]
	* configure.ac: TEMPORARY: add call to UNITTEST_AX_REALPATH and exit
	  after it [#1859]
	* m4/ax_realpath.m4: introduce UNITTEST_AX_REALPATH [#1859]

2023-02-27  modrisb <modrisb@apollo.lv>

	* m4/nut_check_libgpiod.m4: naming change for PKG_CONFIG - dev
	  version
	* configure.ac, drivers/Makefile.am, m4/nut_check_libgpiod.m4: added
	  m4 file for driver

2023-02-27  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update docs/nut.dict

2023-02-27  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/ax_realpath.m4: add some error-checking for unresolved paths
	  [#1859]
	* configure.ac, m4/ax_realpath.m4: configure.ac: refactor
	  realpath_m4() into m4/ax_realpath.m4 [#1859]
	* configure.ac: introduce realpath_m4() [#1859]

2023-02-26  modrisb <modrisb@apollo.lv>

	* docs/man/Makefile.am, docs/man/{gpio.txt => generic_gpio.txt},
	  drivers/Makefile.am, drivers/generic_gpio_common.c,
	  drivers/generic_gpio_common.h, drivers/generic_gpio_libgpiod.c,
	  drivers/generic_gpio_libgpiod.h: PR review #1 (no m4)

2023-02-26  Jim Klimov <jimklimov@gmail.com>

	* INSTALL.nut: update instructions for parallel make all + check

2023-02-25  modrisb <modrisb@apollo.lv>

	* docs/man/gpio.txt, drivers/Makefile.am, drivers/{gpio.c =>
	  generic_gpio_common.c}, drivers/{gpio.h => generic_gpio_common.h},
	  drivers/generic_gpio_libgpiod.c, drivers/generic_gpio_libgpiod.h:
	  renamed source code files

2023-02-23  modrisb <modrisb@apollo.lv>

	* drivers/gpio.c, drivers/gpio.h: refactored to better split generic
	  code from gpio library specific code
	* docs/man/gpio.txt, docs/nut.dict: man page spellcheck fixes

2023-02-22  modrisb <modrisb@apollo.lv>

	* drivers/gpio.c: removed local test define
	* docs/man/Makefile.am, docs/man/gpio.txt, drivers/gpio.c: PR
	  preparation fixes
	* drivers/gpio.h: .h updates
	* docs/man/gpio.txt, drivers/gpio.c: preparing for PR
	* docs/man/gpio.txt: added draft man page

2023-02-22  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: nut_report_config_flags(): avoid warnings about
	  unreachable code
	* common/common.c: nut_report_config_flags(): make it clear (and safe
	  for in-place mode) when no CONFIG_FLAGS were customized for a NUT
	  build
	* m4/nut_report_feature.m4: fix NUT_REPORT_TARGET() for multi-token
	  values of CC_VERSION etc.
	* configure.ac: fixup! configure.ac: report CC_VERSION (also into
	  config.h)
	* m4/nut_report_feature.m4: fix printf() reporting of potentially
	  "funny" strings
	* common/common.c: nut_report_config_flags(): report CC_VERSION if
	  available
	* configure.ac: report CC_VERSION (also into config.h)
	* configure.ac, m4/nut_compiler_family.m4: minimize executions of "CC
	  --version" etc, make it LANG-agnostic, cache as CC_VERSION etc.
	* common/common.c, configure.ac: configure.ac: actually, we should
	  not forcefully export NUT_SOURCE_GITREV into config.h
	* common/common.c, configure.ac: configure.ac, common/common.c
	  nut_report_config_flags(): track and report NUT_SOURCE_GITREV if
	  available (even where nut_version.h imposes strict version)

2023-02-20  modrisb <modrisb@apollo.lv>

	* drivers/gpio.h: initial for GPIO(2)
	* configure.ac, drivers/Makefile.am, drivers/gpio.c: initial for gpio
	  driver support

2023-02-13  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c: options '-a id' and '-s id' are mutually exclusive
	  and single-use only
	* configure.ac: --enable-inplace-runtime should not disregard
	  sysconfdir which the build user may not read

2023-02-12  Jon Gilmore <jon@gilmore.cloud>

	* drivers/tripplite-hid.c, scripts/upower/95-upower-hid.hwdb: add
	  support for minuteman device a0a0

2023-02-12  Jim Klimov <jimklimov@gmail.com>

	* drivers/tripplite-hid.c: Update tripplite-hid.c  Update subdriver
	  version along with content bump

2023-02-11  Yifeng Li <tomli@tomli.me>

	* drivers/huawei-ups2000.c: huawei-ups2000: fix broken timeout
	  recovery behavior in Issue #1846.  Occasionally, the UPS takes
	  longer than 1 second to respond and finish transmitting a message.
	  This causes a timeout in modbus_read_registers(), and the driver is
	  supposed to retry the request and recover from the failure.
	  Unfortunately, when the driver retries, instead of getting the
	  result of the current request, the leftover bytes from the previous
	  read is received from the serial buffer, creating invalid messages.
	  It causes all following reads to also fail, often with an "Invalid
	  CRC" error, and the driver can never recovery from the failure.
	  This commit fixes the bug by flushing the buffer using function
	  modbus_flush() before invoking modbus_read_registers(). The
	  libmodbus timeout value is also bumped to 2 seconds to avoid
	  unnecessary timeouts and subsequent retries. Finally, the version
	  number is also bumped to reflect the existence of this fix.

2023-02-07  Jim Klimov <jimklimov+nut@gmail.com>

	* INSTALL.nut: fix link to Config Prereqs in generated HTML version

2023-02-05  Jim Klimov <jimklimov+nut@gmail.com>

	* INSTALL.nut, docs/nut.dict: INSTALL.nut: update with "in-place"
	  rebuilds chapter [#1826]

2023-02-03  Jim Klimov <jimklimov+nut@gmail.com>

	* .github/FUNDING.yml: Introduce .github/FUNDING.yml metadata

2023-02-02  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: add OSC and opencollective

2023-02-01  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: rearrange progress message for "whether to build
	  binaries with tighter systemd integration support"
	* configure.ac: quiesce python checks for modules

2023-01-28  Jim Klimov <jimklimov@gmail.com>

	* docs/man/riello_usb.txt: Update riello_usb.txt
	* NEWS: Update NEWS
	* docs/man/riello_usb.txt: Update riello_usb.txt

2023-01-26  Jim Klimov <jimklimov+nut@gmail.com>

	* appveyor.yml: avoid redirect to /dev/null on Windows
	* appveyor.yml: bolt ccache location to avoid wasting space on
	  Appveyor for older vs newer layouts
	* appveyor.yml: avoid amperesand in YAML
	* ci_build.sh: in the end, query ccache compression stats if
	  supported
	* appveyor.yml: stash another possible ccache location
	* appveyor.yml: in the end, query ccache compression stats if
	  supported
	* appveyor.yml: set ccache config options
	* tests/NIT/nit.sh: have a sense of time in the log_*() messages
	  When tests fail on CI farm, this should help see timeouts due to
	  farm under too much stress vs. "real" reasonable problems.
	* ci_build.sh: separate [build] and [check] failures (and successes)
	  in BUILD_TYPE=default-all-errors reports

2023-01-24  Jim Klimov <jimklimov@gmail.com>

	* NEWS: bestfortress shutdown timeout fixed [#1820]

2023-01-23  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: suggest CI_REQUIRE_GOOD_GITIGNORE="false" in error
	  message
	* ci_build.sh: fix condition and shorten the printed lines for
	  install-sh warning
	* configure.ac: fix condition and shorten the printed lines for
	  install-sh warning
	* ci_build.sh: try workarounds for old and broken install-sh [#1831]
	* configure.ac: suggest workarounds for old and broken install-sh,
	  visibly just before the end [#1831]

2023-01-22  Jim Klimov <jimklimov@gmail.com>

	* drivers/bestfortress.c: Update bestfortress.c  Fix prints of
	  `(s)size_t` variables

2023-01-22  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/Makefile.am: give delivery of GENERATED_USB_OS_FILES more
	  chances to succeed
	* docs/Makefile.am, docs/man/Makefile.am,
	  scripts/Solaris/Makefile.am: */Makefile.am: replace "mkdir -p" by
	  MKDIR_P autotools macro
	* tools/Makefile.am: do not fail (just warn) if any of
	  GENERATED_USB_OS_FILES are missing or empty [#1831]
	* autogen.sh: ensure that nut-usbinfo.pl runs if any of its products
	  are missing, not just a few (and comment how to keep the list
	  updated) [#1831]
	* tools/Makefile.am: streamline "rebuilds" of GENERATED_USB_OS_FILES
	  if needed [#1831]  An alternative solution to #1832
	* tools/Makefile.am: comment GENERATED_SNMP_FILES+GENERATED_USB_FILES
	  vs. GENERATED_USB_OS_FILES lifecycles [#1831]
	* scripts/augeas/Makefile.am: fix EXTRA_DIST for nutupsconf.aug.in
	  [#1831]
	* scripts/Makefile.am, tools/Makefile.am: scripts/Makefile.am: fix
	  EXTRA_DIST for upower/95-upower-hid.hwdb [#1831]
	* scripts/devd/Makefile.am: fix EXTRA_DIST for nut-usb.conf.in
	  [#1831]
	* scripts/udev/Makefile.am: fix EXTRA_DIST for nut-usbups.rules.in
	  [#1831]
	* scripts/hotplug/Makefile.am: fix EXTRA_DIST for libhid.usermap
	  [#1831]
	* ci_build.sh: help find end of NUT_x_VARIANT=... failed build
	  (before cleanup noise) in CI logs
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  suggest MKDIRPROG hack for installing on NetBSD [#1834]
	* configure.ac, m4/nut_report_feature.m4: move KEEP_NUT_REPORT
	  definition to before AC_OUTPUT [#1826]
	* UPGRADING: document --enable-keep_nut_report_feature and that the
	  file can be installed [#1826, #1708]
	* docs/configure.txt: debug-report of CONFIG_FLAGS is now shorter
	* docs/configure.txt: document --enable-keep_nut_report_feature and
	  that the file can be installed [#1826]
	* configure.ac: NUT_REPORT() the PACKAGE_VERSION (and GITREV if any)
	  valid at the time of configure run [#1826]
	* configure.ac: report GITREV (if any) valid at the time of configure
	  run
	* m4/nut_report_feature.m4, Makefile.am: install
	  config.nut_report_feature.log if kept [#1826]
	* m4/nut_report_feature.m4: standardize indentation, more M4 AS_IFs
	  [#1826]
	* drivers/richcomm_usb.c, drivers/nutdrv_atcl_usb.c,
	  drivers/bcmxcp_usb.c: sync naming changes with drivers/libusb1.c
	  [#1819, #1763, #1764]
	* drivers/libusb1.c: bump version for libusb_get_device_address() vs.
	  libusb_get_port_number() [#1819]
	* tools/nut-scanner/scan_usb.c: sync naming and method changes with
	  drivers/libusb1.c [#1819]
	* drivers/libusb1.c: align device_addr/devnum printing (back) with
	  their int types [#1819]

2023-01-21  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: fix systemd-tmpfiles detection from AC_CHECK_PROGS to
	  AC_PATH_PROG for full pathname [#1822]
	* configure.ac: set --prefix, --sbindir or --bindir into CONFIG_FLAGS
	  according to older binaries found (if not provided otherwise)
	  [#1826, #1709]
	* configure.ac: do not pollute "SBINDIR" variable with tests for
	  nut_enable_inplace_runtime, try PATH beside PREFIX, and generalize
	  to try upsc if upsd is not found [#1826]
	* configure.ac: typo fix for CONFIG_FLAGS [#1826]
	* configure.ac: report determining CONFIG_FLAGS [#1709, #1826]
	* configure.ac: track NUT_VERSION_DEPLOYED which we inherit from with
	  --enable-inplace-runtime [#1826]
	* configure.ac: update comments for
	  systemd/nut-common-tmpfiles.conf.in
	* common/common.c: refactor nut_report_config_flags() to allow for
	  longer option lists for purposes of "configure
	  --enable-inplace-runtime" [#1826]
	* clients/Makefile.am, tools/nut-scanner/Makefile.am: Refactor
	  nut_report_config_flags() from many programs into common.c [#1826,
	  #1709] - bump libs version-info
	* clients/upsc.c, clients/upscmd.c, clients/upslog.c,
	  clients/upsmon.c, clients/upsrw.c, common/common.c, drivers/main.c,
	  include/common.h, server/upsd.c, tools/nut-scanner/nut-scanner.c:
	  Refactor nut_report_config_flags() from many programs into common.c
	  [#1826, #1709]
	* configure.ac: do not track in CONFIG_FLAGS that we
	  --disable-runtime-support, and only track once that we
	  --enable-runtime-support [#1826]
	* lib/libupsclient-config.in: comment that NUT_VERSION_MACRO in
	  binaries may differ from PACKAGE_VERSION in the script [#1826]

2023-01-20  Neil Romig <neilromig@gmail.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: Update
	  nut-driver-enumerator.sh.in  Remove backslash from grep expression
	  at line 836 to avoid grep warning of stray backslash.

2023-01-20  Greg Troxel <gdt@lexort.com>

	* drivers/bestfortress.c: bestfortress: Switch logging to __func__
	  Add a few comments about needed future work, but no code changes.
	  Adjust to (surprising to me) non-POSIX file descriptor types.

2023-01-19  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: prepare nut-common-tmpfiles.conf.in subdir for
	  @STATEPATH@/upssched, and update comments

2023-01-18  Jim Klimov <jimklimov+nut@gmail.com>

	* autogen.sh, configure.ac, docs/config-prereqs.txt: Bump commented
	  suggestions to automake-1.13 or newer  Follow-up to #1821
	* scripts/python/module/PyNUT.py.in: update for dual Py2/Py3
	  citizenship
	* scripts/python/app/NUT-Monitor-py2gtk2.in,
	  scripts/python/app/NUT-Monitor-py3qt5.in,
	  scripts/python/module/PyNUT.py.in, scripts/python/module/README,
	  scripts/python/module/test_nutclient.py.in: scripts/python/*:
	  import definition and use-case of CheckUPSAvailable() from Fedora
	  packaging patches  Py2:
	  https://src.fedoraproject.org/rpms/nut/blob/3c9fea3a359db592e3c7d25ff5c8050325b21dfe/f/nut-2.6.5-unreachable.patch
	  Py3:
	  https://src.fedoraproject.org/rpms/nut/blob/48685366900985696be8371d8deea6494ae36c43/f/nut-2.6.5-unreachable.patch
	  by Michal Hlavinka
	* configure.ac, scripts/systemd/nut-driver-enumerator.service.in,
	  scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in:
	  scripts/systemd/*.service.in: parameterize systemd-tmpfiles program
	  location
	* scripts/systemd/nut-driver-enumerator.service.in,
	  scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in:
	  scripts/systemd/*.service.in: ExecStartPre systemd-tmpfiles to
	  facilitate install/upgrade with less fuss  Inspired by Fedora
	  Rawhide patches at
	  https://src.fedoraproject.org/rpms/nut/blob/0a29e563e374f274f801270bce8eaab9159c7d16/f/nut-2.6.3-tmpfiles.patch
	* ci_build.sh: shuffle quotes in NUT_*_VARIANT=... reports for easier
	  search in logs
	* ci_build.sh: make maintainer-clean less noisy in CI if V=0
	  (automake clean.m4 echoes unconditionally)
	* Makefile.am, clients/Makefile.am, common/Makefile.am,
	  docs/Makefile.am, docs/man/Makefile.am, drivers/Makefile.am,
	  include/Makefile.am, scripts/python/Makefile.am,
	  server/Makefile.am, tests/Makefile.am, tests/NIT/Makefile.am,
	  tools/nut-scanner/Makefile.am: */Makefile.am: use AM_V_at for
	  optionally-quieter cleanup
	* ci_build.sh: for developer builds, disable silent rules to see all
	  problems better
	* ci_build.sh: make cleanup less noisy
	* ci_build.sh: make verbose builds actually verbose
	* configure.ac: default to automake-"silent" rules for builds

2023-01-17  Edgar Fuß <ef@math.uni-bonn.de>

	* drivers/libusb1.c: Use libusb_get_device_address(), not
	  libusb_get_port_number()  In USB device enumeration, when setting
	  curDevice->Device, use libusb_get_device_address(), not
	  libusb_get_port_number().  While there, rename bus to bus_num to
	  avoid ambiguity.  When printf()ing devnum (a size_t), use %zd,
	  which is POSIX, not PRIuSIZE, which is not.

2023-01-16  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/app/nut-monitor.appdata.xml:
	  nut-monitor.appdata.xml: add launchable=nut-monitor.desktop
	  Inspired by
	  https://salsa.debian.org/debian/nut/-/blob/a009ca10a327d7db383f5d7726091050ceb4d60f/debian/patches/appdata-launchable.patch
	  from @bigon but adjusted for general version-agnostic dispatcher
	  (py2 or py3, whatever is installed for this end-user deployment)
	* tools/nut-scanner/scan_nut.c: simplify check for "port" similar to
	  scan_avahi.c [#1815]
	* tools/nut-scanner/scan_avahi.c: comments similar to scan_nut.c
	* tests/NIT/nit.sh: verify that port number is suffixed by
	  nut-scanner when needed [#1815]
	* tools/nut-scanner/scan_nut.c: comment about "nutclient" driver
	  value
	* tools/nut-scanner/scan_nut.c: suffix non-standard port numbers to
	  "port" in config [#1815]
	* tools/nut-scanner/scan_nut.c: use uint16_t port to align with
	  upsclient.c [#1815]
	* tests/NIT/nit.sh: fix LD_LIBRARY_PATH for
	  testcase_sandbox_nutscanner_list()
	* tests/NIT/nit.sh: simplify bail-out pattern for nut-scanner to
	  match on more OSes
	* configure.ac: CONFIG_FLAGS: older ksh dislikes doublequotes inside
	  backticks, all doublequoted outside => use $(...)

2023-01-15  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: fix support for CONFIG_FLAGS with spaces
	* configure.ac: log the CLI options for restarted run when
	  nut_enable_inplace_runtime
	* tests/NIT/nit.sh: testcase_sandbox_nutscanner_list(): excuse lack
	  of libupsclient.so/dll in path
	* configure.ac, docs/configure.txt: configure.ac: consult
	  CONFIG_FLAGS_DEPLOYED and CONFIG_FLAGS when
	  --enable-inplace-runtime mode is used
	* drivers/main.c: report CONFIG_FLAGS always when debugging [#1789]
	* clients/upsc.c, clients/upscmd.c, clients/upslog.c,
	  clients/upsmon.c, clients/upsrw.c, docs/configure.txt,
	  drivers/main.c, server/upsd.c, tools/nut-scanner/nut-scanner.c: NUT
	  programs should report CONFIG_FLAGS for help/version requests with
	  debug enabled  Related-to: #1789
	* configure.ac: lib/libupsclient-config is a SCRIPTFILE
	* lib/libupsclient-config.in: report CONFIG_FLAGS
	* lib/libupsclient-config.in: double-quote shell expansions
	* tools/nut-scanner/scan_avahi.c: when bailing out of Avahi scan, do
	  so comprehensibly for readers of error messages
	* tests/NIT/nit.sh: add rudimentary nut-scanner tests
	* tools/nut-scanner/nutscan-display.c: weave nutdevX numbering for
	  different scan types when generating ups.conf with sanity-check
	  warnings with a global var [#1810]

2023-01-15  Greg Troxel <gdt@lexort.com>

	* drivers/bestfortress.c: driver/bestfortress: Fix serious shutdown
	  bug and improve shutdown code  - Move setting "ups.shutdown.delay"
	  earlier so that it is available for `upsdrvctl shutdown`.  This
	  results in using that delay, instead of 1s. - Change shutdown delay
	  to 20s from 10s, because that seems more common, and 10s feels too
	  tight. - Add logging about shutdown.  When run with `-k`,
	  `ups.delay.shutdown` has apparently not been initialized.  Fall
	  back to 20, rather than 1, and log better.
	* drivers/bestfortress.c: drivers/bestfortress: Rationalize and
	  improve debugging  - Define a debug logging plan - Add debug log
	  calls - Adjust several existing calls  This commit does not intend
	  to modify behavior other than logging.

2023-01-14  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/nutscan-display.c:
	  nutscan_display_sanity_check_serial(): fix failsafe condition
	  [#1810]
	* tools/nut-scanner/nutscan-display.c:
	  nutscan_display_sanity_check_serial(): if not null, one device
	  entry exists [#1810]
	* tools/nut-scanner/nutscan-display.c:
	  nutscan_display_sanity_check_serial(): trace progress through logic
	  [#1810]
	* tools/nut-scanner/nutscan-display.c: trace entry into the display
	  methods [#1810]
	* NEWS, UPGRADING, docs/man/Makefile.am, docs/man/nut-scanner.txt,
	  docs/man/nutscan.txt, docs/man/nutscan_add_option_to_device.txt,
	  docs/man/nutscan_cidr_to_ip.txt,
	  docs/man/nutscan_display_parsable.txt,
	  docs/man/nutscan_display_sanity_check.txt,
	  docs/man/nutscan_display_sanity_check_serial.txt,
	  docs/man/nutscan_display_ups_conf.txt,
	  .../nutscan_display_ups_conf_with_sanity_check.txt,
	  docs/man/nutscan_free_device.txt,
	  docs/man/nutscan_get_serial_ports_list.txt,
	  docs/man/nutscan_init.txt, docs/man/nutscan_new_device.txt,
	  docs/man/nutscan_scan_avahi.txt,
	  docs/man/nutscan_scan_eaton_serial.txt,
	  docs/man/nutscan_scan_ipmi.txt, docs/man/nutscan_scan_nut.txt,
	  docs/man/nutscan_scan_snmp.txt, docs/man/nutscan_scan_usb.txt,
	  docs/man/nutscan_scan_xml_http_range.txt,
	  tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-display.c: nut-scanner: report bogus and
	  duplicate serial numbers [#1810]
	* NEWS, docs/config-prereqs.txt, docs/nut.dict:
	  docs/config-prereqs.txt: document notes about a build for Solaris 8
	  [#1736, #1738]
	* NEWS: mention instructions for CentOS 6 native NUT 2.8.x builds
	  [#1804]

2023-01-12  Jim Klimov <jimklimov+nut@gmail.com>

	* .editorconfig: Revert ".editorconfig: try to neuter additional
	  IntelliJ IDEA formatter [#894]"  This reverts commit
	  f9b195a4650766ef81cc4daa35f2d6cee932c87a.
	* .editorconfig, AUTHORS, INSTALL.nut, NEWS, README, TODO, UPGRADING,
	  docs/.editorconfig, docs/acknowledgements.txt, docs/cables/apc.txt,
	  docs/cables/ge-imv-victron.txt, docs/cables/mgeups.txt,
	  docs/cables/powerware.txt, docs/cables/repotec.txt,
	  docs/config-prereqs.txt, docs/maintainer-guide.txt,
	  docs/man/.editorconfig, docs/man/apcsmart.txt,
	  docs/man/apcupsd-ups.txt, docs/man/asem.txt, docs/man/bcmxcp.txt,
	  docs/man/bcmxcp_usb.txt, docs/man/belkinunv.txt,
	  docs/man/bestfortress.txt, docs/man/blazer-common.txt,
	  docs/man/blazer_usb.txt, docs/man/generic_modbus.txt,
	  docs/man/liebert-esp2.txt, docs/man/macosx-ups.txt,
	  docs/man/nut-ipmipsu.txt, docs/man/nut-scanner.txt,
	  docs/man/nut_usb_addvars.txt, docs/man/nutdrv_qx.txt,
	  docs/man/nutdrv_siemens_sitop.txt, docs/man/powerman-pdu.txt,
	  docs/man/socomec_jbus.txt, docs/man/tripplite_usb.txt,
	  docs/man/ups.conf.txt, docs/man/upsclient.txt, docs/man/upslog.txt,
	  docs/nut.dict, docs/snmp-subdrivers.txt, docs/solaris-usb.txt,
	  scripts/RedHat/README, scripts/Windows/DriverInstaller/README.txt,
	  scripts/Windows/README, scripts/augeas/README, scripts/devd/README,
	  scripts/hotplug/README, scripts/python/README,
	  scripts/systemd/README, scripts/udev/README, scripts/ufw/README,
	  tests/NIT/README, tools/nut-scanner/README: Apply .editorconfig
	  driven cleanup to docs [#894]
	* docs/man/nut_usb_addvars.txt: update comment for allow_duplicates
	  [#1756]
	* docs/man/nut_usb_addvars.txt: update comment for nut-scanner
	  [#1790]
	* .editorconfig: exempt itself from trailing whitespace (possibly
	  needed for block-comment definitions) [#894]
	* .editorconfig: try to neuter additional IntelliJ IDEA formatter
	  [#894]
	* docs/developers.txt, docs/nut.dict: docs/developers.txt: mention
	  editorconfig [#894]
	* .editorconfig: Elaborate on .editorconfig some more [#894]
	* .editorconfig: Elaborate on .editorconfig [#894]
	* .editorconfig: Introduce a basic .editorconfig file [#894]
	* configure.ac: drop double-quotes from NUT_REPORT*() args [#1708]
	* NEWS, docs/man/upsdrvctl.txt, drivers/upsdrvctl.c:
	  drivers/upsdrvctl.c: add "-F"/"-B" args for drivers to be
	  fore/back-grounded explicitly [#1759]
	* drivers/upsdrvctl.c: whitespace fix in usage()
	* docs/config-prereqs.txt: clarify lack of libusb-1.0 in CentOS 6
	* autogen.sh: ensure quieter perl on system with invalid locale

2023-01-11  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac, m4/ax_check_compile_flag.m4: relax minimum autoconf
	  to 2.63 (checked on CentOS6)
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  update for CentOS6
	* scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in:
	  scripts/systemd/nut-{server,monitor,driver@}.service.in: clarify
	  network-online.target dependency [#749]
	* UPGRADING, docs/nut.dict: UPGRADING: clarify improvements for
	  "duplicate" USB device handling in NUT 2.8.1 [#1763, #1766, #1756,
	  #1790]
	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{0,1}.c:
	  clarify expected/got byte amounts (fix typo) [#1797]
	* configure.ac: evaluate pkgconfigdir into a real pathname  Have an
	  option of NOT keeping/using literally '${libdir}/pkgconfig' that
	  needs further evaluation
	* configure.ac: report enabling SMF support (consistent vs. reporting
	  systemd already) [#1708]
	* configure.ac: report installation paths for optional third-party
	  integrations [#1708, #1668]
	* configure.ac: simplify reporting of Python site-packages location
	  [#1787, #1708]
	* configure.ac: rearrange Python interpreter and path reporting
	  [#1787, #1708]
	* m4/nut_report_feature.m4: introduce NUT_REPORT_PATH_INTEGRATIONS
	  and NUT_REPORT_SETTING_PATH_INTEGRATIONS chapter [#1708]
	* m4/nut_check_python.m4: fix copy-paste typo in autoconf m4 markup
	  [#1787]
	* m4/nut_check_python.m4: use stricter conditions to check if PYTHONx
	  values are invalid [#1787]
	* drivers/apc-hid.c: comment 0xff86007c as "APCDelayBeforeReboot" vs
	  "APCForceShutdown" uncertainty [#1796]
	* data/driver.list.in: update for APC CS500 (from 2004) [#1776]

2023-01-10  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: report Python choices (if installing anything of it)
	  [#1787]
	* m4/nut_check_python.m4: if resolved versioned interpreter filename
	  is not a strict expected pattern, fall back to search [#1787]
	* m4/nut_check_python.m4: warn if using "PYTHON" via "/usr/bin/env"
	  and not exact path [#1787]
	* m4/nut_check_python.m4: if major version is known and expected, try
	  to resolve the versioned interpreter starting from any initial name
	  (check sanity afterwards, not before) [#1787]
	* m4/nut_check_python.m4: add python 3.10 to searching list [#1787]
	* m4/nut_check_python.m4: use pythonX-config if available to find the
	  interpreter path [#1787]
	* m4/nut_check_python.m4: add comments (and warning) about
	  interpreter names without an exact version (2.* or 3.*) [#1787]
	* docs/configure.txt: warn about delivering for both Pythons if two
	  are present [#1787]
	* ci_build.sh: copy-paste typo fix for CANBUILD_NIT_TESTS handling
	* NEWS, drivers/libusb0.c, drivers/libusb1.c,
	  tools/nut-scanner/scan_usb.c: nut-scanner: report same USB matching
	  values as seeked by libusb{0,1}.c [#1790]
	* NEWS, drivers/powercom.c: powercom driver should try harder to
	  refresh data from device [#356]
	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{0,1}.c: bump
	  version for allow_duplicates [#1756]

2023-01-09  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/configure.txt: warn about naming "relaxed" python interpreter
	  versions [#1787]
	* m4/nut_check_python.m4: for args like --with-python=python3 try to
	  find build environment dictated pathname first, fall back to "env"
	  second [#1787]  Note: this does not apply to --with-python="prog
	  args" as a bit too complex for now
	* m4/nut_check_python.m4, docs/configure.txt: detect not-specified
	  PYTHON2/PYTHON3 from PYTHON first (if version is suitable) [#1787]
	* m4/nut_check_python.m4: if --with-python2/3 are not specified, use
	  exact path from --with-python (if available) to match its
	  site-packages [#1787]
	* docs/configure.txt: clarify that autogen.sh and configure may
	  default to different PYTHON versions [#1787]
	* m4/nut_check_python.m4: actually fail if a Python version was
	  required but not found [#1787]
	* configure.ac, m4/nut_check_python.m4: refactor with
	  NUT_CHECK_PYTHON_DEFAULT [#1518]
	* docs/configure.txt: current configure script does not use
	  "PYTHON{,2,3}" envvars [#1787]
	* docs/configure.txt: document python, pynut and nut_monitor related
	  options and autogen.sh fuss about it [#1787]
	* docs/configure.txt: whitespace fixes
	* docs/configure.txt: hint for builds of git checkouts [#1750]

2023-01-08  Greg Troxel <gdt@lexort.com>

	* conf/upsd.conf.sample: upsd.conf.sample: Clarify LISTEN/firewall
	  comments

2023-01-07  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: fix if/ifdef for configure-detected methods
	  [#1590, #1739]
	* NEWS, clients/upsclient.h, clients/upsmon.c, clients/upsmon.h,
	  conf/upsmon.conf.sample.in, docs/man/upsmon.conf.txt,
	  docs/man/upsmon.txt, docs/nut.dict: upsmon: Introduce
	  POLLFAIL_LOG_THROTTLE_MAX [#506]
	* clients/upsmon.c: cosmetic fixes
	* NEWS, docs/FAQ.txt, docs/config-notes.txt, docs/man/upsd.txt:
	  fixup! scripts/systemd/nut-server.service.in,
	  scripts/systemd/nut-monitor.service.in: provide an Alias for
	  convenience (upsd, upsmon)
	* docs/configure.txt: document --with-libsystemd related options
	  [#1590]
	* common/common.c: optionally define DEBUG_SYSTEMD_WATCHDOG to ignore
	  upsnotify_reported_watchdog_systemd hush-flag when troubleshooting
	  [#1590]
	* common/common.c: set WATCHDOG_PID along with MAINPID and re-enable
	  not-posting the pings if expected PID is not ours [#1590]
	* common/common.c, m4/nut_check_libsystemd.m4: use
	  sd_notify_barrier() if available after reporting MAINPID to systemd
	  [#1590]
	* configure.ac, docs/man/upsd.txt: configure.ac: run
	  systemd/nut-server.service both with a PID file and without forking
	  [#1781]
	* scripts/systemd/nut-server.service.in,
	  scripts/systemd/nut-monitor.service.in: use Restart=on-failure so
	  that clean intentional exit (e.g. by signal handling) does not
	  revive it [#1781]

2023-01-06  Yifeng Li <tomli@tomli.me>

	* drivers/huawei-ups2000.c: huawei-ups2000.c: log error code/string
	  for Modbus failures  Currently, failures in modbus_read_registers()
	  or modbus_write_registers() do not show any error code or message
	  in the log, making it difficult to debug. This commit logs the
	  error code, errno, and modbus_strerror() if an error occurs.
	  Furthermore, the log level of a fatal warning has been changed from
	  LOG_WARNING to LOG_ERR (LOG_WARNING was previously used due to an
	  oversight).

2023-01-06  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: upsnotify(): opportunistically post sd_notify()
	  even if "WATCHDOG_PID" mismatches [#1590]
	* common/common.c: upsnotify(): log checking "WATCHDOG_USEC" and
	  "WATCHDOG_PID" (once) [#1590]
	* common/common.c: upsnotify(): log setting MAINPID [#1590]
	* common/common.c: upsnotify(): hush watchdog-related logging further
	  [#1590]
	* configure.ac, scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in: Suggest default systemd
	  NotifyAccess settings for upsd, upsmon and drivers [#1590]
	* common/common.c: upsnotify(): revise "snprintf needed more than..."
	  messages [#1590]
	* configure.ac: comment a TODO: consider calling "systemd-notify" if
	  have no sd_notify() [#1590]
	* configure.ac, scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in: Suggest default systemd
	  watchdog settings for upsd, upsmon and drivers [#1590]
	* NEWS, UPGRADING, docs/nut.dict: NEWS, UPGRADING: added libsystemd
	  notification support [#1590]
	* NEWS, UPGRADING: cosmetic fixes
	* configure.ac, scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in: configure.ac,
	  scripts/systemd/*.in: optionally support Type=notify for upsd,
	  upsmon and drivers [#1590]
	* scripts/systemd/nut-server.service.in,
	  scripts/systemd/nut-monitor.service.in: provide an Alias for
	  convenience (upsd, upsmon)
	* drivers/main.c: make use of new upsnotify() [#1590]
	* server/upsd.c: make use of new upsnotify() [#1590]
	* clients/upslog.c: make use of new upsnotify() [#1590]
	* clients/upsmon.c: make use of new upsnotify() [#1590]
	* common/common.c: parsepid(): handle NULL input reasonably on all
	  platforms [#1590]
	* drivers/libusb1.c: handle non-zero libusb port numbers as valid
	  [#1774]

2023-01-06  Greg Troxel <gdt@lexort.com>

	* docs/man/upsmon.txt: Explain POWERDOWNFLAG  Document that it is
	  removed at successful startup

2023-01-05  Jim Klimov <jimklimov+nut@gmail.com>

	* common/Makefile.am, common/common.c, include/common.h:
	  common/common.c: add upsnotify() method into libcommon.la (but not
	  libcommonclient) [#1590]
	* configure.ac, drivers/Makefile.am: use LIBI2C_LIBS to avoid pulling
	  -li2c everywhere
	* configure.ac, docs/config-prereqs.txt, m4/nut_check_libsystemd.m4:
	  m4/nut_check_libsystemd.m4, configure.ac: On systemd aware OSes,
	  optionally integrate with sd_notify() [#1590]
	* NEWS: mention update of NUT COPYING file [#1758]
	* NEWS, docs/man/nut_usb_addvars.txt, drivers/libusb0.c,
	  drivers/libusb1.c: Introduce an `allow_duplicates` flag for common
	  USB matching options [#1756]
	* drivers/libusb0.c, drivers/libusb1.c, drivers/usb-common.c:
	  drivers/libusb{0,1}.c, drivers/usb-common.c: update comments in
	  device matcher code
	* drivers/usb-common.h: update amount of supported possibly unique
	  fields to try for device matching
	* drivers/libusb0.c, drivers/libusb1.c, drivers/usb-common.c:
	  drivers/libusb{0,1}.c, drivers/usb-common.c: update comments in
	  device matcher code

2023-01-05  Greg Troxel <gdt@lexort.com>

	* docs/man/upsdrvctl.txt: docs/man: Clarify upsdrvctl shutdown
	* docs/man/bestfcom.txt, docs/man/bestfortress.txt,
	  docs/man/bestups.txt: docs/man: Clarify Best driver support for
	  Fortress LI660
	* MAINTAINERS: add pkgsrc

2023-01-05  Edgar Fuß <ef@math.uni-bonn.de>

	* drivers/libusb1.c: Set curDevice->Device during USB enumeration
	  During USB enumeration, set curDevice->Device. Try to use libusb1's
	  port number obtained by libusb_get_port_number(), but that seems
	  useless at least on NetBSD. So, use devnum (the enumeration loop
	  variable), which at least makes two identically looking USB UPSen
	  distinguishable again.  Maybe we want to add a Port property set to
	  what libusb_get_port_number() reports?  Previously missed during
	  refactoring to libusb1.
	* drivers/nutdrv_qx_masterguard.c: Add experimental prefix missed in
	  7ef2874e81  drivers/nutdrv_qx_masterguard.c: Add "experimental."
	  prefix in masterguard_claim(). Needed because that prefix had been
	  added (in 7ef2874e81952fac532014a8840a217cf1d636b6) to the variable
	  names in the masterguard_qx2nut[] table.

2023-01-04  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS: announce new "driver.state" feature [#1767]
	* docs/nut-names.txt, drivers/adelsystem_cbi.c, drivers/bcmxcp_usb.c,
	  drivers/blazer_usb.c, drivers/generic_modbus.c, drivers/main.c,
	  drivers/nutdrv_qx.c, drivers/powerman-pdu.c,
	  drivers/richcomm_usb.c, drivers/riello_usb.c,
	  drivers/tripplite_usb.c, drivers/usbhid-ups.c: driver/*.c: report
	  reconnection attempts as a "driver.state" [#1767]
	* drivers/main.c: report where driver.state changes from init.* to
	  just before regular work [#1767]
	* docs/nut-names.txt, docs/nut.dict, drivers/main.c: drivers/main.c,
	  docs/nut-names.txt: introduce "driver.state" tracking [#1767]
	* docs/nut-names.txt: update with final RFC 9271 reference
	* docs/nut-names.txt: update WITH_UNMAPPED_DATA_POINTS [#1699, #1742]
	* drivers/richcomm_usb.c: hide from help() the USB matching settings
	  that are not currently handled by the driver [#1768]
	* docs/man/richcomm_usb.txt: hide from docs the USB matching settings
	  that are not currently handled by the driver [#1768]
	* docs/man/nut_usb_addvars.txt: document usb_set_altinterface setting
	  (from libusb{0,1}.c)
	* NEWS: man pages refactored for USB matching options description
	  [#1766]
	* docs/man/usbhid-ups.txt: refactor to include nut_usb_addvars.txt
	* docs/man/nut_usb_addvars.txt: update with reasoning for
	  nut_usb_addvars settings from usbhid-ups.txt
	* docs/man/tripplite_usb.txt: refactor to include nut_usb_addvars.txt
	* docs/man/nut_usb_addvars.txt: update with references to lsusb and
	  regex from tripplite_usb.txt
	* docs/man/richcomm_usb.txt, docs/man/riello_usb.txt: refactor to
	  include nut_usb_addvars.txt [#1763]
	* docs/man/nutdrv_qx.txt: refactor to include nut_usb_addvars.txt
	* docs/man/nut_usb_addvars.txt: pick up "port" mention from
	  nutdrv_qx.txt and expand on it
	* drivers/nutdrv_atcl_usb.c: report device_match_func() failure and
	  refer to nutdrv_qx more prominently
	* docs/man/nutdrv_atcl_usb.txt: this driver uses a very custom
	  device-matcher with only a vendor string
	* NEWS, drivers/Makefile.am, drivers/nutdrv_atcl_usb.c: Revert
	  "drivers/nutdrv_atcl_usb.c: upsdrv_makevartable(): refer to
	  nut_usb_addvars() [#1754]"  This reverts commit
	  3b1b921669da9ca7f360cbcfa9645fa6816f66ed. This driver uses a very
	  custom device-matcher.
	* docs/man/bcmxcp_usb.txt: mention lack of support for common
	  nut_usb_addvars [#1764]
	* docs/man/Makefile.am, docs/man/blazer-common.txt,
	  docs/man/nut_usb_addvars.txt, docs/nut.dict: Introduce
	  docs/man/nut_usb_addvars.txt (initial content from
	  blazer-common.txt with updated formatting)
	* NEWS: mention the fix for USB matching options fix for some drivers
	* drivers/riello_usb.c: upsdrv_makevartable(): refer to
	  nut_usb_addvars() [#1754]
	* drivers/Makefile.am, drivers/richcomm_usb.c:
	  drivers/richcomm_usb.c: upsdrv_makevartable(): refer to
	  nut_usb_addvars() [#1754]
	* drivers/Makefile.am, drivers/nutdrv_atcl_usb.c:
	  drivers/nutdrv_atcl_usb.c: upsdrv_makevartable(): refer to
	  nut_usb_addvars() [#1754]
	* drivers/blazer_usb.c, drivers/nutdrv_qx.c: upsdrv_makevartable():
	  cosmetic fixes
	* drivers/bcmxcp.h: fix include-fencing macros
	* configure.ac: make default POWERDOWNFLAG configurable [#529] -
	  escape more for autotools
	* configure.ac, scripts/Makefile.am, scripts/RedHat/.gitignore,
	  scripts/RedHat/ups, scripts/RedHat/ups.in, scripts/RedHat/upsd,
	  scripts/RedHat/upsd.in, scripts/RedHat/upsmon,
	  scripts/RedHat/upsmon.in: scripts/Redhat/*: drop older scripts with
	  hardcoding, modernize .in templates for POWERDOWNFLAG and similar
	  config options
	* configure.ac: revise configuration of NUT path location variables
	  and their substitutions

2023-01-03  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/belkinunv.txt: modernize about "upsmon -K" and
	  POWERDOWNFLAG or explicit /etc/killpower [#529]
	* docs/FAQ.txt: modernize about "upsmon -K" and POWERDOWNFLAG or
	  explicit /etc/killpower [#529]
	* NEWS, conf/upsmon.conf.sample.in, configure.ac, docs/configure.txt,
	  docs/nut.dict: configure.ac and many others: make default
	  POWERDOWNFLAG configurable [#529]  Closes: #529
	* server/conf.c, server/conf.h, server/upsd.c: server/upsd.c,
	  server/conf.c: remember debug level specified in command line args,
	  may be useful in reload [#1761]  Closes: #1761
	* clients/upsmon.c: do not report initial debug level twice
	* clients/upsmon.c: remember debug level specified in command line
	  args, may be useful in reload [#1761]
	* clients/upsmon.c: "upsmon -K" should not die if daemon is running
	  [#1680]  Closes: #1680
	* clients/upsmon.c: debug-trace notification activity [#1760]

2023-01-02  Jim Klimov <jimklimov+nut@gmail.com>

	* COPYING, docs/nut.dict: COPYING: update to acknowledge codebase
	  picked up from BSD, curl and CC BY-SA sources over time
	* docs/man/ups.conf.txt, docs/man/upsdrvctl.txt,
	  docs/man/upsdrvsvcctl.txt, drivers/upsdrvctl.c,
	  scripts/systemd/nut-driver@.service.in: drivers/upsdrvctl.c,
	  scripts/systemd/nut-driver@.service.in: add support for
	  NUT_IGNORE_NOWAIT [#1753]
	* UPGRADING: highlight nut-common.tmpfiles(.in) =>
	  nut-common-tmpfiles.conf(.in) rename and other changes since NUT
	  v2.8.0 release
	* autogen.sh, configure.ac, scripts/systemd/.gitignore,
	  scripts/systemd/Makefile.am: Rename generated
	  nut-common.tmpfiles(.in) => nut-common-tmpfiles.conf(.in) to
	  install a *.conf pattern [#1754]  Follow-up for #1030, #1037, #1117
	  May be related to #1712
	* NEWS, docs/nut.dict: NEWS: reference arcane installation know-how
	  for Solaris 8 [#1736]
	* NEWS: Clarified documentation in codebase according to end-user
	  feedback for NUT v2.8.1 release
	* INSTALL.nut: clarify that the instruction is for tarballs (hint for
	  builds of git checkouts) [#1750]
	* docs/man/upsmon.txt: clarify that FSD latches until upsd is
	  restarted [#1721]
	* docs/man/upsmon.txt: rearrange paragraphs with related content
	  [#1721]
	* tools/nut-scanner/nutscan-init.c: adjust WIN32 shared library
	  detection for SNMP and NEON [#1735]  At least as of Appveyor CI
	  builds and their DLL naming both on MSYS2 MinGW "semi-native"
	  builds, and linux mingw (libneon).
	* tools/nut-scanner/nutscan-init.c: annotate blocks for shared
	  library detection

2022-12-28  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/nit.sh: testcase_upsd_allow_no_device(): give VERY laggy
	  systems (e.g. build farm swapping) another chance
	* ci_build.sh: apply CCACHE PATH discovery to mingw builds
	* ci_build.sh: cosmetic fix
	* ci_build.sh: report PATH and CCACHE decisions in build host
	  settings

2022-12-26  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/augeas/Makefile.am: clean away
	  nutupsconf.aug.in.AUTOGEN_WITHOUT if it appears
	* configure.ac: if default "python" was not found, use py2 or py3;
	  avoid keeping "no" as an answer [#1736]
	* m4/nut_check_python.m4: recognize python-3.6 too
	* include/common.h: size_t
	* tests/NIT/nit.sh: avoid "sed -i" - safer approach [#1736]

2022-12-25  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/gitlog2changelog.py.in: tools/gitlog2changelog.py: avoid
	  prefixing file list to messages whose commit comment starts with
	  equivalent list
	* tools/gitlog2changelog.py.in: tools/gitlog2changelog.py: support
	  Python 3.6 (and older 3.x) regarding UTF-8 content of git changelog
	* drivers/belkin-hid.c, drivers/cps-hid.c, drivers/ever-hid.c,
	  drivers/idowell-hid.c, drivers/liebert-hid.c,
	  drivers/powercom-hid.c, drivers/tripplite-hid.c: drivers/*-hid.c:
	  fence WITH_UNMAPPED_DATA_POINTS [#1699]
	* drivers/apc-ats-mib.c, drivers/apc-epdu-mib.c, drivers/apc-mib.c,
	  drivers/apc-pdu-mib.c, drivers/compaq-mib.c,
	  drivers/delta_ups-mib.c, drivers/eaton-ats16-nm2-mib.c,
	  drivers/eaton-ats16-nmc-mib.c, drivers/eaton-ats30-mib.c,
	  drivers/eaton-pdu-marlin-mib.c, drivers/eaton-pdu-nlogic-mib.c,
	  drivers/emerson-avocent-pdu-mib.c, drivers/hpe-pdu-mib.c,
	  drivers/hpe-pdu3-cis-mib.c, drivers/huawei-mib.c,
	  drivers/raritan-px2-mib.c: drivers/*-mib.c: fence
	  WITH_UNMAPPED_DATA_POINTS [#1699]
	* NEWS, configure.ac, docs/configure.txt, docs/hid-subdrivers.txt,
	  docs/snmp-subdrivers.txt, scripts/subdriver/gen-snmp-subdriver.sh,
	  scripts/subdriver/gen-usbhid-subdriver.sh: configure.ac,
	  scripts/subdriver/gen-*.sh: introduce WITH_UNMAPPED_DATA_POINTS
	  flag [#1699]
	* tools/gitlog2changelog.py.in: tools/gitlog2changelog.py: avoid
	  prefixing file list to messages whose commit comment starts with
	  equivalent list
	* tools/gitlog2changelog.py.in: tools/gitlog2changelog.py: support
	  Python 3.6 (and older 3.x) regarding UTF-8 content of git changelog

2022-12-22  Jim Klimov <jimklimov@gmail.com>

	* common/common.c, common/snprintf.c, configure.ac,
	  drivers/mge-hid.c: configure.ac: fix AC_CHECK_FUNCS =>
	  AC_CHECK_DECLS where we care for includes [#1738]

2022-12-22  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac, tests/.gitignore, tests/Makefile.am: configure.ac,
	  tests/Makefile.am: introduce and check for REQUIRE_NUT_STRARG flag
	  [#1736, #1737]
	* tests/nutlogtest.c: reword message so we see it even if libc
	  printf("%s", NULL) does a null-dereference [#1736]
	* tests/NIT/nit.sh: avoid PYTHON=no [#1736]
	* tests/NIT/nit.sh: avoid "sed -i" [#1736]
	* tests/NIT/nit.sh: dumb down shell syntax for older Solaris
	  interpreter [#1736]
	* tools/nut-usbinfo.pl: old typo fix (overlaid file variable and file
	  name)
	* configure.ac, tools/nut-scanner/Makefile.am: if we HAVE_SEMAPHORE,
	  some systems may need additional SEMLIBS [#1736]
	* tools/Makefile.am: avoid spurious error messages when PYTHON=no
	  [#1736]
	* scripts/augeas/Makefile.am: avoid spurious error messages when
	  PYTHON=no [#1736]
	* drivers/mge-hid.c: provide a fallback round() [#1736]
	* tests/getvaluetest.c: do not directly include stdint.h (not
	  ubiquitous) [#1736]
	* drivers/pijuice.c: do not directly include stdint.h (not
	  ubiquitous) [#1736]
	* drivers/eaton-pdu-marlin-helpers.c: do not directly include
	  stdint.h (not ubiquitous) [#1736]
	* drivers/adelsystem_cbi.h: drivers/adelsystem_cbi.c: do not directly
	  include stdint.h (not ubiquitous) [#1736]
	* common/strptime.c: do not always directly include stdint.h (not
	  ubiquitous) [#1736]
	* drivers/riello.c, drivers/riello.h, drivers/riello_ser.c,
	  drivers/riello_usb.c: drivers/riello*.{c,h}: do not directly
	  include stdint.h (not ubiquitous) [#1736]
	* common/strnlen.c: untie from freeBSD specifics [#1736]
	* common/Makefile.am, common/strnlen.c, configure.ac: configure.ac,
	  common/strnlen.c: Detect and provide a fallback strnlen() if needed
	  [#1736]
	* common/common.c: fix pragmas for systems without a UINTPTR_MAX
	  defined [#1736]
	* NEWS: autogen.sh support for CONFIG_SHELL [#1736]
	* autogen.sh: support CONFIG_SHELL envvar to embed into generated
	  configure script (and syntax-check with it) [#1736]

2022-12-21  Jim Klimov <jimklimov+nut@gmail.com>

	* autogen.sh: enhance report of failed syntax checks [#1736]
	* autogen.sh: dumb syntax down for xpg/ksh88 or older [#1736]
	* tools/nut-usbinfo.pl: dumb syntax down for perl 5.005 (Solaris 8
	  compat) [#1736]

2022-12-20  Clappier, Eric <EricClappier@eaton.com>

	* drivers/eaton-pdu-nlogic-mib.c: Fix discovery issue with Eaton pdu
	  nlogic

2022-12-08  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: update dict

2022-12-02  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsmon.c: refactor probing/signaling old instance into one
	  handling/reporting codebase [#1721]
	* server/upsd.c: refactor probing/signaling old instance into one
	  handling/reporting codebase [#1721]
	* clients/upsmon.c: generic report if we "Failed to signal the
	  currently running daemon" [#1721]
	* server/upsd.c: generic report if we "Failed to signal the currently
	  running daemon" [#1721]

2022-12-01  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: clarify inability to find OS user info (vs. NUT
	  user) [#1721]
	* docs/FAQ.txt, docs/config-notes.txt, docs/man/upsd.txt: docs/*.txt:
	  clarify "upsd -c reload" vs. PID file (and systemd) [#1721]
	* conf/upsmon.conf.sample.in: clarify RUN_AS_USER as OS-defined
	  account for upsmon [#1721]
	* conf/ups.conf.sample, conf/upsd.users.sample,
	  conf/upsmon.conf.sample.in: conf/*.sample: standardize on "monuser"
	  as example NUT-defined account for upsmon [#1721]
	* clients/upsmon.c: consider HAVE_SYSTEMD to report if PID file was
	  missing [#1721]
	* server/upsd.c: consider HAVE_SYSTEMD to report if PID file was
	  missing [#1721]
	* configure.ac: refactor definition of HAVE_SYSTEMD so we can use it
	  in C code [#1721]
	* scripts/systemd/nut-server.service.in: re-document use of PID file,
	  for reloads to work [#1721]
	* common/common.c: become_user(): cosmetic/messaging: discern
	  starting as not-root vs. already the requested user [#1718]
	  Closes: #1718
	* NEWS, UPGRADING: reference GitHub PR numbers for snmp-ups updates
	  [#1715, #1716]

2022-12-01  Jim Klimov <jim@jimklimov.com>

	* .github/workflows/codeql.yml: Update codeql.yml  Drop python for
	  now
	* .github/workflows/codeql.yml: Create codeql.yml  LGTM.com is being
	  deprecated in favor of equivalent GitHub Action by same team *
	  https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/
	  *
	  https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually

2022-11-28  Tiph <titi__13@hotmail.com>

	* drivers/mge-hid.c: Update mge-hid.c  fixed conversion issue

2022-11-27  Florian Weimer <fweimer@redhat.com>

	* m4/ax_c_pragmas.m4: Fix several issues with the
	  AX_C_PRINTF_STRING_NULL check  Adjust quoting in the
	  AX_C_PRINTF_STRING_NULL definition.  Switch to strstr and include
	  <string.h> instead of <strings.h>.  Add missing braces and
	  parentheses.  Use double-quote for string literals.  The test now
	  reports success on glibc, as expected.
	* m4/ax_c___attribute__.m4: Fix AX_C___ATTRIBUTE__ configure check to
	  call the right function  The function foo is defined in the C
	  fragment, but the func function is undeclared.  This avoids relying
	  on an implicit function declaration, a C language feature that was
	  removed in 1999.

2022-11-25  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: comment about nut_inplace_user detection from *.pc
	  files [#1714]
	* configure.ac: fix inplace sysconfdir detection [#1714]
	* configure.ac: clarify "checking requested X" => default/specified
	  vs "checking setting X" => final value [#1714]
	* configure.ac: try to detect nut_inplace_group and nut_inplace_user
	  from existing configs [#1714]
	* configure.ac: avoid changing permissions of */tmp and /dev/shm with
	  nut-common.tmpfiles
	* configure.ac: use PIDPATH="/run" if it is so on the build system
	* NEWS, UPGRADING: document @ALTPIDPATH@ vs. @PIDPATH@ (and removal
	  of @PIDPATH@/nut ambiguity) [#1712]
	* scripts/Aix/nut.init.in, scripts/HP-UX/postinstall.in,
	  scripts/Solaris/nut-server.xml.in, scripts/Solaris/postinstall.in,
	  scripts/Solaris/postremove.in, scripts/Solaris/svc-nut-monitor.in,
	  scripts/Solaris/svc-nut-server.in: Reference init-script and
	  packaging templates: eradicate "@PIDPATH@/nut" ambiguity in favor
	  of "@ALTPIDPATH@" (and explicitly ensure "@PIDPATH@" where
	  applicable) [#1712]
	* configure.ac: AC_SUBST(ALTPIDPATH)
	* configure.ac: report "$prefix"
	* m4/nut_report_feature.m4: fix detection of chapter "1" and other
	  nuances
	* m4/nut_report_feature.m4: align reports with tabulation
	* configure.ac: use NUT_REPORT_TARGET [#1708]
	* m4/nut_report_feature.m4: add NUT_REPORT_TARGET [#1708]
	* m4/nut_report_feature.m4: fix comments
	* m4/nut_report_feature.m4: refactor NUT_REPORT_FILE() for
	  second-level headings and less file-openings
	* configure.ac, docs/configure.txt: configure.ac: clarify that
	  PIDPATH *is* for NUT directly (privileged daemons) [#123, #1712]
	* configure.ac: refactor to use NUT_REPORT_SETTING_PATH() to
	  summarize separately from other toggles [#1708 follow-up]
	* m4/nut_report_feature.m4: add separate chapter for
	  NUT_REPORT_PATH() and NUT_REPORT_SETTING_PATH() to populate it
	* .gitignore, Makefile.am, m4/nut_report_feature.m4:
	  m4/nut_report_feature.m4: refactor to hold and append different
	  summary chapters in different files [#1708 follow-up]
	* m4/nut_report_feature.m4: change markup of usage() comments to
	  avoid m4 surprises
	* ci_build.sh: in case of success for default build, remind the
	  chosen config.nut_report_feature.log settings
	* Makefile.am: install-win-bundle-thirdparty: fix indentations
	* configure.ac: use NUT_REPORT_SETTING() for various path tunables
	* configure.ac: fix generation of systemd/nut-common.tmpfiles  Should
	  have no "nut" subdir for STATEPATH and ALTPIDPATH  Follow-up for
	  #1030, #1037, #1117 May be related to #1712
	* configure.ac: NUT_REPORT_SETTING() for RUN_AS_USER and RUN_AS_GROUP
	* configure.ac: change AS_HELP_STRINGs and some other
	  comments/messages for STATEPATH and PIDPATH to clarify
	* m4/nut_report_feature.m4: introduce NUT_REPORT_SETTING()  ...and
	  comment arguments for NUT_REPORT_FEATURE()
	* NEWS, ci_build.sh: NEWS: add  `./ci_build.sh inplace` operation
	  shortcut [#1714]
	* ci_build.sh: add support for INPLACE_RUNTIME=true
	* configure.ac: move checking for better default user/group based on
	  current system circumstances down, to just before we use them
	* configure.ac: report if checking for better sysconfdir/user/group
	  and how it went
	* NEWS: update for `configure --enable-inplace-runtime` [#1714]
	* docs/configure.txt, docs/nut.dict: docs/configure.txt: update for
	  `--enable-inplace-runtime` [#1714]
	* configure.ac: impact default sysconfdir by --enable-inplace-runtime
	* configure.ac: change AS_HELP_STRINGs for hotplugdir, udevdir and
	  devddir to report current defaults (not arbitrary suggestions)
	* configure.ac: introduce --enable-inplace-runtime and impact default
	  RUN_AS_USER and RUN_AS_GROUP by that
	* configure.ac: move final processing of --with-user and --with-group
	  to end of script
	* configure.ac: comment initial settings for RUN_AS_* and PIDPATH

2022-11-25  Arnaud Quette <ArnaudQuette@eaton.com>

	* NEWS, drivers/snmp-ups.c: snmp-ups: fix "Warning: excessive poll
	  failures"  Fix that long standing issue, which was tied to
	  non-existent OIDs, not well handled in some part of the driver
	  Closes: #743

2022-11-24  Arnaud Quette <ArnaudQuette@eaton.com>

	* docs/nut.dict: Spelling dictionnary completion
	* NEWS, UPGRADING, docs/man/snmp-ups.txt, drivers/Makefile.am,
	  drivers/{powerware-mib.c => eaton-ups-pwnm2-mib.c},
	  drivers/eaton-ups-pwnm2-mib.h, drivers/eaton-ups-pxg-mib.c,
	  drivers/{powerware-mib.h => eaton-ups-pxg-mib.h},
	  drivers/snmp-ups.c: snmp-ups: split Eaton pw and pxgx_ups
	  implementation  To better manage the slight nuances (especially in
	  ups.status), between Eaton UPSs, implementation file was split in 2
	  files, and mib name were renamed from 'pw' to 'eaton_pw_nm2', and
	  from 'pxgx_ups' to 'eaton_pxg_ups'  Thanks to Quentin Renard
	  (Eaton) for discovering the bug

2022-11-22  Jim Klimov <jimklimov@gmail.com>

	* NEWS: added "hpe-pdu3-cis-mib" snmp-ups subdriver [#1713]

2022-11-22  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/hpe-pdu3-cis-mib.c: fix reference to
	  WITH_UNMAPPED_DATA_POINTS  This feature was only proposed, not yet
	  implemented in main codebase
	* docs/nut.dict: update for #1713

2022-11-22  Arnaud Quette <ArnaudQuette@eaton.com>

	* data/driver.list.in, drivers/Makefile.am,
	  drivers/hpe-pdu3-cis-mib.c, drivers/hpe-pdu3-cis-mib.h,
	  drivers/snmp-ups.c: snmp-ups: add support for HPE G2 Metered &
	  Switched PDU  This support is unitary (no daisychain support yet).
	  Also note that, due to SNMP v1 implementation limitations on this
	  device, you should prefer SNMP v3 to get both read and write rights

2022-11-21  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS: update for snmp-ups fix with wrong sysOID responses [#1710]

2022-11-21  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/snmp-ups.c: Fix sysOID retrieval on non-compliant device
	  Some SNMP agent (device) wrongly return the sysOID value as a
	  string instead of an OID.  This breaks the initial sysOID matching
	  system of the driver

2022-11-16  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac, m4/nut_report_feature.m4: m4/nut_report_feature.m4:
	  report configure invocation args
	* NEWS, docs/nut.dict: NEWS: snmp-ups added "eaton-pdu-nlogic-mib"
	  subdriver [#1698]

2022-11-15  Jim Klimov <jimklimov@gmail.com>

	* Makefile.am: Update Makefile.am  maintainer-clean the
	  config.nut_report_feature.log

2022-11-15  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/eaton-pdu-nlogic-mib.c: provide default (NULL) for
	  "device.part"
	* appveyor.yml: publish config.nut_report_feature.log artifact
	* m4/nut_report_feature.m4: NUT_REPORT_COMPILERS: separate cosmetic
	  colon from reported values
	* scripts/Windows/build-mingw-nut.sh: parameterize ARCH_PREFIX
	* scripts/Windows/build-mingw-nut.sh, ci_build.sh:
	  --enable-keep_nut_report_feature in CI builds
	* ci_build.sh: --enable-keep_nut_report_feature in CI builds
	* m4/nut_report_feature.m4: make config.nut_report_feature.log
	  contents more asciidoc-friendly
	* m4/nut_report_feature.m4: start config.nut_report_feature.log with
	  title, not empty line
	* m4/nut_report_feature.m4, configure.ac: introduce
	  --enable-keep_nut_report_feature
	* m4/nut_report_feature.m4, configure.ac: separate
	  NUT_REPORT_COMPILERS from NUT_PRINT_FEATURE_REPORT
	* m4/nut_report_feature.m4: update headings in generated
	  config.nut_report_feature.log sections
	* configure.ac: fix behavior for customized paths in
	  systemdsystemunitdir/systemdshutdowndir/systemdtmpfilesdir
	* configure.ac: fix mis-diagnosed "--with-systemdsystemunitdir=yes
	  was requested, but PKG_CONFIG..." when it was not requested in fact
	* .gitignore, m4/nut_report_feature.m4: m4/nut_report_feature.m4:
	  Rename conf_nut_report_feature artifact to
	  config.nut_report_feature.log
	* m4/nut_report_feature.m4: save compiler settings into
	  "conf_nut_report_feature" too
	* docs/nut.dict: update for nut-website::projects.txt
	* docs/nut.dict: update dict
	* docs/nut.dict: update for nut-website::projects.txt

2022-11-15  Arnaud Quette <arnaud.quette@gmail.com>

	* drivers/eaton-pdu-nlogic-mib.c: Update eaton-pdu-nlogic-mib.c  Fix
	  a typo in data flags

2022-11-12  Jim Klimov <jimklimov+nut@gmail.com>

	* appveyor.yml: disable required forced rebuilds of netsnmp (and
	  debug of build-mingw-prereqs.sh) [#1475]

2022-11-11  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/build-mingw-prereqs.sh: use curl if wget fails from
	  sourceforge [#1475]
	* appveyor.yml: temporarily force rebuild of netsnmp
	* scripts/Windows/build-mingw-prereqs.sh: handle possibly missing
	  SUDO differently [#1475]
	* appveyor.yml: use scripts/Windows/build-mingw-prereqs.sh [#1475]
	* scripts/Windows/build-mingw-prereqs.sh: Add
	  scripts/Windows/build-mingw-prereqs.sh [#1475]
	* appveyor.yml: fix typo
	* appveyor.yml: fix comment for config.log artifact
	* appveyor.yml: try to ensure presence of net-snmp in MSYS2 MinGW
	  builds [#1475]
	* scripts/Windows/README: update DLDIR and WSDIR definitions
	* scripts/Windows/README: update 'sudo' suggestions for Windows MSYS2
	  builds [#1475]
	* scripts/Windows/README: update envvar setting suggestions for
	  Windows MSYS2 builds [#1475]

2022-11-10  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/README, docs/config-prereqs.txt: document missing
	  bits for net-snmp in MSYS2 [#1475]
	* scripts/Windows/README: do not hardcode /usr/$ARCH when we have
	  $PREFIX
	* docs/nut-names.txt: clarify "unmapped.x.y" not-quite-namespace

2022-11-09  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/augeas/gen-nutupsconf-aug.py.in: skip a false-positive from
	  Augeas driver options

2022-11-09  Clappier, Eric <EricClappier@eaton.com>

	* data/driver.list.in: Add eaton (nLogic) pdu in driver.list
	* drivers/Makefile.am, drivers/eaton-pdu-nlogic-mib.c,
	  drivers/eaton-pdu-nlogic-mib.h, drivers/snmp-ups.c: Integrate
	  nLogic pdu (snmp)

2022-11-06  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  update freeipmi -largp install for OpenBSD (6.4 + 6.5 checked)

2022-11-03  Jim Klimov <jimklimov@gmail.com>

	* drivers/riello_usb.c: Update riello_usb.c  Log that guesstimation
	  will be used instead of device readings (if any)
	* docs/man/riello_usb.txt: Update riello_usb.txt  Use "guesstimate"
	  as common NUT term for future searches
	* docs/nut.dict: Update nut.dict
	* NEWS: Update NEWS

2022-11-03  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/riello_usb.c: testvar("localcalculation") only once, use
	  cached int in the loop [#1692]
	* drivers/riello_usb.c: do not set bogus "ups.temperature" as 0, log
	  low-prio message instead [#1692]
	* drivers/riello_usb.c: only log once about possibly missing
	  battery.charge and battery.runtime [#1692]
	* NEWS, docs/man/riello_usb.txt: fix "docs/man/riello_usb.txt"
	  description [#1692]
	* drivers/riello_usb.c: deduplicate message about possibly missing
	  battery.charge and battery.runtime [#1692]
	* drivers/riello_usb.c: fix indentation [#1692]

2022-11-02  Jim Klimov <jimklimov@gmail.com>

	* NEWS: we log uid/gid/chroot changes since 2.8.1 [#1694]

2022-11-01  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/nit.sh: expand permissions for NUT_CONFPATH/*.conf if
	  started as root (tested daemons cannot read them otherwise)
	* common/common.c: chroot_start(): log entering chroot jail (or
	  inability to do so)
	* common/common.c: become_user(): log change of UID/GID (or inability
	  to do so)

2022-10-31  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict
	* docs/nut.dict: Update nut.dict
	* docs/man/riello_usb.txt: Update riello_usb.txt  Added
	  localcalculation flag description
	* NEWS: added localcalculation flag for riello_usb

2022-10-30  amikot <3470285+amikot@users.noreply.github.com>

	* drivers/riello_usb.c: Update riello_usb.c  Added driver setting
	  flag `localcalculation`.  When enabled, driver will calculate
	  values of battery.runtime and battery.load locally. This is for
	  some Riello models (iPlug and iDialog series) that provides
	  incorrect values. Local calculation is done according to nominal
	  battery capacity, nominal battery voltage, actual battery charge,
	  maximum and actual UPS load. Added condition to filter off
	  situation when battery temperature variable is incorrectly set to
	  variable type maximum (255) - which is typical issue of some Riello
	  models (iPlug and iDialog series). If incorrect value is detected
	  temperature is set to 0.

2022-10-21  Yifeng Li <tomli@tomli.me>

	* docs/man/huawei-ups2000.txt: huawei-ups2000.txt: document another
	  UPS2000-G-1KRTS.  This is another newer "UPS2000-G" variant
	  encountered by a user in the wild and reported [1] to me.  [1]
	  Personal communication, thanks for reporting.
	* docs/man/huawei-ups2000.txt: huawei-ups2000.txt: document another
	  UPS2000-A-1KTTS.  This commit adds UPS2000-A-1KTTS with another
	  firmware version (V2R1C1SPC50) to the list of tested UPS models.
	  Thanks @ultinous-dancsa for reporting it [1].  [1]
	  https://github.com/networkupstools/nut/issues/1017#issuecomment-1020013055

2022-10-21  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in: fix more "egrep"
	  => "grep -E" cases in the older branch

2022-10-20  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/nut_check_python.m4: clarify message for "Version reported ...
	  not suitable""
	* NEWS: fix for snmp-ups type error handling [#1682]
	* drivers/snmp-ups.c: apply comments from PR review to make code
	  better understandable [#1682]

2022-10-18  Clappier, Eric <EricClappier@eaton.com>

	* drivers/snmp-ups.c: Fix walk issue with snmpv3 (** add type error
	  execption **)

2022-10-14  Jim Klimov <jimklimov@gmail.com>

	* drivers/snmp-ups.c: Update snmp-ups.c  Avoid potential NULL pointer
	  dereference in a debug printout

2022-10-13  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict
	* AUTHORS: Update AUTHORS

2022-10-13  Clappier, Eric <EricClappier@eaton.com>

	* drivers/apc-epdu-mib.c: Fix bad traduction in code
	* drivers/apc-epdu-mib.c: Fix outlets display  Add global current
	* drivers/snmp-ups.c: Fix index computed issue when OID is absent

2022-10-12  zakx <zakx@users.noreply.github.com>

	* AUTHORS, data/driver.list.in, docs/man/snmp-ups.txt: Documentation
	  update regarding Network-M2 card  The Eaton Gigabit Network Card
	  (Network-M2) is already well-supported by the powerware driver.
	  This patch updates the documentation to reflect this.

2022-10-12  Jim Klimov <jimklimov@gmail.com>

	* NEWS: apc-epdu-mib added for NUT v2.8.1

2022-10-10  Clappier, Eric <EricClappier@eaton.com>

	* drivers/Makefile.am, drivers/apc-epdu-mib.c,
	  drivers/apc-epdu-mib.h, drivers/snmp-ups.c: Add SNMP apc easy pdu
	  support

2022-10-05  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/README: update mingw libneon build instructions

2022-09-25  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx.c: qx_initbattery(): adjust initially known
	  "battery.voltage" right away, if we know the batt.packs and that
	  battery_voltage_reports_one_pack [#1279]
	* tests/NIT/nit.sh: make use of NUT_QUIET_INIT_SSL
	* NEWS, clients/upsclient.c, docs/man/upscli_init.txt:
	  clients/upsclient.c, docs, NEWS: support NUT_QUIET_INIT_SSL envvar
	  to hide "Init SSL without certificate database" message [#1662]
	* clients/upsclient.c: fix typo in message

2022-09-22  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx.c: qx_multiply_battvolt(): init temporary "s" to
	  0 (so if sscanf() somehow fails/skips, we have a non-toxic outcome)
	* drivers/nutdrv_qx.c: fix getval("battery_voltage_reports_one_pack")
	  for the driver option flag [#1279]

2022-09-21  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx.c, drivers/nutdrv_qx.h,
	  drivers/nutdrv_qx_bestups.c, drivers/nutdrv_qx_hunnox.c,
	  drivers/nutdrv_qx_mecer.c, drivers/nutdrv_qx_megatec-old.c,
	  drivers/nutdrv_qx_megatec.c, drivers/nutdrv_qx_mustek.c,
	  drivers/nutdrv_qx_q1.c, drivers/nutdrv_qx_voltronic-qs.c,
	  drivers/nutdrv_qx_voltronic.c, drivers/nutdrv_qx_zinto.c:
	  drivers/nutdrv_qx*: rename multiply_battvolt() to
	  qx_multiply_battvolt() to remain specific about the code source

2022-09-19  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS: reflect extended default ranges for max battery voltage when
	  guessing [#1279]
	* drivers/blazer_ser.c, drivers/blazer_usb.c:
	  drivers/blazer_{usb,ser}.c: bump DRIVER_VERSION due to changes in
	  blazer.c [#1279]
	* drivers/nutdrv_qx.c: qx_initbattery(): extend default
	  batt.volt.high range when guessing battery.packs count [#1279]
	* drivers/blazer.c: blazer_packs(): extend default batt.volt.high
	  range when guessing battery.packs count [#1279]
	* drivers/nutdrv_qx.c: qx_initbattery(): report if we autodetected
	  number of battery packs [#1279]
	* drivers/nutdrv_qx.c: qx_initbattery(): extend default
	  batt.volt.high range [#1279]
	* NEWS, docs/man/nutdrv_qx.txt, docs/nut.dict, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx.h, drivers/nutdrv_qx_bestups.c,
	  drivers/nutdrv_qx_hunnox.c, drivers/nutdrv_qx_mecer.c,
	  drivers/nutdrv_qx_megatec-old.c, drivers/nutdrv_qx_megatec.c,
	  drivers/nutdrv_qx_mustek.c, drivers/nutdrv_qx_q1.c,
	  drivers/nutdrv_qx_voltronic-qs.c, drivers/nutdrv_qx_voltronic.c,
	  drivers/nutdrv_qx_zinto.c: nutdrv_qx: introduce a
	  "battery_voltage_reports_one_pack" driver option [#1279]
	* drivers/nutdrv_qx.c: bump DRIVER_VERSION for issue #1279 changes
	* drivers/eaton-pdu-pulizzi-mib.c: standardize on "guesstimate",
	  "guesstimation" spelling
	* drivers/snmp-ups.c: standardize on "guesstimate", "guesstimation"
	  spelling
	* drivers/blazer.c: standardize on "guesstimate", "guesstimation"
	  spelling
	* docs/man/upscode2.txt, docs/nut.dict: docs/man/upscode2.txt,
	  nut.dict: standardize on "guesstimate", "guesstimation" spelling

2022-09-14  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: comment that _GNU_SOURCE may be needed for strptime()
	  detection
	* configure.ac: comment that _GNU_SOURCE may be needed for strptime()
	  detection
	* ci_build.sh, docs/Makefile.am, docs/man/Makefile.am, indent.sh,
	  scripts/subdriver/gen-snmp-subdriver.sh,
	  scripts/subdriver/gen-usbhid-subdriver.sh,
	  scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in,
	  tools/nut-scanner/scan_snmp.c: Replace "egrep" by "grep -E" in
	  shell code - modern systems frown on the former
	* configure.ac: move detection of TIME_WITH_SYS_TIME to before we use
	  it  This should help find strptime() in particular on systems that
	  have both time.h and sys/time.h files, and one does not include the
	  other (e.g. Arch Linux).
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  detail Arch Linux package installation for a build agent
	* docs/ci-farm-lxc-setup.txt, docs/nut.dict:
	  docs/ci-farm-lxc-setup.txt: detail getting "pacman" and related
	  tools on a Debian Linux host
	* tests/NIT/nit.sh: add a BASH way to check port availability
	* tests/NIT/nit.sh: typo fix looking in /proc/net/tcp
	* tests/NIT/nit.sh: cosmetic: fix indentations botched by IDEs

2022-09-12  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/documentation.txt: refer to NUT Configuration Examples book
	* docs/nut.dict: update for nut-website::projects.txt refresh
	* NEWS, drivers/apc-hid.c, scripts/upower/95-upower-hid.hwdb:
	  drivers/apc-hid.c, NEWS, 95-upower-hid.hwdb: Support VID:PID =
	  0x051d:0x0004 [#1429]

2022-09-08  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: avoid wasting time on spellcheck attempts in broken
	  environment
	* NEWS: indent nested bullets of NUT for Windows items
	* NEWS: nutdrv_qx subdriver voltronic_qs_protocol accepts "V" and "H"
	  dialects [#1623]
	* drivers/nutdrv_qx_voltronic-qs.c: add support for "H protocol"
	  [#1623]  Thanks go to research and PoC by @saper-2 at
	  https://github.com/networkupstools/nut/issues/1623#issuecomment-1236329499

2022-09-06  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c: retain "driver.parameter.override.XXX" (and
	  ".default.XXX") for troubleshooting [#1279]
	* drivers/libhid.c: log if we hit the "paranoia check" with
	  inconsistent Max vs Min [#1512]
	* drivers/nutdrv_qx.c: qx_initbattery(): initialize battery.packs and
	  battery.voltage.low/high/nom if known always (not just if
	  battery.charge or battery.runtime are not served) [#1279]
	* drivers/main.c: retain "driver.parameter.override.XXX" (and
	  ".default.XXX") for troubleshooting [#1279]
	* drivers/libhid.c: log if we hit the "paranoia check" with
	  inconsistent Max vs Min [#1512]

2022-09-03  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: enable linux+mingw cross builds as part of
	  NUT baseline

2022-09-02  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS, drivers/powercom-hid.c: drivers/powercom-hid.c: fix
	  UPS.Battery.ManufacturerDate to map to battery.mfr.date  ...(not
	  battery.date which is the maintenance/replacement date)  Closes:
	  #1644
	* drivers/cps-hid.c: prefer mapping battery.mfr.date from
	  UPS.Battery.ManufacturerDate if available [#437]
	* drivers/usbhid-ups.c: date_conversion_fun(): comment the PDC
	  standard formula for reference
	* common/Makefile.am, common/strsep.c, configure.ac, include/str.h:
	  Add fallback strsep() implementation (for Windows mingw builds)
	  after PR #1639
	* include/Makefile.am: fix merge error (duplicate code)

2022-09-01  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upslog.c: adjust to Windows branch after PR #1639

2022-08-31  Jim Klimov <jimklimov+nut@gmail.com>

	* UPGRADING: refer to collectd PR about int/size_t/time_t adaptation
	  for NUT API consumers
	* tools/nut-scanner/nut-scan.h: ensure useconds_t is defined
	* NEWS, UPGRADING: note public API header revision for NUT v2.8.1
	* include/parseconf.h: ensure size_t is defined
	* clients/upsclient.h: ensure time_t is defined
	* clients/Makefile.am, include/Makefile.am,
	  tools/nut-scanner/Makefile.am:
	  {tools/nut-scanner,include,clients}/Makefile.am: comment
	  include_HEADERS as "Optionally deliverable as part of NUT public
	  API"

2022-08-29  Jim Klimov <jimklimov@gmail.com>

	* drivers/usb-common.h: Update usb-common.h  Detect configure script
	  error: Neither HAVE_USB_H nor HAVE_LUSB0_USB_H is set for the
	  WITH_LIBUSB_0_1 build
	* tools/nut-usbinfo.pl: Update nut-usbinfo.pl  Detect configure
	  script error: Neither HAVE_USB_H nor HAVE_LUSB0_USB_H is set for
	  the WITH_LIBUSB_0_1 build
	* tools/nut-usbinfo.pl: Update nut-usbinfo.pl  Typo fix for `ifdef
	  HAVE_USB_H` (libusb-0.1 header)
	* drivers/usb-common.h: Update usb-common.h  Typo fix for `ifdef
	  HAVE_USB_H` (libusb-0.1 header)
	* scripts/subdriver/gen-usbhid-subdriver.sh: Update
	  gen-usbhid-subdriver.sh  Old `-x generic` suggestion apparently
	  became `-x explore` later in this timeline (also `-d1` to dump and
	  exit after one data collection loop, without requiring a valid
	  `NUT_STATEPATH`).

2022-08-29  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/hid-subdrivers.txt: remind about wire byte order vs. computer
	  multi-byte word layout
	* docs/hid-subdrivers.txt: document USB HID report descrptor
	  troubleshooting [#1618]  Great thanks to @nbriggs for putting this
	  together and practicing many times!
	* docs/hid-subdrivers.txt: mention disable_fix_report_desc
	  troubleshooting [#1566]
	* docs/hid-subdrivers.txt: add chapter on "Updating a subdriver"
	* docs/hid-subdrivers.txt: update chapter on gen-usbhid-subdriver.sh
	* docs/nut.dict: Update nut.dict for hid-subdrivers.txt

2022-08-29  Cy Schubert <cy@FreeBSD.org>

	* clients/upslog.c: upslog: Messages should go to syslog  Messages to
	  stderr are unreliable when output to the console and mesg is n
	  (0600). For example, the following will disallow console output to
	  UID uucp.  # mesg < /dev/console is n # mesg < /dev/ttyv0 is n # ls
	  -l /dev/console /dev/ttyv0 crw-------  1 root  wheel   0x7 Aug 29
	  14:03 /dev/console crw-------  1 root  wheel  0x46 Aug 29 12:32
	  /dev/ttyv0 #

2022-08-28  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-usbinfo.pl: build against mingw-w64-x86_64-libusb-win32
	  as libusb-0.1 variant
	* drivers/usb-common.h: build against mingw-w64-x86_64-libusb-win32
	  as libusb-0.1 variant
	* m4/nut_check_libusb.m4: detect mingw-w64-x86_64-libusb-win32 as
	  libusb-0.1 variant
	* scripts/subdriver/gen-usbhid-subdriver.sh: only ask for VENDORID
	  and PRODUCTID interactively if not provided via CLI args
	* scripts/subdriver/gen-usbhid-subdriver.sh: update instructions
	* docs/nut.dict: add "sstate"
	* m4/nut_check_libusb.m4: when on Windows, prefer libusb-0.1 [#1507]
	* configure.ac, drivers/libusb0.c: fix detection of strlwr() and
	  fallback strcasestr() implem
	* NEWS: sstate should always PING a driver (even if last known as
	  stale) [#1626]
	* server/sstate.c: sstate_dead(): always PING a driver (even if last
	  known as stale) [#1626]

2022-08-27  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/usbhid-ups.c: hid_ups_walk(): for HU_WALKMODE_FULL_UPDATE
	  with "pollonly" mode, re-read HU_FLAG_SEMI_STATIC and
	  HU_FLAG_STATIC entries to detect "Driver stale" situations [#1624]
	* common/common.c: get_libname_in_dir(): check for exact filename
	  match (not just common start of string)
	* drivers/usbhid-ups.c: cosmetic fixes
	* drivers/usbhid-ups.c: account interrupt_pipe_EIO_count for
	  suggestions when reconnecting [#1295]
	* drivers/usbhid-ups.c: if reconnecting with use_interrupt_pipe mode,
	  suggest to use pollonly [#1295]
	* drivers/usbhid-ups.c: only report "Closing comm_driver previous
	  handle" when we do so, and invalidate it too [#1627]
	* drivers/dstate.c, server/sstate.c: server/sstate.c: log
	  DATAOK/DATASTALE processing

2022-08-25  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update with key words from NUT for Windows effort
	  for nut-website

2022-08-25  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/README: document building shared
	  "libnetsnmp-40.dll"  Thanks to Denis Serov for the hints posted at
	  https://alioth-lists.debian.net/pipermail/nut-upsdev/2016-April/007171.html
	* tests/NIT/nit.sh: do not fail "make check-NIT" started by root just
	  because daemons drop privileges [#1568]
	* docs/config-prereqs.txt: update to OpenBSD 6.5 due to JDK 11+ for
	  Jenkins agents, and update other OS instructions

2022-08-24  Jim Klimov <jimklimov@gmail.com>

	* scripts/python/module/PyNUT.py.in: Update PyNUT.py.in  Add a note
	  on `PyNUTError("Always a string")` to file-heading changelog

2022-08-24  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/module/test_nutclient.py.in: allow testing against
	  UPSD on a remote host
	* scripts/python/module/test_nutclient.py.in: fail if we could
	  RunUPSCommand/SetUPSVar/DeviceLogin when we should not have [#1589]
	* scripts/python/module/README: typo fixes
	* scripts/python/module/PyNUT.py.in, scripts/python/module/README:
	  scripts/python/module/PyNUT.py.in: raise PyNUTError() from strings
	  not byte arrays [#1589]

2022-08-24  Jim Klimov <jim@jimklimov.com>

	* NEWS: RFC 9271 published 2022-08-10

2022-08-23  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/module/test_nutclient.py.in:
	  ListClients-dummy-after: check b"dummy" (not a string) as dict key
	  [#1589]
	* scripts/python/module/test_nutclient.py.in: thanks to "ex =
	  str(sys.exc_info()[1])" we should check strings, not byte arrays
	  [#1589]
	* scripts/python/module/test_nutclient.py.in: account unexpected
	  failures to detect actual errors [#1589]
	* scripts/python/module/PyNUT.py.in: raise PyNUTError() with standard
	  protocol strings; leave layman text to debug printouts [#1589]
	* scripts/python/module/PyNUT.py.in: raise PyNUTError() with standard
	  protocol strings; leave layman text to debug printouts [#1589]
	* tools/nut-scanner/nut-scan.h: avoid including private "timehead.h"
	  in public header [#1593]
	* tools/nut-scanner/nut-scan.h: prefer co-located "nutscan-*.h" in
	  public header [#1593]
	* tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c:
	  tools/nut-scanner/nut-scan.h: avoid including private
	  "nut_stdint.h" in public header [#1593]
	* scripts/Windows/build-mingw-nut.sh: report completion of
	  configure/build/install phases
	* include/Makefile.am, clients/Makefile.am: rectify distributon of
	  parseconf.h [#1593]
	* tools/nut-scanner/nut-scan.h: avoid including private "config.h" in
	  public header [#1593]  In-tree consumers of this file include
	  "common.h" first which in turn includes "config.h" first.
	* tools/nut-scanner/nutscan-ip.c, tools/nut-scanner/nutscan-ip.h:
	  tools/nut-scanner/nutscan-ip.{c,h}: avoid including private
	  "common.h" in public header [#1593]
	* docs/new-drivers.txt, docs/nut.dict: docs/new-drivers.txt: update
	  documentation for TYPE_FD_SER [#1593]
	* tools/nut-scanner/nut-scan.h: avoid including private "timehead.h"
	  in public header [#1593]
	* tools/nut-scanner/nut-scan.h: prefer co-located "nutscan-*.h" in
	  public header [#1593]
	* tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c:
	  tools/nut-scanner/nut-scan.h: avoid including private
	  "nut_stdint.h" in public header [#1593]
	* include/Makefile.am, clients/Makefile.am: rectify distributon of
	  parseconf.h [#1593]
	* tools/nut-scanner/nut-scan.h: avoid including private "config.h" in
	  public header [#1593]  In-tree consumers of this file include
	  "common.h" first which in turn includes "config.h" first.
	* tools/nut-scanner/nutscan-ip.c: tools/nut-scanner/nutscan-ip.{c,h}:
	  avoid including private "common.h" in public header [#1593]
	* clients/nutclientmem.cpp: include config.h first
	* drivers/serial.c, drivers/serial.h: drivers/serial.{h,c}: relocate
	  ser_flush_io() to ser_flush_in() to match logical relation and
	  documentation ordering [#1593]
	* clients/nutclientmem.cpp: include config.h first

2022-08-22  Jim Klimov <jimklimov@gmail.com>

	* clients/nutclient.cpp: Update nutclient.cpp  include "config.h"
	  first

2022-08-21  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/Makefile.am: separate delivery of C++ headers - do it only
	  if we deliver the libs [#1598]
	* tests/NIT/nit.sh: warn to have prepared a listening NUT_PORT before
	  asking for individual test cases
	* ci_build.sh: refactor with autogen_get_CONFIGURE_SCRIPT and
	  configure_CI_BUILDDIR for better out-of-tree builds
	* appveyor.yml: shorter lines in install proto area report
	* scripts/Windows/dllldd.sh: less ominous warning message
	* appveyor.yml: fix shell syntax for YAML transport
	* scripts/Windows/dllldd.sh: consult COMPILER_PATHS for C++ libs
	  [#1603]
	* m4/nut_check_libnetsnmp.m4, tools/nut-scanner/Makefile.am:
	  tools/nut-scanner/Makefile.am: fix referencing of libnetsmp
	  (static) build flags, so shared libnutscan.dll can be built [#1603]
	* ci_build.sh: pass PARMAKE_FLAGS to build-mingw-nut.sh
	* ci_build.sh: require successful autogen for cross-mingw builds
	* ci_build.sh: refactor with autogen_get_CONFIGURE_SCRIPT and
	  configure_CI_BUILDDIR for better out-of-tree builds
	* tools/nut-scanner/Makefile.am: enable shared DLL builds for C++
	  libraries [#1603]
	* clients/Makefile.am: enable shared DLL builds for C++ libraries
	  [#1603]
	* Jenkinsfile-dynamatrix: failure is no longer an option in
	  linux+mingw Windows cross-builds
	* appveyor.yml: "find" all filenames we would archive to 7z artifact
	  from the install proto area
	* scripts/Windows/build-mingw-nut.sh: use different CXXFLAGS from
	  CFLAGS (append vs external settings)
	* appveyor.yml: archive any NUT-for-Windows*.7z tarballs
	* clients/Makefile.am: separate delivery of C++ headers - do it only
	  if we deliver the libs [#1598]
	* common/snprintf.c: added a FIXME for dopr("%p") on some platforms
	* include/timehead.h: fence with "extern C"
	* clients/nutclientmem.cpp: avoid (mingw) conflict for C++ builds
	  with fallback gmtime_r() etc that C+ code does not even use [#1594]
	* clients/nutclient.cpp: avoid (mingw) conflict for C++ builds with
	  fallback gmtime_r() etc that C+ code does not even use [#1594]
	* clients/Makefile.am: add libnutclient.la to lib_LTLIBRARIES also on
	  Windows now so it gets installed [#1594, #1598]  Closes: #1598
	* clients/Makefile.am: bump semver of libnutclient due to added
	  TcpClient::setDebugConnect(bool) [#1594]
	* clients/nutclient.cpp, clients/nutclient.h: clients/nutclient.cpp:
	  internal::Socket::connect(): make debug noise optional
	* tests/NIT/nit.sh: warn to have prepared a listening NUT_PORT before
	  asking for individual test cases

2022-08-21  Cy Schubert <cy@FreeBSD.org>

	* NEWS, clients/upslog.c, docs/man/upslog.txt: upslog: Add support
	  for multiple UPSs  upslog is a utility that logs UPS status at
	  regular intervals, specified by the -i option. Unfortunately upslog
	  supports only one UPS. For sites that need to monitor multiple UPSs
	  the options are to cobble an rc script for each or doctor up the
	  nut_upslog.in script to support cloning of the script.
	  Unfortunately an rc script capable of being cloned would become the
	  source of more PRs and would require significanly more tehcnical
	  documentation that by itself might become confusing for the average
	  system administrator.  Therefore a new -m option is added to
	  support multiple UPSs using the same invocation of upslog. The
	  patch parses a -m option, polling each ups listed.

2022-08-20  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/Makefile.am: check-NIT-devel: become EXEEXT-aware
	* tests/NIT/nit.sh: report if skipping cppnit because absent
	* clients/nutclient.cpp: Socket::connect(): add debug
	* tests/NIT/Makefile.am: check-NIT-devel: become EXEEXT-aware
	* tests/NIT/nit.sh: report if skipping cppnit because absent
	* tests/Makefile.am: Revert "tests/Makefile.am: make POSIX style
	  short names aliases for HAVE_WINDOWS .exe targets"  This reverts
	  commit b3d36d9a81f42ca6e2cae15e04e54f5ce6ec80f6.
	* tests/Makefile.am: make POSIX style short names aliases for
	  HAVE_WINDOWS .exe targets
	* clients/nutclient.cpp: Socket::connect(): add debug
	* clients/nutclient.cpp: port W32_NETWORK_CALL_OVERRIDE code from
	  upsclient.c

2022-08-19  Kubisz Mariusz <mmzk987@gmail.com>

	* drivers/blazer.c: Blazer: Accept the value of "idleload" equal to
	  zero  It allows setting the "idleload" parameter equal to zero

2022-08-19  Jim Klimov <jimklimov@gmail.com>

	* appveyor.yml: Update appveyor.yml  Add mingw-w64-x86_64-cppunit to
	  check `cppnit` et al

2022-08-19  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: NUT_REPORT_FEATURE the HAVE_CXX11 and HAVE_CPPUNIT
	  aspects
	* clients/nutclient.cpp: port connect() WIN32 code from upsclient.c
	* docs/config-prereqs.txt: document how to get cppunit in Windows
	  MSYS2 [#1594]
	* appveyor.yml: tarball built NUT binaries marked as x86_64 (maybe do
	  i686 later?)
	* configure.ac: NUT_REPORT_FEATURE the HAVE_CXX11 and HAVE_CPPUNIT
	  aspects
	* configure.ac, m4/nut_check_libnetsnmp.m4,
	  tools/nut-scanner/Makefile.am: introduce WITH_SNMP_STATIC flag
	* drivers/riello_ser.c: fix whitespace in WIN32 codepath
	* server/conf.c: pedantically handle a case of VALID_FD
	* server/conf.c: pedantically handle a case of ERROR_FD
	* drivers/netxml-ups.c: pedantically handle a case of ERROR_FD
	* drivers/dstate.c: no need to cast sockfd to int anymore, we adhere
	  to TYPE_FD (or fail build if not)
	* clients/nutclient.cpp: err on the safe side, check "ifdef" before
	  we "define" WINAPI-compatibility macros
	* clients/nutclient.cpp: err on the safe side, check "ifdef" before
	  we "define" WINAPI-compatibility macros
	* drivers/apcupsd-ups.c: convert to use of TYPE_FD_SOCK and its
	  macros
	* common/Makefile.am: only add wincompat.{c,h} to libcommon* if
	  HAVE_WINDOWS in the build
	* clients/upssched.c: try_connect(): further reduce discrepancy of
	  WIN/non-WIN codepaths
	* clients/upsmon.h: clients/upsmon.{c,h}: rename ST_CONNECTED to
	  ST_CLICONNECTED - WIN32 cleanup
	* clients/upsmon.c, clients/upsmon.h: clients/upsmon.{c,h}: rename
	  ST_CONNECTED to ST_CLICONNECTED  ST_CONNECTED is defined for WIN32
	  DDE (Dynamic Data Exchange) in ddeml.h Renaming avoids the conflict
	  in easiest manner
	* clients/upsmon.c, clients/upsmon.h: clients/upsmon.{c,h}: rename
	  ST_CONNECTED to ST_CLICONNECTED  ST_CONNECTED is defined for WIN32
	  DDE (Dynamic Data Exchange) in ddeml.h Renaming avoids the conflict
	  in easiest manner
	* NEWS: group "NUT for Windows" bullet points

2022-08-18  Jim Klimov <jimklimov@gmail.com>

	* appveyor.yml: Update appveyor.yml  Hush back down the
	  bundle-install
	* Makefile.am: Update Makefile.am  Fix detection of cgiexecdir;
	  comments on dirs involved here.
	* appveyor.yml: Update appveyor.yml
	* appveyor.yml: Update appveyor.yml  archive config.log pass filename
	  version differently

2022-08-18  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: restructure error-catching in default BUILD_TYPE=""
	  case
	* drivers/snmp-ups.c: err on the safe side with "long" value and
	  "int" arg of nut_snmp_walk()
	* scripts/Windows/dllldd.sh: ignore zero-sized files under DESTDIR
	  (bad copies etc)
	* scripts/Windows/dllldd.sh: one hit under DESTDIR suffices
	* scripts/Windows/build-mingw-nut.sh: tell DESTDIR to dllldd() search
	  code
	* scripts/Windows/dllldd.sh: ignore some more known system DLLs
	* Makefile.am: tell scripts/Windows/dllldd.sh to check under DESTDIR
	  [#1492]
	* Makefile.am: Revert "Makefile.am: install freshly built libups*.dll
	  libnut*.dll into non-binary dirs from the bin [#1492]"  This
	  reverts commit b39e3a3d2d1652ef23e82bee2c2dc4d638751b5a.
	* scripts/Windows/dllldd.sh: rearrange to probe for each file in all
	  possible locations; check under DESTDIR if provided
	* scripts/Windows/dllldd.sh: comment about not-searching for our own
	  build products
	* m4/nut_check_python.m4: inform if python version was not suitable
	  [#1583]
	* m4/nut_check_python.m4: take "no" for an answer [#1583]
	* m4/nut_check_python.m4: simplify PYTHON*_VERSION_REPORT to avoid
	  brackets from m4 code [#1583]
	* m4/nut_check_python.m4: constrain python{,2,3} versions - check
	  that what is found is in range [#1583]
	* scripts/Windows/dllldd.sh: typo fix
	* scripts/Windows/build-mingw-nut.sh: handle cgi-bin dir too
	* appveyor.yml: typo fix
	* Makefile.am: install freshly built libups*.dll libnut*.dll into
	  non-binary dirs from the bin [#1492]
	* m4/nut_check_python.m4: inform if python version was not suitable
	  [#1583]
	* m4/nut_check_python.m4: take "no" for an answer [#1583]
	* m4/nut_check_python.m4: simplify PYTHON*_VERSION_REPORT to avoid
	  brackets from m4 code [#1583]
	* m4/nut_check_python.m4: try to fix Windows MSYS2 "buggy" path for
	  python{,2,3} site-packages [#1584]
	* m4/nut_check_python.m4: comment about Windows MSYS2 "buggy" path
	  for python{,2,3} site-packages [#1584]
	* m4/nut_check_python.m4: constrain python{,2,3} versions - check
	  that what is found is in range [#1583]
	* Makefile.am: install-win-bundle-thirdparty: fix again detection of
	  presence of cgiexecdir [#1492]
	* appveyor.yml: archive installed artifacts with 7z (zip format does
	  not do sym/hard-links)
	* INSTALL.nut: update notes of NUT for Windows building/installing -
	  that CI would publish at least archives
	* appveyor.yml: reword install step so cmd=>bash likes it
	* INSTALL.nut: update notes of NUT for Windows building/installing -
	  current state of the art
	* ci_build.sh, scripts/Windows/build-mingw-nut.sh: ci_build.sh +
	  scripts/Windows/build-mingw-nut.sh: suggest use of
	  INSTALL_WIN_BUNDLE to call "make install-win-bundle"
	* ci_build.sh: suggest use of "make install-win-bundle" in default
	  BUILD_TYPE="" case
	* ci_build.sh: restructure error-catching in default BUILD_TYPE=""
	  case
	* appveyor.yml: build meaningful base dirname into downloadable zip
	  bundle

2022-08-18  Jim Klimov <jim@jimklimov.com>

	* appveyor.yml: Update appveyor.yml  Display ccache stats after
	  tarballing, to see them better. And still after build in case tests
	  fail. (TODO: on any outcome - postprocessing tag?)  Do not
	  shell-trace tarballing routine.

2022-08-18  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/snmp-ups.c: snmp-ups: fix alarm processing  only walk the
	  number of present alarms, instead of INT_MAX, to avoid potential
	  blocking

2022-08-17  Jim Klimov <jimklimov@gmail.com>

	* appveyor.yml: no `time`!  No `time`: it outputs `/^sys/` - fatal
	  for powershell (or appveyor?) console scanner
	* appveyor.yml: try harder to avoid AppVeyor/Powershell induced
	  faults
	* appveyor.yml: try to avoid AppVeyor/PowerShell complaints about
	  presence of stderr output

2022-08-17  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: introduce CI_SKIP_CHECK support to help split CI jobs
	  into stages
	* ci_build.sh: comment away DMF-specific check_gitignore() calls for
	  now - they refer to BUILD_TGT not (yet) defined in this codepath
	* ci_build.sh: clarify report of "Using ccache via PATH..."
	* Makefile.am: install-win-bundle-thirdparty: cgiexecdir may be not
	  installed (others too technically... but unlikely a valid
	  situation) [#1492]
	* scripts/Windows/dllldd.sh: drop diff markup chars
	* Makefile.am: install-win-bundle-thirdparty: mute the big logic
	  block [#1492]
	* Makefile.am: install-win-bundle-thirdparty: handle cgiexecdir if
	  present [#1492]
	* Makefile.am: force-hardlink installed DLLs into secondary dirs
	  (overwrite if older link/copy exists)
	* scripts/Windows/dllldd.sh: cripts/Windows/dllldd.sh: optimize by
	  filtering away more well-known Windows-provided DLLs
	* scripts/Windows/dllldd.sh: refactor dllldddir() to only look at any
	  DLL once (MSYS2 has a huge inter-dependency tree)
	* scripts/Windows/dllldd.sh: optimize to check if base dir for
	  planned listing exists
	* scripts/Windows/dllldd.sh: not all shells seen auto-expand
	  "{bin,lib}" notation
	* scripts/Windows/dllldd.sh: prefer objdump over ldd as more reliable
	  (especially when many files are queried and one hit suffices for
	  script logic)
	* scripts/Windows/dllldd.sh: optimize by feeding many PE files to
	  same ldd/objdump command (where supported)
	* scripts/Windows/dllldd.sh: optimize by filtering away well-known
	  Windows-provided DLLs
	* scripts/Windows/dllldd.sh: subshell dllldd() with C locale [#1492]
	* scripts/Windows/dllldd.sh: refactor dllldddir() [#1492]
	* appveyor.yml: make check and install quieter
	* appveyor.yml: "make install-win-bundle" and save artifacts with
	  Bundle of binary files and FOSS dependencies of NUT for Windows
	  [#1492, #1552]
	* scripts/Windows/build-mingw-nut.sh: refactor to "make
	  install-win-bundle" target recipe [#1492]
	* Makefile.am: define "make install-win-bundle" target recipe [#1492]
	* scripts/Windows/build-mingw-nut.sh, scripts/Windows/dllldd.sh:
	  scripts/Windows/dllldd.sh: transplant dllldddir() from
	  build-mingw-nut.sh [#1492]
	* scripts/Windows/dllldd.sh: fallback support for MSYS2 path search
	  [#1492]
	* scripts/Windows/build-mingw-nut.sh, scripts/Windows/dllldd.sh:
	  Split scripts/Windows/dllldd.sh as a separately usable shell tool
	  or lib [#1492]
	* appveyor.yml: introduce CI_SKIP_CHECK support to help split CI jobs
	  into stages
	* ci_build.sh: introduce CI_SKIP_CHECK support to help split CI jobs
	  into stages
	* ci_build.sh: comment away DMF-specific check_gitignore() calls for
	  now - they refer to BUILD_TGT not (yet) defined in this codepath
	* appveyor.yml: try harder to save ccache for next builds
	* appveyor.yml: add after_build stage to report ccache stats
	* NEWS, docs/nut.dict: NEWS: Proclaim AppVeyor CI tests of NUT for
	  Windows [#1552]
	* ci_build.sh: clarify report of "Using ccache via PATH..."
	* appveyor.yml: Assorted stats: "du" just the MSYS tree, without
	  looking in other filesystems like /proc
	* appveyor.yml: dispose of "ps" in favor of "cmd" to invoke MSYS2
	  shell scripts (too much hassle with wording on stderr)
	* appveyor.yml: pre-create /var/cache/pacman/pkg on newly made
	  workers [#1552]
	* appveyor.yml: Only cache packages with appveyor.yml [#1552]
	* appveyor.yml: Introduce appveyor.yml to automate NUT for Windows
	  builds [#1552]

2022-08-16  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS: fall back to /usr/local/... if libltdl was not found by
	  default [#1577]
	* m4/nut_check_libltdl.m4: fall back to /usr/local/... if no custom
	  CFLAGS were specified and libltdl was not found by default [#1577]
	* scripts/python/module/README: typo fix
	* scripts/python/module/README: document GetUPSNames() [#746, #549]
	* scripts/python/module/README: clarify about "str" vs "byte" strings
	  (hassle of Python 3) [#746]

2022-08-15  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/module/PyNUT.py.in: refactor with GetUPSNames() for
	  py2/py3 compatibility [#549, #746]
	* scripts/python/module/PyNUT.py.in: fix exception in SetRWVar():
	  strip EOL
	* tests/NIT/nit.sh: rearrange handling (and messaging) for
	  DEBUG_SLEEP

2022-08-14  Jim Klimov <jimklimov@gmail.com>

	* NEWS: snmp-ups updated for invalid negative values [#1558]

2022-08-14  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: consider --with-nut-scanner option [#1560]
	* docs/packager-guide.txt: add suggestions for nut-scanner [#1560]
	* UPGRADING: recommend packagers to "configure --with-all" by default
	* NEWS, UPGRADING: announce "configure --with-nut-scanner" [#1560]
	* configure.ac, tools/nut-scanner/Makefile.am: configure.ac: add
	  --with-nut-scanner (also as part of --with-all)  Closes: #1560
	* m4/nut_arg_with.m4: escape dashes into underscores for valid shell
	  var names
	* configure.ac: clarify --with-all help message
	* docs/config-prereqs.txt: mention that "MinGW UCRT x64" environment
	  seems to also work for NUT builds
	* docs/man/usbhid-ups.txt: update with known illumos support
	* docs/man/usbhid-ups.txt: add a toggle to disable_fix_report_desc
	  [#1566]
	* drivers/apc-hid.c, drivers/cps-hid.c, drivers/usbhid-ups.c,
	  drivers/usbhid-ups.h: usbhid-ups, cps-hid, apc-hid: add a toggle to
	  disable_fix_report_desc [#1566]
	* NEWS: openssl-3.0.x supported with openssl-1.1.0 support code from
	  NUT v2.8.0 [#1547]
	* include/common.h: update comments to document TYPE_FD* macros
	  [#1556]
	* drivers/dstate.c: whitespace and typo fixes (cosmetic) [#1556]
	* UPGRADING: document changes for TYPE_FD* in headers (Windows
	  branch) [#1556]
	* clients/upssched.c: start_daemon(): firther refactor to simplify
	  code [#1556]
	* INSTALL.nut: refer to GitHub project regarding NUT for Windows [#5]

2022-08-14  Jim Klimov <jim@jimklimov.com>

	* scripts/python/app/NUT-Monitor-py3qt5.in: fix __find_icon_file()...
	  ...to look also for package-installed icons (in OS location)
	  Thanks to @Perlovka for noticing and proposing a fix, and to
	  @lukejr for confirming it as correct.  Closes: #1567
	* scripts/Solaris/nut-driver.xml.in,
	  scripts/Solaris/nut-server.xml.in,
	  scripts/Solaris/svc-nut-server.in: scripts/Solaris/nut-server*,
	  nut-driver.xml: create NUT_RUN_DIR before starting the driver (e.g.
	  at boot) [#1564]
	* configure.ac, scripts/Solaris/Makefile.am: introduce
	  WITH_SOLARIS_INIT and depend WITH_SOLARIS_SMF on whether we want
	  packaging for Solaris/illumos [#1554]
	* NEWS: update for Solaris/illumos packaging and SMF service support
	  [#1554, #1564]

2022-08-13  Jim Klimov <jim@jimklimov.com>

	* NEWS, docs/nut.dict: NEWS: client/nutclient{,mem}.{cpp,h}: add
	  listDeviceClients() and deviceGetClients(dev)
	* tests/cpputest-client.cpp: cover device login and getting list of
	  clients
	* clients/nutclient.cpp, clients/nutclient.h,
	  clients/nutclientmem.cpp, clients/nutclientmem.h:
	  client/nutclient{,mem}.{cpp,h}: add listDeviceClients() and
	  deviceGetClients(dev)

2022-08-12  Jim Klimov <jimklimov+nut@gmail.com>

	* include/common.h, server/nut_ctype.h, server/stype.h,
	  server/upsd.c: Introduce also TYPE_FD_SOCK for sockets [#1556]
	* clients/upssched.c, clients/upssched.h, common/common.c,
	  drivers/apcsmart.c, drivers/belkinunv.c, drivers/clone-outlet.c,
	  drivers/clone.c, drivers/dstate.c, drivers/dstate.h,
	  drivers/dummy-ups.c, drivers/libshut.c, drivers/main.c,
	  drivers/main.h, drivers/serial.c, include/common.h,
	  server/sstate.c, server/sstate.h, server/stype.h, server/upsd.c,
	  server/upstype.h, tools/nut-scanner/scan_eaton_serial.c: Refactor
	  {IN}VALID_FD vs. {IN}VALID_FD_SER, and some cases of int/HANDLE vs.
	  TYPE_FD [#1556]
	* drivers/serial.c: refactor ser_set_*() and ser_get_*() to define
	  once, implement per target (WIN32 or not)
	* include/common.h: separate definitions of TYPE_FD, ERROR_FD,
	  VALID_FD() macros for usual file descriptors vs. types for serial
	  port work [#1556]
	* common/common.c, drivers/belkinunv.c, drivers/libhid.h,
	  drivers/libshut.h, drivers/serial.c, drivers/serial.h,
	  include/common.h, server/upsd.c,
	  tools/nut-scanner/scan_eaton_serial.c: Rename platform-abstracted
	  serial/SHUT file descriptor macro TYPE_FD => TYPE_FD_SER [#1556]
	* server/upsd.c: ups_available(): fix reporting "Data stale" for an
	  UPS that never connected (WIN32 only) [#1477]
	* server/upsd.c: mainloop(): report that we retry connecting to
	  driver socket and what the outcome was (at all - WIN32)
	* server/upsd.c: mainloop(): report that we retry connecting to
	  driver socket and what the outcome was more clearly
	* drivers/serial.c: convert from ERROR_FD equality to !VALID_FD()
	* tools/nut-scanner/scan_xml_http.c: fix whitespace
	* tools/nut-scanner/scan_usb.c: tools/nut-scanner/scan_snmp.c:
	  ifdef-scope nut_usb_get_busses() vs nut_usb_busses for WIN32 or not
	* tools/nut-scanner/scan_eaton_serial.c: convert from ERROR_FD
	  equality to VALID_FD()

2022-08-12  Jim Klimov <jim@jimklimov.com>

	* docs/net-protocol.txt: typo fix "LIST CLIENTS" => "LIST CLIENT"
	  [#549]
	* NEWS, docs/nut.dict: NEWS: report fixed PyNUT::ListClients() [#549]
	  and added DeviceLogin()
	* scripts/python/module/test_nutclient.py.in: report end of script
	  aka PyNUT instance teardown
	* tests/NIT/nit.sh: test python DeviceLogin() and ListClients()
	  methods with upsmon-role credentials
	* scripts/python/module/PyNUT.py.in: extend PASSWORD handling for
	  values with spaces
	* scripts/python/module/test_nutclient.py.in: add DeviceLogin()
	  method
	* scripts/python/module/README: add DeviceLogin() method
	* scripts/python/module/PyNUT.py.in: add DeviceLogin() method
	* scripts/python/module/PyNUT.py.in: bump version for fixed
	  ListClients()
	* scripts/python/module/test_nutclient.py.in: confirm that
	  ListClients() fails for unknown device
	* scripts/python/module/test_nutclient.py.in: report more visibly if
	  we have a real result or an exception
	* scripts/python/module/test_nutclient.py.in: test ListClients()
	  [#549]
	* scripts/python/module/PyNUT.py.in: fix ListClients()  * to call the
	  right protocol command  Closes: #549  * handle the begin/end
	  messages correctly to work at all  * make ListClients() usable with
	  "ups==None"  * parse "CLIENT ups host" in correct order

2022-08-12  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/ietf-mib.c: snmp-ups: flag invalid negative values for IETF
	  MIB

2022-08-11  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/nutscan-ip.h: fix type of include file/markup
	* server/upsd.c: fix whitespace
	* server/sstate.c: fix whitespace
	* drivers/belkinunv.c: convert from ERROR_FD equality to !VALID_FD()
	* drivers/apcsmart.c: convert from ERROR_FD equality to !VALID_FD()
	* INSTALL.nut: clarify that *currently* Win32 packages are not made
	  regularly
	* common/snprintf.c: whitespace fix
	* configure.ac: fix whitespace
	* configure.ac: initially set LIBREGEX_LIBS="" so it is defined
	* scripts/Windows/README: document current (unfinished) prerequisite
	  cross-build for avahi
	* common/common.c: allow to find libraries via PATH (WIN32 only)
	  [#1482]

2022-08-10  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/README: uncomment iconv as useful for libgd
	  directly
	* scripts/Windows/README: document hiccup with libgd in 32-bit mode
	* scripts/Windows/build-mingw-nut.sh: export valid CXX for good
	  measure
	* scripts/Windows/README: move net-snmp instruction to be after
	  openssl, to take advantage of its presence
	* scripts/Windows/README: clarify that xmlto (asciidoc) is needed for
	  full libneon build, or how to skip installing docs
	* scripts/Windows/README: un-hide xz and libxml2 (needed for libneon)
	  instructions
	* scripts/Windows/build-mingw-nut.sh: install WIN32 libs near
	  relevant executable after all [#1482]
	* docs/nut.dict: Update docs/nut.dict
	* NEWS: changed get_libname() behavior and extended use-case in
	  nut-scanner for NUT v2.8.1
	* docs/nut.dict: Update docs/nut.dict
	* tools/nut-scanner/nutscan-init.c: fallback to plain "libusb" in
	  either case (0.1 or 1.0 not found)
	* tools/nut-scanner/nutscan-init.c: fall back to nutscan_load_*()
	  unresolved paths to library names, native implem of lt_dlopen() may
	  do a better job [#805]
	* common/common.c: get_libname(): prefer LD_LIBRARY_PATH_(32|64)
	  firstmost [#805]
	* common/common.c: get_libname(): prefer LD_LIBRARY_PATH first [#805]
	* common/common.c: fix whitespace
	* NEWS: changed get_libname() behavior and extended use-case in
	  nut-scanner for NUT v2.8.1
	* tools/nut-scanner/nutscan-init.c: fall back to nutscan_load_*()
	  unresolved paths to library names, native implem of lt_dlopen() may
	  do a better job [#805] - for WIN32
	* tools/nut-scanner/nutscan-init.c: fall back to nutscan_load_*()
	  unresolved paths to library names, native implem of lt_dlopen() may
	  do a better job [#805]
	* tools/nut-scanner/nutscan-init.c: fallback to plain "libusb" in
	  either case (0.1 or 1.0 not found)
	* scripts/Windows/build-mingw-nut.sh: we now allow to find libraries
	  near the current NUT executable (../lib) on WIN32, so install all
	  third-party deps there once [#1482]
	* common/common.c, include/common.h: common/common.c: allow to find
	  libraries near the current NUT executable (../lib) on WIN32 with
	  PATH_LIB [#1482]
	* common/common.c: allow to find libraries near the current NUT
	  executable (../lib) on WIN32 [#1482]
	* common/common.c: get_libname(): prefer LD_LIBRARY_PATH_(32|64)
	  firstmost [#805]
	* common/common.c: get_libname(): prefer LD_LIBRARY_PATH first [#805]
	  - for WIN32 (with ";" separator)
	* common/common.c: get_libname(): prefer LD_LIBRARY_PATH first [#805]
	* common/common.c: fix whitespace

2022-08-09  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Solaris/Makefile.am: do not install Solaris init files
	  uninvited [#1488]
	* scripts/Windows/build-mingw-nut.sh: typo fix
	* Jenkinsfile-dynamatrix: allow 32-bit builds for
	  cross-windows-mingw-32
	* scripts/Solaris/Makefile.am: fix automake conditional syntax
	* clients/upssched.c: avoid type comparison warnings on 32-bit WIN32
	  builds [#1478]
	* common/strptime.c: avoid type range limit warnings on 31-bit builds
	* scripts/Windows/build-mingw-nut.sh: implement recursive
	  find-and-copy of DLLs needed by NUT binaries into the nut_install
	  tree [#1492]
	* scripts/Solaris/Makefile.am: do not install Solaris init files
	  uninvited [#1488]
	* scripts/Windows/README: rearrange chapter on building NUT itself;
	  mention ci_build.sh integration
	* scripts/Windows/README: document cross-building openssl for NUT and
	  for libneon
	* scripts/Windows/README: clarify build vs install of zlib(-devel)
	* scripts/Windows/README: keep two blank lines between
	  component-recipe chapters

2022-08-06  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh, scripts/Windows/README: ci_build.sh: refactor
	  BUILD_TYPE=cross-windows-mingw* support

2022-08-05  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/README: document custom cross-build of libneon
	* scripts/Windows/README: define ARCH-dependent PKG_CONFIG_PATH by
	  default
	* scripts/Windows/README: comments about building in WSL2-provided
	  Ubuntu environment
	* scripts/Windows/README: clarify comments for pthread custom build
	  (not needed with modern mingw delivery)
	* scripts/Windows/README: document the mess of static-only netsnmp
	  builds (typo fix)
	* scripts/Windows/README: fix prompt markup to friendlier copy-paste;
	  use variables for ARCHLESS-download and ARCH-build locations

2022-08-01  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/nit.sh: testcase_upsd_allow_no_device(): noisy listing
	  should not be default  At least, it is likely the root cause of
	  faults was the busy NUT_PORT and not some missing content in the
	  config file, after all.
	* tests/NIT/nit.sh: testcase_upsd_allow_no_device(): noisy listing
	  should not be default  At least, it is likely the root cause of
	  faults was the busy NUT_PORT and not some missing content in the
	  config file, after all.

2022-08-01  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/mge-mib.c: Fix case for EATON manufacturer  This must be
	  upper case to avoid duplicate discoveries  Closes: IPMPROG-4489
	  (cherry picked from commit
	  a10f5967154e6c6d2dfa53975de6f874b9966804)

2022-07-31  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict  Add MinGW spelling for a quote

2022-07-30  Jim Klimov <jimklimov@gmail.com>

	* tests/NIT/nit.sh: isBusy_NUT_PORT() should not block tests when
	  /proc/net/tcp{,6} is usable and says port is free
	* tests/NIT/nit.sh: isBusy_NUT_PORT() should not block tests when
	  tools to check occupied ports are not available
	* tests/NIT/nit.sh: consult isBusy_NUT_PORT() to pick an available
	  port
	* tests/NIT/nit.sh: add isBusy_NUT_PORT()
	* tests/NIT/nit.sh: typo fix in report_NUT_PORT()
	* tests/NIT/nit.sh: troubleshoot testcase_upsd_allow_no_device() -
	  tell exit-code of upsd
	* tests/NIT/nit.sh: troubleshoot testcase_upsd_allow_no_device()
	* server/upsd.c: report "Found %d UPS defined in ups.conf" upon start
	* tests/NIT/nit.sh: isBusy_NUT_PORT() should not block tests when
	  /proc/net/tcp{,6} is usable and says port is free
	* tests/NIT/nit.sh: isBusy_NUT_PORT() should not block tests when
	  tools to check occupied ports are not available
	* tests/NIT/nit.sh: consult isBusy_NUT_PORT() to pick an available
	  port
	* tests/NIT/nit.sh: add isBusy_NUT_PORT()
	* tests/NIT/nit.sh: typo fix in report_NUT_PORT()
	* tests/NIT/nit.sh: troubleshoot testcase_upsd_allow_no_device() -
	  tell exit-code of upsd
	* tests/NIT/nit.sh: troubleshoot testcase_upsd_allow_no_device()
	* server/upsd.c: report "Found %d UPS defined in ups.conf" upon start

2022-07-29  Jim Klimov <jimklimov+nut@gmail.com>

	* .gitignore: GitIgnore configure-script test sources
	* .gitignore: GitIgnore coredumps
	* tools/nut-scanner/scan_xml_http.c: fix some comments and whitespace
	* tools/nut-scanner/scan_usb.c: fix some comments and whitespace
	* tools/nut-scanner/scan_snmp.c: fix some comments
	* tools/nut-scanner/scan_nut.c: fix some whitespace
	* tools/nut-scanner/scan_ipmi.c: fix some whitespace
	* tools/nut-scanner/scan_avahi.c: fix some whitespace
	* tools/nut-scanner/nutscan-serial.c: fix some whitespace
	* server/upsd.c: fix some whitespace
	* include/str.h: fix some whitespace
	* drivers/al175.c, drivers/bcmxcp.c, drivers/bcmxcp_ser.c,
	  drivers/bcmxcp_usb.c, drivers/gamatronic.c, drivers/optiups.c,
	  drivers/powercom.c, drivers/powerp-bin.c, drivers/powerp-txt.c,
	  drivers/snmp-ups.c, drivers/tripplite_usb.c, drivers/upsdrvctl.c,
	  server/netssl.c, tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: Fix "%j*" and "%z*" printing to
	  PRI[xidu](SIZE|MAX): avoid dangling "" concatenation in format
	  strings
	* drivers/al175.c, drivers/bcmxcp.c, drivers/bcmxcp_ser.c,
	  drivers/bcmxcp_usb.c, drivers/gamatronic.c, drivers/optiups.c,
	  drivers/powercom.c, drivers/powerp-bin.c, drivers/powerp-txt.c,
	  drivers/snmp-ups.c, drivers/tripplite_usb.c, drivers/upsdrvctl.c,
	  server/netssl.c, tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: Fix "%j*" and "%z*" printing to
	  PRI[xidu](SIZE|MAX): avoid dangling "" concatenation in format
	  strings
	* tools/nut-scanner/scan_xml_http.c: fix some comments and whitespace
	* tools/nut-scanner/scan_usb.c: move "Clear any existing error" up
	  where it makes sense
	* tools/nut-scanner/scan_usb.c: fix some comments and whitespace
	* tools/nut-scanner/scan_snmp.c: fix some comments
	* tools/nut-scanner/scan_nut.c: fix some whitespace
	* tools/nut-scanner/scan_ipmi.c: fix some whitespace
	* tools/nut-scanner/scan_avahi.c: fix some whitespace
	* tools/nut-scanner/nutscan-serial.c: fix some whitespace
	* server/upsd.c: fix some whitespace
	* server/netssl.c: typo fixes "inialize" => "initialize", and some
	  whitespace
	* include/str.h: fix some whitespace
	* drivers/al175.c, drivers/bcmxcp.c, drivers/bcmxcp_ser.c,
	  drivers/bcmxcp_usb.c, drivers/gamatronic.c, drivers/optiups.c,
	  drivers/powercom.c, drivers/powerp-bin.c, drivers/powerp-txt.c,
	  drivers/snmp-ups.c, drivers/tripplite_usb.c, drivers/upsdrvctl.c,
	  server/netssl.c, tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: Fix "%j*" and "%z*" printing to
	  PRI[xidu](SIZE|MAX): avoid dangling "" concatenation in format
	  strings
	* tests/NIT/nit.sh: fix CRLF/LF handling for UPSC multiline output
	  parsing [#1477]
	* include/wincompat.h: suggest why inet_ntop() may be not detected on
	  WIN32 (antivirus)
	* .gitignore: GitIgnore configure-script test sources
	* .gitignore: GitIgnore coredumps
	* server/upsd.c: whitespace/comment fixes
	* configure.ac: suggest why inet_ntop() may be not detected on WIN32
	  (antivirus)
	* common/wincompat.c: extend fallback inet_ntop() to support IPv6
	* server/upsd.c: improve tracing and range-handling of polled FDs for
	  WIN32
	* docs/config-prereqs.txt: make note of MSYS2 terminal pre-sets
	* server/sstate.c: update some comments
	* server/sstate.c: use VALID_FD more liberally
	* server/sstate.c: comment where sstate_connect() continued for both
	  platforms
	* server/netssl.c: fix some whitespace
	* m4/nut_check_libltdl.m4: improve detection of "libltdl-7.dll" on
	  WIN32 MSYS2
	* server/netssl.c: typo fixes "inialize" => "initialize", and some
	  whitespace
	* tools/nut-scanner/scan_usb.c: move "Clear any existing error" up
	  where it makes sense

2022-07-28  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/usbhid-ups.c: fix some whitespace
	* drivers/snmp-ups.c: fix some whitespace
	* drivers/libshut.c: fix whitespace
	* drivers/libhid.h: fix whitespace
	* drivers/isbmex.c: fix whitespace
	* drivers/genericups.c: drop blank line
	* drivers/clone-outlet.c: fix some whitespace
	* drivers/blazer_usb.c: adjust whitespace
	* include/nut_stdint.h: be consistent - define PRI[di] (both) for MAX
	  and SIZE
	* drivers/usbhid-ups.c: fix some whitespace
	* drivers/snmp-ups.c: fix some whitespace
	* drivers/serial.h: include "common.h" for possibly fallback
	  suseconds_t
	* drivers/libshut.c: fix whitespace
	* drivers/libhid.h: fix whitespace
	* drivers/isbmex.c: fix whitespace
	* drivers/genericups.c: drop blank line
	* drivers/dummy-ups.c: update comments
	* drivers/clone-outlet.c: fix some whitespace
	* drivers/blazer_usb.c: adjust whitespace
	* include/nut_stdint.h: be consistent - define PRI[di] (both) for MAX
	  and SIZE
	* drivers/usbhid-ups.c: fix some whitespace
	* drivers/libusb1.c: Fix "%ji", "%jd" and "%ju" printing to
	  PRI[du]MAX
	* drivers/isbmex.c: fix whitespace
	* drivers/genericups.h: adjust formatting style
	* drivers/dstate.h: comment why we include "main.h" (also dstate is
	  for drivers anyway, should not conflict)
	* drivers/clone.c: update some comments
	* drivers/clone.c: use VALID_FD more liberally
	* drivers/clone-outlet.c: update some comments
	* drivers/clone-outlet.c: use VALID_FD more liberally
	* drivers/belkinunv.c: adjust whitespace
	* drivers/apcupsd-ups.c: getdata(): fd_flags should be "int" not
	  "long"
	* docs/config-prereqs.txt: add libltdl for WIN32 MSYS2

2022-07-27  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: fix word order
	* clients/upsmon.c: comment "use_pipe"
	* clients/upssched.c: sendcmd(): fix "pipefd" definition formatting
	  Minimize diffs vs. Windows branch
	* common/common.c: update formatting and comments  Minimize diffs vs.
	  Windows branch
	* common/snprintf.c: comment #endif HAVE_* reasons
	* docs/man/ups.conf.txt: formatting fix (line per sentence)
	* clients/upsmon.c: main(): fix "cmd" definition formatting  Minimize
	  differences vs. Windows branch
	* clients/upsmon.c: fix some whitespace
	* clients/upsclient.c: fix some whitespace
	* docs/nut.dict: fix word order
	* docs/man/ups.conf.txt: formatting fix (line per sentence)
	* configure.ac: typo fix (cosmetic)
	* common/snprintf.c: comment #endif HAVE_* reasons
	* common/common.c: refactor confpath() and dflt_statepath()
	* common/common.c: check_unix_socket_filename(): optimize use of len
	  and max
	* common/common.c: update formatting and comments  Minimize diffs vs.
	  Windows branch
	* clients/upssched.c: sendcmd(): fix "pipefd" definition formatting
	  Minimize diffs vs. Windows branch
	* clients/upsmon.c: main(): fix "cmd" definition formatting  Minimize
	  differences vs. Windows branch
	* clients/upsmon.c: comment "use_pipe"
	* clients/upssched.c: clients/upssched.c send_to_one(): reword
	  message for "write failed ... disconnecting"
	* clients/upsmon.c: fix some whitespace
	* clients/upsclient.c: fix some whitespace
	* docs/man/ups.conf.txt: formatting fix (line per sentence) with
	  Windows
	* common/snprintf.c: drop duplicate variable declarations
	* common/common.c: make noise about unimplemented select_write() on
	  WIN32
	* common/common.c: comment about call of dflt_statepath() from
	  altpidpath()
	* common/common.c: do not clutter xmalloc()/xcalloc() with memset(0)
	  on non-WIN32 platforms  Very unsure if this is needed on WIN32
	  either, assuming callers of these methods know the difference and
	  that they do work as advertised on the platform
	* common/common.c: simplify writepid() code style
	* clients/upssched.c: sendcmd(): fix "pipefd" definition formatting
	* clients/upsmon.c: main(): fix "cmd" definition formatting
	* clients/upsmon.c: comment "use_pipe"
	* .gitattributes: treat *.hwdb files as in Unix/Linux format only
	* clients/upsmon.c: simplify runparent(): it is completely non-WIN32
	* clients/upslog.c: refactor CLI arg processing for WIN32
	* clients/upsmon.c: simplify an #ifdef WIN32 block
	* include/common.h: move WIN32 additions inside the "#ifdef
	  __cplusplus" braces
	* common/common.c: refactor confpath() and dflt_statepath()
	* configure.ac: typo fix (cosmetic)

2022-07-26  Evgeny Klimov <klimov@provys.com>

	* clients/Makefile.am: Link libupsclient with libcommon on all
	  platforms  Restores the achievements of commit
	  fdcd1efaa4b5c911ce7d409f9153c7255cd43a54 vs. contents of Windows
	  branch that split off from master before it.

2022-07-24  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/README: try to link net-snmp shared (does not help
	  though)
	* scripts/Windows/README: document the mess of static-only netsnmp
	  builds
	* m4/nut_check_libnetsnmp.m4: if we fail to find init_snmp() on
	  mingw, retry with static-linking assumption for net-snmp
	* ci_build.sh: be sure to use fresh configure script for cross-mingw
	  builds too
	* ci_build.sh: fix indentation

2022-07-23  Yifeng Li <tomli@tomli.me>

	* drivers/huawei-ups2000.c: huawei-ups2000.c: rename NULL macros,
	  close #1474.  Originally, in the struct array ups2000_cmd[], a
	  REG_NONE macro was used as a short-hand for a nonexistent register
	  value. Unfortunately it was in conflict with a Windows NT macro of
	  the same name (previously not found because it was only tested on
	  Unix systems). Thus, this commit renames it to REG_NULL. To avoid
	  visual confusions with the function pointer field (which also uses
	  C's NULL for its nonexistence), this commit also replaces it with a
	  new macro FUNC_NULL, which is a simple alias to C's NULL.  It's not
	  exactly the best practice, a "UPS2000_" prefix should've been used
	  in principle. However, using it in this case creates exceedingly
	  long lines and makes the struct array definition more difficult to
	  read, which defeats the very purpose of defining these macros to
	  begin with. Considering that it's only an one-off use, it's
	  unlikely to cause further problems.

2022-07-23  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/README: document libmodbus
	* scripts/Windows/build-mingw-nut.sh: propagate correct
	  PKG_CONFIG_PATH
	* scripts/Windows/build-mingw-nut.sh: avoid installing augeas lenses
	  into system location  autoconf fudges paths for DESTDIR if they are
	  based in '${prefix}' but ones hardcoded for auglensdir are not
	  there
	* scripts/Windows/README: document latest state of experiment with
	  fontconfig for libgd (fails due to ICU so far)
	* scripts/Windows/README: update libgd build with freetype
	  prerequisites
	* scripts/Windows/README: suggest ccache
	* scripts/Windows/README: update libgd build with zlib and libpng
	  prerequisites
	* scripts/Windows/README: update with libgd build
	* scripts/Windows/README: update some more comments

2022-07-22  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/README: reference mailing list details from 2016
	  about more prereq builds
	* scripts/Windows/README: update setting envvars for prereq builds
	* scripts/Windows/README: update some notes
	* tests/NIT/nit.sh: stop_daemons() before exit-handling to not cause
	  end-of-life error code
	* tests/NIT/nit.sh: stop_daemons(): forget daemon PIDs to avoid
	  mix-ups
	* tests/NIT/nit.sh: stop_daemons(): do not trigger an error by
	  term/exit code from stopped daemons
	* scripts/Windows/build-mingw-nut.sh: avoid installing PyNUT into OS
	  paths while testing

2022-07-21  Jim Klimov <jimklimov@gmail.com>

	* ci_build.sh: log BITS* vars
	* ci_build.sh: cross-windows-mingw: guess bitness from *FLAGS if no
	  BITS are exported explicitly
	* scripts/Windows/build-mingw-nut.sh: avoid concatenating *FLAGS into
	  invalid strings
	* ci_build.sh: log BITS* vars

2022-07-21  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/nit.sh: when starting UPSD, log_debug() which PID_UPSD we
	  track (troubleshoot)
	* tests/NIT/nit.sh: in stop_daemons() wait for killed daemons to
	  return an exit-code
	* tests/NIT/nit.sh: introduce best-effort report_NUT_PORT() to where
	  we fail if UPSD is not running
	* tests/NIT/nit.sh: when starting UPSD, log_debug() which PID_UPSD we
	  track (troubleshoot)
	* tests/NIT/nit.sh: in stop_daemons() wait for killed daemons to
	  return an exit-code
	* tests/NIT/nit.sh: introduce best-effort report_NUT_PORT() to where
	  we fail if UPSD is not running

2022-07-20  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: log ARCH* vars

2022-07-19  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/nit.sh: testcase_sandbox_start_upsd_after_drivers():
	  avoid hardcoded wait time in favor of more flexibility
	* tests/NIT/nit.sh: testcase_upsd_allow_no_device(): avoid hardcoded
	  wait time in favor of more flexibility
	* Makefile.am: `make distcheck` should test installability of
	  NUT-Monitor and PyNUT (even if as a co-bundle)
	* scripts/python/.gitignore: GitIgnore scripts/python/NUT-Monitor
	  wrapper if generated
	* configure.ac: only require --with-pynut from --with-all (if Python
	  is detected); do not require --with-nut_monitor (GUI) here
	* ci_build.sh: do not choke on absence of desktop-related modules in
	  Python - just install (no fatal sanity check)
	* ci_build.sh: do not choke on absence of desktop-related modules in
	  Python
	* m4/nut_check_python.m4: use better portable quoting
	* tests/NIT/nit.sh: fix back the CMDERR handling

2022-07-18  Jim Klimov <jimklimov@gmail.com>

	* tests/NIT/nit.sh: testcase_sandbox_start_drivers_after_upsd():
	  log_warn() if we had to wait for a driver to become usable
	* docs/nut.dict: Update docs/nut.dict
	* docs/nut.dict: Update docs/nut.dict
	* NEWS: fixed man-page building for single-driver builds fixes a
	  regression of NUT 2.8.0

2022-07-18  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/nit.sh: convert many tests that did OUT="`upsc ...`" to
	  runcmd()
	* tests/NIT/nit.sh: testcase_sandbox_start_drivers_after_upsd():
	  report what was received from upsc query as device data
	* tests/NIT/nit.sh: runcmd(): set defaults for RUNCMD_QUIET_ERR and
	  RUNCMD_QUIET_OUT, and avoid printing a blank line when there is
	  nothing captured in the string
	* tests/NIT/nit.sh: testcase_upsd_allow_no_device(): use runcmd() to
	  retry connection hiccups
	* tests/NIT/nit.sh: introduce runcmd()
	* tests/NIT/nit.sh: report which NUT_PORT was used in "upsc" failed
	  queries (help catch conflicting test runs)
	* tests/NIT/nit.sh: account FAILED_FUNCS to help troubleshoot the
	  test script (or tested code)
	* tests/NIT/nit.sh: testcase_sandbox_start_drivers_after_upsd(): wait
	  longer for driver start (and valid upsc response)
	* tests/NIT/nit.sh: log the exit-code of "upsc" failed queries
	* tests/NIT/nit.sh: report which NUT_PORT we started with

2022-07-17  Jim Klimov <jimklimov@gmail.com>

	* scripts/python/Makefile.am, scripts/python/app/README:
	  scripts/python: distribute and reference from README the
	  screenshots from NUT-Monitor site
	* NEWS, UPGRADING, configure.ac, scripts/python/Makefile.am:
	  configure.ac, scripts/python/Makefile.am: handle `make install` for
	  NUT-Monitor and/or PyNUT [#1462]
	* m4/nut_check_python.m4: avoid square brackets, m4 interpreter makes
	  them difficult
	* m4/nut_check_python.m4: discover site-packages location for
	  discovered interpreter(s)
	* scripts/python/Makefile.am: distribute the module/README
	* scripts/python/module/README: Update scripts/python/module/README
	  as of NUT v2.8.0 release
	* scripts/python/module/README: Add scripts/python/module/README
	  This is a rough translation of
	  https://www.lestat.st/informatique/projets/pynut  Pardon my French
	  ;)
	* scripts/python/app/screenshots/nut-monitor-1.png,
	  scripts/python/app/screenshots/nut-monitor-2.png,
	  scripts/python/app/screenshots/nut-monitor-3.png: Add
	  scripts/python/app/screenshots from original project wiki
	* scripts/python/app/nut-monitor.appdata.xml: update localization
	  info
	* scripts/python/Makefile.am: Revert "scripts/python/Makefile.am:
	  EXTRA_DIST the app/ui/gui-1.3.glade.h sources"  This reverts commit
	  d2ede1a4d5d0e89eae31d931818570772895b325. Not sure ATM what the
	  file is actually for, who uses or generates it.
	* scripts/python/Makefile.am: EXTRA_DIST the app/ui/gui-1.3.glade.h
	  sources
	* scripts/python/Makefile.am: EXTRA_DIST the translation sources
	* scripts/python/Makefile.am: EXTRA_DIST the Russian translation
	  (follow-up for #806)
	* scripts/python/Makefile.am: refactor file-set variable naming to
	  facilitate both EXTRA_DIST and make install
	* Makefile.am: EXTRA_DIST autogen.sh since we have other bits to
	  regenerate the configure script anyway
	* scripts/python/Makefile.am: EXTRA_DIST the "dispatcher" script and
	  applet manifest  Regression in #1354 for NUT v2.8.0 release Closes:
	  #1462
	* NEWS, configure.ac, docs/man/Makefile.am: configure.ac,
	  docs/man/Makefile.am: fix man-page building when just a few drivers
	  are built by name  Regression for custom-builders in NUT 2.8.0
	  release  Closes: #1467
	* NEWS: prioritize NUT v2.8.1 release as a regression-fixer for 2.8.0
	  (move not-urgent "expected" work to 2.8.2 tentatively)
	* NEWS: fix usbhid-ups reaction to libusb ENOMEM in NUT v2.8.0
	  [#1422]
	* NEWS: fix regression in dummy-ups for some platforms in NUT v2.8.0
	  [#1420]
	* NEWS: stop/restart drivers more aggressively in NUT v2.8.1 [#1424]
	* docs/config-prereqs.txt: update libusb availability note for OmniOS
	* NEWS: device support for huawei-ups2000 improved in NUT v2.8.1
	  [#1448]
	* NEWS: fix regression in cyberpower-mib tables in NUT v2.8.0 [#1432]
	* NEWS: report-desc fix for cps-hid 0x0601 [#1497]
	* NEWS: regression fix for upscode in 2.8.0 release [#1495, #1455]

2022-07-14  Jim Klimov <jimklimov@gmail.com>

	* common/common.c: allow to use NUT_ALTPIDPATH envvars also on
	  Windows (with similar logic for NUT_STATEPATH fallback)
	* drivers/riello.c, drivers/riello.h, drivers/riello_ser.c,
	  drivers/riello_usb.c: drivers/riello*.{c,h}: update links to PDF
	  protocol documentation  Closes: #1481
	* server/upsd.c: avoid meaningful work in upsdebug*() macro call
	  [#1455]
	* drivers/upscode2.c: avoid meaningful work in upsdebug*() macro call
	  [#1455]

2022-07-14  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upssched.c: wrap call to signal(SIGALRM, SIG_IGN) with
	  pragmas to ignore "-Wstrict-prototypes" (some platform headers do
	  not declare SIG_IGN as a function prototype)
	* clients/Makefile.am: revise use of libupsclient_la_SOURCES in favor
	  of pre-built libcommonclient.la
	* .gitattributes: constrain EOL for binary files

2022-07-14  Austin Sabel <austin.sabel@gmail.com>

	* drivers/cps-hid.c: apply report fix to model CP1500PFCLCDa

2022-07-13  Jim Klimov <jimklimov@gmail.com>

	* docs/config-prereqs.txt: fix markup to pass xmllint
	* tools/nut-scanner/Makefile.am: fix build on non-Windows platforms

2022-07-13  Jim Klimov <jimklimov+nut@gmail.com>

	* .gitattributes: use a different syntax for "* text eol=auto"
	* scripts/Windows/Installer/NUT-Installer.xml: fix end-of-line chars
	* common/common.c: allow to use NUT_CONFPATH and NUT_STATEPATH
	  envvars also on Windows
	* Jenkinsfile-dynamatrix: introduce
	  dynacfgPipeline.axisCombos_(NOT_)WINDOWS_CROSS and a recipe to
	  build on cross-mingw workers
	* scripts/Windows/README: refer to docs/config-prereqs.txt for native
	  WIN32 builds
	* ci_build.sh, scripts/Windows/README: introduce
	  BUILD_TYPE=cross-windows-mingw(-64|-32|)
	* tools/nut-scanner/Makefile.am: separate libnutscan_la_LDFLAGS
	  version-info from other options, and highlight that SERLIBS may
	  belong elsewhere
	* clients/Makefile.am: separate libupsclient_la_LDFLAGS version-info
	  from other options
	* clients/Makefile.am: fix relative path that should point to
	  top_srcdir
	* configure.ac, server/upsd.c: forfeit use of DATADIR in favor of
	  NUT_DATADIR to avoid confusion

2022-07-11  Yifeng Li <tomli@tomli.me>

	* docs/man/huawei-ups2000.txt: huawei-ups2000.txt: document
	  UPS2000-G-1KRTS.  This commit adds UPS2000-G-1KRTS to the list of
	  tested UPS models. Thanks @sumsethan for reporting it [1].  [1]
	  https://github.com/networkupstools/nut/issues/1066#issuecomment-1180005297
	* docs/nut.dict: nut.dict: add developer name "Hirschler" to the
	  dict.  Fix spellcheck regression in
	  7bfc617c1f6de1d57fe2c06d1a94a9cd97838497.

2022-06-23  Marshall Whittaker <marshallwhittaker@gmail.com>

	* docs/nut.dict: Updated dictionary.
	* data/driver.list.in: Added SKE SK600 to supported device list.

2022-06-23  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/generic_modbus.c: switch from non-standard "uint" to
	  "uint16_t" (per context) which we do define
	* drivers/adelsystem_cbi.c: switch from non-standard "uint" to
	  "uint16_t" (per context) which we do define
	* drivers/adelsystem_cbi.c, drivers/adelsystem_cbi.h:
	  drivers/adelsystem_cbi.{c,h}: avoid macro clash with WIN32
	  DEVICE_TYPE
	* common/common.c: refactor get_libname() so new get_libname_in_dir()
	  may be used not only to loop search_paths[]
	* clients/nutclient.cpp, clients/upsclient.c, common/common.c,
	  drivers/libhid.c, drivers/libusb1.c, drivers/main.c,
	  drivers/nutdrv_siemens_sitop.c, drivers/upscode2.c,
	  include/nut_stdint.h, server/upsd.c,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/scan_xml_http.c:
	  Fix "%ji", "%jd" and "%ju" printing to PRI[du]MAX
	* drivers/generic_modbus.c: switch from non-standard "uint" to
	  "uint16_t" (per context) which we do define
	* drivers/dstate.c: rename (arg_)extrafd to not shadow a global var
	  name
	* drivers/adelsystem_cbi.c: switch from non-standard "uint" to
	  "uint16_t" (per context) which we do define
	* drivers/adelsystem_cbi.c, drivers/adelsystem_cbi.h:
	  drivers/adelsystem_cbi.{c,h}: avoid macro clash with WIN32
	  DEVICE_TYPE
	* common/strerror.c: include stdio.h for snprintf()
	* common/strerror.c: avoid build error if EDEADLK==EDEADLOCK
	* common/common.c: refactor get_libname() so new get_libname_in_dir()
	  may be used not only to loop search_paths[]
	* common/atexit.c: mark NUT_UNUSED_VARIABLE if we !HAVE_ON_EXIT
	* clients/nutclient.cpp, clients/upsclient.c, common/common.c,
	  drivers/libhid.c, drivers/libusb1.c, drivers/main.c,
	  drivers/nutdrv_siemens_sitop.c, drivers/upscode2.c,
	  include/nut_stdint.h, server/upsd.c,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/scan_xml_http.c:
	  Fix "%ji", "%jd" and "%ju" printing to PRI[du]MAX
	* autogen.sh: suggest how to re-checkout workspace with desired EOL
	  settings
	* docs/nut.dict: Update nut.dict
	* docs/config-prereqs.txt: fix typos
	* docs/config-prereqs.txt: install aspell-en for MSYS2
	* docs/config-prereqs.txt: suggest a way to install DLLs into proto
	  area after an MSYS2 build
	* drivers/adelsystem_cbi.c, drivers/adelsystem_cbi.h:
	  drivers/adelsystem_cbi.{c,h}: avoid macro clash with WIN32
	  DEVICE_TYPE
	* drivers/adelsystem_cbi.c: switch from non-standard "uint" to
	  "uint16_t" (per context) which we do define
	* drivers/generic_modbus.c: switch from non-standard "uint" to
	  "uint16_t" (per context) which we do define
	* configure.ac, drivers/huawei-ups2000.c, include/timehead.h:
	  include/timehead.h: fallback gmtime_r() variants
	* include/timehead.h: implement a (non thread-safe currently)
	  fallback from missing localtime_r() via localtime()
	* configure.ac, drivers/mge-hid.c, include/timehead.h: Fallback from
	  missing localtime_r() to present localtime_s() where available
	* docs/config-prereqs.txt: warn about antivirus interaction with
	  native Windows builds
	* common/strerror.c: include stdio.h for snprintf()
	* common/strerror.c: avoid build error if EDEADLK==EDEADLOCK
	* common/atexit.c: mark NUT_UNUSED_VARIABLE if we !HAVE_ON_EXIT
	* scripts/Windows/README: stash some URLs to dependencies not
	  detailed further yet
	* .gitattributes: Introduce .gitattributes
	* autogen.sh: suggest how to re-checkout workspace with desired EOL
	  settings
	* docs/config-prereqs.txt: MSYS2 baseline request includes
	  implementations of autotools
	* docs/config-prereqs.txt: update suggestions for "pure" mingw
	  installation on Windows
	* common/common.c: getfullpath(): change buf size to MAX_PATH and
	  limit strncat() safely
	* drivers/dstate.c: rename (arg_)extrafd to not shadow a global var
	  name
	* clients/nutclient.cpp, clients/upsclient.c, common/common.c,
	  drivers/libhid.c, drivers/libusb1.c, drivers/main.c,
	  drivers/nutdrv_siemens_sitop.c, drivers/upscode2.c,
	  include/nut_stdint.h, server/upsd.c,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/scan_xml_http.c:
	  Replace %jd and %ju with PRI[du]MAX
	* drivers/libusb0.c: common/common.c: fallback strcasestr(): avoid
	  double-free on some platforms
	* tools/nut-scanner/nutscan-init.c: look for (WIN32) libupsclient-6
	  according to version-info
	* common/common.c: update search_paths[] to include "." on WIN32 for
	  now
	* common/common.c: refactor get_libname() so new get_libname_in_dir()
	  may be used not only to loop search_paths[]

2022-06-21  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: get_libname(): debug trace when skipping an absent
	  dirname
	* include/wincompat.h: ensure that we have a PATH_MAX defined
	* tools/nut-scanner/nutscan-init.c: if we build WITH_SNMP_STATIC then
	  assume nutscan_avail_snmp==1
	* configure.ac: whitespace fix
	* clients/upsset.c: rectify includes for WIN32 builds
	* ci_build.sh: set default defines in C(XX)FLAGS for WIN32 builds

2022-06-20  Yifeng Li <tomli@tomli.me>

	* drivers/huawei-ups2000.c: huawei-ups2000.c: update comment header
	  with info about docs.

2022-06-19  Marshall Whittaker <marshallwhittaker@gmail.com>

	* docs/man/nutdrv_qx.txt: Noted that SKE devices work with the
	  nutdrv_qx driver.

2022-06-18  Yifeng Li <tomli@tomli.me>

	* docs/nut.dict: nut.dict: add CH341/UART related terms to dict.
	* docs/man/huawei-ups2000.txt: huawei-ups2000.txt: document
	  UPS2000G/CH341 variant.
	* drivers/huawei-ups2000.c: huawei-ups2000.c: support newer
	  UPS2000G/CH341 variants.  We received a report of the existence of
	  a new hardware variant from the bug tracker [1].  This UPS unit has
	  the model number UPS2000-G-3KRTS just like a model we've previously
	  tested, and it has the same V2R1C1SPC50 firmware, which was tested
	  by us as well (although not on UPS2000-G-3KRTS but on
	  UPS2000-A-2KTTS).  However, there are two obvious hardware
	  differences. First, this unit reports itself as "UPS2000G" via the
	  protocol instead, which is a new value not found in the datasheet
	  or previously encountered by us. Previously, even a "UPS2000G"
	  model reports itself as the "UPS2000A". Another difference is the
	  use of WCH CH341 serial-to-USB converter chip instead of the
	  MaxLinear/Exar RX21V1410 chip.  Bus 002 Device 005: ID 1a86:5523
	  QinHeng Electronics CH341 in serial mode, usb to serial port
	  converter  The production label on the UPS says 2021-12-04. So it's
	  likely a newer hardware revision or variant. Was it redesigned to
	  improve USB serial compatibility? Or my personal guess, due to chip
	  shortage? Who knows.  Nevertheless, once the "UPS2000G" model
	  string is added to the supported list, it was reported that the
	  driver correctly functions without doing anything else. Thus, from
	  a software perspective there's no difference.  Thanks GitHub user
	  @Qinka for reporting it.  [1]
	  https://github.com/networkupstools/nut/issues/1066#issuecomment-1158417669

2022-06-18  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/apcupsd-ups.c: align fcntl() error-checking with upsd.c
	  precedent
	* drivers/riello_ser.c: make it build for WIN32
	* drivers/blazer_ser.c: warn in WIN32 build start-up messages that
	  actual serial port setup may be not happening yet
	* drivers/apcupsd-ups.c: port bits of networking code from upsd.c for
	  WIN32 build
	* drivers/apcupsd-ups.c: getdata() for WIN32: only CloseHandle() when
	  we close() the p.fd, to err on the safe side and be similar to
	  other codebase
	* drivers/apcupsd-ups.c: align fcntl() error-checking with upsd.c
	  precedent

2022-06-16  Michael Hirschler <michael.vhirsch@gmail.com>

	* docs/documentation.txt: adds link describing NUT on Fedora 36

2022-06-16  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/blazer_usb.c, drivers/libshut.h, drivers/nut_libusb.h,
	  drivers/nutdrv_qx.c, drivers/riello_usb.c, drivers/tripplite_usb.c,
	  drivers/usbhid-ups.c: drivers/libusb.h, libshut.h, nutdrv_qx et al:
	  rename *_communication_subdriver_s fields for function pointers
	  "open" and "close" to "*_dev" - to avoid conflict with serial.h
	  macros for WIN32 builds
	* drivers/tripplitesu.c: rename SHUTDOWN_* to TSU_SHUTDOWN_* to avoid
	  WIN32 macro conflicts
	* drivers/tripplitesu.c: rename SHUTDOWN_* to TSU_SHUTDOWN_* to avoid
	  WIN32 macro conflicts
	* drivers/blazer_usb.c, drivers/libshut.h, drivers/nut_libusb.h,
	  drivers/nutdrv_qx.c, drivers/riello_usb.c, drivers/tripplite_usb.c,
	  drivers/usbhid-ups.c: drivers/libusb.h, libshut.h, nutdrv_qx et al:
	  rename *_communication_subdriver_s fields for function pointers
	  "open" and "close" to "*_dev" - to avoid conflict with serial.h
	  macros for WIN32 builds
	* drivers/Makefile.am: move apcupsd-ups and skel to NUTSW_DRIVERLIST
	  [#1446]
	* drivers/Makefile.am: move apcupsd-ups and skel to NUTSW_DRIVERLIST
	  [#1446]
	* drivers/apcupsd-ups.c: use INVALID_SOCKET for catching socket()
	  problems
	* drivers/apcupsd-ups.c: getdata(): fix fcntl() vs CreateEvent() in
	  WIN32 model
	* NEWS, UPGRADING, configure.ac, drivers/Makefile.am: Separate NUT
	  software-only drivers from serial ones  Closes: #1446
	* NEWS, UPGRADING, configure.ac, drivers/Makefile.am: Separate NUT
	  software-only drivers from serial ones [#1446]
	* drivers/apcupsd-ups.c: rectify includes for WIN32 build
	* drivers/blazer_usb.c, drivers/libshut.h, drivers/nut_libusb.h,
	  drivers/nutdrv_qx.c, drivers/riello_usb.c, drivers/tripplite_usb.c,
	  drivers/usbhid-ups.c: drivers/libusb.h, libshut.h, nutdrv_qx et al:
	  rename *_communication_subdriver_s fields for function pointers
	  "open" and "close" to "*_dev" - to avoid conflict with serial.h
	  macros for WIN32 builds
	* drivers/apcsmart.c: only define ECANCELED if not avoidable
	* drivers/clone-outlet.c: only declare last_connfail in non-WIN32
	  builds
	* drivers/apcsmart.c: use VALID_FD()
	* drivers/clone-outlet.c: use VALID_FD()
	* drivers/clone.c: use VALID_FD()
	* drivers/blazer_ser.c: currently neuter big part of upsdrv_initups()
	  on WIN32 to avoid build errors
	* scripts/Windows/build-mingw-nut.sh: quote path variable expansions
	* include/wincompat.h: define TIOCM_RI the best we can (someone
	  should check it works for real HW)
	* drivers/tripplitesu.c: rename SHUTDOWN_* to TSU_SHUTDOWN_* to avoid
	  WIN32 macro conflicts
	* drivers/dummy-ups.c: do not rely on fstat(int,...) in WIN32

2022-06-15  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: nut.dict: update for WIN32 changes
	* NEWS: Note revival of Windows build effort with NUT v2.8.x era
	  codebase
	* INSTALL.nut, docs/nut.dict: nut.dict: update for WIN32 docs updates

2022-06-15  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: unblock serial (and other?) driver building with
	  WIN32 target

2022-06-14  Jim Klimov <jimklimov@gmail.com>

	* common/wincompat.c, drivers/huawei-ups2000.c,
	  scripts/Windows/wininit.c: scripts/Windows/wininit.c
	  common/wincompat.c: change the fix for empty translation unit to
	  one that does not emit other warnings :)
	* drivers/blazer_usb.c, drivers/nutdrv_qx.c, drivers/tripplite_usb.c:
	  drivers/*usb.c: address fallout for LIBUSB_ERROR_* renaming
	* configure.ac: fix strdup() check (include stdlib.h to have free())
	* configure.ac: fix str*() check program codes

2022-06-14  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/ax_c_pragmas.m4: avoid strcasestr() which is not ubiquitous
	* scripts/Windows/build-mingw-nut.sh: require clean builds without
	  warnings
	* tools/nut-scanner/scan_snmp.c: do not cast snmp_errno as a function
	  ptr when we build WITH_SNMP_STATIC
	* tools/nut-scanner/scan_snmp.c: hush compiler warnings about unused
	  DL vars when we build WITH_SNMP_STATIC
	* tools/nut-scanner/scan_snmp.c: hush compiler warnings about
	  function pointer vs. void*  Per
	  https://gcc.gnu.org/bugzilla/show_bug.cgi?id=83584 the standards do
	  not actually forbid this (and dlsym internally relies on it), just
	  this is not a defined behavior and might not work on all platforms.
	* tools/nut-scanner/scan_snmp.c: avoid unused label for
	  WITH_SNMP_STATIC builds
	* drivers/serial.c: mark NUT_UNUSED_VARIABLE(port) when "no locking
	  method is available"
	* tools/nut-scanner/nutscan-init.c: fix WIN32 stub of
	  do_upsconf_args()
	* tools/nut-scanner/scan_nut.c: fix WIN32 builds (unused variable in
	  its scope)
	* drivers/upsdrvctl.c: fix handling of signals vs commands to stop a
	  driver
	* include/common.h, drivers/serial.c: drop PRINT_FD() as invalid
	* common/strptime.c: comment away fallback strncasecmp()
	* common/Makefile.am, common/strptime.c, configure.ac,
	  include/timehead.h: configure.ac: detect if we HAVE_STRPTIME and
	  optionally fall back to NetBSD implementation (from MSYS2)
	* configure.ac, drivers/serial.h: consider if we HAVE_SYS_SELECT_H at
	  all
	* clients/message.c: avoid NPE, make use of argc
	* tools/nut-scanner/nutscan-ip.c: revise includes etc.
	* m4/nut_func_getnameinfo_argtypes.m4: adapt to WIN32 (mingw) arg4+6
	* drivers/dstate.c, drivers/dstate.h, drivers/main.c, drivers/main.h:
	  drivers/dstate.c, main.{c,h}: make set_exit_flag() reusable
	* clients/upssched.c: fix non-WIN32 (only) use of some variables in
	  sendcmd()
	* clients/upssched.c: fix WIN32 "fd" reporting and use (int vs
	  HANDLE)
	* clients/upssched.c: fix use of close() for WIN32 builds
	* drivers/dstate.h: include "wincompat.h" in WIN32 builds to have
	  HANDLE defined
	* drivers/dstate.c: mark NUT_UNUSED_VARIABLE(extrafd) in WIN32
	  variant of dstate_poll_fds()
	* drivers/dstate.c: fix WIN32 reporting of pipename vs sockfn
	* drivers/dstate.c: fix WIN32 "fd" reporting and use (int vs HANDLE)
	* drivers/dstate.c: whitespace fix
	* drivers/dstate.c: avoid duplicate import with WIN32 builds
	* scripts/Windows/wininit.c: SvcMain(): mark NUT_UNUSED_VARIABLE
	  argc/argv
	* configure.ac, drivers/libusb0.c, include/str.h: configure.ac,
	  drivers/libusb0.c: implement a fallback strcasestr() if needed and
	  possible
	* m4/ax_c_pragmas.m4: avoid strcasestr() which is not ubiquitous
	* drivers/libusb0.c: avoid unused "busses" variable
	* server/upsd.c: ups_available(): call VALID_FD() for portability
	* scripts/Windows/.gitignore: GitIgnore Windows build area (per
	  script for mingw)

2022-06-13  Jim Klimov <jimklimov+nut@gmail.com>

	* common/common.c: avoid realpath() on platforms that lack it  Part
	  of this was merged to master earlier, except the header include
	* clients/upsmon.c, clients/upssched.c, common/common.c,
	  common/parseconf.c, include/common.h: Refactor fcntl(...,
	  FD_CLOEXEC) as set_close_on_exec() where possible
	* drivers/mge-xml.c, drivers/netxml-ups.c, drivers/netxml-ups.h,
	  drivers/nutdrv_qx.c, drivers/nutdrv_qx.h,
	  drivers/nutdrv_qx_bestups.c, drivers/usbhid-ups.c,
	  drivers/usbhid-ups.h: drivers/*.{h,c}: rename "CAL" in enums to
	  "CALIB" to avoid name clash in WIN32 builds
	* configure.ac: check for existence of realpath()
	* drivers/snmp-ups.h: be sure to include "nut_stdint.h"
	* drivers/mge-xml.c, drivers/netxml-ups.c, drivers/netxml-ups.h,
	  drivers/nutdrv_qx.c, drivers/nutdrv_qx.h,
	  drivers/nutdrv_qx_bestups.c, drivers/usbhid-ups.c,
	  drivers/usbhid-ups.h: drivers/*.{h,c}: rename "CAL" in enums to
	  "CALIB" to avoid name clash in WIN32 builds
	* configure.ac: check for existence of realpath()
	* clients/upsmon.c, clients/upssched.c, common/common.c,
	  common/parseconf.c, include/common.h: Refactor fcntl(...,
	  FD_CLOEXEC) as set_close_on_exec() where possible
	* drivers/blazer_usb.c, drivers/libshut.h, drivers/nutdrv_qx.c,
	  drivers/riello_usb.c, drivers/tripplite_usb.c,
	  drivers/usb-common.h, drivers/usbhid-ups.c: usb, shut headers and
	  drivers: update from ERROR_* macros to LIBUSB_ERROR_* macros (avoid
	  conflict on WIN32)  Also define LIBUSB_ERROR_INTERRUPTED,
	  LIBUSB_ERROR_NOT_SUPPORTED and LIBUSB_ERROR_OTHER tokens for
	  libusb-0.1 and SHUT builds for completeness
	* clients/upssched.c: reconcile size_t buflen/ssize_t ret in WIN32
	  build
	* server/upsd.c: main(): no oldpid in WIN32 builds
	* server/upsd.c: check_perms(): NUT_UNUSED_VARIABLE(fn) on WIN32
	* server/upsd.c: mainloop(): fix visibility of nfds for all platforms
	* server/netssl.c: fix includes for WIN32 builds
	* common/common.c: optimize check_unix_socket_filename() and make it
	  more portable
	* clients/upsmon.c: oldpid is not used in WIN32 builds
	* clients/upslog.c: set_print_now_flag() is not used in WIN32 builds
	* drivers/nutdrv_atcl_usb.c: do not check return value of sleep() on
	  WIN32 (is void)
	* common/wincompat.c, configure.ac,
	  scripts/Windows/build-mingw-nut.sh: configure.ac,
	  build-mingw-nut.sh: fix inet_ntop() detection for WIN32 builds
	* drivers/main.c: fix WIN32 builds regarding user/group tweaks and
	  signal handling
	* tools/nut-scanner/nutscan-ip.c: be sure to include "nut_stdint.h"
	* drivers/snmp-ups.h: be sure to include "nut_stdint.h"
	* drivers/blazer_usb.c, drivers/libshut.h, drivers/nutdrv_qx.c,
	  drivers/riello_usb.c, drivers/tripplite_usb.c,
	  drivers/usb-common.h, drivers/usbhid-ups.c: usb, shut headers and
	  drivers: update from ERROR_* macros to LIBUSB_ERROR_* macros (avoid
	  conflict on WIN32)  Also define LIBUSB_ERROR_INTERRUPTED,
	  LIBUSB_ERROR_NOT_SUPPORTED and LIBUSB_ERROR_OTHER tokens for
	  libusb-0.1 and SHUT builds for completeness
	* common/common.c: avoid realpath() on platforms that lack it
	* configure.ac: check for existence of realpath()
	* common/common.c: fix up some NUT_UNUSED_VARIABLE()s
	* common/common.c, include/common.h: common/common.{c,h}: fix up
	  select_read()/select_write() with WIN32 builds
	* common/common.c: include dirent.h in WIN32 builds also
	* drivers/mge-xml.c, drivers/netxml-ups.c, drivers/netxml-ups.h,
	  drivers/nutdrv_qx.c, drivers/nutdrv_qx.h,
	  drivers/nutdrv_qx_bestups.c, drivers/usbhid-ups.c,
	  drivers/usbhid-ups.h: drivers/*.{h,c}: rename "CAL" in enums to
	  "CALIB" to avoid name clash in WIN32 builds
	* clients/upsmon.c, clients/upssched.c, common/common.c,
	  common/parseconf.c, include/common.h: Refactor fcntl(...,
	  FD_CLOEXEC) as set_close_on_exec() where possible
	* configure.ac: disable format warnings for mingw builds

2022-06-09  Jim Klimov <jimklimov@gmail.com>

	* tools/nut-scanner/nutscan-init.c: define SOEXT (shared object file
	  extension) as a macro
	* tools/nut-scanner/Makefile.am, tools/nut-scanner/nutscan-init.c,
	  tools/nut-scanner/scan_snmp.c: tools/nut-scanner: adjust ltdl names
	  or contents to WIN32 builds
	* tools/nut-scanner/Makefile.am: link net-snmp statically on (MinGW)
	  WIN32 builds
	* scripts/Windows/README, scripts/Windows/build-mingw-nut.sh:
	  scripts/Windows/build-mingw-nut.sh + README: add libtool (libltdl)
	  for nut-scanner
	* scripts/Windows/build-mingw-nut.sh: install client dlls in sbin
	  (for upsmon)
	* scripts/Windows/README, scripts/Windows/build-mingw-nut.sh:
	  scripts/Windows/build-mingw-nut.sh: install dependency DLLs near
	  drivers
	* scripts/Windows/build-mingw-nut.sh: avoid installing systemd files
	  in Windows :)
	* scripts/Windows/README: note the verified build environment
	* scripts/Windows/README: suggest a build command from scratch
	* scripts/Windows/README: flesh out dependency installation for
	  libusb(-compat-0.1) and libsnmp
	* scripts/Windows/README: suggest to "sudo" make install the
	  dependencies built as mere user
	* scripts/Windows/README: fix example build commands considering
	  $ARCH etc defined above
	* scripts/Windows/README: suggest to "export" HOST_FLAG and beyond,
	  to define ARCH once and inherit from it in another single
	  copy-pasted command

2022-06-09  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/README, scripts/Windows/build-mingw-nut.sh:
	  scripts/Windows/README: document use of a SOURCEMODE and some other
	  settings

2022-06-08  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/build-mingw-nut.sh: show all build errors, and do
	  not require any features (do best-effort)
	* scripts/Windows/README: note that ./build-mingw-nut.sh takes care
	  of envvars
	* configure.ac, drivers/apcupsd-ups.c, server/upsd.h: server/upsd.h:
	  fix absent poll.h
	* common/common.c: fix undefined LOG_ERROR
	* scripts/Windows/build-mingw-nut.sh: adapt to NUT v2.8.0(.1) dist
	  tarballs, etc.

2022-05-26  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/belkin.c, drivers/bestups.c, drivers/huawei-ups2000.c,
	  drivers/ivtscd.c, drivers/libshut.h, drivers/masterguard.c,
	  drivers/nutdrv_qx_masterguard.c, drivers/oneac.c,
	  drivers/optiups.c, drivers/powerp-txt.c, drivers/rhino.c,
	  drivers/tripplitesu.c, drivers/usbhid-ups.c: drivers: fix headers
	  to printf with PRIuSIZE formatting token
	* include/proto.h, common/setenv.c: be sure to include "config.h"
	* drivers/belkin.c, drivers/bestups.c, drivers/huawei-ups2000.c,
	  drivers/ivtscd.c, drivers/libshut.h, drivers/masterguard.c,
	  drivers/nutdrv_qx_masterguard.c, drivers/oneac.c,
	  drivers/optiups.c, drivers/powerp-txt.c, drivers/rhino.c,
	  drivers/tripplitesu.c, drivers/usbhid-ups.c: drivers: fix headers
	  to printf with PRIuSIZE formatting token
	* drivers/genericups.c: include "wincompat.h" where needed, to have
	  respective macros defined
	* include/proto.h, common/setenv.c: be sure to include "config.h"
	* drivers/belkin.c, drivers/bestups.c, drivers/ivtscd.c,
	  drivers/libshut.h, drivers/masterguard.c,
	  drivers/nutdrv_qx_masterguard.c, drivers/oneac.c,
	  drivers/optiups.c, drivers/powerp-txt.c, drivers/rhino.c,
	  drivers/tripplitesu.c, drivers/usbhid-ups.c: drivers: fix headers
	  to printf with PRIuSIZE formatting token
	* include/common.h: be sure to see fcntl() definitions on WIN32 MSYS2

2022-05-24  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsc.c, clients/upsclient.c, clients/upscmd.c,
	  clients/upsmon.c, clients/upsrw.c, clients/upssched.c,
	  clients/upsset.c, common/common.c, drivers/al175.c,
	  drivers/apcsmart.c, drivers/bcmxcp.c, drivers/bcmxcp_ser.c,
	  drivers/bcmxcp_usb.c, drivers/belkin.c, drivers/bestfortress.c,
	  drivers/bestups.c, drivers/clone-outlet.c, drivers/clone.c,
	  drivers/dstate.c, drivers/dummy-ups.c, drivers/gamatronic.c,
	  drivers/huawei-ups2000.c, drivers/isbmex.c, drivers/ivtscd.c,
	  drivers/libhid.c, drivers/libshut.c, drivers/libusb0.c,
	  drivers/libusb1.c, drivers/liebert-esp2.c, drivers/masterguard.c,
	  drivers/metasys.c, drivers/mge-utalk.c, drivers/microsol-common.c,
	  drivers/netxml-ups.c, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_masterguard.c, drivers/nutdrv_siemens_sitop.c,
	  drivers/oneac.c, drivers/optiups.c, drivers/powercom.c,
	  drivers/powerp-bin.c, drivers/powerp-txt.c, drivers/rhino.c,
	  drivers/snmp-ups.c, drivers/solis.c, drivers/tripplite.c,
	  drivers/tripplite_usb.c, drivers/tripplitesu.c, drivers/upscode2.c,
	  drivers/upsdrvctl.c, include/nut_stdint.h, server/netssl.c,
	  server/sockdebug.c, server/upsd.c, tests/getvaluetest.c,
	  tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: Fix "%zx", "%zd", "%zi" and
	  "%zu" printing to PRI[xiu]SIZE that is named more standards-like
	* common/parseconf.c: include "config.h" first
	* clients/upsc.c, clients/upsclient.c, clients/upscmd.c,
	  clients/upsmon.c, clients/upsrw.c, clients/upssched.c,
	  clients/upsset.c, common/common.c, drivers/al175.c,
	  drivers/apcsmart.c, drivers/bcmxcp.c, drivers/bcmxcp_ser.c,
	  drivers/bcmxcp_usb.c, drivers/belkin.c, drivers/bestfortress.c,
	  drivers/bestups.c, drivers/clone-outlet.c, drivers/clone.c,
	  drivers/dstate.c, drivers/dummy-ups.c, drivers/gamatronic.c,
	  drivers/huawei-ups2000.c, drivers/isbmex.c, drivers/ivtscd.c,
	  drivers/libhid.c, drivers/libshut.c, drivers/libusb0.c,
	  drivers/libusb1.c, drivers/liebert-esp2.c, drivers/masterguard.c,
	  drivers/metasys.c, drivers/mge-utalk.c, drivers/microsol-common.c,
	  drivers/netxml-ups.c, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_masterguard.c, drivers/nutdrv_siemens_sitop.c,
	  drivers/oneac.c, drivers/optiups.c, drivers/powercom.c,
	  drivers/powerp-bin.c, drivers/powerp-txt.c, drivers/rhino.c,
	  drivers/snmp-ups.c, drivers/solis.c, drivers/tripplite.c,
	  drivers/tripplite_usb.c, drivers/tripplitesu.c, drivers/upscode2.c,
	  drivers/upsdrvctl.c, include/nut_stdint.h, server/netssl.c,
	  server/sockdebug.c, server/upsd.c, tests/getvaluetest.c,
	  tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: Fix "%zx", "%zd", "%zi" and
	  "%zu" printing to PRI[xiu]SIZE that is named more standards-like
	* common/parseconf.c: include "config.h" first
	* common/wincompat.c, configure.ac, include/wincompat.h:
	  wincompat.{c,h}, configure.ac: introduce HAVE_INET_NTOP
	* common/wincompat.c, scripts/Windows/wininit.c: common/wincompat.c,
	  wininit.c: avoid defining errno as "extern int" for little reason
	* common/wincompat.c: mark with NUT_UNUSED_VARIABLE()
	* clients/upsc.c, clients/upsclient.c, clients/upscmd.c,
	  clients/upsmon.c, clients/upsrw.c, clients/upssched.c,
	  clients/upsset.c, common/common.c, common/wincompat.c,
	  drivers/al175.c, drivers/apcsmart.c, drivers/bcmxcp.c,
	  drivers/bcmxcp_ser.c, drivers/bcmxcp_usb.c, drivers/belkin.c,
	  drivers/bestfortress.c, drivers/bestups.c, drivers/clone-outlet.c,
	  drivers/clone.c, drivers/dstate.c, drivers/dummy-ups.c,
	  drivers/gamatronic.c, drivers/huawei-ups2000.c, drivers/isbmex.c,
	  drivers/ivtscd.c, drivers/libhid.c, drivers/libshut.c,
	  drivers/libusb0.c, drivers/libusb1.c, drivers/liebert-esp2.c,
	  drivers/masterguard.c, drivers/metasys.c, drivers/mge-utalk.c,
	  drivers/microsol-common.c, drivers/netxml-ups.c,
	  drivers/nutdrv_qx.c, drivers/nutdrv_qx_masterguard.c,
	  drivers/nutdrv_siemens_sitop.c, drivers/oneac.c, drivers/optiups.c,
	  drivers/powercom.c, drivers/powerp-bin.c, drivers/powerp-txt.c,
	  drivers/rhino.c, drivers/snmp-ups.c, drivers/solis.c,
	  drivers/tripplite.c, drivers/tripplite_usb.c,
	  drivers/tripplitesu.c, drivers/upscode2.c, drivers/upsdrvctl.c,
	  include/nut_stdint.h, server/netssl.c, server/sockdebug.c,
	  server/upsd.c, tests/getvaluetest.c,
	  tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: Fix "%zx", "%zd", "%zi" and
	  "%zu" printing to PRI[xiu]SIZE that is named more standards-like
	* clients/upsc.c, clients/upsclient.c, clients/upscmd.c,
	  clients/upsmon.c, clients/upsrw.c, clients/upssched.c,
	  clients/upsset.c, common/common.c, drivers/al175.c,
	  drivers/apcsmart.c, drivers/bcmxcp.c, drivers/bcmxcp_ser.c,
	  drivers/bcmxcp_usb.c, drivers/belkin.c, drivers/bestfortress.c,
	  drivers/bestups.c, drivers/clone-outlet.c, drivers/clone.c,
	  drivers/dstate.c, drivers/dummy-ups.c, drivers/gamatronic.c,
	  drivers/huawei-ups2000.c, drivers/isbmex.c, drivers/ivtscd.c,
	  drivers/libhid.c, drivers/libshut.c, drivers/libusb0.c,
	  drivers/libusb1.c, drivers/liebert-esp2.c, drivers/masterguard.c,
	  drivers/metasys.c, drivers/mge-utalk.c, drivers/microsol-common.c,
	  drivers/netxml-ups.c, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_masterguard.c, drivers/nutdrv_siemens_sitop.c,
	  drivers/oneac.c, drivers/optiups.c, drivers/powercom.c,
	  drivers/powerp-bin.c, drivers/powerp-txt.c, drivers/rhino.c,
	  drivers/snmp-ups.c, drivers/solis.c, drivers/tripplite.c,
	  drivers/tripplite_usb.c, drivers/tripplitesu.c, drivers/upscode2.c,
	  drivers/upsdrvctl.c, server/netssl.c, server/sockdebug.c,
	  server/upsd.c, tests/getvaluetest.c,
	  tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: Fix "%zd", "%zi" and "%zu"
	  printing to PRI(s)size
	* include/wincompat.h: only define EAFNOSUPPORT if absent
	* include/wincompat.h: only define ETIMEDOUT if absent
	* include/wincompat.h: use value for include-guard as elsewhere
	* common/wincompat.c: include "config.h" first
	* common/wincompat.c, include/nut_stdint.h: common/wincompat.ci,
	  nut_stdint.h: wrap some long lines, fix formatting chars  Fix
	  PRI(s)size for WIN32 builds
	* common/wincompat.c: avoid GNU extension syntax
	* configure.ac, include/common.h: ensure we have a "suseconds_t"
	  always

2022-05-24  Jim Klimov <jim@jimklimov.com>

	* drivers/cyberpower-mib.c: Update cyberpower-mib.c  Closes: #1427

2022-05-23  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: --disable-force-nut-version-header for builds without
	  a BUILD_TYPE, to help iterate faster
	* configure.ac, include/Makefile.am: introduce @FORCE_NUT_VERSION@
	* ci_build.sh: allow to pass CI_CCACHE_SYMLINKDIR="-" to avoid
	  guessing one
	* ci_build.sh: better detect ccache symlink directory
	* ci_build.sh: allow to pass CI_CCACHE_SYMLINKDIR="-" to avoid
	  guessing one
	* ci_build.sh: --disable-force-nut-version-header for builds without
	  a BUILD_TYPE, to help iterate faster
	* configure.ac, include/Makefile.am: introduce @FORCE_NUT_VERSION@
	* m4/nut_check_headers_windows.m4: Revert
	  "m4/nut_check_headers_windows.m4: try to allow builds with
	  __MINGW32__ (despite __CYGWIN__ or __CEGCC__) as native-Windows"
	  This reverts commit 76bf1ee94f39b619d1c7325b16d36072c427390e.
	* ci_build.sh: better detect ccache symlink directory
	* docs/config-prereqs.txt: update Windows MSYS2 with notes on ccache
	* docs/config-prereqs.txt: update Windows MSYS2 with more libneon
	  packaging
	* docs/config-prereqs.txt: update Windows MSYS2 with recommended PATH
	  settings

2022-05-20  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/Windows/halt.c: mark some NUT_UNUSED_VARIABLEs
	* drivers/serial.h: include config.h first
	* ci_build.sh: allow use of ccache in default builds without
	  BUILD_TYPE
	* ci_build.sh: detect relevant CI_CCACHE_SYMLINKDIR variants
	* ci_build.sh: allow use of ccache in default builds without
	  BUILD_TYPE
	* m4/nut_check_headers_windows.m4: NUT_CHECK_HEADER_WINDOWS(): try
	  CFLAGS="-I/usr/include/w32api ..."
	* m4/nut_check_headers_windows.m4: try to allow builds with
	  __MINGW32__ (despite __CYGWIN__ or __CEGCC__) as native-Windows
	* drivers/upsdrvctl.c: avoid duplicate variable declaration
	* scripts/Windows/halt.c: mark some NUT_UNUSED_VARIABLEs
	* scripts/Windows/wininit.c: include config.h first and avoid "empty
	  translation unit" on non-WIN32 builds
	* drivers/serial.h: include config.h first
	* drivers/serial.h: hack TIOCM_ST value that may be missing from
	  termios.h on Windows MSYS2
	* docs/config-prereqs.txt: add more suggested Windows MSYS2
	  dependencies
	* docs/config-prereqs.txt: add a NOTE about suggested pick of Windows
	  MSYS2 dependencies
	* docs/config-prereqs.txt: update links in Windows chapter
	* ci_build.sh: detect relevant CI_CCACHE_SYMLINKDIR variants
	* INSTALL.nut: add a chapter on Windows build enviromnent variants,
	  and separate further config notes with a heading
	* docs/config-prereqs.txt: add a chapter on Windows build enviromnent
	  variants (MSYS2 etc)

2022-05-19  Thierry Duvernoy <tduvernoy@free.fr>

	* drivers/usbhid-ups.c: Indentation correction and improvement of
	  reconnection debug messages

2022-05-19  Jim Klimov <jimklimov@gmail.com>

	* docs/man/usbhid-ups.txt: Update usbhid-ups.txt  Rephrase English
	  wording for `waitbeforereconnect` keyword

2022-05-19  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: recognize CI_OS_NAMEs for Windows MSYS2 and mingw
	  variants

2022-05-19  Federico Mena Quintero <federico@gnome.org>

	* docs/config-notes.txt: Fix link to the blazer_usb manual page
	  There's no man page for blazer[8]; I think blazer_usb is the
	  intended one, since all the links in that set are to the USB
	  drivers.

2022-05-18  Thierry Duvernoy <tduvernoy@free.fr>

	* docs/man/usbhid-ups.txt: usbhid-ups documentation correction
	* docs/man/usbhid-ups.txt: Documentation spell checking correction
	* docs/nut.dict: Adding waitbeforereconnect to nut.dict for spell
	  check
	* docs/man/usbhid-ups.txt, drivers/usbhid-ups.c: Adding
	  waitbeforereconnect parameter to usbhid-ups (default 0 second)

2022-05-17  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/libshut.h, drivers/usb-common.h: drivers/libshut.h +
	  usb-common.h: fix "alll" typos
	* server/upsd.c: set_exit_flag(): sig is not UNUSED
	* server/pipedebug.c: fix CRLF after merge
	* include/Makefile.am: fix whitespace after merge
	* drivers/clone.c: fix whitespace and comments after merge
	* drivers/clone-outlet.c: fix whitespace and comments after merge
	* drivers/apcsmart.c: refactor TYPE_FD use
	* docs/man/upsmon.conf.txt: fix whitespace
	* common/common.c: merge mess fix (report startup success on all
	  platforms)
	* drivers/main.c: set_exit_flag() should be static
	* clients/upsmon.c: merge mess fix (lost in translation)
	* common/wincompat.c: try to avoid empty translation unit
	* scripts/Windows/Makefile.am: add MAINTAINERCLEANFILES
	* server/netssl.c: merge mess fix
	* server/upsd.c: merge mess fix
	* tools/nut-scanner/scan_nut.c: merge mess fix
	* drivers/richcomm_usb.c: merge mess fix
	* drivers/usbhid-ups.h: must not include libshut.h directly
	* drivers/libusb1.c: merge mess fix
	* drivers/libshut.h: drivers/libshut.h + usb-common.h: fix "alll"
	  typos
	* drivers/main.c: merge mess fix
	* drivers/serial.c: merge fix for "First implementation of termios
	  functions"
	* clients/upssched.c: fix merge inversion
	* drivers/libshut.h, include/nut_stdint.h: include/nut_stdint.h: fix
	  merge markers
	* configure.ac: typo fix
	* clients/Makefile.am: avoid endif reminder-comments
	* drivers/libshut.h, drivers/usb-common.h: drivers/libshut.h +
	  usb-common.h: fix "alll" typos

2022-05-14  Thierry Duvernoy <tduvernoy@free.fr>

	* drivers/usb-common.h: Completing libusb #define error declarations

2022-05-13  Jim Klimov <jimklimov@gmail.com>

	* drivers/upsdrvctl.c: if we had to SIGKILL a driver, and succeeded,
	  remove its PID file
	* drivers/main.c: if an old PID file was found, say about it before
	  killing that PID (avoid questionable "kill: No such process" with
	  no further context)
	* .circleci/config.yml: reduce the workload, do not run
	  "default-all-errors" every time (fightwarn-all includes it anyway
	  now)
	* drivers/upsdrvctl.c: SIGKILL a driver instance if SIGTERM did not
	  [#1423]
	* .circleci/config.yml: comment to elaborate on individual vs shared
	  ccache
	* .circleci/config.yml: comment away not-working tests (alldrv)
	* drivers/main.c: SIGKILL a sibling driver instance if several
	  SIGTERMs did not [#1423]
	* ci_build.sh: fix fightwarn-all for systems without a clang-cpp in
	  PATH
	* .circleci/config.yml: BREW_MORE packages for alldrv test
	* .circleci/config.yml: rename build scenarios to reveal their aspect
	* .circleci/config.yml: allow to BREW_MORE packages in some scenarios
	* NEWS, docs/nut.dict: NEWS: reflect fixes and CI for MacOS

2022-05-12  Thierry Duvernoy <tduvernoy@free.fr>

	* drivers/usbhid-ups.c: Adding insufficient memory libusb error
	  handling to reconnect UPS instead of doing nothing. For example,
	  this error appears after 1 to 8 hours on an Eaton MGE 1500 UPS
	  (0463:ffff) and causes many "Can't retrieve Report 0a: Resource
	  temporarily unavailable" errors, followed by a passage of UPS in
	  ups.tatus "OL OFF" (Online Off) which immediately cuts off computer
	  power supply !!! Trying to reconnect solves this prohibitive
	  problem

2022-05-12  Jim Klimov <jimklimov+nut@gmail.com>

	* .circleci/config.yml: set CANBUILD_NIT_TESTS=yes since CircleCI VMs
	  are single-run/single-user environments
	* .circleci/config.yml: add CI_BUILDDIR: "obj" scenario
	* ci_build.sh: handle CANBUILD_NIT_TESTS envvars and
	  NUT_BUILD_CAPS=NIT... labels [follow-up to #1383]
	* .circleci/config.yml: add BUILD_TYPE: "fightwarn-all" scenario
	* .circleci/config.yml: use different BUILD_TYPEs to test more
	  nuances
	* .circleci/config.yml: parameterize BUILD_TYPE

2022-05-11  Jim Klimov <jimklimov+nut@gmail.com>

	* .circleci/config.yml: report ccache stats before and after build to
	  be sure it is used well
	* .circleci/config.yml: use parameterized "osx-xcode" job to run some
	  more scenarios - conservative about gcc-XXX versions
	* .circleci/config.yml: update TODO comments
	* .circleci/config.yml: use parameterized "osx-xcode" job to run some
	  more scenarios
	* .circleci/config.yml: convert "osx-xcode" job to parameterized
	* .circleci/config.yml: use automatically maintained built-in
	  CIRCLE_JOB envvar
	* .circleci/config.yml: rearrange the "job" definition for xcode to
	  use envvars block, so it can be generalized
	* .circleci/config.yml: do not push PATH to ci_build.sh now that we
	  have CI_CCACHE_SYMLINKDIR
	* .circleci/config.yml: comment away homebrew-libtool experiments
	* .circleci/config.yml: update TODO comments

2022-05-10  Jim Klimov <jimklimov@gmail.com>

	* .circleci/config.yml: Add .circleci/config.yml [#1419, #917, #869]

2022-05-10  Jim Klimov <jimklimov+nut@gmail.com>

	* .circleci/config.yml: use initial LDFLAGS="-L/usr/local/lib"
	  explicitly
	* .circleci/config.yml: promote installed libtool to the system -
	  hide the debug
	* .circleci/config.yml: promote installed libtool to the system -
	  find its files for info
	* .circleci/config.yml: promote installed libtool to the system
	* ci_build.sh: avoid losing tmp/lib in BUILD_TYPE=default-all-errors
	  loops
	* drivers/macosx-ups.c: avoid shadowing with hardcoded
	  max_capacity_value when we have a possibly-detected one  CC:
	  @clepple
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  add a chapter on MacOS with Homebrew
	* .circleci/config.yml: hotfix "warning: sem_init is deprecated"
	* drivers/macosx-ups.c: avoid (bogus) uninitialized-use warnings by
	  pre-initializing
	* drivers/macosx-ups.c: do not compare int and float
	* drivers/macosx-ups.c: comment and whitespace fixes
	* drivers/macosx-ups.c: do not shadow global device_name with
	  device_name_buf
	* ci_build.sh: hotfix "directory not found for option .../tmp/lib"
	* .circleci/config.yml: hotfix -Wno-poison-system-directories
	* .circleci/config.yml: install more prerequisites
	* .circleci/config.yml: refactor to use CI_CCACHE_SYMLINKDIR
	* ci_build.sh, docs/config-prereqs.txt, docs/nut.dict: ci_build.sh:
	  refactor to let override CI_CCACHE_SYMLINKDIR easily
	* drivers/dummy-ups.c: use better portable st_mtime [fallout of
	  #1383, fix #1415]
	* drivers/dummy-ups.c: use better portable st_mtime [fallout of
	  #1383, fix #1415]

2022-05-10  Abel Gómez <abgolla@gmail.com>

	* data/driver.list.in, drivers/salicru-hid.c: Add link to GitHub
	  issue  #1416  https://github.com/networkupstools/nut/issues/1416

2022-05-09  Jim Klimov <jimklimov@gmail.com>

	* docs/solaris-usb.txt, scripts/Solaris/Makefile.am,
	  .../{reset-ups-usb-solaris.sh => reset-ups-usb-solaris.sh.sample}:
	  scripts/Solaris/Makefile.am: distribute example
	  reset-ups-usb-solaris.sh  ...and rename the file accordingly to
	  avoid end-user confusion
	* docs/solaris-usb.txt, scripts/Solaris/reset-ups-usb-solaris.sh:
	  docs/solaris-usb.txt: move reset-ups-usb-solaris.sh to
	  scripts/Solaris/  ...and add some comments and sanity-checks
	* docs/nut.dict, docs/solaris-usb.txt: docs/solaris-usb.txt: document
	  use of cfgadm to disconnect and recycle the USB layer

2022-05-08  Abel Gómez <abgolla@gmail.com>

	* data/driver.list.in, drivers/salicru-hid.c,
	  scripts/upower/95-upower-hid.hwdb: Add support for Salicru SPS 850
	  ADV T

2022-05-05  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/developers.txt: clarify that python and perl are needed but
	  optional for running autogen.sh
	* docs/download.txt: clarify that python and perl are needed but
	  optional for running autogen.sh

2022-04-29  Jim Klimov <jimklimov+nut@gmail.com>

	* data/driver.list.in: driver.list.in: Add HCL info for CyberPower
	  Systems CPJ500 (USB)  Closes: #1403
	* data/driver.list.in: mark devices supported by "*_usb" drivers with
	  "USB" port comment, where lacking
	* data/driver.list.in: mark "usbhid-ups" devices with "USB" port
	  comment, where lacking
	* data/driver.list.in: mark "snmp-ups" as supported by public
	  protocol (3+)
	* data/driver.list.in: mark "usbhid-ups" as supported by public
	  protocol (3+)
	* data/driver.list.in: revise CPS "BR1000ELCD" support level

2022-04-27  minfrin <minfrin@users.noreply.github.com>

	* drivers/common_voltronic-crc.c: Remove warning:  Comparison between
	  byte of type unsigned short and len of wider type size_t
	* drivers/Makefile.am, drivers/common_voltronic-crc.c,
	  drivers/common_voltronic-crc.h, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx.h, drivers/nutdrv_qx_voltronic-axpert.c,
	  drivers/nutdrv_qx_voltronic-axpert.h: WIP: Support for Voltronic
	  Axpert P30 protocol inverters (main)  Adds support for the
	  Voltronic Axpert inverters based on the P30 protocol.  Updated the
	  nutdrv_qx driver to support the optional sending of commands
	  protected by CRC.  Initial support for query commands. Based on
	  work done in the Voltronic Sunny driver in
	  https://github.com/nickma82/nut/tree/nutdrv_qx_voltronic-sunny_rebased+command
	  Still TODO:  Implement commands to write to the inverter. Remove
	  commented code originating from sunny driver. Further testing.
	  Update docs (manpages, acknowledgements...)

2022-04-26  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: update dict
	* docs/download.txt: link to distro packaging wiki page on NUT github
	* docs/download.txt: update links to distro packaging recipes and
	  their results
	* docs/download.txt: deprecate buildbot tarballs
	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{0,1}.c: report
	  why we could not open any HID devices  Closes: #477

2022-04-25  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: add wc
	* docs/nut.dict: add uniq

2022-04-25  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: add a CI_BUILDDIR=obj into docs scenario;
	  name "out-of-tree builds" as such

2022-04-24  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: run some tests with CI_BUILDDIR
	* .gitignore, ci_build.sh: ci_build.sh: prepare for CI_BUILDDIR=obj
	* ci_build.sh: introduce CI_BUILDDIR to handle out-of-tree builds
	  other than distcheck
	* docs/man/Makefile.am, docs/man/index.txt, docs/man/nutupsdrv.txt,
	  docs/man/upsd.txt, docs/nut.dict: docs/man/nutupsdrv.txt +
	  index.txt + upsd.txt: use {builddir}/linkman-*.txt for included
	  data
	* docs/man/Makefile.am: refactor LINKMAN_INCLUDE_CONSUMERS
	* docs/man/Makefile.am: introduce A2X_VERBOSE
	* docs/nut-qa.txt, docs/nut.dict: docs/nut-qa.txt: mention "make
	  check-NIT-devel" helper target
	* docs/man/victronups.txt: update link to cable pinout  Closes: #1371
	* configure.ac: fix enableval vs withval
	* drivers/bcmxcp_usb.c, drivers/blazer_usb.c, drivers/nutdrv_qx.c,
	  drivers/richcomm_usb.c, drivers/riello_usb.c,
	  drivers/tripplite_usb.c, drivers/usb-common.c,
	  drivers/usb-common.h, drivers/usbhid-ups.c:
	  drivers/usb-common.{h,c} and USB-capable drivers: introduce
	  warn_if_bad_usb_port_filename()  Closes: #1368
	* ci_build.sh: disable check-NIT by default in CI runs for now

2022-04-23  Jim Klimov <jimklimov@gmail.com>

	* data/driver.list.in: driver.list.in: Add HCL info for PowerWalker
	  VI 750T/HID (USB)  Closes: #774
	* data/driver.list.in: driver.list.in: Add HCL info for PowerWalker
	  VI 2200 SH and 650 SHL (USB)  Closes: #646
	* data/driver.list.in: driver.list.in: Add HCL info for PowerWalker
	  VI 2200 SHL (USB) Closes: #756
	* data/driver.list.in: driver.list.in: Add HCL info for PowerWalker
	  VI 650 SH (USB)  Closes: #473
	* data/driver.list.in: driver.list.in: Add HCL info for PowerWalker
	  Basic VI 1000 SB (USB)  Closes: #818
	* data/driver.list.in: driver.list.in: Add HCL info for PowerWalker
	  VI 3000 SCL (USB)  Closes: #971
	* data/driver.list.in: driver.list.in: Add HCL info for PowerWalker
	  VI 1200 SHL (USB)  Closes: #1270
	* data/driver.list.in: driver.list.in: Add HCL info for UPS Phasak
	  model 9465, renamed as P6N (USB)  Closes: #1187
	* data/driver.list.in: driver.list.in: Add HCL info for Online-UPS
	  Xanto S700 [#1279]
	* data/driver.list.in: driver.list.in: Add HCL info for Santak
	  MT*-PRO / Castle C*K (Serial)  Closes: #1039
	* data/driver.list.in: driver.list.in: Add HCL info for Digitus
	  DN-170040, DN-170041, and Voltronic Power GalleonX9-RT LCD-1-3K
	  (USB)  Closes: #1251
	* data/driver.list.in: driver.list.in: Add HCL info for Kebo
	  UPS-650VA (USB) from DDL
	* data/driver.list.in: driver.list.in: Add HCL info for Kebo
	  UPS-1000D (USB)  Closes: #981
	* data/driver.list.in: driver.list.in: Add HCL info for Aviem Pro
	  2000VA (USB)  Closes: #827
	* data/driver.list.in: driver.list.in: Add HCL info for Digitus
	  DN-170076 (USB)  Closes: #948
	* data/driver.list.in: driver.list.in: Add HCL info for Ippon Back
	  Basic 850 Euro (USB)  Closes: #802
	* data/driver.list.in: driver.list.in: Add HCL info for Energy
	  Technologies DPK1/1-3 (Serial)  Closes: #762
	* data/driver.list.in: driver.list.in: Add HCL info for V7
	  UPS1RM2U1500-1E UPS 1500VA Rack Mount 2U (USB)  Closes: #716
	* data/driver.list.in: driver.list.in: Add HCL info for Advice PRS850
	  and PRV700 Pro (USB) from DDL
	* data/driver.list.in: driver.list.in: Add HCL info for Advice Top V
	  Pro 6-10K (USB)  Closes: #744
	* data/driver.list.in: driver.list.in: Add HCL info for Tecnoware UPS
	  ERA PLUS 1100 (USB)  Closes: #747
	* data/driver.list.in: driver.list.in: Add HCL info for Elsist UPS
	  Nemo2.0 160 (USB)  Closes: #719
	* data/driver.list.in: driver.list.in: Add HCL info for Powercom
	  Raptor 2000 and RPT-600AP (USB)  Closes: #633
	* data/driver.list.in: driver.list.in: Add HCL info for Eaton 9PX
	  2000 RT (USB)  Closes: #540
	* data/driver.list.in: driver.list.in: Add HCL info for Salicru SPS
	  ONE (USB)  Closes: #554
	* data/driver.list.in: driver.list.in: Add HCL info for APC
	  SMC2200BI-BR (USB)  Closes: #557
	* data/driver.list.in: driver.list.in: Update comment for APC
	  Back-UPS Pro 1000, Model BX1000M (USB) [nut#139]
	* data/driver.list.in: driver.list.in: Add HCL info for Liebert
	  PowerSure PSA 500 series (USB)  Closes: #601
	* docs/man/usbhid-ups.txt: document some caveats with CyberPower
	  UPSes [issues #520, #1394]
	* data/driver.list.in: driver.list.in: Update for CyberPower Systems
	  OR1500ERM1U [#1338]
	* data/driver.list.in: driver.list.in: Update comment for CyberPower
	  Systems PR1500RT2U [#1191]
	* data/driver.list.in: driver.list.in: Add HCL info for CyberPower
	  Systems CP850PFCLCD (USB)  Closes: #605
	* data/driver.list.in: driver.list.in: Add HCL info for CyberPower
	  Systems BL1250U (USB)  Closes: #1012
	* data/driver.list.in: driver.list.in: Add HCL info for CyberPower
	  Systems RT650EI (USB)  Closes: #453
	* data/driver.list.in: driver.list.in: Add HCL info for CyberPower
	  Systems CP1500PFCLCD (USB)  Closes: #520
	* data/driver.list.in: driver.list.in: Add HCL info for CyberPower
	  Systems BR1000ELCD (USB)  Closes: #552
	* data/driver.list.in: driver.list.in: Add HCL info for CyberPower
	  Systems UT2200E (USB)  Closes: #556
	* data/driver.list.in: driver.list.in: Add HCL info for CyberPower
	  Systems OR500LCDRM1U (USB)  Closes: #578
	* data/driver.list.in: driver.list.in: Add HCL info for CyberPower
	  Systems EC850LCD (USB)  Closes: #622
	* data/driver.list.in: driver.list.in: Add HCL info for Guardian LCD
	  1500 AP (IGA1500LCD) (Serial)  Closes: #449
	* data/driver.list.in: driver.list.in: Add HCL info for Ablerex MARS
	  MS3000RT (Serial)  Closes: #449
	* data/driver.list.in: driver.list.in: Add HCL info for APC AP9584
	  Serial-to-USB kit  Closes: #181
	* data/driver.list.in: driver.list.in: Update comment for Tripp_Lite
	  SMX500RT1U (USB) [#584]
	* data/driver.list.in: driver.list.in: Add HCL info for Huawei
	  UPS2000 series (modbus) [#954 #1066 #1198 #1017]
	* data/driver.list.in: driver.list.in: Add HCL info for DEXP MIX
	  850VA (USB)  Closes: #721
	* data/driver.list.in: driver.list.in: Add HCL info for CPC, ARES and
	  Powercool models with hunnox protocol (USB)  Closes: #537
	* data/driver.list.in: driver.list.in: Add HCL info for Greencell
	  Micropower 600 (USB)  Closes: #1080
	* data/driver.list.in: driver.list.in: Add HCL info for Crown
	  CMU-SP1200IEC (USB)  Closes: #1014
	* data/driver.list.in: driver.list.in: Add HCL info for DigiTECH
	  650VA (USB)  Closes: #674
	* data/driver.list.in: driver.list.in: Add HCL info for Hunnox
	  devices (and new protocol subdriver) (USB) [#638]
	* data/driver.list.in: driver.list.in: Add HCL info for nJoy Aten PRO
	  3000 (SNMP)  Closes: #1281
	* data/driver.list.in: Update driver.list.in
	* data/driver.list.in: driver.list.in: Add HCL info for nJoy Keen 600
	  (USB)  Closes: #867

2022-04-23  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/main.c: simplify detection of PROGNAME="lt-DRIVERNAME"
	  making it more reliable for some platforms
	* configure.ac: fix nut_enable_check_NIT
	* ci_build.sh: "--enable-check-NIT" and "--enable-maintainer-mode"
	  for developer builds without a BUILD_TYPE
	* ci_build.sh: "--enable-check-NIT" for CI builds
	* tests/NIT/nit.sh: fix renaming typo
	* tests/NIT/nit.sh: remove mktemp-ed TESTDIR when we exit
	* tests/NIT/nit.sh: refactor with TESTDIR
	* clients/upssched.c, common/common.c, drivers/clone-outlet.c,
	  drivers/clone.c, drivers/dstate.c, include/common.h,
	  server/sockdebug.c, server/sstate.c: check_unix_socket_filename()
	  to meaningfully abort when our paths are too long
	* docs/man/clone.txt, docs/man/dummy-ups.txt: docs/man/clone.txt +
	  dummy-ups.txt: clarify the dependency caveats  Clone drivers do not
	  require to run after upsd, but may need to start after the "real"
	  driver whose socket thay leech onto.
	* tests/NIT/nit.sh: limit how long we wait for UPS1/UPS2 to begin
	  responding
	* configure.ac, docs/configure.txt, docs/nut-qa.txt,
	  tests/NIT/Makefile.am: tests/NIT/Makefile.am + configure.ac:
	  introduce --enable-check-NIT
	* docs/man/dummy-ups.txt: re-wrap long lines and reword
	* docs/man/dummy-ups.txt: highlight that upsrw can not define new
	  variables
	* docs/man/dummy-ups.txt: update notes for dummy-once mode ability to
	  re-read file only if it changes
	* docs/man/dummy-ups.txt: update notes for dummy-once mode
	* docs/man/clone.txt, docs/man/dummy-ups.txt: docs/man/dummy-ups.txt
	  + clone.txt: cross-link two man pages to remind about similar
	  use-cases

2022-04-22  Paweł Rapkiewicz <pawel.rapkiewicz@gmail.com>

	* data/driver.list.in, drivers/ever-hid.c,
	  scripts/upower/95-upower-hid.hwdb: Confirm support for ECO Pro AVR
	  CDS series EVER UPS  This commit confirms that EVER UPS line 'ECO
	  Pro AVR CDS' is supported by NUT, from nowon, nut-scanner will
	  recognize EVER Ups as follows:  [nutdev1] driver = "usbhid-ups"
	  port = "auto" vendorid = "2E51" productid = "0000" product = "ECO
	  PRO AVR CDS" serial = "XXXXXXXXXXXXXXXXXXXXXXXXX" vendor = "EVER"
	  bus = "003"

2022-04-22  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/nit.sh: testcase_sandbox_upsc_query_timer(): do not waste
	  time if we did get the answer we want
	* tests/NIT/nit.sh: testcase_sandbox_upsc_query_timer(): for slower
	  testers out there, wait one more cycle
	* tests/NIT/nit.sh: ignore message from NSS builds  Those tend to add
	  lines like Init SSL without certificate database so we should
	  better grep for expected char sequence
	* tests/NIT/nit.sh: add testgroup_sandbox_cppnit_simple_admin() to
	  troubleshoot dummy-ups data propagation
	* tests/NIT/nit.sh: testcase_sandbox_start_drivers_after_upsd(): wait
	  for UPS1 and UPS2 to respond
	* tests/cpputest-client.cpp: allow up to 10 seconds for SET VAR to
	  propagate into read-back value
	* tests/.gitignore: GitIgnore tests/cppnit binary and logs
	* docs/nut.dict: Update nut.dict
	* tests/NIT/nit.sh: refactor test cases into smaller routines and
	  groups, and allow to select NIT_CASE optionally
	* tests/NIT/nit.sh: refactor stop_daemons()
	* Makefile.am, tests/Makefile.am, tests/NIT/Makefile.am:
	  tests/NIT/Makefile.am: extend with check-NIT-devel for iterating
	* drivers/dstate.c: log start of processing in sock_arg()
	* drivers/dstate.c: whitespace fix
	* tests/NIT/nit.sh: allow to tweak NUT_DEBUG_MIN
	* tests/cpputest-client.cpp: trace values read back after setting
	* tests/cpputest-client.cpp: rename "s1" original value reading
	* scripts/python/Makefile.am: clean *.pyc and __pycache__/ if present

2022-04-21  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/dummy-ups.c: fix dummy-once mode for relative path in port
	* tests/NIT/nit.sh: name the "dummy.seq" so it loops by default
	* drivers/main.c: better fix for handling of libtool-named binaries
	* tests/NIT/nit.sh: if "Error: Driver not connected" retry with UPSD
	  started after drivers are running
	* drivers/main.c: fix the handling of libtool-named binaries
	* tests/NIT/nit.sh: "sed -i" requires an extension (may be empty, in
	  BSD must be a separate CLI token, in others must be same token -
	  not empty is ok for all)
	* tests/NIT/nit.sh: "sed -i" requires an extension (may be empty, in
	  BSD must be a separate CLI token)
	* drivers/dummy-ups.c: cover exhaustive case(enum) with pragmas for
	  diametral warnings
	* tests/NIT/nit.sh: extend with mode=... for dummy-ups [#1385]
	* NEWS, UPGRADING, docs/man/dummy-ups.txt, drivers/dummy-ups.c:
	  dummy-ups: do re-read a "dummy-once" file, though only if it
	  changes while the driver runs  r the commit message for your
	  changes. Lines starting
	* NEWS, UPGRADING, docs/man/dummy-ups.txt, drivers/dummy-ups.c:
	  dummy-ups: separate MODE_DUMMY_ONCE from MODE_DUMMY_LOOP  Closes:
	  #1385
	* docs/man/dummy-ups.txt: small rewording
	* drivers/dummy-ups.c: refactor "mode" from random defines to an enum
	* include/str.h, common/str.c: add str_ends_with()
	* tests/NIT/nit.sh: make sure ups.status is not pre-defined empty in
	  test sandbox
	* tests/cpputest-client.cpp: test_auth_user(): bail out if
	  "ups.status" reply is empty
	* tests/NIT/nit.sh: report DEBUG_SLEEP mode more usefully
	* tests/NIT/nit.sh: spell out 127.0.0.1 and ::1 if detected supported
	  on local system - do not rely on ping CLI alone
	* tests/NIT/nit.sh: spell out 127.0.0.1 and ::1 if detected supported
	  on local system

2022-04-20  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/nit.sh: report issues more usefully for troubleshooting
	  CI
	* tests/NIT/Makefile.am: use more portable clumsier code
	* drivers/main.c: accept "lt-PROGNAME" to run libtool-wrapped builds
	  during development
	* tests/NIT/nit.sh: Avoid dummies with TIMER flip-flops for cppnit if
	  we can
	* tests/Makefile.am: do not run "cppnit" as part of TESTS, only give
	  a recipe to build it
	* clients/nutclient.h, tests/Makefile.am, tests/NIT/nit.sh,
	  tests/cpputest-client.cpp: NutActiveClientTest: introduce C++
	  NutActiveClientTest for NIT and similar uses
	* tests/NIT/nit.sh: log OVERALL results before DEBUG_SLEEP
	* tests/NIT/nit.sh: refactor upsd.users passwords as shell vars to
	  ease reuse
	* tests/NIT/nit.sh: check that test_nutclient.py was generated before
	  running it; export NUT_PORT just once
	* tests/NIT/nit.sh: embed weak randomization of NUT_PORT  At least
	  this little magic is better than a hardcoded number: if several CI
	  executors run `make check` at once on same host, they now have a
	  decent chance to not collide (not guaranteed though)
	* tests/NIT/nit.sh: let caller customize NUT_PORT
	* Makefile.am, configure.ac, tests/Makefile.am, tests/NIT/.gitignore,
	  tests/NIT/Makefile.am: Add tests/NIT/Makefile.am for
	  straightforward integration of the test suite
	* configure.ac, tests/Makefile.am: configure.ac: fix detection of
	  cppunit on some platforms  Note for posterity: CFLAGS go before
	  source, LDFLAGS+LIBS after source, in g++ cmdline
	* Makefile.am: fix "make check-docs" and siblings from root dir
	* Makefile.am: let "make check-NIT" from root dir
	* tests/NIT/README, tests/NIT/nit.sh: tests/NIT: warn in
	  docs/comments that starting pwd should be the BUILDDIR
	* tests/Makefile.am: help check-NIT pass in distcheck (cleaner)
	* tests/NIT/README, tests/NIT/nit.sh: tests/NIT/README: update a bit
	* tests/Makefile.am: help check-NIT pass in distcheck
	* docs/nut-qa.txt: mention NUT NIT and update links to Ubuntu QART
	* tests/NIT/nit.sh: make some debug noise optional
	* tests/NIT/nit.sh: typo fix for SRCDIR
	* tests/NIT/nit.sh: sanity checks for BUILDDIR
	* tests/NIT/nit.sh: bail out quickly if got no daemons to run
	* tests/Makefile.am: call NIT suite
	* tests/NIT/nit.sh: document DEBUG_SLEEP a bit

2022-04-19  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/NIT/.gitignore, tests/NIT/README, tests/NIT/nit.sh: NIT: NUT
	  Integration Tests (usable PoC) [another take at issue #3]
	* clients/upsrw.c, docs/man/upsrw.txt: upsrw: accept "-l" for listing
	  Closes: #1382
	* scripts/python/module/test_nutclient.py.in: test_nutclient.py.in:
	  allow to override NUT_PORT, NUT_USER, NUT_PASS
	* conf/ups.conf.sample: update with info from docs/man/ups.conf.txt

2022-04-18  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/cyberpower-mib.c: update cyberpower_power_status[] with new
	  values [#1377]
	* clients/nutclient.cpp: clients/nutclient.{cpp,h}:
	  deviceMaster()/devicePrimary(): add fallback handling with the
	  other keyword [#840, #1374]
	* clients/nutclient.cpp, clients/nutclient.h,
	  clients/nutclientmem.cpp, clients/nutclientmem.h,
	  docs/man/libnutclient_misc.txt: clients/nutclient{mem}.{cpp,h}
	  docs/man/libnutclient_misc.txt: add PRIMARY handling [#840]
	  Closes: #1374
	* clients/nutclient.cpp, clients/nutclient.h,
	  docs/man/libnutclient_tcp.txt: clients/nutclient.{cpp,h}
	  docs/man/libnutclient_tcp.txt: fix timeout from long to time_t
	  Closes: #1376
	* clients/upsc.c, clients/upsclient.c, clients/upsclient.h,
	  clients/upscmd.c, clients/upsimage.c, clients/upslog.c,
	  clients/upsmon.h, clients/upsrw.c, clients/upsset.c,
	  clients/upsstats.c, docs/man/upscli_connect.txt,
	  drivers/dummy-ups.c: clients/upsclient.{c,h} and many clients +
	  dummy-ups: fix port from int to uint16_t  Closes: #1379
	* docs/man/libnutclient_variables.txt: fix English
	* clients/upsclient.h: fix whitespace
	* clients/upsclient.c, clients/upsclient.h,
	  docs/man/upscli_readline.txt, docs/man/upscli_sendline.txt:
	  clients/upsclient.{c,h} docs/man/upscli_{read,send}line.txt: fix
	  timeout from long to time_t  Closes: #1373
	* clients/nutclient.cpp, clients/nutclient.h,
	  docs/man/libnutclient_tcp.txt, docs/nut.dict:
	  clients/nutclient.{cpp,h}: fix port type from unsigned short to
	  uint16_t  Closes: #1375
	* docs/man/Makefile.am: `$(<F)` is not POSIX compliant, while `$(@F)`
	  is, go figure [#1362 follow-up]

2022-04-17  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/Makefile.am: abstract filenames into
	  LINKMAN_INCLUDE_GENERATED macro

2022-04-16  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/Makefile.am: DOCBUILD_BEGIN: work around older BSD make
	  not seeing sources not present in builddir  It seems to resolve
	  single-source documents well, but fails to find the upsd.txt which
	  depends on linkman*-names.txt and build a proper relative path to
	  it.
	* docs/man/Makefile.am: ensure linkman-drivertool*names.txt are in
	  builddir
	* docs/man/Makefile.am: ensure linkman-drivertool*names.txt are in
	  A2X_OUTDIR
	* docs/man/Makefile.am: avoid spurious regeneration of
	  linkman-drivertool*names.txt whenever we reference them
	* docs/man/Makefile.am: generate linkman-drivertool*names.txt
	  independent of current dir being srcdir
	* ci_build.sh: "cat" the "git diff"

2022-04-15  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/libnutclient_general.txt, docs/man/libnutclient_misc.txt,
	  docs/man/libnutclient_tcp.txt, docs/man/libnutclient_variables.txt,
	  docs/man/libupsclient-config.txt, docs/nut.dict:
	  docs/man/libnutclient*.txt: wrap long lines, minor rephrase, bullet
	  points
	* docs/man/libnutclient_commands.txt,
	  docs/man/libnutclient_devices.txt:
	  docs/man/libnutclient_devices.txt, libnutclient_commands.txt:
	  synopsis for strarr
	* docs/man/libnutclient_devices.txt: wrap long lines, minor rephrase,
	  bullet points
	* docs/man/libnutclient_commands.txt: wrap long lines, minor
	  rephrase, bullet points; added optional param arg in API
	* docs/man/upscli_strerror.txt: fix return type modifier to const
	* docs/man/upscli_add_host_cert.txt, docs/man/upscli_cleanup.txt,
	  docs/man/upscli_disconnect.txt, docs/man/upscli_fd.txt,
	  docs/man/upscli_get.txt, docs/man/upscli_init.txt,
	  docs/man/upscli_list_next.txt, docs/man/upscli_readline.txt,
	  docs/man/upscli_sendline.txt, docs/man/upscli_splitaddr.txt:
	  docs/man/upscli*.txt: wrap long lines, minor rephrase
	* docs/man/nutscan_init.txt, docs/man/nutscan_new_device.txt,
	  docs/man/nutscan_scan_usb.txt: docs/man/nutscan*.txt: document
	  methods with (void) arg list as such
	* docs/man/Makefile.am, docs/man/index.txt, docs/man/nutscan.txt,
	  docs/man/nutscan_add_device_to_device.txt,
	  docs/man/nutscan_add_option_to_device.txt,
	  docs/man/nutscan_cidr_to_ip.txt,
	  docs/man/nutscan_display_parsable.txt,
	  docs/man/nutscan_display_ups_conf.txt,
	  docs/man/nutscan_free_device.txt,
	  docs/man/nutscan_get_serial_ports_list.txt,
	  docs/man/nutscan_init.txt, docs/man/nutscan_new_device.txt,
	  docs/man/nutscan_scan_avahi.txt,
	  docs/man/nutscan_scan_eaton_serial.txt,
	  docs/man/nutscan_scan_ipmi.txt, docs/man/nutscan_scan_nut.txt,
	  docs/man/nutscan_scan_snmp.txt, docs/man/nutscan_scan_usb.txt,
	  docs/man/nutscan_scan_xml_http.txt,
	  docs/man/nutscan_scan_xml_http_range.txt:
	  docs/man/nutscan_scan_xml_http_range.txt: document the method which
	  got extended from original nutscan_scan_xml_http() doing just a
	  local broadcast
	* docs/man/nutscan_scan_ipmi.txt: document the method which now is
	  implemented
	* docs/man/nutscan.txt, docs/man/nutscan_add_device_to_device.txt,
	  docs/man/nutscan_add_option_to_device.txt,
	  docs/man/nutscan_cidr_to_ip.txt, docs/man/nutscan_free_device.txt,
	  docs/man/nutscan_get_serial_ports_list.txt,
	  docs/man/nutscan_init.txt, docs/man/nutscan_new_device.txt,
	  docs/man/nutscan_scan_avahi.txt,
	  docs/man/nutscan_scan_eaton_serial.txt,
	  docs/man/nutscan_scan_nut.txt, docs/man/nutscan_scan_snmp.txt,
	  docs/man/nutscan_scan_usb.txt, docs/man/nutscan_scan_xml_http.txt:
	  docs/man/nutscan*.txt: wrap long lines, minor rephrase, fix
	  timeouts to useconds_t
	* docs/nut.dict: spellcheck drivertool
	* docs/man/apcsmart-old.txt, docs/man/apcsmart.txt,
	  docs/man/asem.txt, docs/man/bcmxcp_usb.txt,
	  docs/man/liebert-esp2.txt, docs/man/macosx-ups.txt,
	  docs/man/microsol-apc.txt, docs/man/nut.conf.txt,
	  docs/man/nutdrv_atcl_usb.txt, docs/man/nutdrv_qx.txt,
	  docs/man/nutdrv_siemens_sitop.txt, docs/man/oneac.txt,
	  docs/man/optiups.txt, docs/man/upscode2.txt,
	  docs/man/usbhid-ups.txt: docs/man/*.txt: reformat AUTHOR(S) and
	  INTERNET RESOURCES blocks to common style
	* docs/man/upsdrvsvcctl.txt: list Jim Klimov as the AUTHOR
	* docs/man/nut-driver-enumerator.txt: list Jim Klimov as the AUTHOR
	* docs/man/snmp-ups.txt: list AUTHORS as a bulleted list and add Jim
	  Klimov
	* docs/man/snmp-ups.txt: wrap long lines and reword a bit
	* docs/man/optiups.txt: wrap long lines
	* docs/man/phoenixcontact_modbus.txt: wrap long lines
	* docs/man/belkinunv.txt: add link to protocol description copy on
	  NUT site
	* docs/support.txt: mention github instead of subversion
	* docs/man/.gitignore, docs/man/Makefile.am, docs/man/index.txt,
	  docs/man/nutupsdrv.txt, docs/man/upsd.txt: docs/man/index.txt,
	  upsd.txt, nutupsdrv.txt: generate the up-to-date list of drivers,
	  current for each iteration
	* docs/man/index.txt, docs/man/nutupsdrv.txt, docs/man/upsd.txt:
	  docs/man/upsd.txt, nutupsdrv.txt, index.txt: move common
	  nutupsdrv[8] from the bulk of driver list
	* docs/man/nutupsdrv.txt, docs/man/upsd.txt: docs/man/upsd.txt,
	  nutupsdrv.txt: generate current list of drivers
	* docs/man/index.txt: generate current list of drivers, separate
	  "Driver Control" title
	* docs/man/nutupsdrv.txt, docs/man/upsd.txt: docs/man/upsd.txt,
	  nutupsdrv.txt: reformat lists of drivers and tools to bullet lists
	* docs/Makefile.am: DOCBUILD_BEGIN: symlink images/ ONLY for PDF
	  generation
	* ci_build.sh: add notes to Consider `--enable-maintainer-mode`
	* .gitignore: GitIgnore IDEA metadata files
	* docs/.gitignore: GitIgnore more intermediate XML files from docs
	  generation

2022-04-14  Jim Klimov <jimklimov@gmail.com>

	* docs/Makefile.am: A2X_COMMON_OPTS: use "--attribute=..."
	  consistently
	* docs/Makefile.am: have "images/" in A2X_OUTDIR (fallout of #1152)
	  Closes: #1365

2022-04-14  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/man/nutscan_display_parsable.txt,
	  docs/man/nutscan_display_ups_conf.txt,
	  docs/man/nutscan_free_device.txt,
	  docs/man/nutscan_get_serial_ports_list.txt: docs/man/nutscan*.txt:
	  fix formatting and typos
	* docs/man/upscli_get.txt, docs/man/upscli_init.txt,
	  docs/man/upscli_list_start.txt: docs/man/upscli*.txt: fix sample
	  source formatting
	* docs/man/upsmon.txt: reword a dangling sentence
	* docs/man/tripplite_usb.txt: fix formatting
	* docs/man/riello_ser.txt: fix formatting
	* docs/man/riello_usb.txt: fix formatting
	* docs/man/snmp-ups.txt: fix sample source formatting
	* docs/man/socomec_jbus.txt: fix formatting and typos
	* docs/man/Makefile.am, docs/nut.dict: docs/man/Makefile.am: list the
	  socomec_jbus.txt
	* docs/man/pijuice.txt: fix formatting
	* docs/man/nutdrv_qx.txt: fix formatting
	* docs/man/nutdrv_atcl_usb.txt: fix formatting
	* docs/man/nut.conf.txt: fix sample source formatting
	* docs/man/mge-utalk.txt: fix formatting
	* docs/man/liebert-esp2.txt: fix formatting
	* docs/man/clone.txt: fix sample source formatting
	* docs/man/bestups.txt, docs/man/blazer-common.txt,
	  docs/man/masterguard.txt: docs/man/blazer-common.txt,
	  masterguard.txt, bestups.txt: fix formatting [#1361]
	* docs/man/adelsystem_cbi.txt: fix formatting
	* docs/sock-protocol.txt: fix formatting
	* docs/snmp-subdrivers.txt: small typo
	* docs/packager-guide.txt: reshuffle known names
	* docs/nut-qa.txt: list a few more tools we use
	* TODO, docs/nut-qa.txt: Fix remaining links to asciidoc.org
	* docs/nut-names.txt: fix table formatting
	* docs/new-clients.txt: fix sample source formatting
	* docs/net-protocol.txt: fix version table formatting
	* docs/FAQ.txt: fix formatting, extend some notes
	* docs/nut.dict: Update nut.dict
	* docs/developers.txt: fix formatting, extend some notes
	* docs/developer-guide.txt: fix formatting; update URL to
	  evolution500.seq
	* docs/design.txt: fix formatting; note FIXMEs for documenting
	  TRACKING support
	* docs/daisychain.txt: fix formatting
	* drivers/snmp-ups.h: update comment to clarify the meaning of
	  SU_TYPE_DAISY_1 and SU_TYPE_DAISY_2
	* docs/configure.txt: fix formatting, add titles, extend some notes
	* docs/configure.txt: add a section on modbus drivers
	* docs/configure.txt: link to powerman project
	* docs/configure.txt: fix formatting, add driver type titles, extend
	  some notes
	* docs/config-prereqs.txt: fix formatting, extend some notes
	* docs/solaris-usb.txt: drop suggestions about building special
	  libusb-1.0/0.1 branches
	* docs/solaris-usb.txt: fix formatting, extend some notes
	* docs/solaris-usb.txt: add a NOTE for USB drivers ignoring port
	  option [#1368]
	* docs/config-notes.txt: fix formatting, extend some notes and
	  warnings, and service-driven life-cycle
	* docs/config-notes.txt: document ALLOW_NO_DEVICE for upsd.conf
	  [#766, #837]
	* docs/config-notes.txt: reformat and extend the NOTE for USB drivers
	  ignoring port option [#1368]
	* ci_build.sh, docs/ci-farm-lxc-setup.txt, docs/nut.dict:
	  docs/ci-farm-lxc-setup.txt: fix formatting, extend on Jenkins agent
	  setup
	* ci_build.sh: use "gmake" for "./ci_build.sh spellcheck" if
	  available and no particular MAKE was requested - fall back to
	  "make" if "gmake" is not available

2022-04-13  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/asciidoc.txt: update link to the Asciidoc Manual (and project
	  now on github)

2022-04-12  Jim Klimov <jimklimov@gmail.com>

	* Makefile.am: define dependencies between recipes for dist* and
	  package; tarball, sig and checksum filenames

2022-04-10  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/daisychain.txt, docs/man/adelsystem_cbi.txt,
	  docs/man/al175.txt, docs/man/apcsmart-old.txt,
	  docs/man/apcsmart.txt, docs/man/apcupsd-ups.txt, docs/man/asem.txt,
	  docs/man/bcmxcp.txt, docs/man/bcmxcp_usb.txt, docs/man/belkin.txt,
	  docs/man/belkinunv.txt, docs/man/bestfcom.txt,
	  docs/man/bestfortress.txt, docs/man/bestuferrups.txt,
	  docs/man/bestups.txt, docs/man/blazer-common.txt,
	  docs/man/clone.txt, docs/man/dummy-ups.txt, docs/man/etapro.txt,
	  docs/man/everups.txt, docs/man/gamatronic.txt,
	  docs/man/generic_modbus.txt, docs/man/genericups.txt,
	  docs/man/hosts.conf.txt, docs/man/huawei-ups2000.txt,
	  docs/man/isbmex.txt, docs/man/ivtscd.txt,
	  docs/man/libnutclient.txt, docs/man/libnutclient_commands.txt,
	  docs/man/libnutclient_devices.txt,
	  docs/man/libnutclient_general.txt, docs/man/libnutclient_misc.txt,
	  docs/man/libnutclient_tcp.txt, docs/man/libnutclient_variables.txt,
	  docs/man/libupsclient-config.txt, docs/man/liebert-esp2.txt,
	  docs/man/liebert.txt, docs/man/macosx-ups.txt,
	  docs/man/masterguard.txt, docs/man/metasys.txt,
	  docs/man/mge-shut.txt, docs/man/mge-utalk.txt,
	  docs/man/microdowell.txt, docs/man/microsol-apc.txt,
	  docs/man/netxml-ups.txt, docs/man/nut-driver-enumerator.txt,
	  docs/man/nut-ipmipsu.txt, docs/man/nut-recorder.txt,
	  docs/man/nut-scanner.txt, docs/man/nut.conf.txt,
	  docs/man/nutdrv_atcl_usb.txt, docs/man/nutdrv_siemens_sitop.txt,
	  docs/man/nutscan.txt, docs/man/nutscan_add_device_to_device.txt,
	  docs/man/nutscan_add_option_to_device.txt,
	  docs/man/nutscan_cidr_to_ip.txt,
	  docs/man/nutscan_display_parsable.txt,
	  docs/man/nutscan_display_ups_conf.txt,
	  docs/man/nutscan_free_device.txt,
	  docs/man/nutscan_get_serial_ports_list.txt,
	  docs/man/nutscan_init.txt, docs/man/nutscan_new_device.txt,
	  docs/man/nutscan_scan_avahi.txt,
	  docs/man/nutscan_scan_eaton_serial.txt,
	  docs/man/nutscan_scan_ipmi.txt, docs/man/nutscan_scan_nut.txt,
	  docs/man/nutscan_scan_snmp.txt, docs/man/nutscan_scan_usb.txt,
	  docs/man/nutscan_scan_xml_http.txt, docs/man/nutupsdrv.txt,
	  docs/man/oneac.txt, docs/man/optiups.txt,
	  docs/man/phoenixcontact_modbus.txt, docs/man/pijuice.txt,
	  docs/man/powercom.txt, docs/man/powerman-pdu.txt,
	  docs/man/powerpanel.txt, docs/man/rhino.txt,
	  docs/man/richcomm_usb.txt, docs/man/riello_ser.txt,
	  docs/man/riello_usb.txt, docs/man/safenet.txt, docs/man/skel.txt,
	  docs/man/snmp-ups.txt, docs/man/socomec_jbus.txt,
	  docs/man/solis.txt, docs/man/tripplite.txt,
	  docs/man/tripplite_usb.txt, docs/man/tripplitesu.txt,
	  docs/man/ups.conf.txt, docs/man/upsc.txt,
	  docs/man/upscli_add_host_cert.txt, docs/man/upscli_cleanup.txt,
	  docs/man/upscli_connect.txt, docs/man/upscli_disconnect.txt,
	  docs/man/upscli_get.txt, docs/man/upscli_init.txt,
	  docs/man/upscli_list_next.txt, docs/man/upscli_list_start.txt,
	  docs/man/upscli_readline.txt, docs/man/upscli_sendline.txt,
	  docs/man/upscli_splitname.txt, docs/man/upsclient.txt,
	  docs/man/upscmd.txt, docs/man/upscode2.txt, docs/man/upsd.conf.txt,
	  docs/man/upsd.txt, docs/man/upsd.users.txt, docs/man/upsdrvctl.txt,
	  docs/man/upsdrvsvcctl.txt, docs/man/upsimage.cgi.txt,
	  docs/man/upslog.txt, docs/man/upsmon.conf.txt, docs/man/upsmon.txt,
	  docs/man/upsrw.txt, docs/man/upssched.conf.txt,
	  docs/man/upssched.txt, docs/man/upsset.cgi.txt,
	  docs/man/upsset.conf.txt, docs/man/upsstats.cgi.txt,
	  docs/man/upsstats.html.txt, docs/man/usbhid-ups.txt,
	  docs/man/victronups.txt, docs/nut-names.txt,
	  docs/packager-guide.txt: docs/man: be sure to keep a blank line
	  after SYNOPSIS and other titles [#1362]
	* docs/FAQ.txt: clarify about nutdrv_qx
	* UPGRADING: detail about "OBSOLETION WARNING" for "Megatec Q*"
	* docs/man/bestups.txt, docs/man/blazer-common.txt,
	  docs/man/masterguard.txt, drivers/bestups.c, drivers/blazer.c,
	  drivers/masterguard.c: Report deprecation messages when starting
	  older Qx drivers  And document similarly in their man pages
	  (bestups, blazer, masterguard)
	* docs/FAQ.txt, docs/nut.dict: docs/FAQ.txt: add more reasons and
	  symptoms that a running driver disappears
	* docs/FAQ.txt, docs/nut.dict: docs/FAQ.txt: suggest checking Linux
	  USB HID Quirk [#630]
	* ci_build.sh: use "gmake" for "./ci_build.sh spellcheck" if
	  available and no particular MAKE was requested
	* docs/FAQ.txt, docs/nut.dict: docs/FAQ.txt: suggest how to pick
	  drivers for bogus vendor IDs
	* drivers/usbhid-ups.c: bump version for #1356 and #1359
	* drivers/tripplite_usb.c: bump version for #584
	* drivers/mge-hid.c: bump version for #1357

2022-04-09  Stuart Henderson <sthen@users.noreply.github.com>

	* drivers/usbhid-ups.c: reinstate handling for STATUS(ONLINE) in
	  usbhid-ups  The recent onlinedischarge changes removed support for
	  some STATUS(ONLINE) cases, affecting at least CP1300EPFCLCD - this
	  brings them back.

2022-04-08  Jim Klimov <jimklimov@gmail.com>

	* NEWS: tripplite_usb recognizes "3005" protocol for NUT v2.7.5

2022-04-08  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS: note Liebert/Phoenixtec vs MGE HID handling of VendorID
	  0x06da
	* drivers/mge-hid.c: mge_claim(): test that VendorID==PHOENIXTEC
	  0x06da has also Vendor or Product containing "AEG"
	* data/driver.list.in: update for "PowerWalker VFI 2000 TGS" via
	  "usbhid-ups" [#564]
	* docs/man/usbhid-ups.txt: update for "some PowerWalker models"
	* NEWS, docs/nut.dict: NEWS: improve PowerWalker VFI 2000 TGS support
	  in NUT v2.7.5
	* drivers/liebert-hid.c, drivers/mge-hid.c: drivers/liebert-hid.c:
	  get PowerWalker VFI 2000 TGS working, read values correctly  This
	  reverts commit c38b45a56a9d1283657d62a9fa1ed1af5daa1ba2 which added
	  such support into mge-hid.c (at risk to proper support of earlier
	  handled devices by various vendors), and transplants the new lines
	  into liebert-hid.c  See issue #560 for a HID walk from the device
	  in question; data like that may help expand liebert-hid.c later
	  (its table seems to map a lot less field names than mge-hid.c, but
	  not sure if "true" Liebert/Phoenixtec HID devices support the
	  rest).

2022-04-07  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: update spellchecker
	* docs/nut.dict: update spellchecker

2022-04-07  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/usbhid-ups.c: instcmd(): do not risk NULL-dereference
	  debugging about "using Path" with a NULL hidpath (just in case)
	  [#1346]
	* drivers/usbhid-ups.c: instcmd(): do not risk NULL-dereference
	  debugging about "using Path" too early [#1346]
	* drivers/usbhid-ups.c: instcmd(): wrap some long lines

2022-04-05  Jim Klimov <jimklimov@gmail.com>

	* docs/man/upsmon.conf.txt: fix markup (pluses make emphasis and
	  xmllint goes upset)

2022-04-04  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: prepare for next iterations after release of NUT
	  v2.8.0
	* configure.ac: prepare for next iterations after release of NUT
	  v2.8.0
	* configure.ac: cut the release of NUT v2.8.0
	* tools/nut-scanner/Makefile.am, clients/Makefile.am: bump
	  "version-info" for NUT v2.8.0  Development since 2.7.4 release
	  included changes to code structure, fought warnings, and might
	  impact ABI/API by the changes to arguments (specific integer types
	  and size_t vs. architecture-dependent choice).
	* configure.ac: cut the release of NUT v2.8.0
	* tools/nut-scanner/Makefile.am, clients/Makefile.am: bump
	  "version-info" for NUT v2.8.0  Development since 2.7.4 release
	  included changes to code structure, fought warnings, and might
	  impact ABI/API by the changes to arguments (specific integer types
	  and size_t vs. architecture-dependent choice).
	* configure.ac, include/Makefile.am: avoid picking "vX.Y.Z-signed"
	  tags more actively
	* configure.ac, include/Makefile.am: avoid picking "vX.Y.Z-signed"
	  tags, only "vX.Y.Z" name denotes the release officially
	* configure.ac: fall back to exclude-only filter of "git describe"
	  tags if autoconf/m4/shell messes up the "match" ones
	* INSTALL.nut: add another perspective on packages vs source builds;
	  refer to config-prereqs.txt
	* INSTALL.nut: trim trailing spaces
	* README: trim trailing spaces
	* README: clarify use of github
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  clarify pre-installation of python and perl
	* docs/config-prereqs.txt: clarify that non-GNU makes should work
	  well

2022-04-02  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/app/NUT-Monitor: fix typo, thank CI
	* UPGRADING: detail the Py2/Py3 packages
	* UPGRADING: make note of systemd and Py2/3 changes on top for
	  packagers to see
	* NEWS: detail the split of NUT-Monitor and new wrapper script
	* scripts/python/app/README: update with sections; list Desktop menu
	  integration and Kudos
	* scripts/python/app/.gitignore, scripts/python/app/NUT-Monitor,
	  scripts/python/app/nut-monitor.desktop: Introduce new NUT-Monitor
	  name-holder as a wrapping script to pick usable implementation
	* scripts/python/app/.gitignore: GitIgnore newly named variants of
	  NUT-Monitor-py2gtk2 and NUT-Monitor-py3qt5
	* scripts/python/app/README: document how to get localized UI in
	  dev/testing
	* scripts/python/app/README: document how to run UI app in-place
	* m4/nut_check_python.m4: extend list of some python interpreter
	  filenames
	* configure.ac, scripts/python/Makefile.am,
	  scripts/python/app/{NUT-Monitor.in => NUT-Monitor-py2gtk2.in},
	  scripts/python/app/nut-monitor-py2gtk2.desktop,
	  scripts/python/app/nut-monitor.desktop, scripts/python/app/{ =>
	  ui}/gui-1.3.glade, scripts/python/app/{ => ui}/gui-1.3.glade.h:
	  Rename NUT-Monitor UI app to NUT-Monitor-py2gtk2
	* configure.ac, scripts/python/Makefile.am,
	  scripts/python/app/{NUT-Monitor.in => NUT-Monitor-py3qt5.in},
	  scripts/python/app/nut-monitor-py3qt5.desktop,
	  scripts/python/app/nut-monitor.desktop: Rename modernized
	  NUT-Monitor UI app to NUT-Monitor-py3qt5

2022-04-01  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/python/README: clarify that `test_nutclient.py` requires an
	  `upsd` running
	* scripts/python/module/PyNUT.py.in: fix typo (fallout of #840)
	* docs/config-prereqs.txt: fix typos in OpenIndiana chapter
	* NEWS, docs/net-protocol.txt, docs/nut.dict, server/netcmds.h: Add
	  "PROTVER" as alias to "NETVER" for NUT v2.8.0  Closes: #1347

2022-03-31  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am, docs/Makefile.am, docs/man/Makefile.am:
	  {.,docs,docs/man}/Makefile.am: add "all-man" target to build all
	  possible man pages (vs ones for enabled drivers), and weave this
	  and check targets to parent makefiles
	* ci_build.sh: introduce shortcut for BUILD_TYPE=fightwarn-all
	* ci_build.sh: in BUILD_TYPE=default-all-errors report visibly when
	  no failures happened
	* m4/nut_compiler_family.m4: treat /usr/pkg/include as -isystem
	* common/parseconf.c, common/str.c, drivers/apcsmart-old.c,
	  drivers/apcsmart.c, drivers/mge-utalk.c, drivers/serial.c,
	  drivers/snmp-ups.c, server/conf.c: Cast (size_t)(char) for
	  isprint(), isspace(), isdigit(), toupper(), etc. who may be macros
	  and use it as array subscript (due to sys/ctype_inline.h)

2022-03-30  Jim Klimov <jimklimov+nut@gmail.com>

	* autogen.sh: suggest to export PYTHON=python-x.y
	* autogen.sh: detect more python-x.y filenames
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  add chapter for NetBSD 9.2 builder setup
	* docs/config-prereqs.txt: drop bogus command (copy-paste typo)

2022-03-29  Jim Klimov <jimklimov@gmail.com>

	* .github/pull_request_template.md: Update pull_request_template.md

2022-03-28  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: recognize more "*bsd" CI_OS_NAME values
	* ci_build.sh: do not make noise about non-ubiquitous options to
	  "uname" program
	* drivers/usbhid-ups.c: set the onlinedischarge variable based on
	  flag presence
	* drivers/usbhid-ups.c: drop DEFAULT_ONLINEDISCHARGE to match
	  "VAR_FLAG" semantics
	* docs/nut.dict: add onlinedischarge
	* NEWS: clarify that NUT 2.8.0 is new name for old planned NUT 2.7.5
	* NEWS: added usbhid-ups onlinedischarge for NUT v2.7.5
	* docs/man/usbhid-ups.txt: document onlinedischarge
	* drivers/usbhid-ups.c: fix var usage for upsname
	* drivers/usbhid-ups.c: fix format string for "onlinedischarge" help

2022-03-28  Benjamin Berg <bberg@redhat.com>

	* scripts/upower/95-upower-hid.hwdb,
	  scripts/upower/95-upower-hid.rules, tools/nut-usbinfo.pl:
	  tools/nut-usbinfo.pl: Use hwdb for UPower rules

2022-03-26  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: default to clang if also available when default gcc is
	  too old

2022-03-25  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt: update openbsd tools for man-page builds
	* Jenkinsfile-dynamatrix: avoid failure-prone build toolkits for
	  manpage tests
	* m4/nut_compiler_family.m4: avoid configure noise message
	* m4/ax_check_compile_flag.m4: extend to check conftest.err log about
	  unsupported flags
	* Jenkinsfile-dynamatrix: define axisCombos_COMPILER_GCC_TOO_OLD near
	  other compiler-related combos
	* Jenkinsfile-dynamatrix: fix scenarios with "non-fatal warnings"
	  that had BUILD_WARNFATAL=yes anyway (copy-paste issue)

2022-03-24  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: avoid even running axisCombos_GCC_TOO_OLD
	  where we require fatal warnings
	* configure.ac: for very old GCC where we are not in control of
	  warnings, make them non-fatal always (for "auto" level)
	* drivers/libhid.c: clang-3.4 does not know
	  "-Wtautological-type-limit-compare" either
	* Jenkinsfile-dynamatrix: make use of dsbcStageTimeoutSettings

2022-03-23  Yifeng Li <tomli@tomli.me>

	* drivers/huawei-ups2000.c: huawei-ups2000.c: ups2000_read_serial():
	  documenting the useless range-check.
	* drivers/huawei-ups2000.c: huawei-ups2000.c: remove useless CRC
	  range check  After crc16() has been modified to accept a size_t
	  length, it's unnecessary to check whether the input length is
	  greater than UINT16_MAX.  Also, the check on whether
	  ident_response_len is at least as long as the
	  IDENT_RESPONSE_CRC_LEN is useless, since this condition is already
	  implied by the previous check in step 2, it's thus removed.
	* drivers/huawei-ups2000.c: huawei-ups2000.c: crc16(): use size_t
	  instead of uint16_t.  This removes the unnecessary casts in
	  between. Also, size_t is semantically more correct than uint16_t.
	* drivers/huawei-ups2000.c: huawei-ups2000.c:
	  ups2000_device_identification(): remove superfluous casts in crc16
	  calculations  The initial code didn't cast to uint16_t and was
	  certainly a bug, but to fix that, only a single cast is needed, not
	  three casts.
	* drivers/huawei-ups2000.c: huawei-ups2000.c: crc16(): remove
	  superfluous casts to uint16_t when bit-shifting  The initial code
	  didn't cast to uint16_t and was certainly a bug, but to fix that,
	  only a single cast is needed, not three casts.

2022-03-23  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: with nut_enable_warnings=auto, avoid fatal warnings
	  with GCC 4.3 or older (no support for diags pragmas)
	* configure.ac: report initial nut_enable_warnings (default or
	  argument)
	* configure.ac: pre-set nut_enable_warnings=auto by default (not
	  hardcoded "medium")
	* ci_build.sh: set BUILD_WARNOPT and BUILD_WARNFATAL to "auto" for
	  BUILD_TYPE="fightwarn"* shortcuts (survive antique compilers,
	  default to medium/fatal normally)
	* ci_build.sh: comment BUILD_WARNOPT setting for
	  BUILD_TYPE="fightwarn"* shortcuts
	* m4/nut_compiler_family.m4: enable back the "-isystem" tuning to not
	  complain about packaged third-party headers
	* drivers/libhid.c: make use of
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_TYPE_LIMIT_COMPARE
	  (clang-6.0.0 of OpenBSD 6.4)
	* m4/ax_c_pragmas.m4: introduce
	  [HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_TYPE_LIMIT_COMPARE
	* configure.ac: specify AC_PREREQ([2.64])
	* m4/nut_check_libgd.m4: fix detection of gdImagePng() with
	  additional link requirements
	* configure.ac: document practical requirement for AC_PREREQ(2.64)
	* NEWS, UPGRADING, docs/config-notes.txt, docs/man/upscmd.txt,
	  docs/man/upsrw.txt: docs, NEWS, UPGRADING: rename 2.7.5 to 2.8.0 in
	  text that appeared after 2.7.4
	* docs/net-protocol.txt: document "PRIMARY" as alias to "MASTER"
	* docs/net-protocol.txt: bump next release from 2.7.5 to 2.8.0
	* configure.ac: bump NUT_NETVERSION to 1.3 to match
	  docs/net-protocol.txt

2022-03-21  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/subdriver/gen-snmp-subdriver.sh: fix back markup for
	  mib2nut_info_t lines  Follow-up for #1327 Thanks to @aquette

2022-03-19  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nutdrv_qx.c: qx_ups_walk(): log the change of estimated
	  remaining runtime
	* NEWS: nutdrv_qx: enhanced estimation of remaining battery runtime
	  for NUT v2.7.5
	* drivers/nutdrv_qx.c: comment about source and data for estimated
	  runtime corrections
	* drivers/nutdrv_qx.c: fix trailing whitespace
	* ci_build.sh: when parsing BUILD_TYPE=fightwarn, do not default
	  NUT_SSL_VARIANTS and NUT_USB_VARIANTS to "auto" - so building just
	  one variant at most, even if agent supports more
	* drivers/nutdrv_qx.c: snr_command(): adapt to usb_ctrl_charbuf

2022-03-16  Jim Klimov <jimklimov@gmail.com>

	* NEWS: added driver adelsystem_cbi for NUT v2.7.5
	* drivers/adelsystem_cbi.h: functions implemented in a header should
	  be static
	* drivers/adelsystem_cbi.c: extend pragmas for covered/requred
	  "default" case to work with clang-3.4

2022-03-16  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/libhid.h, drivers/usbhid-ups.c: drivers/libhid.h,
	  usbhid-ups.c: define HID_DEV_HANDLE_CLOSED usable for both SHUT and
	  USB cases

2022-03-15  Jim Klimov <jimklimov@gmail.com>

	* ci_build.sh: if we only build USB variant(s), do not shy away from
	  testing some SSL and whatever drivers we can

2022-03-15  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{0,1}.c: retry
	  getting Manufacturer/Product/Serial a few times if failed on the
	  first  Kudos to Sam Varshavchik for proposing this code change in
	  discussion https://github.com/networkupstools/nut/issues/414
	* drivers/usbhid-ups.c: try to close libusb handle before
	  reconnecting (from discussion of issue #414)
	* docs/config-prereqs.txt: currently refrain from clang-13 in OI
	* docs/config-prereqs.txt: mark aspell as recommended (it is not big)
	* docs/config-prereqs.txt: update instructions for symlinks on OI
	* docs/config-prereqs.txt: fix typos in instructions for OpenIndiana,
	  and update for new toolkits available in 2022

2022-03-12  juantonio <admin@ofi.linkpc.net>

	* drivers/salicru-hid.c: Add tested descriptors for Salicru Twin Pro
	  2

2022-03-12  Jim Klimov <jimklimov@gmail.com>

	* ci_build.sh: add support for CI_CROSSBUILD_HOST and/or
	  CI_CROSSBUILD_TARGET settings [#1294, #1289, #1334]
	* ci_build.sh: check for "gd" as one of names gdlib can go by
	* ci_build.sh: use PKG_CONFIG variable if provided (fall back to
	  pkg-config from PATH, but only for this script itself) [#710]
	* drivers/salicru-hid.c: Update salicru-hid.c  Cosmetic fixes
	* m4/nut_check_libnetsnmp.m4: improve checks for actually present
	  priv/auth protocols [#1289]  Great thanks to @eklinedi on GitHub
	  for finding the issue and investigating ways to fix it
	* drivers/snmp-ups.h: net-snmp after v5.9.1 does not declare ONE_SEC
	  that our code uses; stash the definiton
	* configure.ac, m4/ax_c_pragmas.m4, m4/ax_run_or_link_ifelse.m4,
	  m4/nut_compiler_family.m4: Introduce m4/ax_run_or_link_ifelse.m4 to
	  facilitate cross-builds [#1289]
	* ci_build.sh: report OS_* envvar values if passed by caller
	* ci_build.sh: expand a bit CI_OS_HINT detection on linux systems

2022-03-11  Jim Klimov <jimklimov@gmail.com>

	* m4/nut_compiler_family.m4: quiesce -Wreserved-identifier (clang
	  13+) that acts up on system headers
	* drivers/riello.c: riello_parse_re(): assign Pout#W and Pout#VA from
	  pom_long not pom_word
	* drivers/belkinunv.c: instcmd(): find use for "r" to at least report
	  failed cmds

2022-03-11  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt: rearrange packages to not require heavy
	  ones by default dependency footprint (aspell, docs generation and
	  libgd)
	* server/netuser.c: copy-paste typo fix
	* NEWS, UPGRADING: NEWS: rename pending NUT release from 2.7.5 to
	  2.8.0 (config files using new keywords are not
	  backwards-compatible, not usable by old binaries)
	* NEWS: added battery.mfr.date APC HID UPS setting for NUT v2.7.5
	* NEWS, docs/nut.dict: NEWS: added socomec_jbus driver for NUT v2.7.5
	* server/netuser.c: net_master(): provide more details about client
	  using deprecated commands
	* docs/net-protocol.txt: update for "PRIMARY" netcmd support (alias
	  of "MASTER") [issue #840]
	* NEWS: update for "PRIMARY" netcmd support (alias of "MASTER")
	  [issue #840]
	* scripts/python/module/PyNUT.py.in, server/netcmds.h,
	  server/netuser.c, server/netuser.h: netcmds.h, netuser.{c,h},
	  PyNUT.py.in: deprecate protocol "MASTER" command in favor of
	  "PRIMARY" [issue #840]
	* server/upsd.c: check_command(): instrument with upsdebugx()
	* server/netuser.c: net_login(): instrument with upsdebugx()
	* clients/upsmon.c: apply_for_primary(): request elevation by
	  PRIMARY, fall back to MASTER (for older upsd builds)
	* NEWS, UPGRADING: NEWS: rename pending NUT release from 2.7.5 to
	  2.8.0 (config files using new keywords are not
	  backwards-compatible, not usable by old binaries)

2022-03-10  Jim Klimov <jimklimov@gmail.com>

	* scripts/subdriver/gen-snmp-subdriver.sh: Update
	  gen-snmp-subdriver.sh  Quote variable expansions; replace `echo -n`
	  with a more portable `printf`

2022-03-10  Jim Klimov <jimklimov+nut@gmail.com>

	* scripts/subdriver/gen-snmp-subdriver.sh: gen-snmp-subdriver.sh: put
	  back indented CFILE markup (fix here-docs, instead of
	  unmaintainable printf)
	* scripts/subdriver/gen-snmp-subdriver.sh: gen-snmp-subdriver.sh: fix
	  valid chars HOSTNAME input (e.g. IP)

2022-03-10  Arnaud Quette <ArnaudQuette@eaton.com>

	* scripts/subdriver/gen-snmp-subdriver.sh: SNMP subdriver generation
	  script: minor reformatting
	* scripts/subdriver/gen-snmp-subdriver.sh: SNMP subdriver generation
	  script: fixes and improvements

2022-03-08  Thanos Chatziathanassiou <tchatzi@arx.net>

	* docs/man/socomec_jbus.txt: some documentatyion fixes

2022-03-08  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/getvaluetest.c: check different methods to combine two "wire"
	  bytes into a lenght word (follows up for #1320), hopefully all work
	  the same on all architectures
	* drivers/nutdrv_qx.c: simplify back the bit-maths to cast into
	  uint8_t following discussion in #1320
	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{0,1}.c:
	  simplify back the bit-maths to cast into uint8_t following
	  discussion in #1320

2022-03-07  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/tripplite_usb.c: fix (commented-away) hard_shutdown() to
	  "unsigned char" and bit maths similar to soft_shutdown()
	* drivers/riello_usb.c: Get_USB_Packet(): cast bit maths to (unsigned
	  char) to err on safe side
	* drivers/riello_usb.c: whitespace fix
	* drivers/nutdrv_qx.c: upsdrv_initups(): cast langid calculations to
	  uint16_t (or wider) [similar to #1320]
	* drivers/libusb0.c, drivers/libusb1.c: drivers/libusb{1,0}.c:
	  {nut_}libusb_open(): cast rdlen calculations to uint16_t (or wider)
	  [follow-up from #1320]
	* drivers/libshut.c: shut_checksum(): address (usb_ctrl_charbuf)buf
	  as (unsigned char) in bit maths
	* drivers/libshut.c: BYTESWAP(): cast "in" to (uint16_t) for bit
	  maths and use a full-width mask
	* drivers/blazer_usb.c: upsdrv_initups(): address
	  (usb_ctrl_charbuf)tbuf as (unsigned char) in bit maths

2022-03-02  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/snmp-ups.h: make sure WITH_SNMP_LKP_FUN_DUMMY is defined
	* drivers/mge-xml.c: mge_drycontact_info(): avoid shadowing global
	  variable
	* docs/config-prereqs.txt: suggest updating JDK certs for OpenBSD
	  (actually applies to others too)
	* docs/config-prereqs.txt: suggest gcc/clang versioned symlinks for
	  building NUT CI in openbsd
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  clarify how to update openbsd /etc/installurl
	* docs/config-prereqs.txt: bash was suggested among "comfortable
	  environment packages" and busybox is missing for openbsd
	* docs/config-prereqs.txt: suggest comfortable environment packages
	  for openbsd
	* docs/config-prereqs.txt: fix openbsd example wording

2022-02-28  Nick Briggs <nicholas.h.briggs@gmail.com>

	* drivers/libusb0.c: Cast to unsigned type when interpreting HID
	  descriptor length bytes (libusb 0.1)  The libusb 0.1 interface
	  definition declares a (signed) char type for control messages.  The
	  HID descriptor length contained within a control message is
	  intended to be interpreted as a pair of unsigned bytes so we must
	  cast to uint8_t when doing the arithmetic rather than trip over the
	  sign bit.  Closes #1261, closes #1312.

2022-02-27  Nita Vesa <werecatf@outlook.com>

	* drivers/apc-hid.c, drivers/usbhid-ups.c: APC HID UPS: Add ability
	  to set battery battery.mfr.date  Some APC UPSes allow for setting
	  battery.mfr.date, so it can be easily referenced later, even if
	  there were no stickers or papers left to refer to.  This patch has
	  been tested to work with APC Back-UPS ES 550G.

2022-02-27  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/snmp-ups.c: daisychain_init(): add debug trace
	* drivers/eaton-pdu-marlin-helpers.c: marlin_device_count_fun(): add
	  debug trace

2022-02-27  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: extend daisychain initialization to use
	  optional mapping function  Note: ported sub-set of "snmp-ups.[ch] :
	  add support for extended fun/nuf l2s/s2l conversions and use it for
	  daisychain initialization" without the actual 2x2 "fun/nuf l2s/s2l"
	  support here.
	* drivers/snmp-ups.c: whitespace fix
	* drivers/eaton-pdu-marlin-mib.c: resync comments and use of
	  SU_FLAG_SEMI_STATIC
	* drivers/snmp-ups.c: avoid stringop-truncation warning: make sure
	  string is finite
	* drivers/snmp-ups-helpers.c, drivers/snmp-ups.c: Move
	  su_temperature_read_fun() from drivers/snmp-ups.c to
	  snmp-ups-helpers.c
	* drivers/powerware-mib.c: update comments and implem for dummy
	  eaton_sensor_temperature_unit_fun()/su_temperature_read_fun() from
	  42ity/nut
	* drivers/eaton-pdu-marlin-mib.c: update comments and implem for
	  dummy eaton_sensor_temperature_unit_fun()/su_temperature_read_fun()
	  from 42ity/nut
	* drivers/eaton-pdu-marlin-mib.c, drivers/powerware-mib.c,
	  drivers/snmp-ups.c, drivers/snmp-ups.h: drivers/snmp-ups.{c,h}:
	  adjust su_temperature_read_fun() API to that used in NUT master
	  branch
	* drivers/eaton-pdu-marlin-helpers.c,
	  drivers/eaton-pdu-marlin-helpers.h:
	  drivers/eaton-pdu-marlin-helpers.{c,h}: adjust
	  eaton_sensor_temperature_unit_fun() API to that used in NUT master
	  branch
	* drivers/eaton-pdu-marlin-helpers.c: fix whitespace
	* drivers/eaton-pdu-marlin-mib.c: align comments around
	  outlet.%i.name with FTY version
	* drivers/eaton-pdu-marlin-mib.c: align with "snmp-ups: Simplify the
	  mapping structure" changes for input.phases=>input.count

2022-02-25  Jim Klimov <jim@jimklimov.com>

	* drivers/eaton-pdu-marlin-mib.c: break long lines
	* drivers/snmp-ups.h: avoid "#if" with possibly not-defined macro
	* drivers/eaton-pdu-marlin-mib.c: relocate outlet.%i.load.off.delay
	  etc like in FTY
	* drivers/eaton-pdu-marlin-mib.c: break long lines like in FTY
	* drivers/eaton-pdu-marlin-mib.c: break long lines

2022-02-24  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict  Update for Adelsystem CBI

2022-02-24  Jim Klimov <jimklimov+nut@gmail.com>

	* NEWS: Update synchronous=auto for NUT v2.7.5
	* drivers/dstate.c: send_to_all(): port do_synchronous auto=>on
	  fallback from send_to_one()
	* drivers/dstate.c: send_to_one()/send_to_all(): make the
	  success-report less verbose (level 6)
	* drivers/dstate.c: send_to_one()/send_to_all(): make the
	  reconnection WARNING more visible
	* conf/ups.conf.sample, docs/man/ups.conf.txt, drivers/dstate.c,
	  drivers/main.c: driver/dstate.c, main.c: extend do_synchronous to
	  have an "auto" mode (now by default) so reconnections would be sync
	* drivers/dstate.c: send_to_one(): log at level 0 if write failed
	  (twice maybe) and so driver is disconnecting
	* drivers/dstate.c: send_to_one(): log more details if throttling
	  down, and if it helped
	* drivers/snmp-ups.c: snmp_ups_walk(): log "walking device %d" at
	  level 1 now, and without a dot-number (to avoid confusion)
	* drivers/dstate.c: send_to_one(): try to sleep and resend failed
	  posting; log the faults (and successes) at level 1

2022-02-23  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/dstate.c: send_to_all() send_to_one(): clarify
	  "disconnecting" when logging that write failed
	* drivers/snmp-ups.c: update comment for snmp_ups_walk() for "single"
	  device
	* drivers/snmp-ups.c: snmp_ups_walk(): for "unitary" (non-daisychain
	  member) devices, walk a ".1" device only (should end up querying
	  non-templated OIDs anyway) - avoid walking .0 partially and .1
	  again for same data
	* drivers/snmp-ups.c: snmp_ups_walk(): log walking an "unitary"
	  device if not a daisy-chain, for balance
	* drivers/snmp-ups.c: snmp_ups_walk(): only log "Skipping daisychain
	  device.0" when in daisy-chain context (skip anyway even for
	  singular devices where we should also walk .1 anyway)
	* drivers/snmp-ups.c: update heading comments for daisychain related
	  variables
	* drivers/snmp-ups.c: snmp_ups_walk(): only skip "device.0" if in
	  daisy-chain mode
	* drivers/snmp-ups.c: update comment for current_device_number

2022-02-22  Thanos Chatziathanassiou <tchatzi@arx.net>

	* docs/man/socomec_jbus.txt, drivers/Makefile.am,
	  drivers/socomec_jbus.c: Added socomec_jbus implementation

2022-02-22  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/snmp-ups.c: snmp_ups_walk(): fix taxonomy of "processing
	  daisy-chain device" debug log

2022-02-22  Jim Klimov <jim@jimklimov.com>

	* scripts/subdriver/gen-snmp-subdriver.sh: generate "standard MIB
	  items" into new MIB mappings  Kudos to @aquette for the catch in PR
	  review

2022-02-21  Luke Dashjr <luke-jr+git@utopios.org>

	* scripts/python/Makefile.am, scripts/python/README,
	  scripts/python/app/NUT-Monitor.in, scripts/python/app/README,
	  scripts/python/app/gui-1.3.glade,
	  scripts/python/app/gui-1.3.glade.h,
	  scripts/python/app/nut-monitor.desktop,
	  scripts/python/app/ui/aboutdialog1.ui,
	  scripts/python/app/ui/dialog1.ui, scripts/python/app/ui/dialog2.ui,
	  scripts/python/app/ui/window1.ui: NUT-Monitor: Port to
	  Python3+PyQt5
	* scripts/python/Makefile.am, scripts/python/README,
	  scripts/python/app/NUT-Monitor.in, scripts/python/app/README,
	  scripts/python/app/gui-1.3.glade,
	  scripts/python/app/gui-1.3.glade.h,
	  scripts/python/app/nut-monitor.desktop,
	  scripts/python/app/ui/aboutdialog1.ui,
	  scripts/python/app/ui/dialog1.ui, scripts/python/app/ui/dialog2.ui,
	  scripts/python/app/ui/window1.ui: NUT-Monitor: Port to
	  Python3+PyQt5

2022-02-19  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/snmp-ups.c, server/upsd.c: drivers/snmp-ups.c
	  upsdrv_updateinfo(); server/upsd.c driver_free() mainloop(): trace
	  connection faults and reconnections better
	* drivers/dstate.c: send_to_one(): consistently use "buflen"
	* drivers/dstate.c: send_to_all/send_to_one: extend failed-send
	  tracing
	* drivers/snmp-ups.c: su_setOID(): uncomment the fallback for
	  "device.x.contact" not found as a "contact", and add another to
	  strip "device.1." => "device." to allow setting non-templated
	  values to daisy-chain master
	* drivers/snmp-ups.c, server/upsd.c: drivers/snmp-ups.c
	  upsdrv_updateinfo(); server/upsd.c driver_free() mainloop(): trace
	  connection faults and reconnections better
	* drivers/dstate.c: send_to_one(): consistently use "buflen"
	* drivers/dstate.c: send_to_all/send_to_one: extend failed-send
	  tracing

2022-02-19  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: wrap long lines, add comments
	* drivers/snmp-ups.c: upsdrv_initups(): check that there is no
	  daisychain master entry before defining IETF-MIB fallback defaults
	  for contact/location/description
	* drivers/snmp-ups.c: upsdrv_initups(): comment and log that IETF-MIB
	  fallback defaults for contact/location/description are only read
	  once (not updated while driver runs)
	* drivers/snmp-ups.c: su_ups_get(): fake current_device_number=1 to
	  su_setinfo() when walking a daisy-chain with non-templated OID
	* drivers/snmp-ups.c: get_and_process_data(), su_ups_get(): add
	  tracing logs to make sense of daisy-chain OID adaptations
	* drivers/snmp-ups.c: wrap long lines, add comments
	* drivers/snmp-ups.c: su_setinfo(): trace diags for different
	  code-paths about daisy-chained OID decisions
	* drivers/snmp-ups.c: su_setinfo(): this is not the place to check
	  for ".%i" after all

2022-02-18  Viktor Kuzmin <kvaster@gmail.com>

	* configure.ac: Fix individual drivers configuration

2022-02-18  Jim Klimov <jim@jimklimov.com>

	* tools/nut-dumpdiff.sh: revise to also strip frequency measurements
	* tools/nut-dumpdiff.sh: revise to also strip
	  (load|temperature|humidity) measurements
	* docs/documentation.txt: document tools/nut-dumpdiff.sh helper
	* tools/nut-dumpdiff.sh: revise to strip just numeric measurements of
	  (*.power|voltage|current)
	* tools/nut-dumpdiff.sh: extend to not strip ALL numeric values but
	  ones that are likely measurements
	* tools/Makefile.am, tools/nut-dumpdiff.sh: Add tools/nut-dumpdiff.sh
	  helper
	* drivers/snmp-ups.c: su_setOID(): handle e.g. "device.contact" as
	  either "device.0.contact" for "all devices" if OID is templated or
	  NULL, or "device.1.contact" for "master device" in other cases
	* drivers/snmp-ups.c: su_setOID(): import (commented away - not
	  deemed necessary so far) fallback for e.g. "device.x.contact" is
	  not found as a "contact"
	* drivers/snmp-ups.c: su_setinfo(): fix comment
	* drivers/snmp-ups.c: fix "device.varname" for daisychain 'master'
	  units  * su_setinfo(): should not expose master-specific data (like
	  device.contact coming from IETF un-templated data points not aware
	  about daisy chains) as if it were the data specific to every device
	  in the chain; note that for defaulted data (like device.type="pdu"
	  hardcoded with NULL OID) we still expose it across the board  *
	  su_setOID(): "upsrw ... device.contact" should change the
	  daisychain master device (for IETF un-templated data; but in this
	  commit - always)

2022-02-17  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: su_setOID(): fix mis-interpretation of
	  "device*" as always a daisy-chain
	* drivers/snmp-ups.c: use "hard-coded" IETF MIB for read-only access
	  to sysDescr also (only if mib2nut does not yet define a better
	  value)
	* drivers/snmp-ups.c: use "hard-coded" IETF MIB for read-only access
	  to sysContact and sysLocation only if mib2nut does not yet define a
	  better value
	* drivers/emerson-avocent-pdu-mib.c: whitespace fix
	* drivers/eaton-pdu-marlin-mib.c: whitespace fix
	* drivers/apc-mib.c: drivers/apc-mib: whitespace fix
	* drivers/xppc-mib.c: whitespace fix
	* drivers/apc-ats-mib.c, drivers/apc-mib.c, drivers/baytech-mib.c,
	  drivers/bestpower-mib.c, drivers/compaq-mib.c,
	  drivers/cyberpower-mib.c, drivers/delta_ups-mib.c,
	  drivers/eaton-ats16-nm2-mib.c, drivers/eaton-ats16-nmc-mib.c,
	  drivers/eaton-pdu-genesis2-mib.c, drivers/eaton-pdu-marlin-mib.c,
	  drivers/eaton-pdu-pulizzi-mib.c,
	  drivers/eaton-pdu-revelation-mib.c,
	  drivers/emerson-avocent-pdu-mib.c, drivers/hpe-pdu-mib.c,
	  drivers/huawei-mib.c, drivers/ietf-mib.c, drivers/mge-mib.c,
	  drivers/netvision-mib.c, drivers/powerware-mib.c,
	  drivers/raritan-pdu-mib.c, drivers/raritan-px2-mib.c,
	  drivers/xppc-mib.c: drivers/*-mib.c: define standard-MIB entries
	  for device.description, contact, location (RW STRING)
	* clients/upscmd.c, clients/upsrw.c: clients/upsrw.c, upscmd.c: fix
	  sanity-check of tracking_id length (forgot the nul-byte)
	* scripts/systemd/nut-driver@.service.in: make sure drivers always
	  try to start and connect - how ever many attempts that takes
	* scripts/systemd/nut-driver@.service.in: comment about
	  "Before=nut-driver.target" constraint
	* scripts/systemd/nut-driver@.service.in: make sure drivers always
	  try to start and connect

2022-02-17  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adelsystem_cbi.c: handle covered-switch-default and
	  switch-enum warnings
	* drivers/adelsystem_cbi.h: clean up, fix typos
	* drivers/adelsystem_cbi.c: clean up, fix typos
	* docs/man/Makefile.am, docs/man/adelsystem_cbi.txt: man page added

2022-02-16  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/upsmon.c: restructure config reload for debug_min to be
	  more similar to that in upsd.c
	* clients/upsmon.c: whitespace fix
	* scripts/systemd/nut-server.service.in: reload upsd without PID file
	  [for #1299]
	* server/conf.c: allow upsd to reload config and apply its debug_min
	  setting
	* clients/upsmon.c, docs/man/upsmon.txt: clients/upsmon.c: add "-P
	  pid" arg handling, and report result of sendsignal(), like in upsd
	  [for #1299, #123]
	* docs/man/upsd.txt, scripts/systemd/nut-server.service.in,
	  server/upsd.c: upsd.c: add -FF option to stay foregrounded AND
	  write the PID file, use it in systemd/nut-server.service [for
	  #1299]
	* docs/man/upsd.txt, server/upsd.c: server/upsd.c: add "-P PID" arg
	  for commands [for #1299]
	* common/common.c, include/common.h: include/common.h, common.c:
	  refactor sendsignalfn() into parsepid() and sendsignalpid()
	  reusable methods
	* server/upsd.c: warn about not saving a pid file
	* server/upsd.c: handle extended return values from sendsignalfn() to
	  tell more about the error
	* common/common.c: sendsignalfn(): if we use sig==0 to probe that a
	  process runs, no need to send that twice
	* common/common.c, include/common.h: include/common.h, common.c:
	  extend sendsignalfn() return value for more error types

2022-02-16  Jim Klimov <jim@jimklimov.com>

	* drivers/libhid.c: string_to_path(): report hid_lookup_usage() miss
	* drivers/libhid.c: fix misfire of fightwarn commit 58e5b49
	  (string_to_path(): range-check...)  Closes: #1286
	* conf/upsd.conf.sample, conf/upsmon.conf.sample.in,
	  docs/man/upsd.conf.txt, docs/man/upsmon.conf.txt: upsd and upsmon
	  configuration sample files and man pages: add note about run-time
	  config reload with DEBUG_MIN setting in sight
	* clients/upsmon.c: allow upsmon to reload config and apply its
	  debug_min setting
	* common/common.c: writepid(): debug-trace creation of a PID file

2022-02-15  Jim Klimov <jim@jimklimov.com>

	* drivers/main.c: fix user:group separator in debug message
	* configure.ac: report default/detected RUN_AS_USER/RUN_AS_GROUP
	  values in help; check if "nobody" group is not resolvable when
	  "nogroup" us to use it as default RUN_AS_GROUP instead
	* drivers/main.c: report whether we succeeded or failed chown/chmod
	  for sockname
	* docs/man/nutupsdrv.txt, docs/man/ups.conf.txt, drivers/main.c:
	  drivers/main.c: support setting group name for socket file
	  (ups.conf, CLI -g arg)  Closes: #1296
	* drivers/dstate.c, drivers/dstate.h, drivers/main.c: drivers/main.c
	  + dstate.{c,h}: refactor dstate_init() to return a copy of the
	  "sockname" path used
	* drivers/main.c: re-word debug message for "-u name" overriding
	  built-in or configured values
	* drivers/main.c: trace do_global_args() and main_arg() var/val
	  stream
	* docs/hid-subdrivers.txt: describe tech for "Fixing report
	  descriptors"
	* docs/hid-subdrivers.txt, docs/nut.dict, drivers/hidtypes.h:
	  docs/hid-subdrivers.txt: document where USAGE_POW_ and USAGE_BAT_
	  macros come from
	* drivers/apc-hid.c: apc_fix_report_desc(): normalize indentations

2022-02-14  Nick Briggs <nicholas.h.briggs@gmail.com>

	* drivers/apc-hid.c: Update APC HID driver version
	* drivers/apc-hid.c: Only indicate report descriptor fixed if it was
	  actually changed.

2022-02-14  Jim Klimov <jim@jimklimov.com>

	* docs/man/ups.conf.txt, drivers/main.c: drivers/main.c: allow to
	  specify a user for each driver via ups.conf  Closes: #1288
	* drivers/upsdrvctl.c: suggest "-d" when warning about passing
	  debugging through to actual drivers
	* drivers/upsdrvctl.c: only warn about passing debugging through to
	  actual drivers if (nut_debug_level_passthrough == 0)
	* docs/man/upsdrvctl.txt, drivers/upsdrvctl.c: drivers/upsdrvctl: add
	  "-d" option to pass debug level to drivers  Closes: #1036  (Note:
	  that issue discusses other possible improvements around this
	  subject, which are synergetic with this one)

2022-02-13  Nick Briggs <nicholas.h.briggs@gmail.com>

	* drivers/apc-hid.c, drivers/cps-hid.c, drivers/hidparser.c,
	  drivers/hidparser.h, drivers/hidtypes.h: Fix incorrect limits for
	  input and config voltages in APC report descriptor  The Back-UPS XS
	  1400U has been observed to report input/config voltage limits that
	  are appropriate for the North American 120V region even though the
	  unit is operating in the European or other 220+V region.  This
	  change diagnoses the the problem by checking if the logical maximum
	  values for UPS.Input.Voltage and UPS.Input.ConfigVoltage are
	  consistent with the UPS.Input.HighVoltageTransfer and if not,
	  increases them.  A similar problem was reported for CPS units in
	  the EU region.  - introduces #defines for all standard usages in
	  power system and battery device pages. - moves cps-hid.c
	  FindReport() to hidparser.c as FindObject_with_ID_Node(). - updates
	  cps-hid.c to account for new defines/function name - adds
	  apc_fix_report_desc() to implement change for APC UPS units

2022-02-13  Luke Dashjr <luke-jr+git@utopios.org>

	* scripts/python/app/NUT-Monitor.in: NUT-Monitor: Run py2to3-3.10
	* scripts/python/app/NUT-Monitor.in: NUT-Monitor: Run py2to3-3.10

2022-02-11  Jim Klimov <jim@jimklimov.com>

	* NEWS: added usbhid-ups "ever-hid" subdriver for NUT v2.7.5
	* docs/man/upsd.conf.txt: document DISABLE_WEAK_SSL
	* NEWS, docs/nut.dict: NEWS: announce "debug_min" options for daemons
	  in NUT v2.7.5
	* NEWS: announce fore-/back-grounding options for daemons in NUT
	  v2.7.5
	* docs/man/upsd.conf.txt: document optional "DEBUG_MIN" setting
	* conf/upsd.conf.sample: document optional "DEBUG_MIN" setting
	* conf/upsmon.conf.sample.in: document optional "DEBUG_MIN" setting
	* conf/ups.conf.sample: document optional "debug_min" setting
	* docs/man/upsmon.conf.txt: document optional "DEBUG_MIN" setting
	* docs/man/ups.conf.txt: document optional "debug_min" setting
	* server/conf.c, server/conf.h, server/upsd.c: server/upsd.c, conf.c:
	  support "debug_min" from upsd.conf
	* clients/upsmon.c: support "debug_min" from upsmon.conf
	* drivers/main.c: comment typo fixes
	* docs/man/upslog.txt: fix typo "upsmon" => "upslog"
	* clients/upslog.c: align -F/-B options with drivers/main.c
	* scripts/systemd/nut-monitor.service.in: with daemon not
	  backgrounding, "Type=forking" no longer applies
	* docs/man/upsd.txt: document -F/-B for fore/back-ground enforcement,
	  and that -D only defaults to foregrounding now (can be overridden)
	* server/upsd.c: align -F/-B options with drivers/main.c
	* docs/man/upsmon.txt: document -F/-B for fore/back-ground
	  enforcement, and that -D only defaults to foregrounding now (can be
	  overridden)
	* clients/upsmon.c: align -F/-B options with drivers/main.c
	* docs/man/nutupsdrv.txt: document -F/-B for fore/back-ground
	  enforcement, and that -D/-d only default to foregrounding now (can
	  be overridden)
	* drivers/main.c: update comments

2022-02-11  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adelsystem_cbi.c, drivers/adelsystem_cbi.h: coding style
	  changes
	* drivers/adelsystem_cbi.c: fix parameter hiding global variable

2022-02-10  Nick Geoghegan <nick@geoghegan.me>

	* drivers/riello_usb.c: Fixes formatting in riello_usb
	* drivers/riello_ser.c: Updates riello_ser to version 0.07

2022-02-10  Jim Klimov <jim@jimklimov.com>

	* .github/pull_request_template.md: remind to update recipes for new
	  man pages
	* configure.ac: avoid noise about pkg-config not finding
	  (lib)systemd.pc on systems where it is not installed
	* configure.ac: default to detection of systemdsystemunitdir (and
	  systemdshutdowndir) - "auto" is not a final option
	* configure.ac, docs/configure.txt: configure.ac: default to
	  detection of systemdsystemunitdir (and systemdshutdowndir),
	  non-fatal if not found
	* configure.ac: fall back from pkg-config queries for "systemd" to
	  try also "libsystemd" - fix calling "test"
	* configure.ac: fall back from pkg-config queries for "systemd" to
	  try also "libsystemd"
	* docs/man/Makefile.am: build and install nutdrv_siemens_sitop man
	  pages

2022-02-09  Nick Geoghegan <nick@geoghegan.me>

	* drivers/riello_usb.c: Fixes 530

2022-02-09  Jim Klimov <jim@jimklimov.com>

	* drivers/ve-direct.c: mark ve_*() methods as static
	* drivers/ve-direct.c: fix trailing white-space and C++-style
	  comments
	* docs/packager-guide.txt: update for nut-linux-i2c and
	  nut-macosx-ups platform-dependent package groups
	* docs/packager-guide.txt: fix title for pkg-nut-modbus
	* drivers/nutdrv_qx_masterguard.c: rename non-standard dstate
	  variables to "experimental.*" namespace  Closes: NUT issue #1045
	* drivers/nutdrv_qx_masterguard.c: fix "ups.delay.return" =>
	  "ups.delay.start"
	* drivers/nutdrv_qx_masterguard.c: whitespace fixes (some long lines)
	* docs/packager-guide.txt: update for nut-linux-i2c and
	  nut-macosx-ups platform-dependent package groups
	* docs/packager-guide.txt: fix title for pkg-nut-modbus
	* drivers/ever-hid.c: tag non-standard NUT variable/command names as
	  "experimental.*" to help identify lacking mappings and rename some
	  into standard data points
	* drivers/ever-hid.c, drivers/ever-hid.h: drivers/ever-hid.{c,h}:
	  update (C) heading
	* drivers/ever-hid.c: print unsigned int as %u
	* drivers/ever-hid.c: mark NUT_UNUSED_VARIABLE(double value) where
	  appropriate
	* drivers/ever-hid.c: use complete struct initializers for info_lkp_t
	  tables; use sentinels; mark static
	* drivers/ever-hid.c: ever_alarms_fun(), ever_workmode_fun(): define
	  "workmode" on top of function
	* drivers/ever-hid.c: fix switch/case whitespaces
	* drivers/ever-hid.c: fix trailing whitespaces
	* drivers/ever-hid.c: wrap some long lines for readability
	* drivers/ever-hid.c: adjust to upstream changes: config.h goes
	  first, PID/VID are unsigned, got a fix_report_desc() default
	* drivers/everups.c: whitespace fixes; clarify this is a serial
	  driver (as opposed to ever-hid.c for USB devices)

2022-02-08  Jim Klimov <jim@jimklimov.com>

	* configure.ac: error out for unhandled --with-drivers=xxx names
	* configure.ac: improve handling of platform-dependent (linux-i2c,
	  macosx) drivers - do not default to require them everywhere
	* configure.ac: move --with-drivers=... handling to before
	  --with-all, and consult drivers/Makefile.am for list names to
	  require certain dependencies
	* drivers/Makefile.am: parameterize POWERMAN_DRIVERLIST and
	  IPMI_DRIVERLIST like others
	* configure.ac: move "--with-drivers=name[,name...]" handling to
	  before we check for third-party dependencies
	* configure.ac: error out for unhandled --with-drivers=xxx names
	* configure.ac: improve handling of platform-dependent (linux-i2c,
	  macosx) drivers - do not default to require them everywhere
	* configure.ac: move --with-drivers=... handling to before
	  --with-all, and consult drivers/Makefile.am for list names to
	  require certain dependencies
	* drivers/Makefile.am: parameterize POWERMAN_DRIVERLIST and
	  IPMI_DRIVERLIST like others
	* configure.ac: move "--with-drivers=name[,name...]" handling to
	  before we check for third-party dependencies
	* clients/upssched.c: sendcmd(): rectify enclen/buflen sanity checks
	  and usage
	* clients/upssched.c: whitespace and comment fixes

2022-02-08  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adelsystem_cbi.h: check ifndef READALL_REGS
	* drivers/adelsystem_cbi.c: minor fix in upsdrv_updateinfo
	* drivers/adelsystem_cbi.c, drivers/adelsystem_cbi.h: fix warning for
	  initializing structure with flexible array member

2022-02-07  Jim Klimov <jim@jimklimov.com>

	* scripts/subdriver/gen-usbhid-subdriver.sh: gen-usbhid-subdriver.sh:
	  suggest "fix_report_desc" in subdriver_t (follow-up to PR #1245)
	* scripts/subdriver/gen-usbhid-subdriver.sh: gen-usbhid-subdriver.sh:
	  suggest "fix_report_desc" in subdriver_t (follow-up to PR #1245)

2022-02-07  Dimitris Economou <dimitris.s.economou@gmail.com>

	* clients/upssched.c: fix code alignemnt, casting sizeof with ssize_t

2022-02-06  Jim Klimov <jim@jimklimov.com>

	* docs/packager-guide.txt: mention ipmi and modbus drivers as
	  separate packaging goals
	* docs/packager-guide.txt: mention ipmi and modbus drivers as
	  separate packaging goals

2022-02-06  Dimitris Economou <dimitris.s.economou@gmail.com>

	* clients/upssched.c: Re-apply on Windows branch: fix enc size write
	  on pipeifd, fix parent select on child's pipefd, and later commits
	  in the series  Committed-By: Jim Klimov <jimklimov+nut@gmail.com>
	* clients/upssched.c: check zero bytes read from O_NDELAY socket
	* clients/upssched.c: fix enc size write on pipeifd, fix parent
	  select on child's pipefd
	* drivers/Makefile.am: adelsystem_cbi header filename fix

2022-02-05  Jim Klimov <jim@jimklimov.com>

	* docs/nut.dict, docs/support.txt: docs/support.txt: detail abot
	  GitHub issues and PRs, and IRC channel
	* drivers/al175.c, drivers/apc-ats-mib.c, drivers/apc-hid.c,
	  drivers/apc-mib.c, drivers/apc-pdu-mib.c, drivers/apcsmart-old.c,
	  drivers/apcsmart.h, drivers/apcupsd-ups.c, drivers/arduino-hid.c,
	  drivers/asem.c, drivers/baytech-mib.c, drivers/bcmxcp.c,
	  drivers/bcmxcp_ser.c, drivers/bcmxcp_usb.c, drivers/belkin-hid.c,
	  drivers/belkin.c, drivers/belkinunv.c, drivers/bestfcom.c,
	  drivers/bestfortress.c, drivers/bestpower-mib.c,
	  drivers/bestuferrups.c, drivers/bestups.c, drivers/blazer_ser.c,
	  drivers/blazer_usb.c, drivers/clone-outlet.c, drivers/clone.c,
	  drivers/compaq-mib.c, drivers/cps-hid.c, drivers/cyberpower-mib.c,
	  drivers/delta_ups-hid.c, drivers/delta_ups-mib.c,
	  drivers/dummy-ups.c, drivers/eaton-ats16-nm2-mib.c,
	  drivers/eaton-ats16-nmc-mib.c, drivers/eaton-ats30-mib.c,
	  drivers/eaton-pdu-genesis2-mib.c, drivers/eaton-pdu-marlin-mib.c,
	  drivers/eaton-pdu-pulizzi-mib.c,
	  drivers/eaton-pdu-revelation-mib.c,
	  drivers/emerson-avocent-pdu-mib.c, drivers/etapro.c,
	  drivers/everups.c, drivers/explore-hid.c, drivers/gamatronic.c,
	  drivers/generic_modbus.c, drivers/genericups.c,
	  drivers/hpe-pdu-mib.c, drivers/huawei-mib.c,
	  drivers/huawei-ups2000.c, drivers/idowell-hid.c,
	  drivers/ietf-mib.c, drivers/isbmex.c, drivers/ivtscd.c,
	  drivers/legrand-hid.c, drivers/libshut.c, drivers/libusb0.c,
	  drivers/libusb1.c, drivers/liebert-esp2.c, drivers/liebert-hid.c,
	  drivers/liebert.c, drivers/macosx-ups.c, drivers/masterguard.c,
	  drivers/metasys.c, drivers/mge-hid.c, drivers/mge-mib.c,
	  drivers/mge-utalk.c, drivers/microdowell.c, drivers/microsol-apc.c,
	  drivers/netvision-mib.c, drivers/netxml-ups.c,
	  drivers/nut-ipmipsu.c, drivers/nutdrv_atcl_usb.c,
	  drivers/nutdrv_qx.c, drivers/nutdrv_siemens_sitop.c,
	  drivers/oneac.c, drivers/openups-hid.c, drivers/optiups.c,
	  drivers/phoenixcontact_modbus.c, drivers/pijuice.c,
	  drivers/powercom-hid.c, drivers/powercom.c, drivers/powerman-pdu.c,
	  drivers/powerpanel.c, drivers/powervar-hid.c,
	  drivers/powerware-mib.c, drivers/raritan-pdu-mib.c,
	  drivers/raritan-px2-mib.c, drivers/rhino.c, drivers/richcomm_usb.c,
	  drivers/riello_ser.c, drivers/riello_usb.c, drivers/safenet.c,
	  drivers/salicru-hid.c, drivers/skel.c, drivers/snmp-ups.c,
	  drivers/solis.c, drivers/tripplite-hid.c, drivers/tripplite.c,
	  drivers/tripplite_usb.c, drivers/tripplitesu.c, drivers/upscode2.c,
	  drivers/usbhid-ups.c, drivers/victronups.c, drivers/xppc-mib.c:
	  drivers: bump versions for all drivers, they could have been
	  refactored during fightwarn (so might add regressions) without
	  regard to versioning
	* UPGRADING: NEWS: plea to package maintainers to share their
	  customizations into common uptream
	* docs/documentation.txt, docs/nut.dict: documentation.txt: add a
	  blog by James Ridgway
	* docs/documentation.txt: documentation.txt: update with a link to
	  video by Techno Tim
	* docs/documentation.txt: developers.txt: "trac" is AWOL, update the
	  link to github wiki copy
	* docs/developers.txt: developers.txt: "alioth" is AWOL, update the
	  text
	* docs/download.txt: download.txt: "trac" and "alioth" are AWOL,
	  update the links
	* docs/nut.dict, docs/support.txt: docs/support.txt: detail abot
	  GitHub issues and PRs, and IRC channel
	* drivers/al175.c, drivers/apc-ats-mib.c, drivers/apc-hid.c,
	  drivers/apc-mib.c, drivers/apc-pdu-mib.c, drivers/apcsmart-old.c,
	  drivers/apcsmart.h, drivers/apcupsd-ups.c, drivers/arduino-hid.c,
	  drivers/asem.c, drivers/baytech-mib.c, drivers/bcmxcp.c,
	  drivers/bcmxcp_ser.c, drivers/bcmxcp_usb.c, drivers/belkin-hid.c,
	  drivers/belkin.c, drivers/belkinunv.c, drivers/bestfcom.c,
	  drivers/bestfortress.c, drivers/bestpower-mib.c,
	  drivers/bestuferrups.c, drivers/bestups.c, drivers/blazer_ser.c,
	  drivers/blazer_usb.c, drivers/clone-outlet.c, drivers/clone.c,
	  drivers/compaq-mib.c, drivers/cps-hid.c, drivers/cyberpower-mib.c,
	  drivers/delta_ups-hid.c, drivers/delta_ups-mib.c,
	  drivers/dummy-ups.c, drivers/eaton-ats16-nm2-mib.c,
	  drivers/eaton-ats16-nmc-mib.c, drivers/eaton-ats30-mib.c,
	  drivers/eaton-pdu-genesis2-mib.c, drivers/eaton-pdu-marlin-mib.c,
	  drivers/eaton-pdu-pulizzi-mib.c,
	  drivers/eaton-pdu-revelation-mib.c,
	  drivers/emerson-avocent-pdu-mib.c, drivers/etapro.c,
	  drivers/everups.c, drivers/explore-hid.c, drivers/gamatronic.c,
	  drivers/generic_modbus.c, drivers/genericups.c,
	  drivers/hpe-pdu-mib.c, drivers/huawei-mib.c,
	  drivers/huawei-ups2000.c, drivers/idowell-hid.c,
	  drivers/ietf-mib.c, drivers/isbmex.c, drivers/ivtscd.c,
	  drivers/legrand-hid.c, drivers/libshut.c, drivers/libusb0.c,
	  drivers/libusb1.c, drivers/liebert-esp2.c, drivers/liebert-hid.c,
	  drivers/liebert.c, drivers/macosx-ups.c, drivers/masterguard.c,
	  drivers/metasys.c, drivers/mge-hid.c, drivers/mge-mib.c,
	  drivers/mge-utalk.c, drivers/microdowell.c, drivers/microsol-apc.c,
	  drivers/netvision-mib.c, drivers/netxml-ups.c,
	  drivers/nut-ipmipsu.c, drivers/nutdrv_atcl_usb.c,
	  drivers/nutdrv_qx.c, drivers/nutdrv_siemens_sitop.c,
	  drivers/oneac.c, drivers/openups-hid.c, drivers/optiups.c,
	  drivers/phoenixcontact_modbus.c, drivers/pijuice.c,
	  drivers/powercom-hid.c, drivers/powercom.c, drivers/powerman-pdu.c,
	  drivers/powerpanel.c, drivers/powervar-hid.c,
	  drivers/powerware-mib.c, drivers/raritan-pdu-mib.c,
	  drivers/raritan-px2-mib.c, drivers/rhino.c, drivers/richcomm_usb.c,
	  drivers/riello_ser.c, drivers/riello_usb.c, drivers/safenet.c,
	  drivers/salicru-hid.c, drivers/skel.c, drivers/snmp-ups.c,
	  drivers/solis.c, drivers/tripplite-hid.c, drivers/tripplite.c,
	  drivers/tripplite_usb.c, drivers/tripplitesu.c, drivers/upscode2.c,
	  drivers/usbhid-ups.c, drivers/victronups.c, drivers/xppc-mib.c:
	  drivers: bump versions for all drivers, they could have been
	  refactored during fightwarn (so might add regressions) without
	  regard to versioning
	* UPGRADING: NEWS: plea to package maintainers to share their
	  customizations into common uptream
	* docs/documentation.txt, docs/nut.dict: documentation.txt: add a
	  blog by James Ridgway
	* docs/documentation.txt: documentation.txt: update with a link to
	  video by Techno Tim
	* docs/documentation.txt: developers.txt: "trac" is AWOL, update the
	  link to github wiki copy
	* docs/developers.txt: developers.txt: "alioth" is AWOL, update the
	  text
	* docs/download.txt: download.txt: "trac" and "alioth" are AWOL,
	  update the links

2022-02-05  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adelsystem_cbi.c: apply Jim's modbus changes on PR #1239

2022-02-02  Jim Klimov <jim@jimklimov.com>

	* scripts/installer/common/init,
	  scripts/installer/common/ipp-event.sh,
	  scripts/installer/common/ipp-notifier.sh,
	  scripts/installer/common/ipp-os-shutdown,
	  scripts/installer/common/ipp-shutdown-daemon.sh,
	  scripts/installer/common/ipp-status,
	  scripts/installer/common/shutdown,
	  scripts/installer/common/string.sh: scripts/installer/common/*:
	  update from latest revision snapshot

2022-01-27  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: Revert "drivers/snmp-ups.c: replace
	  strcmp("short string") with strncmp() (clang-3.4 warns about array
	  out of bounds)"  This reverts commit
	  d2f7193af42e987f7948e072a963dc7bb1e25dc1.  Currently the configure
	  script should properly avoid the built-in strcmp() versions which
	  upset current build compiler. Using the range-limited strncmp() has
	  a downside of matching start-of-string.
	* drivers/snmp-ups.c: Revert "drivers/snmp-ups.c: fix strncmp()
	  limits for "v1" and "v3" checks (copy-pasting typo)"  This reverts
	  commit d0d02d3a70c6544c8ea7868dd63738595f2ae657.  Currently the
	  configure script should properly avoid the built-in strcmp()
	  versions which upset current build compiler. Using the
	  range-limited strncmp() has a downside of matching start-of-string.
	* clients/upsclient.c, clients/upslog.c, clients/upsmon.c,
	  clients/upsrw.c, clients/upssched.c, clients/upsset.c,
	  common/state.c, common/upsconf.c, docs/developers.txt,
	  docs/nut.dict, drivers/apcsmart-old.c, drivers/apcsmart.c,
	  drivers/apcupsd-ups.c, drivers/belkin.c, drivers/belkinunv.c,
	  drivers/bestups.c, drivers/clone-outlet.c, drivers/clone.c,
	  drivers/dstate.c, drivers/gamatronic.c, drivers/huawei-ups2000.c,
	  drivers/main.c, drivers/masterguard.c, drivers/mge-utalk.c,
	  drivers/mge-xml.c, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_bestups.c, drivers/nutdrv_qx_blazer-common.c,
	  drivers/nutdrv_qx_voltronic-qs-hex.c,
	  drivers/nutdrv_qx_voltronic-qs.c, drivers/nutdrv_qx_voltronic.c,
	  drivers/oneac.c, drivers/powercom.c, drivers/powerman-pdu.c,
	  drivers/powerp-txt.c, drivers/snmp-ups.c, drivers/tripplite_usb.c,
	  drivers/upscode2.c, drivers/victronups.c, server/conf.c,
	  server/netget.c, server/netlist.c, server/netset.c, server/user.c,
	  tests/cpputest.cpp, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_snmp.c: Revert "Replace strcmp() and
	  strcasecmp() use-cases for short fixed string args by strncmp() and
	  strncasecmp() respectively"  This reverts commit
	  a0d5ad57956ebcb5878744acb7657e1356ba0ea8.  Currently the configure
	  script should properly avoid the built-in strcmp() versions which
	  upset current build compiler. Using the range-limited strncmp() has
	  a downside of matching start-of-string.
	* drivers/snmp-ups.c, tools/nut-scanner/scan_snmp.c: Revert
	  "tools/nut-scanner/scan_snmp.c, drivers/snmp-ups.c: strcmp()
	  shorter "SHA" and "AES" and check this is all of the string length"
	  This reverts commit 57182d51b2954e6b7bb5199f658f38a89ce93648.
	  Currently the configure script should properly avoid the built-in
	  strcmp() versions which upset current build compiler. Using the
	  range-limited strncmp() has a downside of matching start-of-string.

2022-01-23  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: fix CI_FAILFAST to abort after failed configure
	  scripts
	* NEWS, UPGRADING: snmp-ups.h flags (bit-mask macros) changed for NUT
	  v2.7.5
	* drivers/snmp-ups.h: mib2nut mappings with "zero" flag value are not
	  illegal
	* drivers/snmp-ups.h: redefine bit-flags macros so they do not
	  overlap  (and update some helper-masking macros) follows up on
	  issue from PR #1177 and aligns with ultimately DMF (42ity fork)
	  tested changes to help merge that later with less effort

2022-01-22  Jim Klimov <jim@jimklimov.com>

	* NEWS: Revert "NEWS: drop chapters for "PLANNED NEWS" for releases
	  after v2.7.5"  This reverts commit
	  8c0079973b995c598427db92cbf406ea75979d42 - those chapters are
	  relevant in branch release-notes-for-2.7.6
	* NEWS: drop chapters for "PLANNED NEWS" for releases after v2.7.5
	* UPGRADING: highlight libusb-1.0 in NUT v2.7.5

2022-01-21  Jim Klimov <jim@jimklimov.com>

	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  "libssl-dev" name is more popular nowadays than "openssl-dev"
	  (Debian and family)
	* docs/nut.dict: update for Armac subdriver NEWS
	* data/driver.list.in: add PiJuice HAT (big) and pHAT (Zero)

2022-01-20  Jim Klimov <jimklimov@gmail.com>

	* drivers/nutdrv_qx.c: armac_command(): use nut_usb_strerror(ret)
	  Match updated libusb-1.0/0.1 API in NUT master
	* drivers/nutdrv_qx.c: Update nutdrv_qx.c  Fix nut_usb_strerror(ret)
	  for new libusb-1.0/0.1 support in master branch

2022-01-20  Jim Klimov <jim@jimklimov.com>

	* tools/nut-scanner/scan_snmp.c, drivers/snmp-ups.c: strcmp() shorter
	  "SHA" and "AES" and check this is all of the string length
	  Alternative: move matching to end of stack
	* NEWS: prepare for nutdrv-qx armac merge in 2.7.5 timeline
	* NEWS: added usbhid-ups fix_report_desc() for NUT v2.7.5
	* NEWS: added powercom "nobt" option for NUT v2.7.5
	* drivers/nutdrv_qx.c: armac_command(): accomodate "usb_ctrl_charbuf"
	  and formatting changes for libusb-1.0 support
	* drivers/nutdrv_qx.c: armac_command(): mark as static method
	* drivers/nutdrv_qx_ablerex.c: ablerex_process_status_bits(): mark as
	  static method
	* drivers/nutdrv_qx.c: ablerex_command(): accomodate
	  "usb_ctrl_charbuf" and formatting changes for libusb-1.0 support
	* ci_build.sh: make distcheck (pun intended) less noisy
	* ci_build.sh: comment a suggestion how to use BUILD_TYPE=fightwarn
	  typically
	* ci_build.sh: make distcheck (pun intended) less noisy
	* ci_build.sh: comment a suggestion how to use BUILD_TYPE=fightwarn
	  typically

2022-01-19  Jim Klimov <jimklimov@gmail.com>

	* drivers/legrand-hid.c: Update legrand-hid.c  Initialize
	  "fix_report_desc", this file appeared from another PR merged before
	  #1245

2022-01-19  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: provision check_gitignore() calls for DMF branch build
	  products
	* ci_build.sh: check_gitignore(): wrap long lines
	* ci_build.sh: check_gitignore(): add a FILE_GLOB support
	* ci_build.sh: optional_dist_clean_check(): copypasta error, GIT_ARGS
	  not needed in this one
	* ci_build.sh: fix "MAKE distclean" operations back to not-quiet,
	  they look weird as a half-muted wall of text
	* ci_build.sh: fix use of git status $GIT_ARGS consistently
	* drivers/snmp-ups.c: match_sysoid(): test for NULL
	  mib2nut[i]->snmp_info (and skip if so)
	* drivers/snmp-ups.c: load_mib2nut(): imply that skipped value is not
	  a "valid" name in the mapping table (name may be known, but with no
	  snmp_info attached)

2022-01-18  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/scan_usb.c: avoid SIGSEGV in libusb-1.0 when
	  running as non-root and device fails to open (e.g. perms error)

2022-01-18  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: mib2nut mappings with "zero" flag value are not
	  illegal  Do not yell about them like it's a bug, after all.
	* drivers/snmp-ups.c: handle not-loaded snmp_info without segfaulting
	* drivers/snmp-ups.c: load_mib2nut(): better tracing of mib_name
	  comparisons
	* drivers/snmp-ups.c: load_mib2nut(): test for NULL
	  mib2nut[i]->snmp_info (and skip if so) before accounting
	  mibSeen=TRUE and trying to match_model_OID()
	* drivers/usbhid-ups.h: rename pDesc arg to match wording in
	  usbhid-ups.c
	* drivers/hidparser.c, drivers/hidparser.h: drivers/hidparser.{c,h}:
	  rename pDesc arg/var to avoid shadowing a global variable
	  Pre-emptively: `extern pDesc` is defined in libhid.h which does not
	  seem to be used in/along-with hidparser.{c,h} currently - but this
	  collision may happen later (especially with code-copying around).
	* drivers/cps-hid.c: clean up trailing whitespaces
	* drivers/cps-hid.c: FindReport() cps_fix_report_desc(): rename pDesc
	  arg to avoid shadowing a global variable
	* drivers/cps-hid.c: mark non-exported FindReport() as static
	* m4/nut_compiler_family.m4: enhance NUT_CHECK_COMPILE_FLAG() to run
	  the whole toolchain for "build and run" when checking CLI option
	  support
	* ci_build.sh: build_to_only_catch_errors_target():
	  CI_PARMAKE_VERBOSITY=silent should not hide warnings
	* ci_build.sh: do not silent-make initial clean-up (it is chatty
	  anyway, so let us see the dirs processed)
	* ci_build.sh: comment verbosity (non-)tweaks for builds without a
	  BUILD_TYPE
	* ci_build.sh: report around initial clean-up for clearer log reading
	* ci_build.sh: refactor with check_gitignore()
	* ci_build.sh: refactor ccache_stats()
	* ci_build.sh: refactor make-verbosity settings and adjust some for
	  default builds to store less log

2022-01-18  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adele_cbi.c, drivers/adele_cbi.h: delete duplicates after
	  rebase
	* drivers/{adele_cbi.c => adelsystem_cbi.c}, drivers/{adele_cbi.h =>
	  adelsystem_cbi.h}: rename after rebase
	* drivers/{adelsystem_cbi.c => adele_cbi.c},
	  drivers/{adelsystem_cbi.h => adele_cbi.h}: rename for rebase
	* drivers/{adelsystem_cbi.c => adele_cbi.c},
	  drivers/{adelsystem_cbi.h => adele_cbi.h}: rename for rebase

2022-01-17  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/nut-scanner.c: report in usage() if "library not
	  detected" for a scan option

2022-01-17  Jim Klimov <jim@jimklimov.com>

	* drivers/generic_modbus.c: address -Wmissing-field-initializers
	  complaints for timeval with timeouts (memset to 0 instead)
	* drivers/generic_modbus.c: address -Wstrict-prototypes complaints
	* Jenkinsfile-dynamatrix: raise the bar for code quality
	  non-regression, to fail on any (new) warnings in master branch and
	  PRs to it
	* Jenkinsfile-dynamatrix: shut back the cppcheck-by-default
	* Jenkinsfile-dynamatrix: do not allow to disable
	  delayedIssueAnalysis on "stable branches"
	* Jenkinsfile-dynamatrix: enable cppcheck slowBuild stages generally,
	  not just for "fightwarn" branches

2022-01-16  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: adjust test structure for both built-in ntohl/htonl
	  and string built-ins (using explicit -Werror -Wno-... checks)
	* configure.ac: adjust test structure for built-in ntohl/htonl to be
	  similar to that for string built-ins (using explicit -Werror)
	* ci_build.sh: do not lose original LDFLAGS

2022-01-15  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: tweak LIBLTDL_CFLAGS same as LIBNETSNMP_CFLAGS for
	  -Wno-shadow if needed for string methods or htonl() etc  In some
	  builds of the NUT CI farm dynamatrix (possibly ones without SNMP
	  support), the nutscan-ip.c complains about "declaration shadows a
	  local variable" -- investigation of which leads into the macros
	  expanded for common method names on those systems and/or compiler
	  toolkit versions.  This PR hopes to avoid that situation more
	  extensively.

2022-01-15  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: add support for CANBUILD_NUTCONF toggle
	  (NUT_BUILD_CAPS=nutconf... for CI farm)
	* common/Makefile.am, configure.ac, tests/Makefile.am,
	  tools/nutconf/Makefile.am: tools/nutconf/Makefile.am,
	  tests/Makefile.am, configure.ac: limit the impact of nutconf
	  codebase quality by default
	* include/nutconf.h, tools/nutconf/nutconf.cpp: nutconf codebase: fix
	  C++17 warnings - equality operators should return *this
	* common/nutipc.cpp, common/nutstream.cpp, include/nutconf.h,
	  include/nutipc.hpp, include/nutstream.hpp,
	  tools/nutconf/nutconf.cpp: nutconf codebase: fix C++17 warnings -
	  dynamic throw() declaration

2022-01-14  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/cpputest.cpp, tests/example.cpp, tests/nutclienttest.cpp:
	  tests/*.cpp: mark overridden class methods as such
	* clients/nutclient.h, clients/nutclientmem.h: clients/nutclient.h +
	  nutclientmem.h: mark overridden class methods as such

2022-01-14  Jim Klimov <jim@jimklimov.com>

	* scripts/installer/aix/aix_init, ...are_shutdown.txt =>
	  README_ipp-os-shutdown.txt}, ...usterware_shutdown =>
	  ipp-host-shutdown.sample}, scripts/installer/common/ipp-wrapper,
	  scripts/installer/common_EN/install.res,
	  scripts/installer/install.sh, scripts/installer/make_package.sh,
	  .../{solari => solcmn}/ipp-os-shutdown.conf.sample,
	  scripts/installer/solcmn/solaris_init,
	  .../installer/solint/ipp-os-shutdown.conf.sample,
	  scripts/installer/uninstall-ipp, scripts/installer/version.sh:
	  Update installer scripts from tentative Eaton IPSS Unix 1.40-5
	  release (2018)
	* scripts/installer/aix/ipp-os-shutdown.conf.sample,
	  scripts/installer/common/AIX_Clusterware_shutdown,
	  .../common/README_AIX_Clusterware_shutdown.txt,
	  scripts/installer/common/aix_init, scripts/installer/common/init,
	  scripts/installer/common/ipp-event.sh,
	  scripts/installer/common/ipp-notifier.sh,
	  scripts/installer/common/ipp-os-shutdown,
	  scripts/installer/common/ipp-shutdown-daemon.sh,
	  scripts/installer/common/ipp-status,
	  scripts/installer/common/ipp.conf,
	  scripts/installer/common/shutdown,
	  scripts/installer/common/solaris_init,
	  scripts/installer/common/string.sh,
	  scripts/installer/common_EN/install.res,
	  scripts/installer/hpux/ipp-os-shutdown.conf.sample,
	  scripts/installer/install.sh, scripts/installer/make_package.sh,
	  .../installer/solari/ipp-os-shutdown.conf.sample,
	  .../installer/solint/ipp-os-shutdown.conf.sample,
	  scripts/installer/uninstall-ipp, scripts/installer/version.sh:
	  scripts/installer: snapshot from AIX_Clusterware_shutdown delivery
	  (2015-11-18)
	* scripts/installer/install.sh: do not dictate a MANPATH (led to some
	  install errors)
	* scripts/installer/install.sh: add logging to trace installer
	  errors; use more library paths
	* scripts/installer/README.txt, scripts/installer/common/init,
	  scripts/installer/common/ipp-event.sh,
	  scripts/installer/common/ipp-notifier.sh,
	  scripts/installer/common/ipp-shutdown-daemon.sh,
	  scripts/installer/common/ipp-status,
	  scripts/installer/common/ipp.conf,
	  scripts/installer/common/shutdown,
	  scripts/installer/common/string.sh,
	  scripts/installer/common_EN/install.res,
	  scripts/installer/common_EN/license.txt,
	  scripts/installer/install.sh, scripts/installer/make_package.sh,
	  scripts/installer/nut, scripts/installer/nutconf-dummy,
	  scripts/installer/uninstall-ipp,
	  scripts/installer/uninstall-lsnw.sh, scripts/installer/version.sh:
	  Add installer scripts from Eaton IPSS Unix 1.40-4 release
	  (2013-10-25)
	* docs/man/nutconf.txt, docs/nut.dict: Spellcheck manpage for nutconf
	  tool
	* tools/nutconf/nutconf.cpp: adjust to changed API for
	  nutscan_scan_xml_http() => nutscan_scan_xml_http_range()
	* tools/nutconf/.gitignore: Add tools/nutconf/.gitignore
	* tools/nutconf/nutconf.cpp: add (C) header
	* tools/nutconf/Makefile.am: modernize
	* common/Makefile.am, common/nutwriter.cpp, tests/Makefile.am,
	  tools/nutconf/Makefile.am: Import NUT source changes for nutconf
	  tool from 42ITy (initial set)
	* drivers/snmp-ups.h: treat DISABLE_MIB_LOADING more safely

2022-01-13  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: adjust test for built-in string functions
	  (problematic on clang-3.4) to see any warnings and specifically for
	  unreachable code there
	* ci_build.sh: relay more build-influencing envvars in the
	  (Jenkins-logged) printout
	* drivers/nut-libfreeipmi.c: fix the range-check and message/comment
	  it better
	* drivers/asem.c: macro ACCESS_DEVICE() ends with a brace; we
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_EXTRA_SEMI_STMT to keep the
	  useless trailing ";" for readability
	* m4/ax_c_pragmas.m4: add
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_EXTRA_SEMI_STMT(_BESIDEFUNC)
	* drivers/asem.c: declare upsdrv_shutdown() as noreturn
	* drivers/nutdrv_qx.c: avoid including usb-common.h twice
	* m4/ax_c_pragmas.m4: ask CLANG to reject unknown pragmas when
	  checking for them
	* common/common.c: check for
	  HAVE_PRAGMA_CLANG_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE_RETURN
	  support before use
	* m4/ax_c_pragmas.m4: test specifically for
	  HAVE_PRAGMA_CLANG_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE_RETURN(_BESIDEFUNC)
	  support

2022-01-13  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adelsystem_cbi.c: try to reconnect on IVALID DATA and
	  INVALID CRC from read_all_regs
	* drivers/adelsystem_cbi.c: try to reconnect on INVALID DATA and
	  INVALID CRC errors
	* drivers/adele_cbi.c, drivers/adele_cbi.h,
	  drivers/adelsystems_cbi.c, drivers/adelsystems_cbi.h: delete
	  renamed driver files
	* drivers/Makefile.am, drivers/adelsystem_cbi.c,
	  drivers/adelsystem_cbi.h: filename fixes
	* drivers/Makefile.am, drivers/adelsystems_cbi.c,
	  drivers/adelsystems_cbi.h: adele changed to adelsystems
	* drivers/adele_cbi.c, drivers/adele_cbi.h: macro name changes
	* drivers/adele_cbi.c, drivers/adele_cbi.h: minor bug fixes
	* drivers/adele_cbi.h: modify regs_data memory, devreg enum
	  rearrangement
	* drivers/adelsystem_cbi.c: try to reconnect on IVALID DATA and
	  INVALID CRC from read_all_regs
	* drivers/adelsystem_cbi.c: try to reconnect on INVALID DATA and
	  INVALID CRC errors
	* drivers/adele_cbi.c, drivers/adele_cbi.h,
	  drivers/adelsystems_cbi.c, drivers/adelsystems_cbi.h: delete
	  renamed driver files
	* drivers/Makefile.am, drivers/adelsystem_cbi.c,
	  drivers/adelsystem_cbi.h: filename fixes
	* drivers/Makefile.am, drivers/adelsystems_cbi.c,
	  drivers/adelsystems_cbi.h: adele changed to adelsystems
	* drivers/adele_cbi.c, drivers/adele_cbi.h: macro name changes
	* drivers/adele_cbi.c, drivers/adele_cbi.h: minor bug fixes
	* drivers/adele_cbi.h: modify regs_data memory, devreg enum
	  rearrangement

2022-01-12  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/nut_compiler_family.m4: set default C/C++ standards to GNU
	  dialects for GCC/CLANG
	* m4/nut_compiler_family.m4: set default C/C++ standards to avoid
	  C90-non-compliance warnings noise (on compilers that can do better
	  than that)
	* m4/nut_check_libnetsnmp.m4: fix a test from shell to autoscript
	* tools/nut-scanner/nut-scanner.c: only evaluate if
	  NUT_HAVE_LIBNETSNMP_* when we build WITH_SNMP
	* common/common.c: use
	  HAVE_PRAGMAS_FOR_GCC_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE_RETURN
	* m4/ax_c_pragmas.m4: add
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE_RETURN(_BESIDEFUNC)
	* configure.ac, m4/nut_compiler_family.m4: m4/nut_compiler_family.m4
	  + configure.ac: refactor NUT_COMPILER_FAMILY_FLAGS_DEFAULT_STANDARD
	  as a separate method to apply just before we set up warning-level
	  support
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  update dependency package naming for libusb-1.0 on Debian family
	* m4/nut_compiler_family.m4: set default C/C++ standards to GNU
	  dialects for GCC/CLANG
	* m4/nut_compiler_family.m4: set default C/C++ standards to avoid
	  C90-non-compliance warnings noise (on compilers that can do better
	  than that)
	* ci_build.sh: comment why ./configure is not without args
	* drivers/generic_modbus.c: fix whitespace style (in PR-1239)

2022-01-12  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adele_cbi.c, drivers/adele_cbi.h: some fixes in
	  read_all_regs approach
	* drivers/adele_cbi.c, drivers/adele_cbi.h: read_all_regs aproach
	  integrated
	* drivers/adele_cbi.c, drivers/adele_cbi.h: some fixes in
	  read_all_regs approach
	* drivers/adele_cbi.c, drivers/adele_cbi.h: read_all_regs aproach
	  integrated

2022-01-12  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/mge-xml.c: Eaton NMC: fix the non publication of real/power
	  with 3ph  power and realpower for 3ph Lx were not publishing values
	  when they were 0
	* drivers/mge-xml.c: Eaton NMC: fix the non publication of real/power
	  with 3ph  power and realpower for 3ph Lx were not publishing values
	  when they were 0

2022-01-11  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict  Updated for PR
	  https://github.com/networkupstools/nut/pull/1256

2022-01-11  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/arduino-hid.c, drivers/delta_ups-hid.c,
	  drivers/hidparser.c, drivers/idowell-hid.c, drivers/powervar-hid.c,
	  drivers/salicru-hid.c: drivers/hidparser.c + *-hid.c: include
	  "config.h" first
	* drivers/generic_modbus.c: handle the two APIs for libmodbus timeout
	  setting
	* m4/nut_check_libmodbus.m4: in tests for API, the AC_DEFINE must be
	  used with exact macro names (not m4/shell variables)
	* m4/nut_check_libmodbus.m4: in tests for API, clarify if old API
	  (timeval) can be used with variables from new API (uint32) set into
	  the struct
	* m4/nut_check_libmodbus.m4: in tests for API, "new/old" comments
	  were confused
	* m4/nut_check_libmodbus.m4: in tests for API, initialize modbus_t
	  *ctx differently
	* m4/nut_check_libmodbus.m4: test actively for the modbus timeout API
	  (count and type of args used)
	* m4/nut_check_libmodbus.m4: convert a code block from plain shell to
	  autoscript
	* m4/nut_check_libmodbus.m4: test for presence of
	  modbus_set_byte_timeout() and modbus_set_response_timeout()
	* m4/ax_c_pragmas.m4: detect support for (ignoring)
	  "-Wsign-conversion"
	* m4/ax_c_pragmas.m4: add guards to call AX_C_PRINTF_STRING_NULL and
	  AX_C_PRAGMAS logic only once
	* drivers/generic_modbus.c: bump DRIVER_VERSION for feature change
	  (connection timeout handling)

2022-01-11  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adele_cbi.c, drivers/adele_cbi.h: ghost alarms bug fix,
	  other bug fixes
	* drivers/adele_cbi.c, drivers/adele_cbi.h: ghost alarms bug fix,
	  other bug fixes
	* drivers/adele_cbi.c, drivers/adele_cbi.h: ghost alarms bug fix,
	  other bug fixes
	* drivers/adele_cbi.c, drivers/adele_cbi.h: ghost alarms bug fix,
	  other bug fixes

2022-01-11  Dave Williams <dave@opensourcesolutions.co.uk>

	* drivers/cps-hid.c: New HID fix strategy after consultation with CPS
	  It appears both input and output LogMin and LogMax values are
	  incorrect as the rated voltage (for EU models) is 170v to 270v
	  which is outside the logical limits reported by the HID.  The fix
	  checks for the error (loosely) and then applies reasonable values
	  (0v and 511v) to allow the actual input and output voltages to be
	  reported rather than be constrained to the limits.

2022-01-10  Jim Klimov <jimklimov@gmail.com>

	* docs/man/powercom.txt: Update powercom.txt  Sentence restructure

2022-01-10  Jim Klimov <jim@jimklimov.com>

	* .github/pull_request_template.md: pull_request_template.md: update
	  and reshuffle check-list items
	* .../{PULL_REQUEST_TEMPLATE/nut-driver-PR.md =>
	  pull_request_template.md}: Move fancy-named PR template to plain
	  .github/pull_request_template.md
	* drivers/salicru-hid.c, scripts/upower/95-upower-hid.rules:
	  drivers/salicru-hid.c: add known compatibility for Salicru SLC TWIN
	  (PRO2, PRO3, RT3) per reports in issue #1142
	* data/driver.list.in: add known compatibility for Salicru TWIN
	  (PRO2, PRO3, RT3) per reports in issues #450 and #1142
	* .github/PULL_REQUEST_TEMPLATE/nut-driver-PR.md: Add
	  .github/PULL_REQUEST_TEMPLATE/nut-driver-PR.md template
	* data/driver.list.in: fix English typos in comment
	* docs/developers.txt: remind to update docs/acknowledgements.txt
	  when adding vendor-backed support
	* docs/man/usbhid-ups.txt: fix reference to data/driver.list (typo in
	  filename)

2022-01-10  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adele_cbi.c, drivers/adele_cbi.h: first testing release
	* drivers/adele_cbi.c, drivers/adele_cbi.h: first testing release
	* drivers/adele_cbi.c, drivers/adele_cbi.h: first testing release
	* drivers/adele_cbi.c, drivers/adele_cbi.h: first testing release

2022-01-10  Ablerexsoftware <Ablerex.software@ablerex.com.tw>

	* data/driver.list.in: update the driver.list.in

2022-01-09  Rouben Tchakhmakhtchian <rouben@rouben.net>

	* docs/man/powercom.txt, drivers/powercom.c: Powercom driver
	  (drivers/powercom.c) version bump from 0.17 to 0.18: * Implement
	  configuration flag "nobt" to skip battery test during
	  initialization * Cleanup old code to use testvar() for config
	  parameter checks in upsdrv_initups() * Add nobt flag to sample
	  config file in built-in doc Powercom driver man page
	  (docs/man/powercom.txt) update to explain nobt flag

2022-01-09  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adele_cbi.c, drivers/adele_cbi.h: alrm_t, alrm_ar_t data
	  structures, construction of upsdrv_updateinfo in progress
	* drivers/adele_cbi.c, drivers/adele_cbi.h: alrm_t, alrm_ar_t data
	  structures, construction of upsdrv_updateinfo in progress
	* drivers/adele_cbi.c, drivers/adele_cbi.h: alrm_t, alrm_ar_t data
	  structures, construction of upsdrv_updateinfo in progress
	* drivers/adele_cbi.c, drivers/adele_cbi.h: alrm_t, alrm_ar_t data
	  structures, construction of upsdrv_updateinfo in progress

2022-01-08  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adele_cbi.c, drivers/adele_cbi.h: structure device data,
	  code get_dev_state, in progress
	* drivers/adele_cbi.c, drivers/adele_cbi.h: structure device data,
	  code get_dev_state, in progress
	* drivers/adele_cbi.c, drivers/adele_cbi.h: structure device data,
	  code get_dev_state, in progress
	* drivers/adele_cbi.c, drivers/adele_cbi.h: structure device data,
	  code get_dev_state, in progress

2022-01-07  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-usbinfo.pl: be sure to have PATH_MAX defined (for usb.h
	  that did not bother by itself)
	* drivers/usb-common.h: be sure to have PATH_MAX defined (for usb.h
	  that did not bother by itself)

2022-01-07  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adele_cbi.h: register status values and masks added
	* drivers/adele_cbi.h: register status values and masks added
	* drivers/adele_cbi.h: register status values and masks added
	* drivers/adele_cbi.h: register status values and masks added

2022-01-06  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: Revert "Jenkinsfile-dynamatrix: be sure to
	  reset slowBuild configs over dynacfgBase"  This reverts commit
	  18cf19ebc7e01f30c3d84c7b3b8f69e961429ebb as the "design flaw" which
	  that change worked around should now be (hopefully) fixed in the
	  jenkins-fynamatrix library itselg.

2022-01-06  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/adele_cbi.c, drivers/adele_cbi.h: under construction
	* drivers/Makefile.am: Makefile.am modifications
	* drivers/adele_cbi.c, drivers/adele_cbi.h: under construction
	* drivers/Makefile.am: Makefile.am modifications
	* drivers/adele_cbi.c, drivers/adele_cbi.h: under construction
	* drivers/Makefile.am: Makefile.am modifications
	* drivers/adele_cbi.c, drivers/adele_cbi.h: under construction

2022-01-05  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/nut_check_cppcheck.m4: relax required tool version for
	  cppcheck*.xml generation
	* Makefile.am: fix dependencies for cppcheck*.xml generation

2022-01-05  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: fix dynamatrixAxesCommonEnvCartesian cases
	  to group the variables we apply as one bunch, not as several
	  separate hits
	* Jenkinsfile-dynamatrix: define
	  dynacfgPipeline.excludeCombos_DEFAULT (mismatched ARCHes only)
	* tools/nut-scanner/scan_avahi.c: avoid implicit case fallthrough
	* Jenkinsfile-dynamatrix: be sure to reset slowBuild configs over
	  dynacfgBase
	* Jenkinsfile-dynamatrix: avoid running "cppcheck" several times per
	  host

2022-01-04  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: reinstate excludeCombos for autotools-only
	  builds (fightwarn) to avoid unsupported ARCH-bits mix builds

2022-01-04  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/generic_modbus.c: comment and code alignment fixes

2022-01-03  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: set DO_CLEAN_CHECK=no for default-tgt:cppcheck or
	  docs-building scenarios by default, so we can get/archive those
	  costly media files
	* Jenkinsfile-dynamatrix: set DO_CLEAN_CHECK=no for
	  default-tgt:cppcheck scenarios, so we can get that analysis data

2022-01-02  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: fix "Default autotools driven build with
	  default warning levels (gnu99/gnu++11)"
	  dynamatrixAxesVirtualLabelsMap mergeMode from "merge" to "replace"
	  (want to only build listed scenarios, not everything possible in
	  the matrix)

2021-12-30  Jim Klimov <jimklimov+nut@gmail.com>

	* tools/nut-scanner/nutscan-ip.c: include config.h first
	* m4/nut_compiler_family.m4: do not test for "-fcolor-diagnostics" -
	  redundant for clang, and sometimes toxic for gcc
	* drivers/Makefile.am: snmp-ups uses fabsf() so needs libm
	* drivers/nut-libfreeipmi.c: include config.h first
	* drivers/microsol-apc.c: include config.h first
	* drivers/genericups.c: include config.h first
	* include/nut_stdint.h: define SSIZE_MAX if missing
	* drivers/serial.h: pull more includes

2021-12-30  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: avoid using undefined (null)
	  excludeCombos_DEFAULT
	* Jenkinsfile-dynamatrix: fix references to excludeCombos: ...
	  axisCombos_COMPILER_(NOT_)GCC
	* docs/developers.txt, docs/nut.dict: docs/developers.txt: update
	  about C89/GNU89 support (with GCC toolkit)
	* Jenkinsfile-dynamatrix: separate C89/C90/ANSI builds with GCC (can
	  actually pass strict and GNU modes) and CLANG (more pedantic)
	* Jenkinsfile-dynamatrix: typo fix for
	  disableSlowBuildCIBuildExperimentalANSI
	* drivers/Makefile.am: metasys uses fabsf() so needs libm
	* drivers/nutdrv_qx.c: fix comments to C-style
	* drivers/powercom.c: fix comments to C-style
	* drivers/microdowell.h: fix comments to C-style
	* drivers/solis.h: fix comments to C-style
	* drivers/libshut.c: fix comments to C-style
	* drivers/openups-hid.c: include config.h first
	* drivers/snmp-ups.c: fix comments to C-style
	* drivers/riello_usb.c: fix comments to C-style
	* drivers/generic_modbus.h: fix comments to C-style
	* tools/nut-scanner/scan_xml_http.c: fix comments to C-style
	* tools/nut-scanner/nut-scanner.c: fix comments to C-style
	* tools/nut-scanner/nutscan-init.c: fix comments to C-style
	* tools/nut-scanner/scan_eaton_serial.c: fix comments to C-style
	* tools/nut-scanner/scan_snmp.c: fix comments to C-style
	* tools/nut-scanner/scan_nut.c: fix comments to C-style
	* server/upsd.c: fix comments to C-style
	* server/conf.c: fix comments to C-style
	* drivers/bcmxcp.c: fix comments to C-style
	* drivers/main.c: fix comments to C-style
	* common/upsconf.c: include config.h first
	* common/str.c: fix comments to C-style
	* server/user.c: include config.h first
	* server/desc.c: include config.h first
	* drivers/upsdrvctl.c: include config.h first
	* drivers/riello_usb.c: include config.h first
	* drivers/riello_ser.c: include config.h first
	* drivers/rhino.c: include config.h first
	* drivers/mge-utalk.c: include config.h first
	* drivers/libhid.c: include config.h first, and try to get strings.h
	  explicitly
	* drivers/huawei-ups2000.c: include config.h first
	* drivers/dummy-ups.c: include config.h first
	* drivers/dstate.c: include config.h first
	* tools/nut-scanner/scan_eaton_serial.c: try to include explicitly
	  both of (sys/)signal.h
	* server/upsd.c: try to include explicitly both of (sys/)signal.h
	* tools/nut-scanner/nutscan-serial.c: include config.h first
	* tools/nut-scanner/nutscan-device.c: include config.h first
	* drivers/mge-xml.c: include config.h first
	* drivers/libshut.c: include config.h first
	* common/state.c: include config.h first
	* common/str.c: include config.h first, and try to get strings.h
	  explicitly
	* include/common.h: try to include explicitly string(s).h and
	  (sys/)signal.h
	* configure.ac: test more actively for strcasecmp, strncasecmp,
	  strdup and usleep methods that are problematic for strict C99+
	  builds
	* configure.ac: detect explicitly string(s).h and (sys/)signal.h

2021-12-29  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/nut-libfreeipmi.c: be pragmatic about possibly unreachable
	  error handling in arch-dependent range check
	* drivers/nut-libfreeipmi.c: mark local vars as static
	* configure.ac: constrain warning-tweaks against macro str*() and
	  ntohl/htonl to LIBNETSNMP_CFLAGS (empirically)
	* configure.ac: detect if compiler (e.g. older clang-3.4) has a
	  problem with built-in/macro variants of system str*() and
	  htonl/ntohl functions at our higher warning levels, and mitigate
	  that
	* m4/nut_compiler_family.m4: rearrange detection order of compiler
	  flags
	* drivers/generic_modbus.c: quiesce warnings about unreachable-code
	  (default after full enum-case handling) with older clang
	* drivers/bcmxcp_usb.c: ignore potentially unreachable code in
	  assert()
	* drivers/nutdrv_qx.c: quiesce warnings about unreachable-code
	  (default after full enum-case handling) with older clang
	* drivers/upscode2.c: quiesce warnings about unreachable-code
	  (default after full enum-case handling) with older clang
	* drivers/hidparser.c: ignore potentially unreachable code in
	  platforms-dependent range checks
	* drivers/libhid.c: ignore potentially unreachable code in
	  platforms-dependent range checks
	* drivers/libshut.c: tell compiler that we do want to treat a char
	  array (managed by comms code) as the aligned pointer to struct
	* drivers/libshut.c: adjust data_size usage to usb_ctrl_charbufsize
	  typedef - fix pragmas for range-checks
	* drivers/usbhid-ups.c: quiesce warnings about unreachable-code
	  (default after full enum-case handling) with older clang
	* drivers/genericups.c: ignore potentially unreachable code in
	  platforms-dependent range checks
	* drivers/bestuferrups.c: ignore potentially unreachable code in
	  assert(0)
	* drivers/bestfcom.c: ignore potentially unreachable code in
	  assert(0)
	* clients/upsmon.c: ignore potentially unreachable code in
	  platforms-dependent range checks
	* tools/nut-scanner/scan_nut.c: ignore potentially unreachable code
	  in platforms-dependent range checks
	* tools/nut-scanner/nutscan-init.c: ignore potentially unreachable
	  code in platforms-dependent range checks
	* server/upsd.c: quiesce warnings about unreachable-code (default
	  after full enum-case handling) with older clang
	* configure.ac: update "clang-medium" warnings level with
	  "-Wno-conversion" for older clang releases
	* ci_build.sh: introduce CI_FAILFAST for
	  BUILD_TYPE=default-all-errors
	* ci_build.sh: use configurable --enable-Wcolor for compiler warnings
	  in default quick build
	* ci_build.sh: use configurable --enable-Wcolor for compiler warnings
	  in all BUILD_TYPEs
	* configure.ac, m4/nut_compiler_family.m4: configure.ac +
	  m4/nut_compiler_family.m4: allow configurable --enable-Wcolor for
	  compiler warnings
	* m4/nut_compiler_family.m4: add diagnostics-color support for GCC
	* configure.ac, m4/ax_check_compile_flag.m4,
	  m4/nut_compiler_family.m4: m4/nut_compiler_family.m4: use
	  AX_CHECK_COMPILE_FLAG to detect generic options supported by
	  compilers

2021-12-29  Jim Klimov <jim@jimklimov.com>

	* configure.ac: zero-init struct in ntohl/htonl warning-tweaks test
	  code

2021-12-28  Jim Klimov <jimklimov@gmail.com>

	* drivers/usbhid-ups.c: fix_report_desc(): avoid shadowing global var
	  with method arg name
	* drivers/usbhid-ups.c: fix_report_desc(): mark NUT_UNUSED_VARIABLEs

2021-12-28  Jim Klimov <jim@jimklimov.com>

	* configure.ac: pass "-Wno-disabled-macro-expansion" in clang-medium
	  and clang-hard modes, to avoid choking on systems-provided
	  strncmp() etc.
	* drivers/bcmxcp_ser.c: pw_comm_setup(): ignore potentially
	  unreachable code in platforms-dependent range checks
	* tools/nut-scanner/nut-scanner.c: ignore potentially unreachable
	  code in platforms-dependent range checks
	* common/common.c: get_user_pwent(): ignore "-Wunreachable-code"
	  where we were required to have a return
	* common/common.c: get_max_pid_t(): avoid warnings in C89/C90/ANSI
	  builds *because* we check for LLONG_MAX macro
	* common/common.c: get_max_pid_t(): ignore "-Wunreachable-code"
	* common/common.c: vupslog(): ignore "-Wformat-nonliteral" with older
	  clang too
	* configure.ac: with (older) clang, ignore "unused-arguments" (of
	  clang program)
	* server/upsd.c: mainloop(): ignore "-Wcovered-switch-default" with
	  older clang too
	* clients/upsclient.c: upscli_init(): fix "ret" to "long", to match
	  some versions of SSL_CTX_ctrl() (from openssl/ssl.h e.g. in
	  FreeBSD)
	* drivers/riello_usb.c: riello_command(): handle possibly undefined
	  ETIME
	* drivers/blazer_usb.c: blazer_command(): handle possibly undefined
	  ETIME
	* drivers/blazer_usb.c: phoenix_command(): avoid fall-through in a
	  case
	* drivers/nutdrv_qx.c: qx_command(): handle possibly undefined ETIME
	* drivers/nutdrv_qx.c: phoenix_command(): avoid fall-through in a
	  case
	* drivers/mge-hid.c: nominal_output_voltage_fun(): explicitly
	  fall-through in a case
	* drivers/libshut.c: shut_control_msg(): explicitly fall-through in a
	  case, and finish the default with a break
	* m4/nut_compiler_family.m4: comment away setting "-isystem ..."
	  common paths early in CFLAGS
	* configure.ac: set "-Wno-system-headers" early in gcc/clang medium
	  and hard warning levels
	* m4/nut_compiler_family.m4: set "-isystem ..." paths early in CFLAGS
	* Jenkinsfile-dynamatrix: expel other C89/C90/ANSI builds to only
	  happen if not disableSlowBuildCIBuildExperimentalANSI and only in
	  branches (or PRs to) matching ~/fightwarn.*89.*/ currently
	* configure.ac: try to handle warnings in system headers at our
	  medium and hard levels
	* docs/man/nutdrv_qx.txt: mention Armac in SUPPORTED HARDWARE
	  section, and wrap long lines there
	* docs/man/nutdrv_qx.txt, docs/nut.dict: docs/man/nutdrv_qx.txt: port
	  notes for "armac" subdriver from source code
	* drivers/nutdrv_qx.c: armac_command(): move variable declarations to
	  top of scope
	* drivers/nutdrv_qx.c: armac_command(): fix varied int types to
	  size_t, and move equation sides around to avoid signedness
	* drivers/nutdrv_qx.c: armac_command(): zero out whole tmpbuf[], not
	  one element
	* drivers/nutdrv_qx.c: normalize whitespace for "armac" code addition
	* drivers/nutdrv_qx.c: add (C) for "armac" code addition
	* docs/ci-farm-lxc-setup.txt, docs/nut.dict:
	  docs/ci-farm-lxc-setup.txt: add a troubleshooting section, with
	  entry for cgroupsv1-only guests on a cgroupsv2-only host
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  add a chapter for CentOS 7 agent preparation
	* docs/config-prereqs.txt: clarify that OpenBSD multitude of
	  autotools versions is a blessing, not a pain ;)
	* docs/config-prereqs.txt: clarify that JDK installation in Debian
	  guests may need /proc submounted
	* docs/ci-farm-lxc-setup.txt: move "sudo" installation away from
	  useradd example (so "apt-get" does not pollute non-debian guest
	  examples)
	* docs/ci-farm-lxc-setup.txt: change CentOS7 example guest name from
	  ...-x86_64 to ...-x86-64 (or -amd64) to avoid loss of character
	* docs/ci-farm-lxc-setup.txt: avoid "AltArch" CentOS i686, use just
	  x86_64 as something easier to get hands on

2021-12-27  hunter86bg <hunter86_bg@yahoo.com>

	* data/driver.list.in: Add Cyber Power PR1500RT2U, fixes
	  networkupstools/nut#1191

2021-12-27  Jim Klimov <jim@jimklimov.com>

	* docs/ci-farm-lxc-setup.txt: remind to revise container MAC
	  addresses
	* docs/ci-farm-lxc-setup.txt: clarify that "third-party distro" LXC
	  helpers may need chiseling
	* docs/ci-farm-lxc-setup.txt, docs/nut.dict:
	  docs/ci-farm-lxc-setup.txt: hint at needed "pacman" for Arch Linux
	  container installation
	* docs/ci-farm-lxc-setup.txt, docs/nut.dict:
	  docs/ci-farm-lxc-setup.txt: add installation of RPM based distros
	  as guests on non-RPM (DEB) hosts
	* docs/ci-farm-lxc-setup.txt: clarify how to find defined LXC
	  templates, and get usage details about them

2021-12-25  Tomasz Fortuna <bla@thera.be>

	* data/driver.list.in, docs/man/nutdrv_qx.txt, docs/nut.dict,
	  drivers/nutdrv_qx.c: drivers/nutdrv_qx.c: add support for Armac UPS
	  (or maybe other richcomm_usb like)  Based on Armac R/2000I/PSW, but
	  should support other UPSes that work with "PowerManagerII" software
	  from Richcomm Technologies from around 2004-2005.

2021-12-25  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/usb-common.h: map libusb_detach_kernel_driver_np (1.0) as
	  usb_detach_kernel_driver_np (0.1)
	* drivers/usb-common.h: map libusb_detach_kernel_driver_np (1.0) as
	  usb_detach_kernel_driver_np (0.1)

2021-12-25  Jim Klimov <jim@jimklimov.com>

	* drivers/riello_ser.c: do not include hidparser.h (hiccups in
	  usb-common.h due to lack of WITH_LIBUSB_x_y)
	* drivers/riello_ser.c: do not include hidparser.h (hiccups in
	  usb-common.h due to lack of WITH_LIBUSB_x_y)
	* drivers/libshut.c: adjust data_size usage to usb_ctrl_charbufsize
	  typedef
	* drivers/libshut.c: adjust data_size usage to usb_ctrl_charbufsize
	  typedef
	* drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c,
	  drivers/usb-common.h, m4/nut_check_libusb.m4:
	  m4/nut_check_libusb.m4, drivers/usb-common.h + nutdrv_atcl_usb.c +
	  richcomm_usb.c: only apply usb_detach_kernel_driver_np to
	  libusb-0.1 builds (no alias tricks)
	* drivers/libusb1.c, drivers/nutdrv_atcl_usb.c,
	  drivers/richcomm_usb.c, m4/nut_check_libusb.m4:
	  m4/nut_check_libusb.m4, drivers/libusb1.c + nutdrv_atcl_usb.c +
	  richcomm_usb.c: honor that libusb-1.0 may
	  HAVE_LIBUSB_DETACH_KERNEL_DRIVER_NP
	* drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c,
	  drivers/usb-common.h, m4/nut_check_libusb.m4:
	  m4/nut_check_libusb.m4, drivers/usb-common.h + nutdrv_atcl_usb.c +
	  richcomm_usb.c: only apply usb_detach_kernel_driver_np to
	  libusb-0.1 builds (no alias tricks)
	* drivers/libusb1.c, drivers/nutdrv_atcl_usb.c,
	  drivers/richcomm_usb.c, m4/nut_check_libusb.m4:
	  m4/nut_check_libusb.m4, drivers/libusb1.c + nutdrv_atcl_usb.c +
	  richcomm_usb.c: honor that libusb-1.0 may
	  HAVE_LIBUSB_DETACH_KERNEL_DRIVER_NP

2021-12-24  Jim Klimov <jim@jimklimov.com>

	* drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c,
	  drivers/riello_usb.c: drivers/riello_usb.c, richcomm_usb.c,
	  nutdrv_atcl_usb.c: fix remaining uses of (lib)usb_strerror with
	  nut_usb_strerror()
	* configure.ac: update "clang-medium" warnings pre-set with
	  -Wno-incompatible-pointer-types-discards-qualifiers
	* drivers/libusb1.c: some more whitespace and comment fixes
	* drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c,
	  drivers/riello_usb.c: drivers/riello_usb.c, richcomm_usb.c,
	  nutdrv_atcl_usb.c: fix remaining uses of (lib)usb_strerror with
	  nut_usb_strerror()
	* tools/nut-scanner/scan_usb.c: missed whitespace fixes
	* tools/nut-scanner/scan_usb.c: comment "#else WITH_LIBUSB_..." in
	  long blocks
	* drivers/libshut.c: shut_control_msg(): data_size is a "short int"
	  (not size_t) in this branch
	* drivers/libusb1.c: HAVE_LIBUSB_DETACH_KERNEL_DRIVER needs "#ifdef"
	  not "#if"
	* drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c,
	  tools/nut-scanner/scan_usb.c: Convert C code from "#ifdef
	  WITH_LIBUSB_x_y" to "#if" tests for defined value - merging missed
	  a few in libusb-1.0+0.1 branch
	* configure.ac: update "clang-medium" warnings pre-set with
	  -Wno-incompatible-pointer-types-discards-qualifiers
	* drivers/libshut.c: shut_control_msg(): data_size is a "short int"
	  (not size_t) in this branch
	* drivers/libusb1.c: HAVE_LIBUSB_DETACH_KERNEL_DRIVER needs "#ifdef"
	  not "#if"
	* configure.ac, m4/nut_check_libusb.m4: m4/nut_check_libusb.m4 +
	  configure.ac: port newer solution for libusb version selection from
	  libusb-1.0 branch

2021-12-24  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/generic_modbus.c: fix in modbus response value check

2021-12-23  dtsecon <dimitris.s.economou@gmail.com>

	* drivers/generic_modbus.c, drivers/generic_modbus.h: handle broken
	  pine error in modbus TCP connections, configurable modbus response
	  timeouts between requests and frame bytes

2021-12-23  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh: separate the "RES" vars used for configure_nut() and
	  default-all-errors processing (extend to libusb-1.0* branches)
	* tests/getvaluetest.c: include "config.h" first
	* tests/Makefile.am: only TEST getvaluetest "if WITH_USB"
	* m4/nut_check_libusb.m4: do not report misleading "none
	  (libusb-0.1-config)" as the detected libusb version  Seems this
	  confused not only human readers, but also the verdict - whether we
	  build WITH_USB
	* ci_build.sh: separate the "RES" vars used for configure_nut() and
	  default-all-errors processing (extend to libusb-1.0* branches
	* tests/getvaluetest.c: include "config.h" first
	* tests/Makefile.am: only TEST getvaluetest "if WITH_USB"

2021-12-22  Jim Klimov <jim@jimklimov.com>

	* clients/upsclient.c: upscli_tryconnect(): in logged messages,
	  clarity "connect to NUT server %s"  Otherwise nut-scanner output
	  looks awkward when looking at large subnets with many protocols
	  (including "Old NUT")
	* tools/nut-scanner/scan_snmp.c: convert logging in the main loop
	  from a lot of fprintf() to manageable upsdebugx()
	* tools/nut-scanner/scan_ipmi.c: convert logging in the main loop
	  from a lot of fprintf() to manageable upsdebugx()
	* ci_build.sh: fix a typo, copypasted around
	* tests/Makefile.am: only build getvaluetest "if WITH_USB"
	* drivers/blazer_usb.c: forget libusb_device_handle
	* drivers/libhid.h: forget libusb_device_handle
	* ci_build.sh: fix a typo, copypasted around
	* tests/Makefile.am: only build getvaluetest "if WITH_USB"
	* drivers/blazer_usb.c: forget libusb_device_handle
	* drivers/libhid.h: forget libusb_device_handle

2021-12-21  Jim Klimov <jimklimov@gmail.com>

	* drivers/legrand-hid.c: fix type of usb_device_id_t
	  vendorID/productID to uint16_t  * *{usb,hid}.c: sentinel in a table
	  of uint16_t can not be -1
	* drivers/nutdrv_qx.c: Update nutdrv_qx.c  Fix this on some of the CI
	  platforms:  ```` [2021-12-21T09:21:47.623Z] nutdrv_qx.c:1665:2:
	  error: initialization from incompatible pointer type [-Werror]
	  [2021-12-21T09:21:47.623Z]   { USB_DEVICE(0xffff, 0x0000), NULL,
	  NULL,   &ablerex_subdriver }, /* Ablerex 625L USB */
	  [2021-12-21T09:21:47.623Z]   ^ [2021-12-21T09:21:47.623Z]
	  nutdrv_qx.c:1665:2: error: (near initialization for
	  'qx_usb_id[1].fun') [-Werror] ````
	* docs/nut.dict: Update nut.dict  Update for PR #1135

2021-12-21  Jim Klimov <jim@jimklimov.com>

	* configure.ac: switch default warnings level to "medium"
	* drivers/usbhid-ups.c: range-check quiesced by pragmas (GCC)
	* drivers/libusb0.c: do not separate if-clause parenthesis by pragmas
	  (GCC)
	* drivers/libusb1.c: do not separate if-clause parenthesis by pragmas
	  (GCC)
	* drivers/libshut.c: do not separate if-clause parenthesis by pragmas
	  (GCC)
	* drivers/hidparser.c: do not separate if-clause parenthesis by
	  pragmas (GCC)
	* configure.ac: switch default warnings level to "medium"
	* drivers/usbhid-ups.c: range-check quiesced by pragmas (GCC)
	* drivers/libusb0.c: do not separate if-clause parenthesis by pragmas
	  (GCC)
	* drivers/libusb1.c: do not separate if-clause parenthesis by pragmas
	  (GCC)
	* drivers/libshut.c: do not separate if-clause parenthesis by pragmas
	  (GCC)
	* drivers/hidparser.c: do not separate if-clause parenthesis by
	  pragmas (GCC)
	* drivers/usb-common.h: include "common.h"
	* drivers/usb-common.h: include "common.h"
	* docs/nut.dict: update for recent NEWS
	* NEWS: prepare for nutdrv-qx legrand merge in 2.7.5 timeline
	* NEWS: prepare for nutdrv-qx ablerex merge in 2.7.5 timeline
	* NEWS: know about usbhid-ups Delta Minuteman support for NUT v2.7.5
	* NEWS: fix USB LogMin/LogMax mismatch reporting (just once!) for NUT
	  v2.7.5
	* NEWS: add a little delay between multicommands [PR #1228] for NUT
	  v2.7.5
	* NEWS: prepare for libusb-1.0 merge in 2.7.5 timeline
	* ci_build.sh: separate the "RES" vars used for configure_nut() and
	  default-all-errors processing
	* drivers/usbhid-ups.c: date_conversion_fun(): hush a string overflow
	  warning (overkill the buffer size a bit)
	* docs/developers.txt, docs/nut.dict: docs/developers.txt: note that
	  we define "gcc-medium|gcc-hard" warnings without "pedantic" for
	  C89/C90/ANSI builds (flaws in OS headers are out of our control)
	* configure.ac: define "gcc-medium|gcc-hard" warnings with "extra"
	  always, but without "pedantic" for C89/C90/ANSI builds (flaws in OS
	  headers are out of our control)
	* tests/Makefile.am: consider LIBUSB_CFLAGS when building parser test
	* Jenkinsfile-dynamatrix: separate (and disable by default) ANSI C
	  build scenarios, they are too noisy in fightwarn for no real good
	* common/common.c: s_upsdebug*(): move fmt2[] declarations to top
	  from code
	* common/common.c: fix comments from // to /* */
	* drivers/hidparser.h: include "config.h"
	* server/upsd.c: #include config.h first
	* scripts/upower/95-upower-hid.rules: Update 95-upower-hid.rules  Add
	  VID/PID for Minuteman UPS
	* drivers/blazer_usb.c: cast tmp as char*  Older compilers complain
	  that we are:  passing argument 3 of 'usb_interrupt_read' from
	  incompatible pointer type expected 'char *' but argument is of type
	  'char (*)[512]'

2021-12-20  hunter86bg <hunter86_bg@yahoo.com>

	* data/driver.list.in: Add Powerwalker VFI 3000 TG Online UPS to
	  driver.list.in (#1224)

2021-12-20  Jim Klimov <jimklimov@gmail.com>

	* drivers/nutdrv_qx.c: Update nutdrv_qx.c  Whitespace fix
	* drivers/hidparser.c: Update hidparser.c  Fix whitespace in recent
	  changes for LogMin/LogMax rectification

2021-12-20  Jim Klimov <jim@jimklimov.com>

	* drivers/libusb1.c: fix whitespace (break long lines)
	* drivers/libshut.h: define ERROR_ACCESS etc. used for USB(-like)
	  result states
	* drivers/libusb1.c: fix whitespace (break long lines)
	* drivers/libshut.h: define ERROR_ACCESS etc. used for USB(-like)
	  result states
	* tools/nut-scanner/scan_usb.c: fix whitespace (indentation etc)
	* drivers/nutdrv_atcl_usb.c: drop local libusb-0.1 vs 1.0 definitions
	  now provided by usb-common.h
	* m4/nut_check_libusb.m4: update comments
	* drivers/usb-common.h: whitespace-separate definitions of
	  ERROR_ACCESS etc., nut_usb_strerror() and similar macros
	* drivers/bcmxcp_usb.c: comment FIXME for possible uses of usb_ctrl_*
	  typedefs
	* drivers/richcomm_usb.c: fix whitespace (break long lines)
	* drivers/riello_usb.c: fix whitespace (break long lines)
	* tools/nut-scanner/scan_usb.c: fix whitespace (indentation etc)
	* drivers/nutdrv_atcl_usb.c: drop local libusb-0.1 vs 1.0 definitions
	  now provided by usb-common.h
	* m4/nut_check_libusb.m4: update comments
	* drivers/usb-common.h: whitespace-separate definitions of
	  ERROR_ACCESS etc., nut_usb_strerror() and similar macros
	* drivers/bcmxcp_usb.c: comment FIXME for possible uses of usb_ctrl_*
	  typedefs
	* drivers/richcomm_usb.c: fix whitespace (break long lines)
	* drivers/riello_usb.c: fix whitespace (break long lines)
	* tools/nut-scanner/scan_usb.c: fix whitespace (indentation etc)
	* drivers/usbhid-ups.c: fix whitespace (break long lines)
	* drivers/riello_usb.c: fix whitespace (break long lines)
	* drivers/richcomm_usb.c: fix whitespace (break long lines)
	* drivers/nutdrv_qx.c: fix whitespace (break long lines)
	* drivers/blazer_usb.c: fix whitespace (break long lines)

2021-12-19  Scott Colby <scott@scolby.com>

	* drivers/usbhid-ups.c: Add a short sleep between fallback instcmds
	  in usbhid-ups.  For some devices, missing instcmds are emulated by
	  calling two instcmds that do exist in sequence. For some devices,
	  when these commands arrive too quickly, they are not properly
	  processed. (One, both, or neither of the commands are acted upon.)
	  Adding a 1/8th-second delay (125,000 microseconds) between the two
	  instcmds that make up the fallback command has worked to make the
	  TrippLite AVR750U (new version with the 3024 productId/protocol)
	  behave consistently when using the fallback commands
	  (shutdown.return and shutdown.stayoff). This delay is also short
	  enough that it seems unlikely to cause a problem for any devices
	  which don't exhibit this issue.

2021-12-19  Jim Klimov <jim@jimklimov.com>

	* drivers/hidparser.c, drivers/hidparser.h, drivers/libhid.c,
	  drivers/libhid.h, drivers/libshut.c, drivers/libshut.h,
	  drivers/libusb0.c, drivers/libusb1.c, drivers/nut_libusb.h,
	  drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c,
	  drivers/riello_usb.c, drivers/tripplite_usb.c,
	  drivers/usb-common.h, drivers/usbhid-ups.c: drivers (c,h) USB, HID
	  and SHUT: converge parameter usage from strict int types to backend
	  API dependent "usb_ctrl_*" and "usb_dev_handle" typedefs, then
	  range-check and cast the numbers, and avoid build warnings
	* drivers/hidparser.c, drivers/hidparser.h, drivers/libhid.c,
	  drivers/libhid.h, drivers/libshut.c, drivers/libshut.h,
	  drivers/libusb0.c, drivers/libusb1.c, drivers/nut_libusb.h,
	  drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c,
	  drivers/riello_usb.c, drivers/tripplite_usb.c,
	  drivers/usb-common.h, drivers/usbhid-ups.c: drivers (c,h) USB, HID
	  and SHUT: converge parameter usage from strict int types to backend
	  API dependent "usb_ctrl_*" and "usb_dev_handle" typedefs, then
	  range-check and cast the numbers, and avoid build warnings
	* m4/nut_check_libusb.m4: make sure (missing) methods from another
	  API are defined in config.h (so "#if HAVE_..." is valid and not
	  guessed as 0)
	* m4/nut_check_libusb.m4: make sure (missing) methods from another
	  API are defined in config.h (so "#if HAVE_..." is valid and not
	  guessed as 0)
	* ci_build.sh: allow to build custom NUT_USB_VARIANTS=libusb-x.y (not
	  plain "x.y")
	* ci_build.sh: allow to build custom NUT_USB_VARIANTS and skip
	  building a separate NUT_SSL_VARIANTS=auto
	* ci_build.sh: allow to build custom NUT_USB_VARIANTS=libusb-x.y (not
	  plain "x.y")
	* ci_build.sh: allow to build custom NUT_USB_VARIANTS and skip
	  building a separate NUT_SSL_VARIANTS=auto
	* ci_build.sh: allow to build custom NUT_USB_VARIANTS=libusb-x.y (not
	  plain "x.y")
	* ci_build.sh: allow to build custom NUT_USB_VARIANTS and skip
	  building a separate NUT_SSL_VARIANTS=auto
	* drivers/hidparser.c, drivers/hidparser.h: drivers/hidparser.{c,h}:
	  fix ReportDescSize from int to size_t

2021-12-18  Dave Williams <dave@opensourcesolutions.co.uk>

	* drivers/apc-hid.c, drivers/arduino-hid.c, drivers/belkin-hid.c,
	  drivers/cps-hid.c, drivers/delta_ups-hid.c, drivers/explore-hid.c,
	  drivers/hidtypes.h, drivers/idowell-hid.c, drivers/liebert-hid.c,
	  drivers/mge-hid.c, drivers/openups-hid.c, drivers/powercom-hid.c,
	  drivers/powervar-hid.c, drivers/salicru-hid.c,
	  drivers/tripplite-hid.c, drivers/usbhid-ups.c,
	  drivers/usbhid-ups.h: Fix #439 Incorrect Output Voltage on
	  CPS*EFPCLCD

2021-12-16  Jim Klimov <jim@jimklimov.com>

	* drivers/usb-common.h: define PRI_NUT_USB_CTRL_CHARBUFSIZE,
	  usb_ctrl_msgvalue and usb_ctrl_strindex
	* drivers/usb-common.h: clarify that libusb timeouts are in
	  milliseconds (with variouts int types per API version)
	* drivers/usb-common.h: update comment about mapping from libusb-0.1
	  to libusb-1.0 API
	* drivers/nut_libusb.h: comment the practical mess around
	  hid_rep_index
	* drivers/usb-common.h: comment which API version each endif is for
	* drivers/usb-common.h: note the arg type for libusb_strerror() in
	  comments to our macro wrapper nut_usb_strerror()
	* drivers/usb-common.h: update heading comment with references to
	  different API docs
	* drivers/usb-common.h: update heading comment and (C) for libusb-1.0
	  related changes
	* drivers/usb-common.h: define PRI_NUT_USB_CTRL_CHARBUFSIZE,
	  usb_ctrl_msgvalue and usb_ctrl_strindex
	* drivers/usb-common.h: clarify that libusb timeouts are in
	  milliseconds (with variouts int types per API version)
	* drivers/usb-common.h: update comment about mapping from libusb-0.1
	  to libusb-1.0 API
	* drivers/nut_libusb.h: comment the practical mess around
	  hid_rep_index
	* drivers/usb-common.h: comment which API version each endif is for
	* drivers/usb-common.h: note the arg type for libusb_strerror() in
	  comments to our macro wrapper nut_usb_strerror()
	* drivers/usb-common.h: update heading comment with references to
	  different API docs
	* drivers/usb-common.h: update heading comment and (C) for libusb-1.0
	  related changes
	* include/nut_stdint.h: make sure we know PRIsize and PRIssize

2021-12-16  Ablerexsoftware <Ablerex.software@ablerex.com.tw>

	* docs/acknowledgements.txt, docs/man/nutdrv_qx.txt,
	  docs/nutdrv_qx-subdrivers.txt, drivers/Makefile.am,
	  drivers/nutdrv_qx.c: modify CI warnings and Replace the new sub
	  driver

2021-12-15  Nick Briggs <nicholas.h.briggs@gmail.com>

	* drivers/hidparser.c: Move check for LogMax encoding error to
	  parsing of report description  At least one UPS [APC Back-UPS
	  BX1600MI FW:294201G -302201G] is known to have encoding errors in
	  its USB HID report description such that a conforming
	  interpretation of the encoded LogicalMaximum value indicates that
	  it is -1 and the resulting LogicalMin..LogicalMax range is 0..-1.
	  The actual report values read are correctly encoded.  Rather than
	  log a range error each time a value is read we can detect the
	  encoding error when the report description is read (once, at
	  startup) and adjust for the encoding error at that time.

2021-12-15  Jim Klimov <jim@jimklimov.com>

	* drivers/libshut.c: shut_control_msg(): range-check data_size before
	  stuffing the number into a char
	* drivers/libshut.c: range-check and cast ints to struct members and
	  library args
	* drivers/libshut.c: braces fix
	* drivers/nut_libusb.h, drivers/usb-common.h: drivers/usb-common.h +
	  nut_libusb.h: typedef more usb_ctrl_* tokens to match libusb-0.1 vs
	  1.0 API
	* drivers/libshut.c: shut_control_msg(): range-check data_size before
	  stuffing the number into a char
	* drivers/libshut.c: range-check and cast ints to struct members and
	  library args
	* drivers/libshut.c: braces fix
	* drivers/nut_libusb.h, drivers/usb-common.h: drivers/usb-common.h +
	  nut_libusb.h: typedef more usb_ctrl_* tokens to match libusb-0.1 vs
	  1.0 API
	* drivers/libshut.h: whitespace fixes (make func ptrs more visible)
	* drivers/libhid.c, drivers/libhid.h: drivers/libhid.{c,h}:
	  HIDGetDataValue(), refresh_report_buffer(), get_item_buffered():
	  fix "age" from int to time_t, to match time() operations
	* drivers/usbhid-ups.c: date_conversion_fun(): comment and cast
	  numeric type conversions

2021-12-13  Jim Klimov <jim@jimklimov.com>

	* drivers/bcmxcp_usb.c, drivers/blazer_usb.c,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_qx.c,
	  drivers/richcomm_usb.c, drivers/riello_usb.c, drivers/usb-common.h:
	  USB: Rename typedef usb_ctrl_char to usb_ctrl_charbuf to avoid
	  confsion (it is a char* sibling, not plain char)
	* drivers/libshut.h, drivers/nut_libusb.h: drivers/nut_libusb.h,
	  libshut.h: whitespace fixes (align "version")
	* drivers/bcmxcp_usb.c, drivers/blazer_usb.c,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_qx.c,
	  drivers/richcomm_usb.c, drivers/riello_usb.c, drivers/usb-common.h:
	  USB: Rename typedef usb_ctrl_char to usb_ctrl_charbuf to avoid
	  confsion (it is a char* sibling, not plain char)
	* drivers/libshut.h, drivers/nut_libusb.h: drivers/nut_libusb.h,
	  libshut.h: whitespace fixes (align "version")
	* drivers/libusb.h: whitespace fixes (make func ptrs more visible)

2021-12-10  Jim Klimov <jim@jimklimov.com>

	* drivers/usbhid-ups.c: current use of SHUT_MODE relies on
	  defined/not-defined, not on value for plain #if macro
	* drivers/nutdrv_qx.c: adapt to usb-common.h and (usb_ctrl_char)
	  casting
	* drivers/bcmxcp_usb.c: adapt to usb-common.h and (usb_ctrl_char)
	  casting
	* drivers/nutdrv_atcl_usb.c: adapt to usb-common.h and
	  (usb_ctrl_char) casting
	* drivers/riello_usb.c: adapt to usb-common.h and (usb_ctrl_char)
	  casting
	* drivers/riello.h: do not define duplicate
	  USB_ENDPOINT_IN/USB_ENDPOINT_OUT
	* drivers/usb-common.h: convert usb_get_string{_simple}() from macro
	  aliases to real mappings with range-checks for libusb-1.0 API
	* drivers/usb-common.h: mark "static inline" functions with
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TYPE_LIMITS_BESIDEFUNC since not
	  all C files call them
	* drivers/bcmxcp_usb.c, drivers/blazer_usb.c, drivers/libhid.h,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_qx.c,
	  drivers/richcomm_usb.c, drivers/riello_usb.c,
	  drivers/tripplite_usb.c, drivers/usb-common.h:
	  drivers/usb-common.h: consolidate libusb-0.1 vs 1.0 data/func
	  mappings from *usb.c files
	* drivers/nut_libusb.h, drivers/usb-common.h: drivers/nut_libusb.h
	  already includes "usb-common.h" so no need to pull LibUSB headers
	  again
	* drivers/bcmxcp_usb.c: range-check and cast args for
	  usb_control_msg() => libusb_control_transfer() and
	  usb_interrupt_read() => libusb_interrupt_transfer() for libusb-1.0
	  support
	* drivers/usbhid-ups.c: current use of SHUT_MODE relies on
	  defined/not-defined, not on value for plain #if macro
	* drivers/nutdrv_qx.c: adapt to usb-common.h and (usb_ctrl_char)
	  casting
	* drivers/bcmxcp_usb.c: adapt to usb-common.h and (usb_ctrl_char)
	  casting
	* drivers/nutdrv_atcl_usb.c: adapt to usb-common.h and
	  (usb_ctrl_char) casting
	* drivers/riello_usb.c: adapt to usb-common.h and (usb_ctrl_char)
	  casting
	* drivers/riello.h: do not define duplicate
	  USB_ENDPOINT_IN/USB_ENDPOINT_OUT
	* drivers/usb-common.h: convert usb_get_string{_simple}() from macro
	  aliases to real mappings with range-checks for libusb-1.0 API
	* drivers/usb-common.h: mark "static inline" functions with
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TYPE_LIMITS_BESIDEFUNC since not
	  all C files call them
	* drivers/bcmxcp_usb.c, drivers/blazer_usb.c, drivers/libhid.h,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_qx.c,
	  drivers/richcomm_usb.c, drivers/riello_usb.c,
	  drivers/tripplite_usb.c, drivers/usb-common.h:
	  drivers/usb-common.h: consolidate libusb-0.1 vs 1.0 data/func
	  mappings from *usb.c files
	* drivers/nut_libusb.h, drivers/usb-common.h: drivers/nut_libusb.h
	  already includes "usb-common.h" so no need to pull LibUSB headers
	  again
	* drivers/bcmxcp_usb.c: range-check and cast args for
	  usb_control_msg() => libusb_control_transfer() and
	  usb_interrupt_read() => libusb_interrupt_transfer() for libusb-1.0
	  support
	* ci_build.sh: comment the rationale reminder for
	  "default-all-errors" mode
	* ci_build.sh: try more options for non-verbose MAKE runs
	* conf/upsmon.conf.sample.in: update suggestions and envvar list for
	  NOTIFYCMD callouts
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_UNUSED_FUNCTION

2021-12-09  Jim Klimov <jim@jimklimov.com>

	* tools/nut-usbinfo.pl: sanity check that exactly one version of
	  WITH_LIBUSB_x_y is set (defined and has value 1)
	* drivers/usb-common.h: sanity check that exactly one version of
	  WITH_LIBUSB_x_y is set (defined and has value 1)
	* drivers/bcmxcp_usb.c: sanity check that exactly one version of
	  WITH_LIBUSB_x_y is set (defined and has value 1)
	* tools/nut-usbinfo.pl: sanity check that exactly one version of
	  WITH_LIBUSB_x_y is set (defined and has value 1)
	* drivers/usb-common.h: sanity check that exactly one version of
	  WITH_LIBUSB_x_y is set (defined and has value 1)
	* drivers/bcmxcp_usb.c: sanity check that exactly one version of
	  WITH_LIBUSB_x_y is set (defined and has value 1)
	* configure.ac, m4/nut_check_libusb.m4: configure.ac +
	  m4/nut_check_libusb.m4: rectify WITH_LIBUSB_x_y definitions
	* configure.ac, m4/nut_check_libusb.m4: configure.ac +
	  m4/nut_check_libusb.m4: rectify WITH_LIBUSB_x_y definitions
	* ci_build.sh: Refactor `./ci_build.sh spellcheck` to be more useful
	* ci_build.sh: refactor build_to_only_catch_errors_target() out of
	  build_to_only_catch_errors()
	* ci_build.sh, docs/developers.txt: ci_build.sh: introduce support
	  for CI_SHELL_IS_FLAKY=true
	* docs/developers.txt: when introducing ci_build.sh, mention that NUT
	  CI farm tells how to reproduce builds

2021-12-08  Mauro Guerrera <mauroguerrera@eaton.com>

	* docs/man/snmp-ups.txt: Update snmp-ups docs
	* docs/man/nut-scanner.txt: Update docs to list new auth and privacy
	  encryption options

2021-12-08  Jim Klimov <jimklimov@gmail.com>

	* docs/man/nut-scanner.txt: Update nut-scanner.txt  Clarify SNMP
	  auth/priv proto support depends on Net-SNMP lib
	* docs/man/snmp-ups.txt: Update snmp-ups.txt  Clarify SNMP auth/priv
	  proto support depends on Net-SNMP lib

2021-12-08  Jim Klimov <jim@jimklimov.com>

	* drivers/nut_libusb.h: sanity check that exactly one version of
	  WITH_LIBUSB_x_y is set (defined and has value 1)
	* drivers/bcmxcp_usb.c, drivers/blazer_usb.c, drivers/nut_libusb.h,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_qx.c,
	  drivers/richcomm_usb.c, drivers/riello_usb.c,
	  drivers/tripplite_usb.c, drivers/usb-common.h,
	  tools/nut-scanner/nutscan-init.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-usbinfo.pl: Convert C code from "#ifdef WITH_LIBUSB_x_y"
	  to "#if" tests for defined value
	* drivers/nut_libusb.h: sanity check that exactly one version of
	  WITH_LIBUSB_x_y is set (defined and has value 1)
	* drivers/bcmxcp_usb.c, drivers/blazer_usb.c, drivers/nut_libusb.h,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_qx.c,
	  drivers/richcomm_usb.c, drivers/riello_usb.c,
	  drivers/tripplite_usb.c, drivers/usb-common.h,
	  tools/nut-scanner/nutscan-init.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-usbinfo.pl: Convert C code from "#ifdef WITH_LIBUSB_x_y"
	  to "#if" tests for defined value
	* drivers/Makefile.am: define SHUT_MODE=1 (with a value) so #if is
	  predictable
	* m4/nut_check_libusb.m4: (hidden) debug before AC_DEFINE
	* m4/nut_check_libusb.m4: always AC_DEFINE the WITH_LIBUSB_1_0 and
	  WITH_LIBUSB_0_1 macros with a 0 or 1 value
	* drivers/Makefile.am: define SHUT_MODE=1 (with a value) so #if is
	  predictable
	* m4/nut_check_libusb.m4: (hidden) debug before AC_DEFINE
	* m4/nut_check_libusb.m4: always AC_DEFINE the WITH_LIBUSB_1_0 and
	  WITH_LIBUSB_0_1 macros with a 0 or 1 value

2021-12-07  Jim Klimov <jim@jimklimov.com>

	* docs/configure.txt: configure.ac et al: drop the extra
	  --with-libusb-version and handle its goals via --with-usb=VERSION
	* configure.ac: drop duplicate NUT_CHECK_LIBNETSNMP
	* configure.ac: regroup some NUT_ARG_WITH() closer to their
	  NUT_CHECK_*() so help for detailed options is near
	* m4/nut_check_libusb.m4: refactor shell if/case to m4 (tracking down
	  missed parentheses)
	* m4/nut_check_libusb.m4: port more function probes from
	  libusb-1.0+0.1 branch
	* ci_build.sh, configure.ac, docs/configure.txt,
	  m4/nut_check_libusb.m4: configure.ac et al: drop the extra
	  --with-libusb-version and handle its goals via --with-usb=VERSION
	* m4/nut_check_libusb.m4: port comments and m4 markup from
	  libusb-1.0+0.1 branch
	* configure.ac, m4/nut_check_libusb.m4: configure.ac: move remaining
	  libusb sanity checks into the m4/nut_check_libusb.m4 file
	* configure.ac: drop duplicate NUT_CHECK_LIBNETSNMP
	* configure.ac: regroup some NUT_ARG_WITH() closer to their
	  NUT_CHECK_*() so help for detailed options is near
	* drivers/libusb1.c: nut_libusb_open(): range-check and cast
	  libusb_control_transfer() arg rdlen
	* drivers/libusb1.c: nut_libusb_open(): range-check and cast
	  libusb_control_transfer() arg rdlen
	* Makefile.am: do not let (parallel) "make maintainer-clean" remove
	  the files that cleanup recipe needs
	* ci_build.sh: Revert "ci_build.sh: fix bogus expression for
	  BUILDSTODO"  This reverts commit
	  e57eec425da5c2020656fd48ec3f8bb9bbf55c52 and adds comments and
	  handling why that weird construct was not bogus ;)
	* docs/ci-farm-lxc-setup.txt, docs/nut.dict:
	  docs/ci-farm-lxc-setup.txt: reword notes for default QEMU container
	  memory settings
	* ci_build.sh: Add a shortcut hack to "./ci_build.sh spellcheck"
	  easily
	* common/Makefile.am: some "make" implems dislike DRY multi-entry
	  definition of same target (common.c)
	* ci_build.sh: Add a shortcut hack to "./ci_build.sh spellcheck"
	  easily
	* drivers/snmp-ups.c, tools/nut-scanner/scan_snmp.c:
	  drivers/snmp-ups.c + tools/nut-scanner/scan_snmp.c: hide sanity
	  checks before generate_Ku() into pragmas to not warn about
	  type-limits ("comparison is always false due to limited range of
	  data type" on some architectures)
	* drivers/solis.c: make sure nut_stdint.h is included early and
	  defines size_t

2021-12-06  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c, tools/nut-scanner/scan_snmp.c:
	  drivers/snmp-ups.c + tools/nut-scanner/scan_snmp.c: align (cast)
	  arg type of generate_Ku() with net-snmp headers, and document the
	  inconsistency of size_t vs u_int in the same API
	* drivers/snmp-ups.c: align (cast) arg type of malloc()/realloc()
	* drivers/snmp-ups.c: align (cast) arg type of snmp_errstring() vs
	  response->errstat (int vs long), and document the inconsistency
	  with net-snmp headers
	* drivers/snmp-ups.c: upsdrv_makevartable(): fix maths with size_t vs
	  int
	* drivers/tripplite_usb.c: setvar(): cast placing of new_unit_id into
	  wire protocol (FIXME? Does that code assume CPU endianness?)
	* drivers/tripplite_usb.c: upsdrv_initinfo(): fix receiver of
	  strtol()
	* drivers/tripplite_usb.c: whitespace fixes
	* drivers/tripplite_usb.c: setvar(): fix determination of outlet
	  index number
	* drivers/tripplite_usb.c: debug_message(): fix len from int to
	  size_t
	* drivers/tripplite_usb.c: soft_shutdown(): cast placing of offdelay
	  into wire protocol (FIXME? Does that code assume CPU endianness?)
	* drivers/tripplite_usb.c: fix reading and printing of offdelay
	  (unsigned int in this driver)
	* drivers/tripplite_usb.c: fix hex2d() to long as a consumer of
	  strtol()
	* drivers/tripplite_usb.c: fix toprint_str() length to size_t and
	  toprint(x) to char
	* drivers/netxml-ups.c: fix type of "ret" for
	  ne_read_response_block() and ne_sock_read() to ssize_t (as in
	  libneon headers)
	* drivers/nutdrv_qx.c: fix qx_command() to return ssize_t like
	  ser_send() at least
	* drivers/nutdrv_qx.c: range-check and cast "u_langid_fix" in
	  upsdrv_initups()
	* drivers/nutdrv_qx.c: range-check and cast length of "cmdlen" in
	  phoenixtec_command()
	* drivers/nutdrv_qx.c: range-check and cast bytes in
	  phoenixtec_command()
	* drivers/nutdrv_qx.c: range-check and cast bytes in fuji_command()
	* drivers/nutdrv_qx.c: range-check and cast bytes in repetitive
	  "Simple unicode -> ASCII inplace conversion"
	* drivers/nutdrv_qx.c: range-check and cast int vs size_t in
	  subdriver handlers (buflen, ret, i++)
	* drivers/nutdrv_qx.c: initialize ret=0 before we potentially use it
	  in loop i+=ret (should not happen in current code, but...)
	* drivers/nutdrv_qx.c: cast upsdebug_hex() logging with non-size_t
	  args
	* drivers/nutdrv_qx.c: range-check and cast receivers of strtol()
	* drivers/nutdrv_qx.c, drivers/nutdrv_qx.h: drivers/nutdrv_qx.{c,h}:
	  qx_process(), item_t.answer_len: fix lengths from int to size_t
	* drivers/nutdrv_qx.c: qx_command(): indent ifdefs for
	  TESTING/QX_USB/QX_SERIAL for easier navigation
	* drivers/nutdrv_qx.c: qx_command() complains about unused parameters
	  (not sure why); mark with NUT_UNUSED_VARIABLE just in case
	* drivers/nutdrv_qx.c, drivers/nutdrv_qx.h: drivers/nutdrv_qx.{c,h}:
	  fix STATUS() macro, qx_status(), status_lkp_t.status_mask field and
	  ups_status var to all be "unsigned int"
	* drivers/nutdrv_qx_voltronic.c: range-check and cast receivers of
	  strtol(); wrap a few long lines
	* drivers/nutdrv_qx_mecer.c: fix receivers of strtol()
	* drivers/nutdrv_qx_masterguard.c: masterguard_test_battery(): fix
	  receivers of strtol() - duration
	* drivers/nutdrv_qx_masterguard.c: masterguard_shutdown(): fix
	  receivers of strtol() - ondelay/offdelay
	* drivers/nutdrv_qx_masterguard.c: masterguard_new_slaveaddr():
	  range-check and cast "masterguard_next_slaveaddr"
	* drivers/nutdrv_qx_masterguard.c: fix receivers of strtol()
	* drivers/nutdrv_qx_masterguard.c: masterguard_output_voltages(): fix
	  type for sizeof() maths
	* drivers/nutdrv_qx_masterguard.c: masterguard_model(): fix type of
	  min_bp/max_bp
	* drivers/huawei-ups2000.c: instcmd(): range-check and cast for
	  ups2000_write_register() and handler_func()
	* drivers/huawei-ups2000.c: ups2000_update_alarm(): range-check and
	  cast all_alarms_len from snprintf() retval
	* drivers/huawei-ups2000.c: ups2000_update_info(): pragma disable
	  warnings for non-fixed format string
	* drivers/huawei-ups2000.c: ups2000_update_info(): cast uint32_t for
	  reg-idx
	* drivers/huawei-ups2000.c: ups2000_read_serial(): range-check and
	  cast ssize_t vs size_t increments
	* drivers/huawei-ups2000.c: ups2000_update_info(): cast uint8_t
	  calculations of reg_id parts
	* drivers/huawei-ups2000.c: ups2000_device_identification(): cast
	  uint32_t calculations of ups2000_ident
	* drivers/huawei-ups2000.c: ups2000_device_identification():
	  range-check and cast crc16 calculations
	* drivers/huawei-ups2000.c: ups2000_write_registers(),
	  ups2000_read_registers(), ups2000_device_identification():
	  initialize variables that clang-9 is not sure about  Seems like a
	  clang analyzer bug frankly: code starts with a retrying loop that
	  would initialize these variables. But still, adding determinism
	  into code never hurts ;)
	* drivers/huawei-ups2000.c: crc16(): fix casting to uint16_t when
	  bit-shifting
	* drivers/huawei-ups2000.c: ups2000_alarm[] sentinel: fix uint16_t
	  reg from -1 to 0
	* drivers/huawei-ups2000.c: ups2000_device_identification(): fix r
	  from int to size_t, to match ser_send_buf()
	* drivers/huawei-ups2000.c: fix ups2000_read_serial() from int to
	  size_t, to match ser_get_buf()
	* drivers/huawei-ups2000.c: mark local variables static

2021-12-04  Jim Klimov <jim@jimklimov.com>

	* m4/ax_c_pragmas.m4: add HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_PEDANTIC
	* drivers/nutdrv_qx_blazer-common.c: fix and range-check receivers of
	  strtol()
	* drivers/nutdrv_qx_bestups.c: fix receivers of strtol()
	* drivers/nutdrv_qx_voltronic-qs-hex.c: fix receivers of strtol()
	* drivers/solis.c: fix packet_size from int to size_t
	* drivers/apcsmart.c: bit-wise &= ~() insists it is for unsigned
	  (int) types - vt->flags
	* drivers/apcsmart.c: bit-wise &= ~() insists it is for unsigned
	  (int) types - termios struct
	* drivers/apcsmart.c: sdcmd_CS: fix cshd from int to useconds_t
	* drivers/apcsmart.c: whitespace fix
	* drivers/apcsmart.c: apc_getcaps(): fix i, nument, entlen from int
	  to size_t
	* drivers/apcsmart.c: cast prtchr() args from (unsigned char) to
	  (char)
	* drivers/apcsmart.c: fix receivers of strtol()
	* drivers/apcsmart.c: cast apc_read*()/apc_write*() from ((const)
	  char) to (const unsigned char)
	* drivers/apcsmart.c: fix receivers of strlen() from int to ssize_t
	* drivers/apcsmart.c, drivers/apcsmart.h: drivers/apcsmart.{c,h}: fix
	  ups_status and APC_STAT_* from int to long (to match strtol() used)
	* drivers/apcsmart.c: fix receivers of strlen() from int to ssize_t
	* drivers/apcsmart.c: fix apc_read*()/apc_write*() from int to
	  ssize_t to match select_read() et al
	* drivers/apcsmart.c: include main.h => config.h first
	* drivers/apcsmart.c: convert_data(): fix receivers of strtol()
	* drivers/apcsmart-old.c, drivers/apcsmart-old.h:
	  drivers/apcsmart-old.c: fix const/unsigned/char usages
	* drivers/apcsmart-old.c: do_capabilities(): fix i, nument, entlen
	  from int to size_t
	* drivers/apcsmart-old.c, drivers/apcsmart-old.h:
	  drivers/apcsmart-old.c: fix receivers of strtol()
	* drivers/solis.h: fix packet_size from into to size_t
	* drivers/apcsmart-old.c: fix handling of ser_*() retval from int to
	  ssize_t
	* drivers/clone.c: fix ondelay/offdelay handling from int to long (to
	  match strtol() used)
	* drivers/clone-outlet.c: fix handling of read()/write() retval from
	  int to ssize_t
	* drivers/clone.c: fix handling of read()/write() retval from int to
	  ssize_t
	* drivers/blazer.h, drivers/blazer_ser.c, drivers/blazer_usb.c:
	  drivers/blazer.h + blazer_{ser,usb}.c: blazer_command(): fix
	  handling of ser_get_buf() retval from int to ssize_t
	* drivers/blazer.c: fix ondelay/offdelay handling from int to long
	  (to match strtol() used)
	* drivers/blazer.c: fix receivers of strtol() - delay tmp var
	* drivers/powerp-txt.c: fix ondelay/offdelay handling from int to
	  long (to match strtol() used)
	* drivers/victronups.c: fix receivers of strtol()
	* drivers/victronups.c: fix handling of ser_get_line() retval from
	  int to ssize_t
	* drivers/tripplite.c: fix receivers of strtol() => hex2d()
	* drivers/tripplite.c: fix handling of ser_get_char() retval from int
	  to ssize_t
	* drivers/solis.c, drivers/solis.h: drivers/solis.{c,h}: fix
	  comm_receive() from int to size_t, and match ser_get_buf_len()
	  len-or-error returns
	* drivers/solis.c, drivers/solis.h: drivers/solis.{c,h}: fix
	  byte-sized maths of str2bin() and day counts to uint8_t
	* drivers/solis.c: include main.h => config.h first
	* drivers/solis.c, drivers/solis.h: drivers/solis.c:
	  save_ups_config(): fix casting of ConfigPack[] entries to (unsigned
	  char) from original types
	* drivers/nutdrv_siemens_sitop.c: fix handling of ser_get_line()
	  retval from int to ssize_t
	* drivers/safenet.c: fix ondelay/offdelay handling from int to long
	  (to match strtol() used)
	* drivers/safenet.c: fix array loop iterator from int to size_t
	* drivers/safenet.c: fix handling of ser_get_line() retval from int
	  to ssize_t
	* drivers/rhino.c: fix handling of ser_get_line() retval from int to
	  ssize_t
	* drivers/powercom.h: fix whitespace (indentations)
	* drivers/powercom.c: fix array loop iterator from int to size_t
	* drivers/powercom.c: fix handling of ser_get_line() retval from int
	  to ssize_t
	* drivers/optiups.c: a few whitespace nits
	* drivers/optiups.c: fix OPTISBIT_* handling from int to long (to
	  match strtol() used)
	* drivers/optiups.c: fix optifill() len from int to size_t
	* drivers/optiups.c: fix handling of ser_get_line() retval from int
	  to ssize_t
	* drivers/oneac.c: fix handling of ser_get_line() retval from int to
	  ssize_t
	* scripts/subdriver/gen-usbhid-subdriver.sh: update generated C
	  heading comment with "TODO" and update generated code whitespace
	  markup
	* drivers/arduino-hid.c, drivers/salicru-hid.c:
	  drivers/usb-common.{c,h} drivers/*{usb,hid}.c: fix type of
	  usb_device_id_t vendorID/productID to uint16_t  Catch up to earlier
	  change for recently merged USB HID drivers; specifically *
	  *{usb,hid}.c: sentinel in a table of uint16_t can not be -1 for: *
	  drivers/salicru-hid.c * drivers/arduino-hid.c *
	  scripts/subdriver/gen-usbhid-subdriver.sh creating the boilerplates

2021-12-03  Jim Klimov <jim@jimklimov.com>

	* drivers/microsol-common.c: fix setup_poweroff_schedule() vars from
	  int to bool_t to match set_schedule_time()
	* drivers/microsol-common.c: fix get_base_info(), get_updated_info()
	  buf sizes from unsigned int to ssize_t (to match ser_get_buf_len()
	  len-or-error returns)
	* drivers/microsol-common.c: fix comm_receive() from int to size_t
	* drivers/microsol-common.c: save_ups_config(): fix casting of
	  configuration_packet[] entries to (unsigned char) from original
	  types
	* drivers/microsol-common.c: fix byte-sized maths of
	  bitstring_to_binary() and day counts to uint8_t
	* drivers/microsol-common.c: fix (and range-check) casting for memcpy
	* drivers/microsol-common.c: wrap some long comments
	* drivers/microsol-common.c: include main.h => config.h first
	* common/Makefile.am: limit the use of common.c symlinking from
	  srcdir to builddir only to cases when not BUILDING_IN_TREE
	* tools/nut-scanner/nutscan-init.c: comment that semaphore gets
	  re-initialized by nut-scanner.c program and why
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nutscan-init.c:
	  tools/nut-scanner/nutscan-init.c + nut-scan.h: hide "semaphore"
	  library variable
	* tools/nut-scanner/nut-scanner.c: #include "config.h" first
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-init.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/*.c: fix use of size_t max_threads(_scantype) vs
	  (unsigned int) in sem_init() args
	* tools/nut-scanner/nut-scan.h: fix declaration of
	  nutscan_semaphore(void)
	* drivers/snmp-ups.c, m4/nut_check_libnetsnmp.m4,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/scan_snmp.c:
	  nut_check_libnetsnmp.m4, nut-scanner.c, scan_snmp.c, snmp-ups.c:
	  transition from NETSNMP_DRAFT_BLUMENTHAL_AES_04 (that may be
	  not-defined so #if is invalid) to
	  NUT_HAVE_LIBNETSNMP_DRAFT_BLUMENTHAL_AES_04
	* ci_build.sh: in default-all-errors mode, avoid last-loop cleanup if
	  DO_CLEAN_CHECK==no
	* ci_build.sh: fix bogus expression for BUILDSTODO
	* ci_build.sh: only score *_clean_check as SUCCEEDED if they were not
	  skipped, and report a bit more

2021-11-30  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: load_mib2nut(): import tracing messages and
	  points from 42ITy/DMF fork
	* drivers/snmp-ups.c: load_mib2nut(): clarify the "trying the new
	  match_sysoid() method" message
	* drivers/snmp-ups.c: load_mib2nut(): fix upsdebugx() levels
	  verbosity to make more sense
	* drivers/snmp-ups.c: load_mib2nut(): reformat some debugs, use
	  __func__
	* drivers/snmp-ups.c: load_mib2nut(): report device name (section)
	  and host/IP in progress and errors

2021-11-28  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/nut_check_libpowerman.m4: if (lib)powerman.pc is missing, but
	  header is present, check -lpowerman directly
	* m4/nut_check_libpowerman.m4: they deliver an empty version string,
	  so we should not error out on that

2021-11-27  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/nut_check_libusb.m4: if libusb-config and libusb.pc are missing,
	  but header is present, check -lusb directly
	* m4/nut_check_libnetsnmp.m4: detect NET_SNMP_CONFIG with
	  AC_PATH_PROGS and/or configure option (and handle if it is missing)
	* docs/configure.txt: document --with-net-snmp-config configure
	  option better
	* docs/configure.txt: rephrase comments about --with-*-libs and
	  --with-*-include
	* docs/configure.txt, m4/nut_check_pkgconfig.m4:
	  m4/nut_check_pkgconfig.m4 + docs/configure.txt: detect
	  (dummy_)PKG_CONFIG with AC_PATH_PROGS and/or configure option (and
	  handle if it is missing)
	* m4/nut_check_libgd.m4: initialize empty CFLAGS LIBS LDFLAGS
	* m4/nut_check_libgd.m4: detect GDLIB_CONFIG with AC_PATH_PROGS
	  and/or configure option (and handle if it is missing)
	* docs/configure.txt, m4/nut_check_libusb.m4: m4/nut_check_libusb.m4
	  + docs/configure.txt: detect LIBUSB_CONFIG with AC_PATH_PROGS
	  and/or configure option (and handle if it is missing)
	* m4/nut_check_libpowerman.m4: consider have_PKG_CONFIG
	* m4/nut_check_libwrap.m4: *.m4: AC_LANG_PUSH before AC_LINK_IFELSE
	  and similar tests

2021-11-27  Jim Klimov <jim@jimklimov.com>

	* m4/ax_c___attribute__.m4, m4/nut_check_headers_windows.m4,
	  m4/nut_check_libnetsnmp.m4, m4/nut_func_getnameinfo_argtypes.m4,
	  m4/nut_type_socklen_t.m4: *.m4: AC_LANG_PUSH before
	  AC_COMPILE_IFELSE and similar tests
	* Jenkinsfile-dynamatrix: try to report toStringStageCountDump() in
	  ircNotify()
	* configure.ac: AC_LANG_PUSH before AC_COMPILE_IFELSE and similar
	  tests
	* clients/upsclient.c, clients/upslog.c, clients/upsmon.c,
	  clients/upsrw.c, clients/upssched.c, clients/upsset.c,
	  common/state.c, common/upsconf.c, docs/developers.txt,
	  docs/nut.dict, drivers/apcsmart-old.c, drivers/apcsmart.c,
	  drivers/apcupsd-ups.c, drivers/belkin.c, drivers/belkinunv.c,
	  drivers/bestups.c, drivers/clone-outlet.c, drivers/clone.c,
	  drivers/dstate.c, drivers/gamatronic.c, drivers/huawei-ups2000.c,
	  drivers/main.c, drivers/masterguard.c, drivers/mge-utalk.c,
	  drivers/mge-xml.c, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_bestups.c, drivers/nutdrv_qx_blazer-common.c,
	  drivers/nutdrv_qx_voltronic-qs-hex.c,
	  drivers/nutdrv_qx_voltronic-qs.c, drivers/nutdrv_qx_voltronic.c,
	  drivers/oneac.c, drivers/powercom.c, drivers/powerman-pdu.c,
	  drivers/powerp-txt.c, drivers/snmp-ups.c, drivers/tripplite_usb.c,
	  drivers/upscode2.c, drivers/victronups.c, server/conf.c,
	  server/netget.c, server/netlist.c, server/netset.c, server/user.c,
	  tests/cpputest.cpp, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_snmp.c: Replace strcmp() and strcasecmp()
	  use-cases for short fixed string args by strncmp() and
	  strncasecmp() respectively  Some compilers on some OSes complain
	  due to implem nuances. Updated docs/developers.txt to make note for
	  posterity.
	* drivers/microdowell.c: some more pragmatic ignorance for CLAMP()
	  macro uses (older clang-3.4 et al)

2021-11-26  Jim Klimov <jim@jimklimov.com>

	* tools/nut-scanner/scan_xml_http.c: fix dummy
	  nutscan_scan_xml_http_range() (WITHOUT_NEON) arg type for
	  useconds_t usec_timeout
	* drivers/libhid.c: fix debug-printing of byte-counts as size_t
	* drivers/microdowell.c: some more pragmatic ignorance for CLAMP()
	  macro uses
	* tools/nut-scanner/scan_nut.c: whitespace fix
	* tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: tools/nut-scanner/scan_*.c: fix
	  debug-printing of thread accounting as size_t

2021-11-25  xbgmsharp <xbgmsharp@gmail.com>

	* drivers/salicru-hid.c: Rename unmapped.* to experimental.* data
	  points Add untested instant commands

2021-11-25  Jim Klimov <jimklimov@gmail.com>

	* docs/FAQ.txt: Update FAQ.txt  Update rationale (reasonable
	  use-cases) for "clone" driver

2021-11-25  Jim Klimov <jimklimov+nut@gmail.com>

	* common/Makefile.am, configure.ac: configure.ac +
	  common/Makefile.am: detect if building in-tree and differentiate
	  the recipe involving common.c based on that
	* common/Makefile.am: let OpenBSD 6.4 make cope with common.c recipe
	* docs/config-prereqs.txt: add libusb1 for OpenBSD
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  concerns about OpenBSD 6.4 freeipmi vs. "-largp"

2021-11-25  Jim Klimov <jim@jimklimov.com>

	* configure.ac: typo fix for ABS_TOP_* determination
	* NEWS, docs/nut.dict: NEWS: added new salicru-hid subdriver in
	  usbhid-ups for NUT v2.7.5

2021-11-25  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/powerware-mib.c: Eaton SNMP: also publish ups.load for
	  3phase  Though there is output.Lx.power.percent, for 3phase, it's
	  desirable to also have the standard ups.load

2021-11-24  xbgmsharp <xbgmsharp@gmail.com>

	* drivers/salicru-hid.c: Update mapping

2021-11-23  Jim Klimov <jim@jimklimov.com>

	* docs/FAQ.txt: extend Q&A on "NUT proxying" with mention of "clone"
	  driver

2021-11-22  xbgmsharp <xbgmsharp@gmail.com>

	* data/driver.list.in, drivers/Makefile.am, drivers/salicru-hid.c,
	  drivers/salicru-hid.h, drivers/usbhid-ups.c,
	  scripts/upower/95-upower-hid.rules: Initial release for Salicru
	  driver
	* data/driver.list.in, drivers/Makefile.am, drivers/salicru-hid.c,
	  drivers/salicru-hid.h, drivers/usbhid-ups.c,
	  scripts/upower/95-upower-hid.rules: Initial release for Salicru
	  driver

2021-11-22  Yifeng Li <tomli@tomli.me>

	* drivers/huawei-ups2000.c: huawei-ups2000.c: rework logic for
	  "load.on".  Currently the driver prevents the user from executing
	  "load.on" when the UPS is already on, and reports a
	  STAT_INSTCMD_FAILED with error logs. We need to do this if the UPS
	  is in bypass mode, because the UPS would otherwise enter normal
	  mode - "load.on" is not supposed to do that. On the other hand,
	  executing "load.on" when the UPS is already in "normal-mode on" has
	  no effect, it's still a legal command and should not be rejected
	  arbitrarily, which can potentially confuse downstream applications
	  and users.  It also contains two misleading typos in the error
	  logs: (1) it incorrectly suggests "bypass.off" instead of
	  "bypass.stop", and (2) reports "failed: reason unknown." when the
	  reason is simply an already-on UPS.  This commit allows "load.on"
	  to execute when it's in normal mode and already on, and changes the
	  log messages from errors to warnings. Typos in the log messages are
	  also fixed. The "load.on" command is only rejected in bypass mode,
	  with error logs.  Finally, the logic for the off test is reworked
	  to improve readability. The original code checks whether the UPS is
	  on by testing the negative "not OFF" condition, which is not easy
	  to understand - the reader must have intimate knowledge on the code
	  to know its correctness. Namely, When the UPS power status is
	  updated, 1 of the 5 mutually exclusive flags, OL, OB, OL ECO,
	  BYPASS, or OFF is always set, thus the absence of the OFF flag
	  always reliably indicates an ON status. This commits converts the
	  single negative "not OFF" test to three positive tests for "OL",
	  "OB" and "OFF", with additional comments added on reachable and
	  unreachable conditions. Thus, previous uncertainty is eliminated.
	* docs/nut.dict: add model name "KRTS".
	* docs/man/huawei-ups2000.txt: huawei-ups2000.txt: update tested
	  models and user report suggestions.
	* docs/man/huawei-ups2000.txt: huawei-ups2000.txt: minor typo fixes

2021-11-22  Jim Klimov <jimklimov@gmail.com>

	* docs/FAQ.txt: Update docs/FAQ.txt  Add example of dummy-ups (relay
	  mode) configuration section  Co-authored-by: Helmut K. C. Tessarek
	  <tessarek@evermeet.cx>

2021-11-22  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.h: update mask for SU_TYPE_DAISY() and comments
	  for it and SU_DAISY
	* docs/FAQ.txt: update for interactions via github (issues, PRs, ...)
	* docs/FAQ.txt: update for use-cases of dummy-ups in relay mode

2021-11-22  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/mge-xml.c: Eaton XML/PDC: add External Battery Module count
	* drivers/mge-xml.c: Eaton XML/PDC: add External Battery Module count

2021-11-20  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  add a chapter on OpenBSD build agent setup
	* configure.ac: require at least autoconf-2.61 (macros are used that
	  are missing in 2.60 and before)
	* autogen.sh: comment that libtool is also needed
	* autogen.sh: comment about envs that want AUTOCONF_VERSION or
	  AUTOMAKE_VERSION
	* autogen.sh, configure.ac, scripts/augeas/.gitignore,
	  scripts/devd/Makefile.am, scripts/udev/.gitignore,
	  scripts/udev/Makefile.am: autogen.sh + configure.ac: try to support
	  building on systems without Python or Perl

2021-11-20  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: Make end of log useful for spellcheck failure handling

2021-11-18  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c, drivers/snmp-ups.h: drivers/snmp-ups.{c,h}:
	  typedef snmp_info_t::flags and define its PRI_SU_FLAGS format to
	  ease type changes later  Also adds a "default:" to case for
	  template flag handling (from FTY fork)

2021-11-17  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: su_find_strval(): mark
	  NUT_UNUSED_VARIABLE(oid2info) when not WITH_SNMP_LKP_FUN
	* drivers/eaton-pdu-marlin-helpers.c: include config.h first

2021-11-16  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups-helpers.c: reshuffle includes
	* drivers/snmp-ups.c: include main.h => common.h => config.h first
	* drivers/snmp-ups.c: fix strncmp() limits for "v1" and "v3" checks
	  (copy-pasting typo)
	* drivers/snmp-ups.c: mention in help that SNMP version may be "v3"
	* drivers/libusb1.c: fix devcount and devnum from ssize_t to size_t

2021-11-15  Jim Klimov <jim@jimklimov.com>

	* m4/nut_check_libusb.m4: Move "additional USB-related checks" from
	  configure.ac to m4/nut_check_libusb.m4
	* drivers/nutdrv_qx_masterguard.c: printf() assumes floating-point
	  numbers are doubles, satisfy its warnings
	* drivers/libusb1.c: drop extra "int i" definition
	* ci_build.sh: NUT_USB_VARIANT=<value> => --with-usb=libusb<value>
	  [libusb-1.0+0.1 branch]
	* ci_build.sh: NUT_USB_VARIANT=no => --without-usb explicitly
	* ci_build.sh: default-all-errors: report BUILDSTODO_INITIAL at the
	  end of log, and if non-zero BUILDSTODO remained unaccounted
	* ci_build.sh: report which SSL/USB variants will be looped
	* drivers/phoenixcontact_modbus.c: use a longer global var name for
	  modbus_ctx (nee ctx)
	* drivers/bcmxcp_ser.c, drivers/bcmxcp_ser.h,
	  tools/nut-scanner/scan_eaton_serial.c: drivers/bcmxcp_ser.{c,h} +
	  tools/nut-scanner/scan_eaton_serial.c: use longer global var name
	  (AUT => BCMXCP_AUTHCMD)
	* drivers/bestfortress.c: comment an analyzer-check complaint
	* drivers/bcmxcp_usb.c: avoid useless comparison (warning)
	* drivers/nutdrv_qx.c: only define "Compatibility layer between
	  libusb 0.1 and 1.0" if we build with QX_USB at all (no required
	  headers are in context otherwise)
	* ci_build.sh: BUILD_TYPE="default-all-errors": ensure BUILDSTODO
	  counts for SSL+USB are planned same as executed - and handle
	  explicit NUT_USB_VARIANTS=no
	* ci_build.sh: BUILD_TYPE="default-all-errors": ensure BUILDSTODO
	  counts for SSL+USB are planned same as executed
	* ci_build.sh: BUILD_TYPE="default-all-errors": ensure BUILDSTODO
	  counts are decremented when configuration failed
	* ci_build.sh: BUILD_TYPE="default-all-errors": between configure and
	  build, report the Configured NUT_USB_VARIANT
	* ci_build.sh: BUILD_TYPE="default-all-errors": between configure and
	  build, report the Configured NUT_SSL_VARIANT
	* ci_build.sh: BUILD_TYPE="default-all-errors": support looping over
	  NUT_USB_VARIANTS as well
	* drivers/libhid.c: HIDDumpTree(): mark that arg "hd" is not used in
	  SHUT_MODE
	* m4/nut_check_libusb.m4: the "additional USB-related checks" should
	  now manipulate "LIBS" not "LIBUSB_LIBS"
	* m4/nut_check_libusb.m4: comment on "additional USB-related checks"
	* m4/nut_check_libusb.m4: Move "additional USB-related checks" from
	  configure.ac to m4/nut_check_libusb.m4
	* drivers/nutdrv_qx.c: [libusb-1.0] Realign buffer casting to
	  (usb_ctrl_char) after merge from master
	* tools/nut-scanner/scan_usb.c: fix merge conflict [libusb-1.0+0.1]
	* m4/nut_check_libusb.m4: complete the merge from master to
	  libusb-1.0+0.1
	* ci_build.sh: NUT_USB_VARIANT=no => --without-usb explicitly
	* drivers/bcmxcp_usb.c: fix definition of curDevice (libusb-1.0)
	* ci_build.sh: default-all-errors: report BUILDSTODO_INITIAL at the
	  end of log, and if non-zero BUILDSTODO remained unaccounted
	* ci_build.sh: default-all-errors: report BUILDSTODO_INITIAL at the
	  end of log, and if non-zero BUILDSTODO remained unaccounted
	* ci_build.sh: report which SSL/USB variants will be looped
	* ci_build.sh: BUILD_TYPE="default-all-errors": between configure and
	  build, report the Configured NUT_SSL_VARIANT
	* ci_build.sh: BUILD_TYPE="default-all-errors": ensure BUILDSTODO
	  counts are decremented when configuration failed
	* drivers/bcmxcp_usb.c: avoid useless comparison (warning)
	* drivers/bestfortress.c: comment an analyzer-check complaint
	* drivers/bcmxcp_ser.c, drivers/bcmxcp_ser.h,
	  tools/nut-scanner/scan_eaton_serial.c: drivers/bcmxcp_ser.{c,h} +
	  tools/nut-scanner/scan_eaton_serial.c: use longer global var name
	  (AUT => BCMXCP_AUTHCMD)
	* drivers/phoenixcontact_modbus.c: use a longer global var name for
	  modbus_ctx (nee ctx)
	* drivers/phoenixcontact_modbus.c: use a longer global var name for
	  modbus_ctx (nee ctx)
	* drivers/bcmxcp_ser.c, drivers/bcmxcp_ser.h,
	  tools/nut-scanner/scan_eaton_serial.c: drivers/bcmxcp_ser.{c,h} +
	  tools/nut-scanner/scan_eaton_serial.c: use longer global var name
	  (AUT => BCMXCP_AUTHCMD)
	* drivers/bestfortress.c: comment an analyzer-check complaint
	* drivers/bcmxcp_usb.c: avoid useless comparison (warning)
	* drivers/nutdrv_qx.c: only define "Compatibility layer between
	  libusb 0.1 and 1.0" if we build with QX_USB at all (no required
	  headers are in context otherwise)
	* configure.ac: neuter "nut_usb_lib" if building --without-usb
	* ci_build.sh: BUILD_TYPE="default-all-errors": ensure BUILDSTODO
	  counts for SSL+USB are planned same as executed - and handle
	  explicit NUT_USB_VARIANTS=no
	* ci_build.sh: BUILD_TYPE="default-all-errors": ensure BUILDSTODO
	  counts for SSL+USB are planned same as executed
	* ci_build.sh: BUILD_TYPE="default-all-errors": ensure BUILDSTODO
	  counts are decremented when configuration failed
	* ci_build.sh: BUILD_TYPE="default-all-errors": between configure and
	  build, report the Configured NUT_USB_VARIANT
	* ci_build.sh: BUILD_TYPE="default-all-errors": between configure and
	  build, report the Configured NUT_SSL_VARIANT
	* ci_build.sh: BUILD_TYPE="default-all-errors": support looping over
	  NUT_USB_VARIANTS as well
	* m4/nut_check_libusb.m4: report a NOTICE if libusb-1.0 support was
	  detected, but another was chosen
	* drivers/libhid.c: HIDDumpTree(): mark that arg "hd" is not used in
	  SHUT_MODE
	* m4/nut_check_libusb.m4: the "additional USB-related checks" should
	  now manipulate "LIBS" not "LIBUSB_LIBS"
	* m4/nut_check_libusb.m4: comment on "additional USB-related checks"
	* configure.ac, m4/nut_check_libusb.m4: Move "additional USB-related
	  checks" from configure.ac to m4/nut_check_libusb.m4
	* configure.ac, docs/configure.txt, m4/nut_check_libusb.m4:
	  m4/nut_check_libusb.m4 et al: add support for
	  --with-libusb-version=(auto|0.1|1.0)
	* drivers/bcmxcp_usb.c: restore "ret" lost in merging
	* drivers/riello_usb.c: properly export variables shared between
	  driver subtypes (reapply to libusb-1.0 branch)
	* drivers/nutdrv_qx.c: add a bit more of "Compatibility layer between
	  libusb 0.1 and 1.0"
	* drivers/nutdrv_atcl_usb.c, drivers/nutdrv_qx.c,
	  drivers/richcomm_usb.c: [libusb-1.0] Realign use of
	  nut_usb_strerror() after merge from master
	* drivers/libusb1.c, drivers/nutdrv_qx.c: [libusb-1.0] Realign buffer
	  casting to (usb_ctrl_char) after merge from master

2021-11-15  François-Régis Degott <francoisregisdegott@eaton.com>

	* drivers/eaton-ats16-nm2-mib.c: eaton-ats16-nm2-mib.c: fix mul coef.
	  for ambient.temperature and humidity (#1173)  *
	  eaton-ats16-nm2-mib.c: fix mul coef. for ambient.temperature and
	  ambient.humidity  * Update eaton-ats16-nm2-mib.c  Co-authored-by:
	  Arnaud Quette <arnaud.quette@gmail.com>

2021-11-15  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/eaton-ats16-nm2-mib.c: Eaton: add support for EMP002 on
	  ATS16 NM2 with SNMP  This support is identical to what is in Eaton
	  Marlin and Powerware MIBs. Future improvements should consider
	  putting these bits in a common eaton-sensor-mib file, to avoid
	  multiple definition of the same MIB structure!  Imported from DMF
	  branch (with reductions for main trunk) from commit
	  40c883f42aede519fe716a6d26e7dff567996d75
	* drivers/eaton-pdu-marlin-mib.c, drivers/powerware-mib.c: Fix
	  regression on Eaton EMP002 temperature reading (SNMP)  Following
	  the recent addition of the "String reformating function"
	  (su_find_strval()), a regression appeared on a corner case: when
	  flagging a data with ST_FLAG_STRING, while the SNMP OID is an int,
	  and when there is a fun_vp2s() conversion function, a double
	  conversion is applied, resulting in no value published. This was
	  limited to one data (temperature.unit)

2021-11-13  Jim Klimov <jimklimov+nut@gmail.com>

	* drivers/snmp-ups.c: hide clang-3.4 warnings about str{n}cmp() args
	  into pragmas
	* m4/ax_c_pragmas.m4: detect general "-Warray-bounds" support
	* m4/ax_c_pragmas.m4: detect general "-Wtautological-compare"
	* m4/ax_c_pragmas.m4: detect "pragma clang diagnostic push/pop"
	  support (needed with older clang versions not on par with GCC)
	* drivers/snmp-ups-helpers.c: include "config.h" before any system
	  headers (such as time.h indirectly)
	* configure.ac: be sure to detect "time.h"
	* ci_build.sh: support a common DO_CLEAN_CHECK=no

2021-11-13  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: report if an snmp_info[] entry flag was not
	  defined (is 0)
	* drivers/snmp-ups.h: redefine bit-flags macros so they do not
	  overlap (and some helper-masking macros) [follow up on issue from
	  PR #1177]
	* drivers/snmp-ups-helpers.c: include a header, avoid a warning
	* UPGRADING, docs/nut.dict: NEWS: updated build against various
	  generations of Net-SNMP for NUT v2.7.5
	* docs/configure.txt, m4/nut_check_libnetsnmp.m4:
	  m4/nut_check_libnetsnmp.m4: allow --with-netsnmp-config(=yes) to
	  mean prefer_NET_SNMP_CONFIG=true
	* NEWS: updated build against various generations of FreeIPMI for NUT
	  v2.7.5
	* drivers/snmp-ups.c: replace strcmp("short string") with strncmp()
	  (clang-3.4 warns about array out of bounds)
	* drivers/bcmxcp_ser.c: resolve a "tautological compare" when
	  building on older agents
	* drivers/nut-ipmi.h, drivers/nut-ipmipsu.c,
	  drivers/nut-libfreeipmi.c: drivers/nut-libfreeipmi.c nut-ipmipsu.c
	  nut-ipmi.h: adjust input_voltage_range_t (args of
	  ipmi_fru_multirecord_power_supply_information() vs.
	  ipmi_fru_parse_multirecord_power_supply_information() in different
	  FreeIPMI releases) [issue #1175]
	* drivers/Makefile.am: disable quick-hack of
	  nut_ipmipsu_CFLAGS+="-Wno-pointer-sign" [issue #1175]
	* m4/nut_check_libusb.m4: consider have_PKG_CONFIG
	* m4/nut_check_libopenssl.m4: consider have_PKG_CONFIG
	* m4/nut_check_libnss.m4: consider have_PKG_CONFIG
	* m4/nut_check_libnetsnmp.m4: consider have_PKG_CONFIG
	* m4/nut_check_libneon.m4: consider have_PKG_CONFIG
	* m4/nut_check_libmodbus.m4: consider have_PKG_CONFIG
	* m4/nut_check_libgd.m4: consider have_PKG_CONFIG
	* m4/nut_check_libfreeipmi.m4: consider have_PKG_CONFIG
	* m4/nut_check_libavahi.m4: consider have_PKG_CONFIG
	* m4/nut_check_pkgconfig.m4: separate detection of support for
	  have_PKG_CONFIG vs have_PKG_CONFIG_MACROS
	* configure.ac: call PKG_CONFIG for systemd settings query only if we
	  have_PKG_CONFIG, and die if "yes" was required but query is not
	  possible
	* m4/nut_check_pkgconfig.m4: extend to consider PKG_CONFIG possibly
	  detected by autoconf
	* configure.ac, m4/nut_check_pkgconfig.m4: configure.ac: evict
	  NUT_CHECK_PKGCONFIG into m4/nut_check_pkgconfig.m4
	* clients/upsmon.c, drivers/mge-utalk.c, drivers/snmp-ups.c,
	  tools/nut-scanner/scan_snmp.c: clients/upsmon.c
	  tools/nut-scanner/scan_snmp.c drivers/snmp-ups.c mge-utalk.c: avoid
	  strcmp("") as the implementation may be invalid (reaches out of
	  one-element array for "")
	* m4/nut_check_libnetsnmp.m4: whitespace fix (indent if-clause
	  content)
	* ci_build.sh: update guessing SYS_PKG_CONFIG_PATH for
	  *openindiana*|*omnios*|*solaris*|*illumos*|*sunos*
	* ci_build.sh: for optional_maintainer_clean_check(), ignore
	  ".ci*.log*" files if present

2021-11-13  Dan Benton <dan@dogsbody.com>

	* data/driver.list.in: Add CyberPower RMCARD205 which is supported

2021-11-12  Jim Klimov <jim@jimklimov.com>

	* m4/nut_check_libnetsnmp.m4: support (and prefer) pkg-config info to
	  net-snmp-config script(s)
	* Jenkinsfile-dynamatrix: separate "distcheck-valgrind" from
	  "default-nodoc", to filter away "NUT_BUILD_CAPS=valgrind=no" agents
	* ci_build.sh: report which PWD failed a "git status" query
	* ci_build.sh: report if ".git" disappeared during *clean check
	  [issue #1167]

2021-11-11  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: avoid stringop-truncation warning
	* drivers/snmp-ups.h: fix remaining SU_* flag bits to (unsigned
	  long), to match snmp_info_t->flags type
	* drivers/snmp-ups.h: comment SU_* bit usage by bit-shifting macros
	* drivers/snmp-ups.h: wrap long comments, and detail where flag-field
	  bits come from
	* drivers/snmp-ups.h: comment typical use of SU_TYPE(t) macro
	* drivers/snmp-ups.h: fix SU_TYPE_DAISY(t) macro (had no arg)
	* drivers/snmp-ups.h: whitespace fixes
	* drivers/snmp-ups.h: comment SU_STATUS_NUM_ELEM as possibly obsolete
	* tools/nut-scanner/Makefile.am: rearrange lines to better match with
	  42ITy fork
	* NEWS, docs/nut.dict: NEWS: improved SNMPv3 Auth/Priv algo support,
	  and nut-scanner threadcount, for NUT v2.7.5

2021-11-10  Jim Klimov <jim@jimklimov.com>

	* drivers/Makefile.am: hotfix header (in)compatibility of different
	  IPMI versions
	* drivers/Makefile.am: hotfix header (in)compatibility of different
	  IPMI versions
	* drivers/Makefile.am: hotfix header (in)compatibility of different
	  IPMI versions
	* drivers/nutdrv_qx.c: hunnox_step is only used qith QX_USB
	* drivers/bcmxcp_usb.c, drivers/libusb.h, drivers/nutdrv_atcl_usb.c,
	  drivers/nutdrv_qx.c, drivers/richcomm_usb.c,
	  drivers/tripplite_usb.c: drivers/*usb*: align whitespace changes
	  with libusb-1.0 branch
	* drivers/Makefile.am: use LIBUSB_IMPL macro to align with libusb-1.0
	  branch
	* drivers/libusb.c: whitespace fixes and message fixes to align with
	  libusb-1.0 branch
	* drivers/libusb.c, drivers/libusb.h, drivers/powervar-hid.c,
	  drivers/usbhid-ups.c: drivers/libusb.{c,h} + powervar-hid.c +
	  usbhid-ups.c: whitespace fixes after PR #1044
	* docs/config-prereqs.txt: mention further I2C-related packages in
	  Debian/Ubuntu distros
	* ci_build.sh: in "default-all-errors" mode, report the start of
	  build variant and how many remain
	* Makefile.am, clients/Makefile.am, common/Makefile.am,
	  conf/Makefile.am, data/Makefile.am, data/html/Makefile.am,
	  docs/Makefile.am, docs/cables/Makefile.am, docs/man/Makefile.am,
	  drivers/Makefile.am, include/Makefile.am, lib/Makefile.am,
	  scripts/Makefile.am, scripts/Solaris/Makefile.am,
	  scripts/augeas/Makefile.am, scripts/devd/Makefile.am,
	  scripts/hotplug/Makefile.am, scripts/python/Makefile.am,
	  scripts/systemd/Makefile.am, scripts/udev/Makefile.am,
	  scripts/ufw/Makefile.am, scripts/upsdrvsvcctl/Makefile.am,
	  server/Makefile.am, tests/Makefile.am, tools/Makefile.am,
	  tools/nut-scanner/Makefile.am: */Makefile.am: ensure that `make
	  maintainer-clean` also removes .dirstamp files
	* .gitignore: remove a redundancy
	* ci_build.sh: in "default-all-errors" mode, ignore strange exit-code
	  from `expr` - if the maths result was "0"
	* ci_build.sh: in "default-all-errors" mode, ignore strange exit-code
	  from `expr`
	* ci_build.sh: in "default-all-errors" mode, do not distclean before
	  build (this just spends time to generate the Makefile to kill it)
	* ci_build.sh: in "default-all-errors" mode, report "SUCCEEDED
	  build(s)" after final optional_maintainer_clean_check() if that is
	  called
	* ci_build.sh: dumb down can_clean_check() to pass "set -e" shells
	* ci_build.sh: optional_*_clean_check() quickly skip if there is no
	  Makefile
	* ci_build.sh: in "default-all-errors" mode, count expected/remaining
	  BUILDSTODO and call optional_maintainer_clean_check() for the last
	  iteration and optional_dist_clean_check() for others
	* ci_build.sh: introduce can_clean_check() to not fail when we have
	  nothing to test against

2021-11-09  Jim Klimov <jimklimov+nut@gmail.com>

	* Makefile.am: first-shot "git-realclean-check" and targets to print
	  *CLEANFILES lists
	* ci_build.sh: introduce optional_dist_clean_check() to use e.g. in
	  "default-all-errors" case
	* ci_build.sh: in loop for "default-all-errors", report "build"
	  successes as such
	* ci_build.sh: skip optional_maintainer_clean_check() if there is no
	  .git [issue #1167]
	* configure.ac: limit the impact of linux_i2c absent libs when "auto"
	  mode was requested
	* ci_build.sh: start default build from a clean slate, and do not
	  REQUIRE to be able to build everything (do auto-detect)
	* tools/nut-scanner/Makefile.am, tests/Makefile.am: do not refer to
	  LINKED_SOURCE_FILES with extra paths

2021-11-09  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: consider SNMPv3 Auth/Priv algos detected by
	  configure script when reporting the usage (via addvar() help
	  messages) [issue #1169]
	* tools/nut-scanner/nut-scanner.c: consider SNMPv3 Auth/Priv algos
	  detected by configure script when reporting the usage [issue #1169]
	* tools/nut-scanner/scan_ipmi.c: comment the comment
	* tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/scan_xml_http.c + scan_snmp.c + scan_nut.c: ifdef
	  the references to max_threads_scantype
	* docs/ci-farm-lxc-setup.txt, docs/nut.dict:
	  docs/ci-farm-lxc-setup.txt: note about PTY definitions
	* docs/config-prereqs.txt: say a bit more about OSes with containers
	* docs/config-prereqs.txt: say a bit more about "General call to
	  Test" and mention "ci_build.sh"
	* docs/config-prereqs.txt, docs/nut.dict: docs/config-prereqs.txt:
	  revise pkgs available in Debian-like operating systems

2021-11-08  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: for CppUnit, also sanity-check
	  CPPUNIT_ASSERT_MESSAGE()

2021-11-08  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: use detected NUT_HAVE_LIBNETSNMP_usm* support
	  to define and use actual Priv or Auth types
	* tools/nut-scanner/scan_snmp.c: use detected
	  NUT_HAVE_LIBNETSNMP_usm* support to define and use actual Priv or
	  Auth types
	* m4/nut_check_libnetsnmp.m4: detect support of usmAES128PrivProtocol
	  in Net-SNMP we build against
	* m4/nut_check_libnetsnmp.m4: detect support of
	  (NETSNMP_DRAFT_BLUMENTHAL_AES_04) usmAES192PrivProtocol
	  usmAES256PrivProtocol in Net-SNMP we build against
	* m4/nut_check_libnetsnmp.m4: detect support of usmDESPrivProtocol
	  usmHMACMD5AuthProtocol usmHMACSHA1AuthProtocol in Net-SNMP we build
	  against
	* m4/nut_check_libnetsnmp.m4: detect support of
	  usmHMAC256SHA384AuthProtocol usmHMAC384SHA512AuthProtocol
	  usmHMAC192SHA256AuthProtocol in Net-SNMP we build against
	* tools/nut-scanner/scan_snmp.c: ifdef all references to
	  NETSNMP_DRAFT_BLUMENTHAL_AES_04 related code
	* tools/nut-scanner/nut-scanner.c, tools/nut-scanner/nutscan-init.c:
	  tools/nut-scanner/... : move init/destroy of threadcount_mutex from
	  nut-scanner.c to nutscan-init.c
	* tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/scan_eaton_serial.c + scan_nut.c + scan_snmp.c +
	  scan_xml_http.c: release global semaphores in final
	  protocol-scanner tread reaping
	* tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/scan_eaton_serial.c + scan_nut.c + scan_snmp.c +
	  scan_xml_http.c: report if we are waiting for semaphored threads to
	  complete
	* drivers/mge-hid.c: actively check and warn if we truncated the
	  string
	* drivers/gamatronic.c: actively check and warn if we truncated the
	  string
	* docs/nut.dict: update for recent NEWS
	* drivers/nutdrv_qx_masterguard.c: safely limit a strncpy() call
	* drivers/oneac.c: shield a potentially truncating snprintf() into a
	  small buffer
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRINGOP_TRUNCATION
	* drivers/mge-hid.c: shield a potentially truncating snprintf() into
	  a small buffer

2021-11-07  Jim Klimov <jimklimov@gmail.com>

	* drivers/snmp-ups.c: Update snmp-ups.c  Fix use of `char
	  su_scratch_buf[255]` (original static array moved to another file
	  in master branch), and bump `DRIVER_VERSION`
	* drivers/snmp-ups.c: Update snmp-ups.c  Use the common (and
	  sufficiently large for any runaway numeric madness)
	  `su_scratch_buf` instead of a local `char[6]` buffer.
	* drivers/snmp-ups.c: Update snmp-ups.c  A few small whitespace fixes
	* docs/man/huawei-ups2000.txt: Update huawei-ups2000.txt  Made the
	  `configure` example a bit friendlier for copy-pasting.

2021-11-07  Jim Klimov <jimklimov+nut@gmail.com>

	* clients/Makefile.am: depend on "dummy" recipe to re-evaluate
	  out-of-dir libs (so development iterations in them are reflected in
	  rebuilds)
	* drivers/Makefile.am: depend on "dummy" recipe to re-evaluate
	  out-of-dir libs (so development iterations in them are reflected in
	  rebuilds)
	* server/Makefile.am: depend on "dummy" recipe to re-evaluate
	  out-of-dir libs (so development iterations in them are reflected in
	  rebuilds)
	* tools/nut-scanner/Makefile.am: depend on "dummy" recipe to
	  re-evaluate out-of-dir libs (so development iterations in them are
	  reflected in rebuilds)
	* tests/Makefile.am: depend on "dummy" recipe to re-evaluate
	  out-of-dir libs (so development iterations in them are reflected in
	  rebuilds)
	* tests/Makefile.am: drop obsoleted comment
	* tests/nutclienttest.cpp: add test_strarr_alloc()  This may seem
	  trivial, but there are suspicions this allocation does not always
	  work (e.g. NUT issue #1126)
	* clients/nutclient.cpp: safety check in strarr_alloc(): returned
	  pointer should be not null
	* clients/nutclient.h: tests/nutclienttest.h: whitespace fixes
	  (indent chars)
	* tests/nutclienttest.cpp: whitespace fixes (wrap long lines for
	  maintainability)

2021-11-07  Jim Klimov <jim@jimklimov.com>

	* drivers/gamatronic.c: shield a potentially truncating snprintf()
	  into a small buffer
	* drivers/bcmxcp.c: shield a potentially dangerous snprintf() into a
	  small buffer as tested-safe
	* clients/upscmd.c: shield a potentially dangerous snprintf() into a
	  small buffer as tested-safe
	* clients/upsrw.c: shield a potentially dangerous snprintf() into a
	  small buffer as tested-safe
	* m4/ax_c_pragmas.m4: add
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_FORMAT_TRUNCATION
	* drivers/snmp-ups.c: load_mib2nut(): do not report "Unknown mibs
	  value" just if a device did not match the mapping [NUT issue #1141]
	* drivers/snmp-ups.c: refactor load_mib2nut() to not `strcmp(mib,
	  "auto")` many times
	* NEWS: added snmp-ups support for ondelay/offdelay for NUT-2.7.5
	* drivers/arduino-hid.c: normalize whitespace for NUT codebase
	* drivers/arduino-hid.c, drivers/arduino-hid.h:
	  drivers/arduino-hid.{c,h}: update (C) to arduino-hid support author
	* NEWS: added usbhid-ups new subdriver arduino-hid support for
	  NUT-2.7.5
	* NEWS: added USB HID support on interface number greater than 0 for
	  NUT-2.7.5
	* NEWS: added huawei-ups2000 support for NUT-2.7.5

2021-11-06  Jim Klimov <jim@jimklimov.com>

	* tests/.gitignore, tools/nut-scanner/.gitignore: GitIgnore
	  LINKED_SOURCES (follow-up to PR #1159)
	* .gitignore: GitIgnore .dirstamp in build trees
	* Makefile.am: move removal of dist tarballs and build packages from
	  "distclean" to "maintainer-clean"
	* tools/nut-scanner/Makefile.am: mark use of LINKED_SOURCE_FILES as
	  "nodist"
	* tests/Makefile.am: mark use of LINKED_SOURCE_FILES as "nodist"
	* Makefile.am: add a "make realclean" as alias to maintainer-clean
	* Makefile.am: typo fix MAINTAINERCLEAN_FILES => MAINTAINERCLEANFILES
	* ci_build.sh: there is no default "make realclean" implem in
	  autotools, fall back to "maintainer-clean" support for wipingg the
	  workspace
	* Makefile.am, clients/Makefile.am, common/Makefile.am,
	  conf/Makefile.am, data/Makefile.am, data/html/Makefile.am,
	  docs/Makefile.am, docs/cables/Makefile.am, docs/man/Makefile.am,
	  drivers/Makefile.am, include/Makefile.am, lib/Makefile.am,
	  scripts/Makefile.am, scripts/Solaris/Makefile.am,
	  scripts/augeas/Makefile.am, scripts/devd/Makefile.am,
	  scripts/hotplug/Makefile.am, scripts/python/Makefile.am,
	  scripts/systemd/Makefile.am, scripts/udev/Makefile.am,
	  scripts/ufw/Makefile.am, scripts/upsdrvsvcctl/Makefile.am,
	  server/Makefile.am, tests/Makefile.am, tools/Makefile.am,
	  tools/nut-scanner/Makefile.am: */Makefile.am: there is no default
	  "make realclean" implem in autotools, fall back to
	  "maintainer-clean" support for wipingg the workspace
	* Makefile.am, clients/Makefile.am, common/Makefile.am,
	  conf/Makefile.am, data/Makefile.am, data/html/Makefile.am,
	  docs/Makefile.am, docs/cables/Makefile.am, docs/man/Makefile.am,
	  drivers/Makefile.am, include/Makefile.am, lib/Makefile.am,
	  scripts/Makefile.am, scripts/Solaris/Makefile.am,
	  scripts/augeas/Makefile.am, scripts/devd/Makefile.am,
	  scripts/hotplug/Makefile.am, scripts/python/Makefile.am,
	  scripts/systemd/Makefile.am, scripts/udev/Makefile.am,
	  scripts/ufw/Makefile.am, scripts/upsdrvsvcctl/Makefile.am,
	  server/Makefile.am, tests/Makefile.am, tools/Makefile.am,
	  tools/nut-scanner/Makefile.am: */Makefile.am: reshuffle what we
	  remove as part of "make distclean" vs. "make realclean" (can be
	  remade only by autogen.sh)
	* Makefile.am: do not "distclean" away some more parts of "configure"
	  script ecosystem (leave that to "realclean")
	* tools/nut-scanner/Makefile.am: restore use of $(builddir) for
	  LINKED_SOURCE_FILES
	* tests/Makefile.am: restore use of $(builddir) for
	  LINKED_SOURCE_FILES
	* ci_build.sh: call optional_realclean_check() after more build
	  variants
	* tools/Makefile.am: distclean the helper scripts that can be re-made
	* ci_build.sh: change the cleanliness check from "distcheck" to
	  "realcheck" and factor into a method
	* Makefile.am: regenerate the helper needed for ChangeLog if cleaned
	  away
	* Makefile.am: delete the configure script and its components not in
	  a "make distclean" but in "make realclean"

2021-11-05  Jim Klimov <jim@jimklimov.com>

	* tools/nut-scanner/Makefile.am: use
	  BUILT_SOURCES=LINKED_SOURCE_FILES to avoid dist-ing temporary
	  symlinks as files
	* tests/Makefile.am: use BUILT_SOURCES=LINKED_SOURCE_FILES to avoid
	  dist-ing temporary symlinks as files
	* ci_build.sh: only call dpkg if present
	* ci_build.sh: configure_nut(): call ./autogen.sh before
	  CONFIGURE_SCRIPT if there is no configure script
	* tools/nut-scanner/Makefile.am: revise the magic of
	  LINKED_SOURCE_FILES for distcheck
	* tests/Makefile.am: revise the magic of LINKED_SOURCE_FILES for
	  distcheck
	* ci_build.sh: add a DO_DISTCHECK_CLEAN to make sure we clean
	  everything made, and no more (after any distcheck)
	* tools/nut-scanner/Makefile.am: revise the magic of
	  LINKED_SOURCE_FILES for distcheck
	* tests/Makefile.am: revise the magic of LINKED_SOURCE_FILES for
	  distcheck
	* tools/nut-scanner/Makefile.am: make sure to symlink sources into
	  $(builddir)/
	* tests/Makefile.am: make sure to symlink sources into $(builddir)/
	* tools/nut-scanner/Makefile.am: work around dmake bugs
	* tests/Makefile.am: work around dmake bugs
	* tools/nut-scanner/Makefile.am: quote pathnames, and force the
	  symlink (to overwrite older if any)
	* tests/Makefile.am: quote pathnames, and force the symlink (to
	  overwrite older if any)
	* Makefile.am: distclean-local: first find(), then rm() the findings
	  (find-recursion fails otherwise)
	* tools/nut-scanner/Makefile.am: symlink source used from another
	  directory into current builddir, do avoid external ".deps/" usage
	* tests/Makefile.am: symlink source used from another directory into
	  current builddir, do avoid external ".deps/" usage
	* Makefile.am, clients/Makefile.am, common/Makefile.am,
	  drivers/Makefile.am, server/Makefile.am, tests/Makefile.am,
	  tools/nut-scanner/Makefile.am: */Makefile.am: Do not clean ".deps"
	  in SUBDIRS of the main project
	* Makefile.am, clients/Makefile.am, common/Makefile.am,
	  conf/Makefile.am, data/Makefile.am, data/html/Makefile.am,
	  docs/Makefile.am, docs/cables/Makefile.am, docs/man/Makefile.am,
	  drivers/Makefile.am, include/Makefile.am, lib/Makefile.am,
	  scripts/Makefile.am, scripts/Solaris/Makefile.am,
	  scripts/augeas/Makefile.am, scripts/devd/Makefile.am,
	  scripts/hotplug/Makefile.am, scripts/python/Makefile.am,
	  scripts/systemd/Makefile.am, scripts/udev/Makefile.am,
	  scripts/ufw/Makefile.am, scripts/upsdrvsvcctl/Makefile.am,
	  server/Makefile.am, tests/Makefile.am, tools/Makefile.am,
	  tools/nut-scanner/Makefile.am: */Makefile.am: revise CLEANFILES and
	  DISTCLEANFILES (favored over clean-local target rules)

2021-11-05  Dim <dmitrijzukov@eaton.com>

	* drivers/snmp-ups.c, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_snmp.c: Added new auth methods to snmp

2021-11-04  Jim Klimov <jim@jimklimov.com>

	* tools/nut-scanner/Makefile.am: use libcommon.la as part of
	  libnutscan.(la|so)
	* tools/nut-scanner/nut-scanner.c: revise parsing of --thread via
	  strtol()  Inspired by 42ITy fork approach to similar issue
	* tools/nut-scanner/nut-scanner.c: rename "--jobs" to "--thread"
	  Inspired by 42ITy fork approach to similar issue
	* tools/nut-scanner/nut-scanner.c: refine sanity-checks for
	  nofile_limit.rlim_cur value range
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: tools/nut-scanner/nut-scanner.c
	  + scan_xml_http.c + scan_snmp.c + scan_nut.c + nut-scan.h: Add a
	  hard limit on netxml scanning thread count
	* configure.ac, tools/nut-scanner/nut-scanner.c:
	  tools/nut-scanner/nut-scanner.c + configure.ac: detect if
	  getrlimit() is usable
	* tools/nut-scanner/nut-scanner.c: constrain default or requested job
	  count with current `ulimit -n` (minus known overhead)
	* tools/nut-scanner/nut-scanner.c: whitespace fix
	* tools/nut-scanner/nut-scanner.c: wrap long line

2021-11-04  Jim Klimov <EvgenyKlimov@eaton.com>

	* tools/nut-scanner/Makefile.am: do not build common.c into
	  nut-scanner (avoid double-definition of nut_debug_level among other
	  things)
	* tools/nut-scanner/Makefile.am: fix rule for NUT_SCANNER_DEPS to be
	  sure
	* clients/Makefile.am, common/Makefile.am, drivers/Makefile.am,
	  server/Makefile.am, tests/Makefile.am,
	  tools/nut-scanner/Makefile.am: */Makefile.am: define dependencies
	  on out-of-dir *.la helper libs: use AM_MAKEFLAGS (follows-up to PR
	  #1151)
	* tools/nut-scanner/Makefile.am: fix rule for NUT_SCANNER_DEPS to be
	  sure
	* clients/Makefile.am, common/Makefile.am, drivers/Makefile.am,
	  server/Makefile.am, tests/Makefile.am,
	  tools/nut-scanner/Makefile.am: */Makefile.am: define dependencies
	  on out-of-dir *.la helper libs: use AM_MAKEFLAGS (follows-up to PR
	  #1151)

2021-11-03  Jim Klimov <jim@jimklimov.com>

	* tools/nut-scanner/scan_eaton_serial.c: limit thread count like in
	  scan_snmp.c
	* tools/nut-scanner/scan_nut.c: limit thread count like in
	  scan_snmp.c
	* tools/nut-scanner/scan_xml_http.c: define TRUE/FALSE
	* tools/nut-scanner/scan_xml_http.c: limit thread count like in
	  scan_snmp.c
	* tools/nut-scanner/scan_snmp.c: comment "#endif // HAVE_PTHREAD" to
	  navigate in code better
	* tools/nut-scanner/scan_snmp.c: only loop to free the thread_array
	  if any were allocated
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/scan_snmp.c:
	  tools/nut-scanner/nut-scan.h + scan_snmp.c: (C) header and some
	  cosmetic fixes
	* tools/nut-scanner/nut-scanner.c: bump default max_threads to not
	  lag with /24 subnets
	* configure.ac, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/nut-scanner.c: not all glibc versions
	  HAVE_PTHREAD_TRYJOIN
	* tests/.gitignore: GitIgnore test log and trace for "getvaluetest"

2021-11-03  Jim Klimov <EvgenyKlimov@eaton.com>

	* tools/nut-scanner/scan_snmp.c: only sleep after attempting
	  pthread_tryjoin_np() if nothing got cleaned away
	* tools/nut-scanner/scan_snmp.c: hide debug logging for thread
	  herding
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/scan_snmp.c:
	  tools/nut-scanner/scan_snmp.c: update comments and messages
	* tools/nut-scanner/scan_snmp.c: update log-tracing of pthread
	  herding
	* tools/nut-scanner/scan_snmp.c: move locking of total thread count
	  change when we add one
	* tools/nut-scanner/scan_snmp.c: limit the thread count for
	  parallelized scanning
	* tools/nut-scanner/nut-scanner.c: add a threadcount_mutex to use in
	  all children
	* tools/nut-scanner/scan_snmp.c: handle max_threads, curr_threads
	* tools/nut-scanner/nut-scanner.c: add support for -j N (--jobs=N)
	  option to limit simultaneous scanning threads
	* tools/nut-scanner/scan_snmp.c: comment a FIXME for limiting the
	  pthread count
	* tools/nut-scanner/nutscan-ip.c: nutscan_cidr_to_ip(): forbid
	  scanning whole Internet
	* tools/nut-scanner/nutscan-ip.c: tone down the debug-logging of CIDR
	  processing
	* tools/nut-scanner/nutscan-ip.c: only free cidr_tok after we are
	  done manipulating its memory buffer
	* tools/nut-scanner/nut-scanner.c, tools/nut-scanner/nutscan-ip.c:
	  nutscan-ip.c, nut-scanner.c: instrument the CIDR processing to
	  trace an error

2021-11-02  Jim Klimov <jim@jimklimov.com>

	* docs/documentation.txt, docs/man/dummy-ups.txt:
	  docs/documentation.txt + docs/man/dummy-ups.txt: refer to
	  `tools/nut-ddl-dump.sh` in the same manner (issue #1111)
	* docs/man/dummy-ups.txt: fix use of "link:" tag in asciidoc (issue
	  #1111) and slightly reword
	* docs/documentation.txt: fix use of "link:" tag in asciidoc (issue
	  #1111) and slightly reword
	* docs/nut-names.txt: fix use of "link:" tag in asciidoc (issue
	  #1111)
	* docs/developers.txt: fix use of "link:" tag in asciidoc (issue
	  #1111)

2021-11-01  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: give the caller a way to disable parallel builds with
	  PARMAKE_FLAGS=" " (space)
	* ci_build.sh: enable parallel builds for default build (one without
	  a BUILD_TYPE specified)
	* ci_build.sh: enable parallel builds for "distcheck" in default
	  builds, which should now pass well (after usual build and check
	  passed)
	* ci_build.sh: report chosen settings for parallel builds
	* configure.ac: test more proactively if valgrind can test things and
	  not crash by itself
	* ci_build.sh: enable parallel builds for "default-tgt:*" which
	  should now pass well
	* ci_build.sh: guess the available amount of parallelism for the
	  current system; consider load averages for GNU Make too
	* docs/Makefile.am, docs/man/Makefile.am: docs/(man/)Makefile.am:
	  move back to builddir all files for the built documents, not just
	  the target name
	* docs/Makefile.am, docs/man/Makefile.am: docs/(man/)Makefile.am:
	  before putting back the built documents, clean up the destination
	  if needed and make the workdir removable if needed (a2x can copy
	  system/EXTRA_DIST resources with their attrs)
	* ci_build.sh: update the heading comment

2021-10-31  Jim Klimov <jim@jimklimov.com>

	* docs/Makefile.am, docs/man/Makefile.am: docs/(man/)Makefile.am:
	  only delete target before build if it is a directory (chunked HTML)
	* docs/Makefile.am: update comment about destination dir for
	  asciidoc/a2x
	* docs/man/Makefile.am: Revert "docs/man/Makefile.am: tone down the
	  use of "touch" for multicomponent docs"  This reverts commit
	  0b9ac2500ddbc7bd11a639805d43cda9259bfb1f.
	* docs/Makefile.am: avoid potential for races where same document is
	  built several times (mentioned in different list variables)
	* docs/man/Makefile.am: avoid races where same document is built
	  several times (mentioned in different list variables)
	* docs/man/Makefile.am: Revert "docs/man/Makefile.am: avoid races
	  where same document is built several times (mentioned in different
	  list variables)"  This reverts commit
	  29ae5a8f6e5524d689ebaf2abdf508528288b010.
	* docs/man/Makefile.am: tag DOC-MAN-HTML visibly different from
	  DOC-HTML of the main docs dir
	* docs/man/Makefile.am: avoid races where same document is built
	  several times (mentioned in different list variables)
	* docs/man/Makefile.am: tone down the use of "touch" for
	  multicomponent docs
	* docs/.gitignore, docs/Makefile.am, docs/man/.gitignore,
	  docs/man/Makefile.am: docs/(man/)Makefile.am: fan out doc builds
	  into subdirectories, where we can, so parallel runs do not collide
	* docs/man/Makefile.am: whitespace fixes (drop some indentation)
	* ci_build.sh: support CI_REQUIRE_GOOD_GITIGNORE=false to bypass
	  fatal error on git status being not empty after build

2021-10-30  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: as developer aid, add "(all-)docs" target to try
	  building all types regardless of enablement by configure script;
	  also add "make man" support
	* tools/nut-scanner/Makefile.am: reference nut_version.h in a way
	  that does not offend "make dist(check)"
	* tools/nut-scanner/Makefile.am: reference some out-of-dir sources
	  via top_srcdir (not ../..)
	* clients/Makefile.am, drivers/Makefile.am, server/Makefile.am,
	  tests/Makefile.am, tools/nut-scanner/Makefile.am: */Makefile.am:
	  define dependencies on out-of-dir *.la helper libs, and reference
	  them via top_builddir (not ..)
	* common/Makefile.am: reference nut_version.h in a way that does not
	  offend "make dist(check)"
	* ci_build.sh: default "minimal" ritual should not spend half the
	  time building docs

2021-10-27  Jim Klimov <jimklimov@gmail.com>

	* drivers/snmp-ups.c: fix buffer size to possibly print max size_t

2021-10-26  Jim Klimov <jim@jimklimov.com>

	* drivers/hidparser.c: Parse_ReportDesc(): fix "max" to size_t and
	  "id" to uint8_t, to match struct fields
	* drivers/blazer_usb.c: fix cast of range-checked u_langid_fix
	* drivers/blazer_usb.c: fix cast of return types to size_t vs int
	* drivers/libhid.c: string_to_path(): range-check and cast converted
	  values for path->Node[]
	* drivers/libhid.c: hid_lookup_usage(): fix cast of usage_code for
	  printing and returning
	* drivers/libhid.c: string_to_path(): check for type overflow, and
	  cast
	* drivers/libhid.c: fix types for iterating vs rbuflen from int to
	  size_t
	* drivers/libhid.c, drivers/libhid.h: drivers/libhid.{c,h}: fix
	  interrupt_size from int to size_t
	* drivers/libhid.c: fix types for iterating vs rbuflen from int to
	  size_t
	* drivers/libhid.c, drivers/libhid.h: drivers/libhid.{c,h}: fix
	  max_report_size from int to size_t
	* drivers/libhid.c: file_report_buffer(): fix buflen from int to
	  size_t
	* drivers/hidtypes.h: change HIDDesc_t.replen[] from (array of) int
	  to size_t
	* drivers/nutdrv_qx_bestups.c: cast for bit math for qx_status()
	  result
	* drivers/nutdrv_qx_voltronic.c: cast for bit math for qx_status()
	  result, and line-wrap a long message
	* drivers/usbhid-ups.c: cast arg for upsdebug_hex() to size_t
	* drivers/nutdrv_qx_voltronic-qs-hex.c: cast arg for upsdebug_hex()
	  to size_t
	* drivers/libusb.c: libusb_open(): cast rdlen to unsigned to match
	  usb_control_msg() where it is safe to do so
	* drivers/libhid.h: drivers/libusb.h: change reportbuf_t.len[] from
	  (array of) int to size_t
	* drivers/hidparser.c, drivers/hidtypes.h: drivers/hidtypes.h +
	  hidparser.c: change HIDDesc_t.nitems from int to size_t
	* drivers/hidparser.c: cast int types to explicit conversions where
	  safe
	* drivers/snmp-ups.c, drivers/snmp-ups.h: drivers/snmp-ups.{c,h}: fix
	  SU_FLAG_* to (unsigned long) and their usage, to match
	  snmp_info_t->flags type
	* drivers/snmp-ups.c: decode_str(): range-check return of snprintf()
	* tests/getvaluetest.c: align test structure with field types in
	  HIDData_t
	* tests/getvaluetest.c: fix bufsize size_t type
	* tests/getvaluetest.c: mark static local methods as such
	* drivers/hidparser.c: for skipping botched LogMin/LogMax, also log a
	  message

2021-10-22  Jim Klimov <jim@jimklimov.com>

	* autogen.sh: surprise, not all systems have "dos2unix"
	* configure.ac: fix use of --with-docs
	* configure.ac: fix use of --with-valgrind

2021-10-21  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: currently constrain cppcheck phase(s) to
	  fightwarn-related branch/PR builds

2021-10-20  Stephan Blecher <_github@blecher.at>

	* drivers/hidparser.c

2021-10-20  Jim Klimov <jim@jimklimov.com>

	* .gitignore, Jenkinsfile-dynamatrix, Makefile.am, ci_build.sh,
	  configure.ac, docs/config-prereqs.txt, docs/nut.dict,
	  m4/nut_check_cppcheck.m4: Add recipe support for cppcheck analysis
	* ci_build.sh: let initial DO_DISTCHECK value be set by caller

2021-10-20  Arnaud Quette <arnaud.quette@gmail.com>

	* tools/nut-scanner/scan_snmp.c: Only try all OIDs if sysOID matching
	  failed

2021-10-19  Jim Klimov <jim@jimklimov.com>

	* drivers/nutdrv_qx_ablerex.c, drivers/nutdrv_qx_ablerex.h:
	  drivers/nutdrv_qx_ablerex.{c,h}: heading fixes -- name, descr, (C)
	* drivers/nutdrv_qx.c, drivers/nutdrv_qx_ablerex.c:
	  drivers/nutdrv_qx.c + nutdrv_qx_ablerex.c: common whitespace fixes
	* drivers/Makefile.am: restore bits lost with initial posting of PR
	  #1135
	* drivers/nutdrv_qx.c: update DRIVER_VERSION for added "ablerex"
	  support

2021-10-18  Ablerexsoftware <Ablerex.software@ablerex.com.tw>

	* drivers/Makefile.am, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_ablerex.c, drivers/nutdrv_qx_ablerex.h: Add
	  nutdrv_qx driver for Ablerex model PR#2

2021-10-16  Jim Klimov <jimklimov+nut@gmail.com>

	* ci_build.sh, docs/developers.txt: ci_build.sh: add
	  BUILD_TYPE=fightwarn(-clang|-gcc) for presets with developer aid
	  Also updated docs/developers.txt with example and description

2021-10-16  Jim Klimov <jim@jimklimov.com>

	* NEWS, UPGRADING, docs/nut.dict: UPGRADING: notice that upsdebugx()
	  et al became macros in NUT-2.7.5
	* NEWS: another expected point for release after 2.7.5

2021-10-15  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: report Build host settings

2021-10-14  Jim Klimov <jim@jimklimov.com>

	* drivers/Makefile.am, drivers/snmp-ups-helpers.c,
	  drivers/snmp-ups.c, drivers/snmp-ups.h: Separate source files of
	  snmp-ups.c (driver core) and snmp-ups-helpers.c (shared mapping
	  tables and funcs) (#1134)  * drivers/Makefile.am: bring some order
	  into snmp_ups_SOURCES list  * drivers/snmp-ups.h: update (C)
	  heading  * drivers/snmp-ups.h: comment that su_find*() are related
	  to certain info_lkp_t fields  * drivers/snmp-ups.c: extract
	  snmp-ups-helpers.c that can be built independently  *
	  drivers/snmp-ups.h: mark the range of data points related to
	  Subdrivers shared helpers functions

2021-10-13  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: su_find_strval() should consider #if
	  WITH_SNMP_LKP_FUN

2021-10-12  Jim Klimov <jim@jimklimov.com>

	* tools/nut-scanner/nutscan-ip.c: safety-check and cast use of small
	  mask_byte values
	* drivers/powerware-mib.c, drivers/snmp-ups.c, drivers/snmp-ups.h:
	  drivers/snmp-ups.{h,c} + powerware-mib.c: reference date converter
	  by macro name instead of magic number
	* drivers/snmp-ups.c, drivers/snmp-ups.h: drivers/snmp-ups.{h,c}:
	  rename the fun/nuf mappings to fun_vp2s/nuf_s2l to match the DMF
	  codebase and ease eventual backports
	* drivers/snmp-ups.h: comment the fun/nuf mapping and their relation
	  to su_find_*() methods
	* drivers/snmp-ups.c: clarify that we pass a "long*" arg to
	  su_find_infoval()
	* drivers/snmp-ups.c: typo fix
	* drivers/snmp-ups.c: clarify in decode_str() that we pass a "long*"
	  arg to su_find_infoval()
	* drivers/snmp-ups.c, drivers/snmp-ups.h: drivers/snmp-ups.{c,h}:
	  rearrange braces, blank lines and some comments to match the
	  formatting fixes in DMF branch (and to simplify eventual backport)
	* drivers/snmp-ups.c: rearrange mib2nut[] in alphabetic order (except
	  *ietf tables that go last) and reference mib.c sources
	* tools/nut-scanner/scan_snmp.c: fix whitespace (indent)
	* Jenkinsfile-dynamatrix: fix regex pattern for
	  dynacfgPipeline.appliesToChangedFilesRegex_FILES_PY
	* Jenkinsfile-dynamatrix: parameterize dynacfgPipeline.axisCombos*
	  and excludeCombos_DEFAULT_* for repetitive settings
	* Jenkinsfile-dynamatrix: parameterize
	  dynacfgPipeline.branchStableRegex
	* docs/ci-farm-lxc-setup.txt: extend sample capability labels with
	  PYTHON variants
	* Jenkinsfile-dynamatrix: update for Python-version build scenarios
	* Jenkinsfile-dynamatrix: add
	  dynacfgPipeline.appliesToChangedFilesRegex_FILES_PY for future
	  handling
	* Jenkinsfile-dynamatrix: update
	  dynacfgPipeline.appliesToChangedFilesRegex_FILES_RECIPE to consider
	  changes of autogen.sh
	* tools/nut-scanner/nutscan-serial.c: fix whitespace style
	* tools/nut-scanner/nutscan-ip.c: fix whitespace style

2021-10-11  Jim Klimov <jim@jimklimov.com>

	* tools/nut-scanner/nutscan-device.c: fix whitespace style
	* tools/nut-scanner/scan_snmp.c: fix whitespace style
	* tools/nut-scanner/scan_avahi.c: fix whitespace style
	* tools/nut-scanner/scan_ipmi.c: fix whitespace style
	* tools/nut-scanner/nutscan-serial.c: fix whitespace style
	* tools/nut-scanner/nutscan-ip.c: fix whitespace style
	* tools/nut-scanner/scan_xml_http.c: fix whitespace style
	* tools/nut-scanner/scan_eaton_serial.c: fix whitespace style
	* tools/nut-scanner/nutscan-device.h: fix whitespace style
	* tools/nut-scanner/scan_usb.c: fix whitespace style
	* tools/nut-scanner/scan_nut.c: fix whitespace style
	* tools/nut-snmpinfo.py.in: fix whitespace style of generated header
	* tools/nut-snmpinfo.py.in: fix heading of generated header
	* docs/Makefile.am, docs/man/Makefile.am: docs{,/man}/Makefile.am:
	  quiesce docs-generating targets by default to just state what they
	  make
	* docs/nut.dict: Update spellchecker dict

2021-10-09  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: add support for CI agents setting
	  NUT_BUILD_CAPS=valgrind=no
	* Makefile.am: `make spellcheck` from top dir should be quieter
	  (fallout from touchfiles)
	* docs/ci-farm-lxc-setup.txt: stress to `systemctl restart lxc-net`
	  after edits of /etc/lxc/dnsmasq-hosts.conf
	* docs/ci-farm-lxc-setup.txt, docs/nut.dict:
	  docs/ci-farm-lxc-setup.txt: stress that for CI_WRAP_SH method, the
	  Prefix Start Agent Commandshould not pollute stderr/stdout
	* Jenkinsfile-dynamatrix: report more details about the build host
	  when we "Inspect initial envvars"

2021-10-08  Jim Klimov <jim@jimklimov.com>

	* scripts/subdriver/gen-snmp-subdriver.sh: gen-snmp-subdriver.sh:
	  deprecate "which" in favor of "command -v"
	* ci_build.sh: deprecate "which" in favor of "command -v"

2021-10-07  Jim Klimov <jim@jimklimov.com>

	* m4/nut_check_python.m4: export PYTHON(2,3) envvars for other
	  scripts called in the build

2021-10-05  Jim Klimov <jimklimov@gmail.com>

	* autogen.sh: suggest CRLF fixes for the workspace (e.g. if checked
	  out on Windows)  This falls a bit short of enforcing with
	  .gitattributes which may or may not interfere with platform-native
	  editors and other tools.

2021-10-05  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: more AC_CHECK_HEADERS_ONCE
	* ci_build.sh: for default mode (no BUILD_TYPE) enable cgi and dev
	  files (no=>auto) and do not require serial drivers (yes=>auto)
	* m4/nut_type_socklen_t.m4: fix detection on windows  Probably
	  practical codebase should also account for other arg types, e.g.
	  "SOCKET" that is not even exported into a macro so far.
	* ci_build.sh: report CI_OS_NAME detection issues more clearly  It is
	  not helpful to read just this: Could not recognize ... from ''-''

2021-10-05  Jim Klimov <jim@jimklimov.com>

	* docs/nut.dict: Update spellchecker
	* NEWS: added FTTx support and other genericups improvenets for
	  NUT-2.7.5

2021-10-04  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/ci-farm-lxc-setup.txt, docs/nut.dict:
	  docs/ci-farm-lxc-setup.txt: recommend a unique Remote root
	  directory per agent
	* docs/config-prereqs.txt: Debianish systems tend to deliver g++ in a
	  separate package from gcc
	* docs/ci-farm-lxc-setup.txt, docs/nut.dict:
	  docs/ci-farm-lxc-setup.txt: add a chapter on Jenkins Build Agent
	  setup for the containers

2021-10-04  Jim Klimov <jim@jimklimov.com>

	* drivers/apcupsd-ups.c: process(): fix int types
	* drivers/apcupsd-ups.c: upsdrv_initups(): fix type of port
	* drivers/nutdrv_qx.h: define QX_FLAG_* macros as typed numbers (UL)
	  to match item_t->qxflags
	* drivers/powercom-hid.c: range-check and cast uint16_t values for
	  ups delays
	* drivers/nutdrv_atcl_usb.c: align return type of
	  usb_interrupt_read() and our upsdebug_hex() args
	* drivers/upscode2.c: align types of two statuses
	* drivers/upscode2.c: fix useconds_t output_pace_usec
	* drivers/upscode2.c: fix speed_t baud var
	* drivers/upscode2.c: fix ssize_t ret for ser*() routines
	* drivers/powerp-txt.c: fix ssize_t ret for ser*() routines
	* drivers/powerp-bin.c: fix ssize_t ret for ser*() routines, and cmd
	  len
	* drivers/powerpanel.h: adjust powerpanel subdriver_t funcptr type
	  for initups()
	* drivers/ivtscd.c: fix ssize_t for ivt_status() and ser_*() involved
	* drivers/riello_ser.c: riello_instcmd(): fix int type of delay vs
	  atoi()
	* drivers/riello_ser.c: fix ssize_t ret for read() routines
	* drivers/riello_usb.c: ussleep(): fix useconds_t type
	* drivers/riello_usb.c: riello_instcmd(): fix int type of delay vs
	  atoi()
	* drivers/riello_usb.c: Get_USB_Packet(): fix int type of size
	* drivers/riello.c: riello_parse_rc(): cast uint8_t into char
	* drivers/riello.c: riello_prepare*(): cast delay%256 into uint8_t
	* drivers/riello.c: riello_parse_sentr(): cast pom maths into
	  uint16_t explicitly... range-check missing though
	* drivers/riello.c: riello_parse_sentr(): cast uint8_t => char to
	  construct Version byte by byte
	* drivers/riello.c: riello_parse_gn(): range-check and cast the
	  NomPowerKVA / NomPowerKW
	* drivers/riello.c: riello_calc_CRC(): clarify and cast the bitness
	  magic as needed
	* drivers/powercom.c: fix int type of model vars to match
	  OPTImodels/BNTmodels/KINmodels/IMPmodels arrays
	* drivers/powercom.c: avoid casting via wrong int type for termios
	  fields
	* drivers/powercom.c, drivers/powercom.h: drivers/powercom.{c,h}:
	  align int size for delay (min, sec) and ser_send_char() sending a
	  char
	* drivers/tripplite.c: fix casting of unsigned delays from atoi()
	* drivers/tripplite.c: fix casting of ints in send_cmd()
	* drivers/tripplitesu.c: fix casting of ints into unsigned min/max
	  high/low transfer values
	* drivers/nutdrv_qx_masterguard.c: hide warnings for intentional
	  variable format string use
	* drivers/nutdrv_qx_masterguard.c: avoid a few potential
	  uninitialized uses
	* drivers/nutdrv_qx_masterguard.c: fix a case of shadowed vars in a
	  clause
	* drivers/nutdrv_qx_masterguard.c: declare local vars and funcs as
	  static
	* drivers/netxml-ups.c: fix casting ssize_t value up to size_t for
	  ne_buffer_append() args
	* drivers/netxml-ups.c: fix int type of port for ne_sock_connect()
	  args
	* drivers/nut-libfreeipmi.c: range-check and cast returned
	  ipmi_dev->sensors_count
	* drivers/nut-libfreeipmi.c: libfreeipmi_get_sensors_info(): we check
	  that sdr_record_len is not negative, so can cast to (uint)
	* drivers/nut-libfreeipmi.c: libfreeipmi_get_board_info():
	  range-check and cast mfg_date_time
	* drivers/nut-libfreeipmi.c: libfreeipmi_get_psu_info(): range-check
	  and cast libfreeipmi method arguments which are ints
	* drivers/nut-libfreeipmi.c: libfreeipmi_get_psu_info(): range-check
	  and cast libfreeipmi method arguments which are uint8_t
	* drivers/nut-libfreeipmi.c: nut_ipmi_open(): range-check and cast
	  libfreeipmi method arguments which are uint8_t
	* conf/Makefile.am, docs/man/Makefile.am: avoid prerequisites on
	  suffix rules
	* drivers/apc-mib.c: bump APCC_MIB_VERSION for PR #1113
	* docs/man/genericups.txt, drivers/genericups.c: genericups:
	  officially alias "NULL" and "none" setting keywords
	* Jenkinsfile-dynamatrix: extend QEMU build scenarios to
	  "ssh-qemu-nut-builder" agents, and to iterate "COMPILER" toolkits
	  for cross-check on same platform

2021-10-03  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/nut.dict: Update spellchecker
	* docs/ci-farm-lxc-setup.txt: document making a self-login ssh key
	  for abuild
	* docs/ci-farm-lxc-setup.txt: document allowing container SSH server
	  to accept envvars from client

2021-10-03  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: Typo fix: remove extra unstashCleanSrc()
	  for ci_build.sh preparations
	* Jenkinsfile-dynamatrix: allow limited use of QEMU containers as
	  build agents (slow workers => few combos)

2021-10-02  Jim Klimov <jimklimov+nut@gmail.com>

	* configure.ac: test if valgrind is actually usable on build/check
	  ssytem
	* docs/ci-farm-lxc-setup.txt: fix extraction of hosts-map data
	* docs/ci-farm-lxc-setup.txt: make note of lxc-create for other
	  distros
	* docs/ci-farm-lxc-setup.txt: add git to early starter-kit of
	  packages

2021-10-02  Jim Klimov <jim@jimklimov.com>

	* configure.ac: quiesce the check for usable valgrind binary
	* docs/nut.dict: Update spellchecker
	* configure.ac: adapt warnings level (auto, minimal) for GCC with
	  c89/c90/ansi requested builds
	* tests/getvaluetest.c: fix declaration of variables in code body,
	  and type of sizeof-derived iterator
	* tests/getvaluetest.c: normalize whitespace to NUT style
	* tests/getvaluetest.c: add (C) and descriptive heading

2021-09-30  Jim Klimov <jimklimov+nut@gmail.com>

	* .lgtm.yml: drop redundant lines
	* autogen.sh: whitespace fix
	* autogen.sh, configure.ac, scripts/systemd/Makefile.am:
	  nut-common.tmpfiles.in: fix systemd magic vs autoconf magic
	  Follows up from PR #1037 for issue #1030 to let the trick work for
	  distcheck and similar out-of-tree builds.

2021-09-30  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix, docs/developers.txt: Jenkinsfile-dynamatrix
	  + developers.txt: for "GNU C89 standard builds with fatal
	  warnings", only run with a `fightwarn.*89.*` regex branch name; do
	  not pollute logs and analysis of "usual fightwarn" builds
	* Jenkinsfile-dynamatrix: for "GNU C standard builds with non-fatal
	  warnings, without distcheck and docs (must pass)" slowBuild
	  scenario, start with a "gnu89/gnu++98" non-regression variant
	* Jenkinsfile-dynamatrix: reword some slowBuild filter config
	  descriptions and comments
	* docs/developers.txt, docs/nut.dict: docs/developers.txt: extend the
	  description of NUT CI setup  Clarification of adaptive jobs,
	  running different sets of scenarios, and how to reproduce a failed
	  test case locally.  Also updated spellchecker dictionary.
	* docs/developers.txt: stress likely incompatibility with stricter
	  C89/GNU89/ANSI-C standard, so C99 (GNU99) is the baseline
	* Jenkinsfile-dynamatrix: rearrange for readability (line-split
	  allowedFailure and excludeCombos blocks that have many combos
	  inside)

2021-09-28  Jim Klimov <jim@jimklimov.com>

	* drivers/microdowell.c: shuffle include-file order
	* drivers/microdowell.c: instcmd(): casting and (pragma-hushed) range
	  checks for "delay"
	* drivers/solis.c: convert_days(): limit the range for safe casting
	  to size_t for memcpy()
	* drivers/rhino.c: align int types in send_command()
	* drivers/microsol-common.c, drivers/microsol-common.h:
	  drivers/microsol-common.{c,h}: mark local variables as static;
	  expose a few reasonable ones as extern
	* drivers/microdowell.c, drivers/microdowell.h:
	  drivers/microdowell.{c,h}: fix size_t lengths and uint16_t/uint32_t
	  status bitmasks
	* drivers/phoenixcontact_modbus.c: declare upsdrv_shutdown() as
	  noreturn
	* drivers/phoenixcontact_modbus.c: declare file-local variables
	  static
	* drivers/hidparser.c: avoid shadowed local variables in HIDParse()
	* drivers/hidparser.c: fix Value cast in FormatValue()
	* drivers/usbhid-ups.c: fix status_mask to unsigned int for STATUS()
	  and bitmask maths
	* drivers/usbhid-ups.c: fix parsing of interrupt_size from args, and
	  error out on invalid inputs
	* drivers/nutdrv_siemens_sitop.c: fix counters to unsigned int
	* drivers/mge-hid.c, drivers/usbhid-ups.c, drivers/usbhid-ups.h:
	  drivers/usbhid-ups.{c,h} + mge-hid.c: fix ups_status from int to
	  "unsigned" to match the STATUS() macro and bitmask maths
	* tools/nut-scanner/scan_snmp.c: fix type for snmp_sess.timeout
	  assignment
	* drivers/microsol-apc.h: align type of NOMINAL_POWER[] to int, like
	  nominal_power var in microsol-common.h
	* drivers/oneac.c: fix buf sizes to size_t
	* drivers/main.c, drivers/main.h, drivers/mge-utalk.c,
	  drivers/nutdrv_siemens_sitop.c, drivers/usbhid-ups.c:
	  drivers/main.{c,h} et al: fix poll_interval to be time_t like the
	  time() it has maths with
	* drivers/main.c: allow only positive pollinterval settings (avoid
	  DoS by crazy loop)
	* drivers/main.c: report and fail with invalid pollinterval settings
	* drivers/serial.c: after some investigation of standards, we may
	  cast useconds_t=>suseconds_t
	* server/netset.c: log tracking_disable() result to find a use for it
	  (warning fix)
	* drivers/richcomm_usb.c: execute_and_retrieve_query(): fix int
	  casting and add diags pragmas for range checks
	* drivers/bcmxcp_usb.c: get_answer(): fix int casting for tail; fix
	  redundant comparison
	* drivers/bestfortress.c: simplify usleep(d_usec) to no casting
	* drivers/belkin.c: comment why casting usleep(cnt) is okay
	* drivers/microdowell.h: normalize whitespace within the file
	* drivers/microsol-apc.h: whitespace fix
	* .gitignore: GitIgnore the tmp/ subdirectory used by CI builds
	* .gitignore: GitIgnore Python precompiled files

2021-09-27  Jim Klimov <jim@jimklimov.com>

	* clients/upsclient.c, common/common.c, docs/new-drivers.txt,
	  drivers/serial.c, drivers/serial.h, include/common.h:
	  include/common.h, drivers/serial.{c,h}, docs/new-drivers.txt,
	  common/common.c, clients/upsclient.c: fix d_sec long => time_t to
	  match timeval struct fields
	* include/common.h, common/common.c, clients/upsclient.c: fix
	  select_read()/select_write(): long d_usec => suseconds_t
	* docs/nut.dict: update for new-drivers.txt revision
	* docs/new-drivers.txt: align USB-common structure and method
	  signature descriptions with current drivers/*usb*.h
	* docs/man/upscli_readline.txt, docs/man/upscli_sendline.txt:
	  docs/man/upscli_readline.txt + upscli_sendline.txt: update method
	  arguments to match code (timeout unsigned int => const long)
	* docs/man/upscli_list_next.txt, docs/man/upscli_list_start.txt:
	  docs/man/upscli_list_start.txt + upscli_list_next.txt: update
	  method arguments to match code (numa/numq unsigned int => size_t)
	* configure.ac: split generation of "data" files vs. "scripts" from
	  *.in templates
	* configure.ac: Update python scripts to be generated by configure
	  and using the detected PYTHON value
	* clients/nutclient.h: whitespace typo fix
	* docs/developers.txt: fix reference to Fosshost to be an URL
	* .lgtm.yml: Add .lgtm.yml to specify search for python template
	  files  * Index *.py.in + scripts/python/app/NUT-Monitor.in * Do not
	  consider them templates to ignore * Also turn off the FIXME alerts,
	  NUT has a lot of those so far
	* NEWS: updated the python 2+3 compatibility notice
	* Makefile.am: call the generated gitlog2changelog.py from correct
	  path
	* scripts/augeas/Makefile.am, tools/Makefile.am: Fix "dist" targets
	  to call templates gen-nutupsconf-aug.py.in and nut-snmpinfo.py.in
	  that they have
	* scripts/python/module/PyNUT.py.in,
	  scripts/python/module/test_nutclient.py.in:
	  scripts/python/module/PyNUT.py.in: update syntax for Python 3 (also
	  ok for 2.7)
	* .gitignore: GitIgnore possible leftovers from interrupted configure
	  script run
	* scripts/Solaris/.gitignore, scripts/augeas/.gitignore,
	  scripts/python/app/.gitignore, scripts/python/module/.gitignore,
	  tools/.gitignore: GitIgnore generated python scripts
	* scripts/augeas/Makefile.am: comment where gen-nutupsconf-aug.py
	  comes from
	* autogen.sh: simplify call of gen-nutupsconf-aug.py.in in the subdir
	* autogen.sh: use gen-nutupsconf-aug.py.in with the $PYTHON
	  interpreter
	* ci_build.sh: pass $PYTHON envvar -t configure --with-python=... arg
	* configure.ac: split generation of "data" files vs. "scripts" from
	  *.in templates
	* configure.ac, scripts/Solaris/Makefile.am,
	  scripts/Solaris/{precheck.py => precheck.py.in},
	  scripts/augeas/Makefile.am, .../{gen-nutupsconf-aug.py =>
	  gen-nutupsconf-aug.py.in}, scripts/python/Makefile.am,
	  scripts/python/app/{NUT-Monitor => NUT-Monitor.in},
	  scripts/python/module/{PyNUT.py => PyNUT.py.in},
	  .../module/{test_nutclient.py => test_nutclient.py.in},
	  tools/Makefile.am, tools/{gitlog2changelog.py =>
	  gitlog2changelog.py.in}, tools/{nut-snmpinfo.py =>
	  nut-snmpinfo.py.in}: Update python scripts to be generated by
	  configure and using the detected PYTHON value
	* configure.ac, m4/nut_check_python.m4: configure.ac: detect PYTHON,
	  PYTHON2, PYTHON3 implementations in the build environment
	* autogen.sh: find various python versions if not specified by
	  $PYTHON
	* clients/nutclient.h: whitespace typo fix
	* docs/developers.txt: fix reference to Fosshost to be an URL
	* NEWS: expect a few more milestones for 2.7.6 (or later) release
	* UPGRADING: mention protocol changes due to new TRACKING ability
	* NEWS, UPGRADING: NEWS + UPGRADING: Warn about API changes due to
	  fightwarn

2021-09-26  Mark Dietzer <git@doridian.net>

	* drivers/apc-mib.c: Add active power and apparent power from APC
	  MIBs for single-phase UPS devices

2021-09-26  Jim Klimov <jim@jimklimov.com>

	* drivers/upsdrvctl.c: fix data types for alarm() and sleep()
	* drivers/mge-utalk.c: fix int casting to snprintf() (size_t/ssize_t)
	* drivers/mge-utalk.c: fix int casting to ser_get*()/ser_send_*()
	  (size_t/ssize_t)
	* drivers/metasys.c: fix int casting to ser_get*()/ser_send_*()
	  (size_t/ssize_t)
	* drivers/liebert-esp2.c: fix int casting to ser_get*()
	  (size_t/ssize_t)
	* drivers/gamatronic.c: fix int casting to ser_get*()
	  (size_t/ssize_t) and unify naming of msg(_)len
	* drivers/bestups.c: fix int casting to ser_get*() (size_t/ssize_t)
	* drivers/bestuferrups.c: fix int casting to ser_get*()
	  (size_t/ssize_t)
	* drivers/bestfortress.c: fix int casting to ser_get*()
	  (size_t/ssize_t)
	* drivers/bestfcom.c: fix int casting to ser_get*() (size_t/ssize_t)
	* drivers/belkinunv.c: fix int casting to ser_get*(), read() and
	  write() (size_t/ssize_t)
	* drivers/belkin.c: fix int casting to ser_get*() (size_t/ssize_t)
	* drivers/al175.c: fix raw_data_t::buf_size and io_head_t::addr,len
	  to size_t
	* drivers/al175.c: fix int casting to ser_get*() (size_t/ssize_t)
	* drivers/dstate.c: augment range check when using size_t as int
	* drivers/dstate.c: fix int casting to read() and write(), add range
	  checks for bytes written (size_t/ssize_t)
	* Jenkinsfile-dynamatrix: for a non-PR build of a fightwarn* branch,
	  reference 'fightwarn' for analysis

2021-09-25  Jim Klimov <jim@jimklimov.com>

	* docs/developers.txt, docs/nut.dict: docs/developers.txt: replace
	  references to defunct Travis CI with new NUT CI farm [#869]
	* docs/nut-qa.txt, docs/nut.dict: docs/nut-qa.txt: replace references
	  to defunct Travis CI with new NUT CI farm [#869]
	* Jenkinsfile-dynamatrix: with customized shellcheck
	  dynamatrixAxesLabels, be sure to match both OS_FAMILY and OS_DISTRO
	  as a bundle
	* Jenkinsfile-dynamatrix: with docs+distcheck, also test compliance
	  with available Make interpreters
	* Jenkinsfile-dynamatrix: with shellcheck, also test available Make
	  interpreters
	* Makefile.am, configure.ac, include/Makefile.am: configure.ac +
	  {./,include/}Makefile.am: revise the recipe for
	  include/nut_version.h
	* docs/nut.dict: update dict
	* ci_build.sh: call "$MAKE -j NUM" with a space, to cater for make
	  implems that require a separate argument token

2021-09-23  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict

2021-09-23  Jim Klimov <jim@jimklimov.com>

	* drivers/generic_modbus.c: drivers/generic_modbus.{c,h}: fix
	  whitespace style  (original fix from master branch)
	* drivers/bcmxcp_usb.c: fix elapsed_time type and casting
	* drivers/bcmxcp.c, drivers/bcmxcp_io.h, drivers/bcmxcp_ser.c,
	  drivers/bcmxcp_usb.c: drivers/bcmxcp*.{c,h}: fix types involved
	  with read() and write() to ssize_t
	* tools/nut-scanner/nutscan-serial.c: fix count to size_t
	* tools/nut-scanner/scan_avahi.c: fix buf_size to size_t
	* tools/nut-scanner/scan_eaton_serial.c: fix types involved with
	  read() and write() to ssize_t
	* tools/nut-scanner/scan_eaton_serial.c: fix size_t thread_count and
	  its iterator
	* drivers/serial.c, drivers/serial.h: drivers/serial.[h,c]: fix
	  d_usec from long to useconds_t
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/*.[h,c]: fix usec_timeout from long to useconds_t
	* tools/nut-scanner/scan_xml_http.c: fix size_t thread_count and its
	  iterator
	* tools/nut-scanner/scan_xml_http.c: fix recv_size use as size_t
	  parameter
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/scan_xml_http.c:
	  tools/nut-scanner/nut-scan.h + scan_xml_http.c: fix port type to
	  uint16_t
	* tools/nut-scanner/scan_snmp.c: fix arg type for generate_Ku()
	* drivers/apc-hid.c, drivers/bcmxcp_usb.c, drivers/belkin-hid.c,
	  drivers/blazer_usb.c, drivers/cps-hid.c, drivers/delta_ups-hid.c,
	  drivers/idowell-hid.c, drivers/liebert-hid.c, drivers/mge-hid.c,
	  drivers/nutdrv_atcl_usb.c, drivers/openups-hid.c,
	  drivers/powercom-hid.c, drivers/powervar-hid.c,
	  drivers/richcomm_usb.c, drivers/riello_usb.c,
	  drivers/tripplite-hid.c, drivers/tripplite_usb.c,
	  drivers/usb-common.c, drivers/usb-common.h:
	  drivers/usb-common.{c,h} drivers/*{usb,hid}.c: fix type of
	  usb_device_id_t vendorID/productID to uint16_t  * usb-common.h: fix
	  the definition * *{usb,hid}.c: sentinel in a table of uint16_t can
	  not be -1 * usb-common.c: uint16_t for vendor and product -- change
	  sentinel matcher for full (0,0,NULL) hits
	* tools/nut-scanner/nutscan-ip.c: tools/nut-scanner/scan_xml_http.c:
	  32-bit IPv4 addr mask should be uint32_t not int
	* tools/nut-scanner/nutscan-ip.c: tools/nut-scanner/scan_xml_http.c:
	  32-bit IPv4 addr should be uint32_t not int
	* tools/nut-scanner/nutscan-ip.c: use platform-dependent
	  getnameinfo() argument types
	* tools/nut-scanner/scan_snmp.c: fix size_t thread_count and its
	  iterator
	* tools/nut-scanner/scan_nut.c: fix size_t thread_count and its
	  iterator
	* tools/nut-scanner/scan_nut.c: fix size_t buf_size
	* tools/nut-scanner/scan_nut.c: align upscli_*() numa and numq args
	  from "unsigned int" to "size_t", to match PCONF_CTX_t fields
	* server/upsd.c: fix comparisons of nfds_t maxconn, long sysconf()
	  and size_t malloc()
	* server/upsd.c: check if maxconn<1 to avoid signedness issues and
	  because zero connections are also useless
	* server/upsd.c: align use of nfds_t vs. long (maxconn) for GCC
	  "-Wtype-limits"
	* tools/nut-scanner/scan_ipmi.c: range-check and cast
	  ipmi_sec->authentication_type ipmi_sec->privilege_level ipmi_id to
	  match method signatures
	* drivers/bcmxcp.c: fix whitespace style
	* drivers/bcmxcp_ser.c: fix whitespace style
	* tools/nut-scanner/scan_avahi.c: fix whitespace style
	* tools/nut-usbinfo.pl: tools/nut-usbinfo.pl => generated
	  nutscan-usb.h: sentinel in a table of uint16_t can not be -1
	* m4/nut_func_getnameinfo_argtypes.m4: reorder the loop to first try
	  current X/Open definition of getnameinfo()
	* configure.ac, m4/nut_check_headers_windows.m4,
	  m4/nut_func_getnameinfo_argtypes.m4:
	  m4/nut_func_getnameinfo_argtypes.m4
	  m4/nut_check_headers_windows.m4: lift recipes from cURL to detect
	  NUT_FUNC_GETNAMEINFO_ARGTYPES
	* tools/nut-scanner/scan_xml_http.c: fix whitespace style
	* tools/nut-scanner/scan_usb.c: fix whitespace style
	* tools/nut-scanner/scan_snmp.c: fix whitespace style
	* tools/nut-scanner/scan_nut.c: fix whitespace style
	* tools/nut-scanner/scan_ipmi.c: fix whitespace style
	* tools/nut-scanner/scan_eaton_serial.c: fix whitespace style
	* tools/nut-scanner/scan_avahi.c: fix whitespace style
	* tools/nut-scanner/nutscan-serial.c: fix whitespace style
	* tools/nut-scanner/nutscan-ip.c, tools/nut-scanner/nutscan-ip.h:
	  tools/nut-scanner/nutscan-ip.c: fix whitespace style
	* tools/nut-scanner/nutscan-init.c: fix whitespace style
	* tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-device.h:
	  tools/nut-scanner/nutscan-device.[c,h]: fix whitespace style
	* tools/nut-scanner/nutscan-display.c: fix whitespace style
	* tools/nut-scanner/nut-scanner.c: fix whitespace style
	* tools/nut-scanner/nut-scan.h: fix whitespace style
	* ci_build.sh: warn that a build without BUILD_TYPE ignores
	  BUILD_WARNOPT and BUILD_WARNFATAL settings
	* drivers/generic_modbus.c: fix assignments of sigar[].type to enum
	* drivers/generic_modbus.c: drivers/generic_modbus.{c,h}: fix
	  ser_parity to char, and sanity-check before dereferencing
	* drivers/generic_modbus.c: fix switch{} warnings
	* drivers/generic_modbus.c: fix suseconds_t for time ranges
	* drivers/generic_modbus.c: fix warnings with declarations
	* drivers/generic_modbus.c, drivers/generic_modbus.h:
	  drivers/generic_modbus.{c,h}: fix whitespace style
	* NEWS: added tripplite ability to manage outlet groups for NUT-2.7.5

2021-09-22  Yifeng Li <tomli@tomli.me>

	* docs/nut.dict: nut.dict: add my name "Yifeng".
	* docs/nut.dict: nut.dict: add technical terms for UPS2000 man page.
	* docs/man/Makefile.am, docs/man/huawei-ups2000.txt: huawei-ups2000:
	  add documentation.
	* drivers/Makefile.am, drivers/huawei-ups2000.c: huawei-ups2000:
	  Modbus driver for Huawei UPS2000 (1kVA-3kVA)  This commit
	  implements a Modbus driver for Huawei UPS2000 (1kVA-3kVA) series
	  UPS units using the USB or RS-232 interface (USB is only support on
	  Linux 5.12+ via the "xr_serial" kernel module), with support for
	  power and battery status monitoring, alarm reporting, RW variables,
	  and instant commands for battery selftest, buzzer, shutdown,
	  restart, and bypass control.

2021-09-22  Jim Klimov <jim@jimklimov.com>

	* server/sstate.c: fix missed include
	* server/conf.c, server/upsd.c, server/upsd.h: server/upsd.c +
	  conf.c: align use of nfds_t vs. long (maxconn)
	* server/upsd.c: align use of uint8_t when constructing an UUID
	* clients/upsclient.c, server/netssl.c: server/netssl.c +
	  clients/upsclient.c: fix ssl_error() to use ssize_t "ret"
	* server/sstate.c: fix int casting to read() and write(), add range
	  checks for bytes written (size_t/ssize_t)
	* clients/upsc.c, clients/upsclient.c, clients/upsclient.h,
	  clients/upscmd.c, clients/upsimage.c, clients/upslog.c,
	  clients/upsmon.c, clients/upsrw.c, clients/upsset.c,
	  clients/upsstats.c, docs/man/upscli_get.txt, drivers/dummy-ups.c:
	  clients/upsclient.h and numerous *.c: align upscli_get(),
	  upscli_list_start(), upscli_list_next() numa and numq args from
	  "unsigned int" to "size_t", to match PCONF_CTX_t fields
	* clients/upsmon.c: fix int casting to read() and write(), add
	  separate retval processing from system()
	* clients/upssched.c: fix int casting to read() and write(), add
	  range checks for bytes written (size_t/ssize_t)
	* clients/upsclient.c: fix receiver of strtol(), and log a FIXME for
	  sanity checks
	* clients/upsmon.c: fix receiver of strtol()
	* clients/upssched.c: fix receiver of strtol()
	* clients/upsmon.c: fix int type for use of upscli_readline()
	* clients/upscmd.c: fix int type for use of upscli_readline()
	* clients/upsimage.c: fix int casting
	* clients/upsrw.c: fix receiver of strtol()
	* drivers/nutdrv_qx.c, server/netset.c: server/netset.c +
	  drivers/nutdrv_qx.c: fix consumers of "long" getaux()
	* common/str.c: fix buffer int length in str_to_*int*() methods
	* common/state.c, include/state.h, server/sstate.c, server/sstate.h:
	  common/state.c + server/sstate.c + *.h: aux field is a "long" so
	  getaux() should return long
	* common/common.c, include/common.h: common/common.c: fix use of a
	  pid_t value
	* tests/cpputest.cpp: avoid "no out-of-line virtual method
	  definitions" (weak-vtables)
	* tests/nutclienttest.cpp: tests/nutclienttest.h: avoid "unused
	  exception parameter ex"
	* clients/nutclientmem.h: avoid "extra ; after method" warnings
	* clients/upsclient.c, configure.ac: clients/upsclient.c +
	  configure.ac: fix use of CPU_TYPE
	* configure.ac: add "-Wno-cast-qual" to clang-medium and clang-hard
	  warnings levels
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_SIGN_COMPARE and
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_UNSIGNED_ZERO_COMPARE
	  Sometimes library/system provided types are beyond our control and
	  vary from OS to OS...
	* server/sstate.c: whitespace fix
	* tests/Makefile.am: comment a TODO for referencing helpers built in
	  other dirs
	* docs/nut.dict: updated for recent NEWS and UPGRADING
	* UPGRADING: clarified upsdebugx() `[D#]` prefix impact
	* UPGRADING: stress that new Qx protocol drivers should be developed
	  in common nutdrv_qx framework
	* UPGRADING: Cut-off features that did land into master branch to
	  become the 2.7.5 release, vs. big chunks planned now for later
	  releases
	* NEWS: update reference to ChangeLog file vs. Git history
	* NEWS: refactored upsdebugx() and friends as macros for NUT-2.7.5
	* NEWS: HCL updated with Ippon Back Comfo Pro II 650/850/1050 (USB)
	  for NUT-2.7.5
	* NEWS: added and clarified many battery.* protocol variables for
	  NUT-2.7.5
	* NEWS: netxml-ups battery info fixed for NUT-2.7.5
	* NEWS: HCL updated with Opti-UPS PS1500E (USB) for NUT-2.7.5
	* NEWS: referenced Date and Time representations preferred for
	  NUT-2.7.5
	* NEWS: added generic_modbus driver for NUT-2.7.5
	* NEWS: updated systemd integration for NUT-2.7.5
	* NEWS: added autoconf-2.70 update for NUT-2.7.5
	* NEWS: added portable Makefile effort for NUT-2.7.5
	* NEWS: added incremental "make spellcheck" support for NUT-2.7.5
	* NEWS: Cut-off features that did land into master branch to become
	  the 2.7.5 release, vs. big chunks planned now for later releases
	* NEWS: added DISABLE_WEAK_SSL for NUT-2.7.5
	* docs/config-prereqs.txt: cosmetically update OmniOS notes
	* docs/ci-farm-lxc-setup.txt: comment a TODO for NAT setup desired
	* docs/ci-farm-lxc-setup.txt: comment why LXC+LIBVIRT
	* docs/ci-farm-lxc-setup.txt, docs/config-prereqs.txt,
	  docs/user-manual.txt: docs/config-prereq.txt +
	  ci-farm-lxc-setup.txt + user-manual.txt: fix markup so new docs can
	  be chapters in user-manual.html

2021-09-21  Jim Klimov <jimklimov@gmail.com>

	* drivers/legrand-hid.c: Update legrand-hid.c  Address build warnings
	  from CI

2021-09-21  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am: try to avoid "warning: ignoring prerequisites on
	  suffix rule definition"
	* docs/Makefile.am: when calling a sub-make for *-spellchecked rule,
	  make sure to use the "$(abs_top_builddir)/docs/Makefile" (the
	  original "top_builddir" might come from outer caller in another
	  subdir)
	* docs/Makefile.am: move reading of the spellchecked file out of the
	  pipe so errors finding one are exposed to build result
	* conf/Makefile.am, data/Makefile.am, docs/Makefile.am,
	  docs/man/Makefile.am: docs/Makefile.am: conjure a portable
	  *-spellchecked rule that works for non-GNU make tools
	* docs/Makefile.am: comment about a non-portable GNU Make feature use
	* docs/Makefile.am: for no-op *-spellchecked rule, report SKIP-ASPELL
	  with the target (touchfile) name to avoid source-text determination
	* docs/Makefile.am: be sure to run the quiet sub-make using
	  docs/Makefile.am to use its target definitions
	* docs/Makefile.am: if SPELLCHECK_ENV_DEBUG, report which file we
	  would spellcheck (quiet sub-make might do and report nothing for an
	  already checked text)
	* docs/Makefile.am: consider "-spellchecked" among SUFFIXes
	* docs/Makefile.am: comment about a non-portable GNU Make feature use
	* docs/Makefile.am: try to avoid "warning: ignoring prerequisites on
	  suffix rule definition"
	* docs/Makefile.am: when calling a sub-make for *-spellchecked rule,
	  make sure to use the "$(abs_top_builddir)/docs/Makefile" (the
	  original "top_builddir" might come from outer caller in another
	  subdir)
	* docs/Makefile.am: move reading of the spellchecked file out of the
	  pipe so errors finding one are exposed to build result
	* conf/Makefile.am, data/Makefile.am, docs/Makefile.am,
	  docs/man/Makefile.am: docs/Makefile.am: conjure a portable
	  *-spellchecked rule that works for non-GNU make tools
	* docs/Makefile.am: comment about a non-portable GNU Make feature use
	* docs/Makefile.am: for no-op *-spellchecked rule, report SKIP-ASPELL
	  with the target (touchfile) name to avoid source-text determination
	* docs/Makefile.am: be sure to run the quiet sub-make using
	  docs/Makefile.am to use its target definitions
	* docs/Makefile.am: if SPELLCHECK_ENV_DEBUG, report which file we
	  would spellcheck (quiet sub-make might do and report nothing for an
	  already checked text)
	* docs/Makefile.am: consider "-spellchecked" among SUFFIXes
	* docs/Makefile.am: comment about a non-portable GNU Make feature use

2021-09-21  Jim Klimov <jim@jimklimov.com>

	* scripts/Solaris/postinstall.in, scripts/Solaris/preremove.in:
	  scripts/Solaris/preremove.in + postinstall.in: configure sanity
	  checker likes datarootdir more than datadir
	* ci_build.sh: fix reported BUILD_TYPE for default-spellcheck builds
	* .gitignore, Makefile.am, conf/Makefile.am, data/Makefile.am,
	  docs/Makefile.am, docs/cables/Makefile.am, docs/man/Makefile.am,
	  lib/Makefile.am, scripts/augeas/Makefile.am,
	  scripts/ufw/Makefile.am, tools/nut-scanner/Makefile.am: Makefiles:
	  change from *.spellchecked suffix pattern to *-spellchecked which
	  is easier to plug into POSIX make rulesets
	* Makefile.am, conf/Makefile.am, configure.ac, data/Makefile.am,
	  docs/Makefile.am, docs/cables/Makefile.am, docs/man/Makefile.am,
	  lib/Makefile.am, scripts/Makefile.am, scripts/augeas/Makefile.am,
	  scripts/ufw/Makefile.am, tools/nut-scanner/Makefile.am: Makefiles +
	  configure.ac: add a way to "make clean" away the *.spellchecked
	  touch-files
	* .gitignore, conf/Makefile.am, data/Makefile.am, docs/Makefile.am,
	  docs/man/Makefile.am: Makefiles: mark every spellchecked text file
	  with a touch-file to not re-test it again needlessly (at a cost of
	  some noise for some implementations of make)
	* scripts/Solaris/postinstall.in, scripts/Solaris/preremove.in:
	  scripts/Solaris/preremove.in + postinstall.in: configure sanity
	  checker likes datarootdir more than datadir
	* ci_build.sh: fix reported BUILD_TYPE for default-spellcheck builds
	* .gitignore, Makefile.am, conf/Makefile.am, data/Makefile.am,
	  docs/Makefile.am, docs/cables/Makefile.am, docs/man/Makefile.am,
	  lib/Makefile.am, scripts/augeas/Makefile.am,
	  scripts/ufw/Makefile.am, tools/nut-scanner/Makefile.am: Makefiles:
	  change from *.spellchecked suffix pattern to *-spellchecked which
	  is easier to plug into POSIX make rulesets
	* Makefile.am, conf/Makefile.am, configure.ac, data/Makefile.am,
	  docs/Makefile.am, docs/cables/Makefile.am, docs/man/Makefile.am,
	  lib/Makefile.am, scripts/Makefile.am, scripts/augeas/Makefile.am,
	  scripts/ufw/Makefile.am, tools/nut-scanner/Makefile.am: Makefiles +
	  configure.ac: add a way to "make clean" away the *.spellchecked
	  touch-files
	* .gitignore, conf/Makefile.am, data/Makefile.am, docs/Makefile.am,
	  docs/man/Makefile.am: Makefiles: mark every spellchecked text file
	  with a touch-file to not re-test it again needlessly (at a cost of
	  some noise for some implementations of make)
	* docs/nut.dict: update for recent changes
	* docs/man/apcsmart.txt, docs/man/generic_modbus.txt:
	  docs/man/apcsmart.txt: fix an indented block
	* docs/man/apcsmart.txt, docs/man/generic_modbus.txt:
	  docs/man/generic_modbus.txt + apcsmart.txt: drop "[source, conf]"
	  decorators for sample configs and ASCII-art, pygmentize needs much
	  setup to render that
	* docs/config-prereqs.txt: add "pygmentize" packages to the list, for
	  HTML rendering of "source" blocks
	* docs/man/generic_modbus.txt: import a note from discussion at NUT
	  issue #1056 about the data-path and generic use for the modbus
	  driver
	* docs/man/generic_modbus.txt: line-wrap long paragraphs
	* tests/nutlogtest.c: fix more fallout from #675
	* configure.ac, m4/nut_check_libnss.m4: m4/nut_check_libnss.m4: fix
	  deterministic 32/64 bit builds (on illumos/solaris family of OSes
	  at least)
	* ci_build.sh: tweak PKG_CONFIG_PATH setting for 64-bit dirs on
	  illumos/solaris and related operating systems (otherwise pkg-config
	  reports default data, can be for 32-bit libs, on 64-bit hosts)
	* ci_build.sh: report detected CI_OS_NAME if we had to guess
	* ci_build.sh: for developer workstation use, detect CI_OS_NAME via
	  uname as a fallback (if CI vars are not provided)
	* ci_build.sh: recognize CI_OS_NAME from case-insensitive match of
	  "$OS_FAMILY-$OS_DISTRO", and recognize solaris+sunos
	* include/common.h: Fix some fallout from PR #685  * The
	  parenthesized "(label)" in debug macros is a safer expansion than
	  the original "label" * Avoid the dangling "args..." that may be
	  not-specified by caller (strict-C99 compat)
	* docs/Makefile.am: do not spellcheck ../INSTALL which is generated
	* ci_build.sh: run the first spellcheck really quietly
	* docs/Makefile.am, docs/nut.dict: docs/Makefile.am + docs/nut.dict:
	  add more texts from base dir to spellcheck them too
	* docs/Makefile.am: report the directory relative to which
	  spellchecked text sources failed
	* Jenkinsfile-dynamatrix: use ci_build.sh to spellcheck with a more
	  user-friendly output
	* ci_build.sh: extend the BUILD_TYPE=default-spellcheck to do a quiet
	  round first, and only report details about failed files if needed
	* ci_build.sh: fallback BUILD_WARNFATAL=true/false handling; comment
	  values for BUILD_WARNOPT
	* docs/man/generic_modbus.txt: some whitespace issues
	* m4/nut_type_socklen_t.m4: [NUT issue #1053]
	  m4/nut_type_socklen_t.m4: convert one remaining
	  AC_TRY_COMPILE(H,M,S) into modern
	  AC_COMPILE_IFELSE(AC_LANG_PROGRAM(H,M), S)
	* configure.ac: [NUT issue #1053] configure.ac: apply recommendations
	  of "autoupdate" and warnings from "autoconf" for autotools-2.70

2021-09-20  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/Makefile.am, docs/ci-farm-lxc-setup.txt:
	  docs/ci-farm-lxc-setup.txt + docs/Makefile.am: update some notes
	  and ability to build the new doc
	* docs/Makefile.am, docs/ci-farm-lxc-setup.txt:
	  docs/ci-farm-lxc-setup.txt + docs/Makefile.am: update some notes
	  and ability to build the new doc

2021-09-20  Jim Klimov <jim@jimklimov.com>

	* docs/nut.dict: update for recently added docs and merged PRs, and
	  update sorting
	* docs/config-prereqs.txt: config-prereqs.txt: fix markup to become
	  asciidoc
	* docs/ci-farm-lxc-setup.txt: ci-farm-lxc-setup.txt: update with
	  notes for "chroot apt-get" tricks
	* docs/ci-farm-lxc-setup.txt: ci-farm-lxc-setup.txt: fix markup to
	  become asciidoc
	* docs/config-prereqs.txt: config-prereqs.txt: fix markup to become
	  asciidoc
	* tests/.gitignore: GitIgnore test log and trace for "nutlogtest"
	* docs/nut.dict: ordering and typo fixes in the dictionary :)
	* docs/ci-farm-lxc-setup.txt: ci-farm-lxc-setup.txt: update with
	  notes for "chroot apt-get" tricks
	* docs/ci-farm-lxc-setup.txt: ci-farm-lxc-setup.txt: fix markup to
	  become asciidoc

2021-09-19  Jim Klimov <jimklimov+nut@gmail.com>

	* docs/ci-farm-lxc-setup.txt: Introduce docs/ci-farm-lxc-setup.txt
	  with setup notes
	* docs/ci-farm-lxc-setup.txt: Introduce docs/ci-farm-lxc-setup.txt
	  with setup notes

2021-09-19  Jim Klimov <jim@jimklimov.com>

	* docs/nut-names.txt: refactor the standalone Time and Date format
	  chapter

2021-09-17  Jim Klimov <jimklimov@gmail.com>

	* Jenkinsfile-dynamatrix: Update Jenkinsfile-dynamatrix  Revise
	  pattern for Makefiles and similar
	* Jenkinsfile-dynamatrix: Update Jenkinsfile-dynamatrix  Do not apply
	  filename regex filtering to main branch builds so they can always
	  serve as a reference
	* Jenkinsfile-dynamatrix: Update Jenkinsfile-dynamatrix  Remove
	  'default' target as it brings little value:
	  default-tgt:distcheck-valgrind tests the distcheck part, and
	  default-nodoc tests the main recipe with default settings and no
	  distcheck (both skip/disable docs).

2021-09-17  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: modularize the way to constrain build
	  scenarios not relevant to the changed files
	* Jenkinsfile-dynamatrix: find a way to constrain build scenarios not
	  relevant to the changed files (e.g. no big rebuilds for a docs-only
	  change)

2021-09-16  dtsecon <dimitris.s.economou@gmail.com>

	* drivers/generic_modbus.c: change ulon to uint_32
	* drivers/generic_modbus.h: fix forward declarations of enum
	  occurances

2021-09-16  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict
	* docs/nut.dict: Update nut.dict
	* docs/nut-names.txt: Update nut-names.txt  Clarified an ambiguity
	  typo about time format, added examples for data with time zones

2021-09-15  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict  Update for PR #1076
	* docs/nut.dict: Update nut.dict  Add "FTTx" for PR #1061
	* tests/getvaluetest.c: Update getvaluetest.c  Include NUT "common.h"
	  for NUT_UNUSED_VARIABLE among other things
	* tests/getvaluetest.c: getvaluetest.c: Fixing a NUT_UNUSED_VARIABLE

2021-09-15  Jim Klimov <jim@jimklimov.com>

	* clients/upsclient.c: upsclient.c: log upscli_init() as a no-op in
	  case of builds without SSL
	* clients/upsclient.c: upsclient.c: add NUT_UNUSED_VARIABLE for the
	  stub implem in case of builds without SSL
	* server/netssl.c: netssl.c: add NUT_UNUSED_VARIABLE for the stub
	  implem in case of builds without SSL
	* Jenkinsfile-dynamatrix: limit default-withdoc(:man) scenarios to
	  not iterate compiler variants, only OSes
	* Jenkinsfile-dynamatrix: add a comment with overview of the
	  dynacfgPipeline.slowBuild goals and trade-offs
	* Jenkinsfile-dynamatrix: add a groovy shebang for highlighters
	* Jenkinsfile-dynamatrix: rephrase some comments and filter bundle
	  names

2021-09-14  dtsecon <dimitris.s.economou@gmail.com>

	* docs/nut.dict: update nut.dict
	* docs/nut.dict: update nut.dic

2021-09-13  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: only run and withdocs:man on setups that
	  did not yet run a witdocs:all (and are declared capable of man)
	* Jenkinsfile-dynamatrix: remove distcheck-light (sort of pointless
	  WRT other scenarios) and withdocs:man (redundant) from "various
	  builds"
	* Jenkinsfile-dynamatrix: comment that "default-all-errors" builds do
	  not include docs and distcheck
	* Jenkinsfile-dynamatrix: add "default-alldrv:no-distcheck" variant
	* ci_build.sh: add "default-alldrv:no-distcheck" variant
	* ci_build.sh: comment "default-all-errors" builds with varying SSL
	  implementations and refactor into a loop and case  Should be
	  helftul for
	  https://github.com/networkupstools/jenkins-dynamatrix/issues/4
	  eventually
	* ci_build.sh: comment the case BUILD_TYPE to maintain easier

2021-09-12  Jim Klimov <jimklimov+nut@gmail.com>

	* Jenkinsfile-dynamatrix: reduce the amount of build combos by
	  careful use of dynamatrixAxesCommonEnv

2021-09-11  Jim Klimov <jimklimov+nut@gmail.com>

	* tests/cpputest.cpp: add an optional verbose mode to list executed
	  test case names
	* configure.ac: ci_build.sh: actively check that cppunit is not just
	  installed, but is usable with current compiler toolkit (we saw
	  linking issues and runtime segfaults with it)
	* ci_build.sh: update a comment for OpenIndiana gcc-4.x vs. libgd
	* ci_build.sh: skip CGI builds for openindiana with gcc-4.x (or
	  older, preemptively) for now
	* ci_build.sh: update constraints for libgd/cgi builds on freebsd
	* ci_build.sh: fix --disable-cppunit (not --without-cppunit)

2021-09-11  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: constrain autotools builds to "*fightwarn*"
	  branches and PRs

2021-09-01  Arnaud Quette <arnaud.quette@gmail.com>

	* drivers/eaton-pdu-marlin-mib.c, drivers/powerware-mib.c,
	  drivers/snmp-ups.c, drivers/snmp-ups.h: snmp-ups: Add a generic
	  function to convert date (#1078)  This provides conversion from US
	  date (mm/dd/yyyy) to ISO Calendar date (yyyy-mm-dd). Also adapt the
	  function callback mechanism to make it more generic, and only char*
	  to char* reformating, beside from the int to char* value lookup.
	  Co-authored-by: Jim Klimov <jim@jimklimov.com>

2021-08-27  Jim Klimov <jim@jimklimov.com>

	* docs/config-prereqs.txt: note caveats about installing cppunit and
	  gcc-4.4.4 on OpenIndiana

2021-08-23  Arnaud Quette <ArnaudQuette@eaton.com>

	* docs/nut-names.txt: Complete the date standardization proposal for
	  time

2021-08-20  Arnaud Quette <ArnaudQuette@eaton.com>

	* docs/nut-names.txt: Propose to express dates using ISO 8601 when
	  possible

2021-08-19  Stephan Blecher <_github@blecher.at>

	* drivers/legrand-hid.c: issue-616: legrand 600 fix input voltage

2021-08-18  root <root@proxima2.blecher.at>

	* scripts/upower/95-upower-hid.rules: legrand hid rules update

2021-08-12  Arnaud Quette <arnaud.quette@gmail.com>

	* drivers/mge-xml.c: netxml-ups: fix for erroneous battery info
	  (MGEXML/0.30) (#1069)  Some battery related information were
	  wrongly using output information
	* docs/nut-names.txt: RFC: clarify and complete battery dates (#1063)
	  The existing battery.date means the installation or last
	  replacement date, as it seems to be implemented by various drivers.
	  Add an additional battery.date.maintenance for the next replacement
	  or maintenance date
	* docs/nut-names.txt: Extend battery information collection (#1062)
	  * RFC: Add battery.capacity.nominal   * RFC: add Li-ion battery
	  cell information   * RFC: Add battery.status   * Clarify Li-ion
	  battery cell information  Mention that min/max cell voltage and
	  temperature are observed values, not settings
	* docs/nut-names.txt: RFC: add new variable battery.packs.external
	  (#1060)  * RFC: add new variable battery.packs.external   * Improve
	  wording, as per Charles Lepple feedback   * Improve example values,
	  which can or not be zero-padded

2021-08-11  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: revise use of
	  requiredNodelabels/excludedNodelabels, and reset them to surely
	  delete any cached values in the reusable dynamatrix object
	* Jenkinsfile-dynamatrix: keep docs builds to the standard set of
	  builders (nut-builder not doc-builder)

2021-08-10  Jim Klimov <jim@jimklimov.com>

	* Jenkinsfile-dynamatrix: use a custom-named
	  dynacfgPipeline.stashnameSrc
	* Jenkinsfile-dynamatrix: neuter the example buildCommit
	* Jenkinsfile-dynamatrix: Revert "Jenkinsfile-dynamatrix: list the
	  custom commits built on new NUT CI for initial history"  This
	  reverts commit c9b5c870ac6834f16ebecb5334ac178de2d03d3d. Have that
	  list in history but do not clutter live version.
	* Jenkinsfile-dynamatrix: list the custom commits built on new NUT CI
	  for initial history
	* Jenkinsfile-dynamatrix: revise docs-all build spec
	* Jenkinsfile-dynamatrix: modernize example for custom replayed
	  builds

2021-08-07  Jim Klimov <jim@jimklimov.com>

	* docs/config-prereqs.txt: suggest installing valgrind where
	  available

2021-08-04  Jim Klimov <jim@jimklimov.com>

	* docs/config-prereqs.txt: suggest installing source-highlight where
	  available
	* ci_build.sh: double-quote path var expansions
	* ci_build.sh: detect build agent capabilities for Jenkins builds
	  with NUT dynaMatrix config
	* ci_build.sh: abstract from TRAVIS_OS_NAME to CI_OS_NAME and set one
	  for Jenkins builds with NUT dynaMatrix config

2021-08-03  Jim Klimov <jimklimov@gmail.com>

	* configure.ac: hack around libtool when building with custom bitness

2021-08-03  Jim Klimov <jim@jimklimov.com>

	* clients/nutclient.h, clients/nutclientmem.cpp,
	  clients/nutclientmem.h: clients/nutclient.h + nutclientmem.h/.cpp:
	  add NUT_UNUSED_VARIABLE() where needed
	* drivers/libshut.h: define the Device field recently added to
	  USBDevice_t
	* drivers/usbhid-ups.c: initialize the recently added USBDevice_t
	  Device field
	* drivers/nutdrv_qx_masterguard.c: fix the switch-case fallthrough
	  that should not be (the case of "s" is handled lower in the
	  routine, so instant return is not logical)
	* drivers/nutdrv_qx_masterguard.c: complete the item_t initializers
	* drivers/nutdrv_qx_masterguard.c: be explicit about
	  NUT_UNUSED_VARIABLEs
	* docs/nut.dict: docs/config-prereqs.txt: list prerequisites for at
	  least a minimal build in OmniOS CE - update spellchecker
	* docs/config-prereqs.txt: list prerequisites for at least a minimal
	  build in OmniOS CE
	* docs/config-prereqs.txt: document libtool as a prerequisite
	* Jenkinsfile-dynamatrix: define autotools-based distcheck for NUT
	* Jenkinsfile-dynamatrix: define autotools-based distcheck for NUT
	* Jenkinsfile-dynamatrix: explicitly exclude openindiana from build
	  scenario with all docs types
	* Jenkinsfile-dynamatrix: typo fix (require*d*Nodelabels after
	  upstream refactor)
	* m4/nut_compiler_family.m4: do not pass "-Wno-unknown-warning" to
	  GCC
	* m4/nut_check_libavahi.m4: PoC enable avahi build in FreeBSD -
	  rearrange

2021-08-02  Jim Klimov <jim@jimklimov.com>

	* docs/config-prereqs.txt: revise installation of supported shell
	  interpreters
	* docs/config-prereqs.txt: add en-aspell for freebsd profile
	* Jenkinsfile-dynamatrix: Revert "Jenkinsfile-dynamatrix: try to
	  synchronize cloning of dsbcClone+stageNameClone"  This reverts
	  commit 2d477fac1c67f7a8477c550f1e5a638e533ab2ad : "synchronized" is
	  not supported for Jenkins Groovy CPS
	* Jenkinsfile-dynamatrix: try to synchronize cloning of
	  dsbcClone+stageNameClone
	* Jenkinsfile-dynamatrix: define dsbcClone+stageNameClone closer to
	  start of closure to get the correct copy ASAP
	* Jenkinsfile-dynamatrix: add SERVICE_FRAMEWORK="selftest" to
	  shellcheck-nde (equivalent)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in: check for not-supported (t)csh
	  interpreter
	* Makefile.am: add SERVICE_FRAMEWORK="selftest" to shellcheck-nde
	* Makefile.am: add shellcheck-nde
	* Makefile.am: fix shellcheck (not all OSes serve /bin/bash at that
	  pathname)

2021-08-01  Jim Klimov <jim@jimklimov.com>

	* docs/Makefile.am, docs/config-prereqs.txt, docs/nut.dict,
	  docs/packager-guide.txt, docs/user-manual.txt: Introduce
	  docs/config-prereqs.txt and spellcheck for it
	* Jenkinsfile-dynamatrix: Introduce Jenkinsfile-dynamatrix

2021-07-31  Jim Klimov <jimklimov+nut@gmail.com>

	* m4/nut_check_libavahi.m4: PoC enable avahi build in FreeBSD
	* m4/nut_check_libneon.m4: FreeBSD installs stuff under /usr/local

2021-07-28  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: report CONFIGURING NUT in a way friendlier for
	  copy-paste
	* configure.ac, m4/nut_compiler_family.m4: configure.ac +
	  m4/nut_compiler_family.m4: introduce NUT_COMPILER_FAMILY_FLAGS to
	  propagate -Wno-unknown-warning(-opton) before any pkgconfig
	* docs/man/Makefile.am: Fix check-man-txt to also run from separate
	  build dirs
	* ci_build.sh: do not make TOO MUCH noise when dumping config.log
	* ci_build.sh: set DISTCHECK_FLAGS in "default-tgt:"* handling too
	* data/driver.list.in: list Ippon Back Comfo Pro II 650/850/1050 as
	  supported by blazer_usb [#1035]

2021-07-27  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: introduce BUILD_TYPE=default-withdoc:man (and allow
	  it)
	* .gitignore: GitIgnore CI-generated log files
	* ci_build.sh: introduce BUILD_TYPE=default-withdoc:man
	* ci_build.sh: make sure DISTCHECK_FLAGS is single-line
	* configure.ac: tell compiler to not choke on unknown options

2021-07-26  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: parameterize $MAKE
	* ci_build.sh: try to avoid problems with multi-token CFLAGS etc.
	  when passed from "${CONFIG_OPTS[@]}" array into
	  DISTCHECK_CONFIGURE_FLAGS string (envvar) - refactor

2021-07-22  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: try to avoid problems with multi-token CFLAGS etc.
	  when passed from "${CONFIG_OPTS[@]}" array into
	  DISTCHECK_CONFIGURE_FLAGS string (envvar)

2021-07-21  dtsecon <dimitris.s.economou@gmail.com>

	* drivers/generic_modbus.c, drivers/generic_modbus.h: shutdown
	  configurable repetition with increasing time interval added

2021-07-20  Jim Klimov <jim@jimklimov.com>

	* common/common.c: avoid C++ style comments
	* configure.ac: detect if i2c library is usable, and cancel i2c
	  driver build if it is not

2021-07-19  dtsecon <dimitris.s.economou@gmail.com>

	* configure.ac, docs/Makefile.am, docs/man/Makefile.am: fix man pages
	  broken build process

2021-07-16  dtsecon <dimitris.s.economou@gmail.com>

	* docs/man/generic_modbus.txt: improve man page
	* docs/man/Makefile.am, docs/man/generic_modbus.txt: man page text
	  created, added in build procedure

2021-07-08  dogtopus <dogtopus@users.noreply.github.com>

	* docs/man/genericups.txt, drivers/genericups.h: genericups: Change
	  type 23 to be active low.  Seems that typical RS232 transceivers
	  inverts the signal automatically anyway, so there's no point of
	  making them active high by default.

2021-07-06  dtsecon <dimitris.s.economou@gmail.com>

	* drivers/generic_modbus.c, drivers/generic_modbus.h: fix serial
	  options in modbus_open
	* drivers/generic_modbus.c: fix 'for' loop initial declarations for
	  compatibility out of C99 mode
	* drivers/Makefile.am: generic_modbus.h added to Makefile.am
	* drivers/generic_modbus.c: just one space less

2021-07-06  dogtopus <dogtopus@users.noreply.github.com>

	* docs/man/genericups.txt: docs: Document the special line NULL in
	  genericups documentation.
	* drivers/genericups.c: genericups: Bump version number.
	* docs/contact-closure.txt, docs/man/genericups.txt,
	  drivers/genericups.c, drivers/genericups.h: genericups: Add support
	  for FTTx battery backup.  A lot of those "UPSes" use a 4-wire
	  open-drain-like contact closure signaling (dubbed "telemetry
	  interface") to report their status (see
	  https://dl4jz3rbrsfum.cloudfront.net/documents/CyberPower_UM_CBN50U48A-1.pdf
	  for example). They are sorta compatible with APC 940-0020B/C cables
	  in terms of pin assignments, with extra signals for replace battery
	  and battery missing and lack of shutdown signal.  This patch adds a
	  sample device type (23) for this kind of device. It also adds
	  support for the extra signal types (RB for replace battery and
	  BYPASS for disconnected battery) used by these devices, as well as
	  an option to unassign/disable an unused signal in the config file
	  by setting it to NULL.  Note that there is no standard cable for
	  this kind of device, so type 23 assumes RS232 control signaling and
	  RTS as the voltage source for input pin pullups.

2021-06-30  Nick Briggs <nicholas.h.briggs@gmail.com>

	* tests/.gitignore, tests/Makefile.am, tests/getvaluetest.c: Create
	  test harness for GetValue() report value extraction (usbhid-ups)
	  Adds source and updates Makefile.am to build tests/getvaluetest, a
	  test harness for the report value extraction function GetValue() in
	  hidparser.c.  getvaluetest has some built-in test cases, which are
	  easily extensible, but also accepts a single test specification on
	  the command line to allow for easy experimentation.  getvaluetest
	  -h for usage

2021-06-30  Jim Klimov <jim@jimklimov.com>

	* NEWS: mention `experimental.*` namespace
	* NEWS: mention that master/slave deprecation did not impact protocol
	  currently
	* NEWS: mark libusb-1.0 support in main branch as "expected"
	  currently
	* scripts/systemd/nut-driver-enumerator.service.in,
	  scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in: systemd/*.service(.in):
	  update units with SyslogIdentifier=%N  The log identifier should
	  hopefully help make more sense of syslog or journal entries where
	  helper shell script traces might end up.

2021-06-29  Dimitris Economou <dimitris.s.economou@gmail.com>

	* drivers/generic_modbus.c: minor changes to comply with nut
	  development guidelines
	* drivers/generic_modbus.c: variable ctx changed to mbctx

2021-06-26  Jim Klimov <jim@jimklimov.com>

	* Makefile.am, configure.ac: configure.ac: follow autotools doc
	  recommendation to automatically update the libtool script if it
	  becomes out-of-date
	* configure.ac: AC_PROG_LIBTOOL is noisily deprecated since
	  autotools-2.70; LT_INIT is the replacement
	* m4/nut_arg_with.m4: AC_HELP_STRING is noisily deprecated since
	  autotools-2.70; AS_HELP_STRING is available since 2.59 and we use
	  it already a lot elsewhere

2021-06-25  dtsecon <dimitris.s.economou@gmail.com>

	* drivers/generic_modbus.c: removing unnecessary code
	* drivers/generic_modbus.c: time_ellapsed fixed

2021-06-25  abratchik <alexbratchik@yandex.com>

	* drivers/Makefile.am, drivers/arduino-hid.c, drivers/arduino-hid.h,
	  drivers/usbhid-ups.c, scripts/upower/95-upower-hid.rules: Arduino
	  UPS Support

2021-06-24  dtsecon <dimitris.s.economou@gmail.com>

	* drivers/generic_modbus.c: minor changes and tidying up
	* drivers/generic_modbus.c: remove unnecessary stuff
	* drivers/generic_modbus.c, drivers/generic_modbus.h: initial commit
	  of generic_modbus beta version source files
	* drivers/Makefile.am: generic_modbus sources add in buidling
	  procedure

2021-06-22  Tom Fifield <tom@tomfifield.net>

	* data/driver.list.in: Opti-UPS PS1500E is supported by blazer_usb
	  Opti-UPS PS1500E connects via serial over USB, and is supported by
	  the blazer_usb driver. This patch updates the compatibility list.
	  Manufacturer link:
	  https://www.opti-ups.com/index.asp?SCID=SC20060001  Device is
	  automatically detected by nut-scanner > [nutdev1] >       driver =
	  "blazer_usb" >       port = "auto" >       vendorid = "0665" >
	  productid = "5161" >       bus = "001"  OB status is correctly
	  detected, and other correct values are displayed when queried:
	  battery.charge: 100 battery.voltage: 27.60 battery.voltage.high:
	  26.00 battery.voltage.low: 20.80 battery.voltage.nominal: 24.0
	  device.mfr: device.model: 1500VA device.type: ups driver.name:
	  blazer_usb driver.parameter.bus: 001 driver.parameter.pollinterval:
	  2 driver.parameter.port: auto driver.parameter.productid: 5161
	  driver.parameter.synchronous: no driver.parameter.vendorid: 0665
	  driver.version: 2.7.4 driver.version.internal: 0.12
	  input.current.nominal: 13.0 input.frequency: 60.0
	  input.frequency.nominal: 60 input.voltage: 113.9
	  input.voltage.fault: 111.4 input.voltage.nominal: 110
	  output.voltage: 113.3 ups.beeper.status: enabled
	  ups.delay.shutdown: 30 ups.delay.start: 180 ups.firmware: ups.load:
	  2 ups.mfr: ups.model: 1500VA ups.productid: 5161 ups.status: OL
	  ups.type: offline / line interactive ups.vendorid: 0665

2021-06-18  Scott K Logan <logans@cottsay.net>

	* drivers/tripplite.c: start using the 'X' value  Relatively ancient
	  documentation seems to suggest that this 'firmware checksum' value
	  can be used to indicate the firmware generation as well as the
	  capabilities of the UPS, namely the number of independently
	  controllable plugs.

2021-06-16  Nick Briggs <nicholas.h.briggs@gmail.com>

	* drivers/hidparser.c: Add note regarding sensitivity to 32- vs 64-
	  bit compilation and overflow

2021-06-14  Doug Nazar <nazard@nazar.ca>

	* server/netssl.c: server: Add warning if DISABLE_WEAK_SSL is not
	  enabled.
	* Makefile.am, conf/Makefile.am, data/Makefile.am, docs/Makefile.am,
	  docs/man/Makefile.am: Fix spellcheck to also run from separate
	  build dirs

2021-06-14  Clappier, Eric <EricClappier@Eaton.com>

	* drivers/powerware-mib.c, drivers/snmp-ups.c: Add missing outlet
	  objects for master

2021-06-12  abratchik <alexbratchik@yandex.com>

	* docs/FAQ.txt, drivers/libusb.c, drivers/libusb.h,
	  drivers/powervar-hid.c: HID-compliant UPS support with interface gt
	  than 0

2021-06-12  Jim Klimov <jimklimov@gmail.com>

	* server/netssl.c: Update netssl.c  Comment the default value of
	  `disable_weak_ssl` (currently not getting in our way, but can
	  change later)
	* server/netssl.c: Update netssl.c  Slight pedantic fix for use of
	  NSS VMAJOR/VMINOR macros
	* server/conf.c: Update conf.c  Comment parse_boolean() and add
	  support for "0" and "1" string values there, for good measure
	* conf/upsd.conf.sample: Update upsd.conf.sample  Mention that
	  DISABLE_WEAK_SSL is "currently" disabled by default, hinting that
	  it can become enabled after some releases.
	* docs/nut.dict: Update nut.dict  Add "TLSv"<number> support in
	  spellchecker

2021-06-12  Jim Klimov <jim@jimklimov.com>

	* docs/nut-names.txt: add the note about RFC Recording Document
	* docs/nut-names.txt: reword the intro paragraphs and define the
	  "experimental.*" namespace
	* docs/FAQ.txt: FAQ.txt: make it easier to find suggestions for
	  missing "battery.charge.restart" workarounds

2021-06-11  Doug Nazar <nazard@nazar.ca>

	* conf/upsd.conf.sample, server/conf.c, server/netssl.c,
	  server/netssl.h: server: Add option to disable weak SSL
	  protocols/ciphers.

2021-06-02  Nick Briggs <nicholas.h.briggs@gmail.com>

	* drivers/hidparser.c: Fix GetValue() to correctly extract values
	  from a report when compiled in LP64 mode  Changes the strategy for
	  removing potential garbage bits from values extracted from a
	  report. Use the LogMin and LogMax fields to drive which bits are
	  meaningful but avoid confusion when, for example, given a range of
	  -1..2147483647

2021-05-30  Jim Klimov <jim@jimklimov.com>

	* configure.ac: bugfix - populate systemdtmpfilesdir in its option,
	  not systemdshutdowndir
	* configure.ac: do not make noise with yet empty systemdtmpfilesdir
	* configure.ac: process other values for systemdshutdowndir option
	* configure.ac: just in case, double-quote to single-tokenize
	  detected systemd related options
	* configure.ac: update comments for systemd related options

2021-05-28  Jim Klimov <jim@jimklimov.com>

	* docs/nut.dict: nut.dict: add new words for nut-website
	* configure.ac: improve reporting of systemd options processing
	* autogen.sh, configure.ac, scripts/systemd/.gitignore,
	  scripts/systemd/nut-common.tmpfiles.in: configure.ac: generate
	  scripts/systemd/nut-common.in based on current config
	* configure.ac: typo fix in comment
	* Makefile.am, configure.ac, docs/configure.txt, docs/nut.dict,
	  scripts/systemd/.gitignore, scripts/systemd/Makefile.am,
	  scripts/systemd/nut-common.tmpfiles.in: [Issue #1030] Deliver
	  systemd-tmpfiles config to pre-create runtime locations

2021-05-25  Jim Klimov <jim@jimklimov.com>

	* NEWS: added nutdrv_qx "phoenixtec" subdriver in NUT-2.7.5
	* docs/images/ci/fosshost.org_Host_Light_309px.png,
	  docs/images/ci/fosshost.org_Host_Light_38px.png: docs/image/ci: add
	  more Fosshost logos tuned to be readable at smaller height

2021-05-24  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict  Update dict for PR #975
	* docs/man/nutdrv_qx.txt: Update nutdrv_qx.txt  Our accepted
	  terminology is for multiple "UPSes" not "UPSen", however
	  questionable the language might be
	* drivers/nutdrv_qx.c: Update nutdrv_qx.c  Bump version due to
	  addition of `phoenixtec_command()`
	* drivers/nutdrv_qx.c: Update nutdrv_qx.c  Pre-initialize "e = NULL"
	  in phoenixtec_command(), we do not set it from `memchr()` later in
	  all cases.
	* drivers/nutdrv_qx_masterguard.c: Update nutdrv_qx_masterguard.c
	  Add #include <stddef.h>
	* drivers/powerpanel.h: Update powerpanel.h  Define a subdriver_t for
	  driver version (modifiable) vs type (bin/txt)
	* drivers/powerp-txt.c: Update powerp-txt.c  Fix subdriver type vs
	  subdriver version
	* drivers/powerp-bin.c: Update powerp-bin.c  Track subdriver version
	* drivers/powerp-txt.c: Update powerp-txt.c  Introduce versioning
	* drivers/cyberpower-mib.c: Update cyberpower-mib.c  Update reported
	  driver version after the bump
	* drivers/cyberpower-mib.c: Update cyberpower-mib.c  Handle
	  "battery.voltage" and "battery.current" readings for different MIB
	  revisions
	* drivers/nutdrv_qx.c: Update nutdrv_qx.c  Formatting and slight
	  rewording of a comment

2021-05-24  Jim Klimov <jim@jimklimov.com>

	* NEWS: added powerpanel driver support for CyberPower
	  OR1500LCDRTXL2U in NUT-2.7.5
	* NEWS: added TcpClient C++ testing mock for NUT-2.7.5
	* NEWS: improved USB HID parsing for NUT-2.7.5
	* NEWS: improved USB device matching for NUT-2.7.5
	* NEWS: microsol-apc added for NUT-2.7.5
	* lib/.gitignore: GitIgnore generated lib/libnutclientstub.pc
	* drivers/usb-common.h: better comment "the 5 pieces of information
	  by which a USB device identifies itself"
	* drivers/usb-common.h: move the recently added USBDevice_t Device
	  field to the end, for a bit of cross-version binary compatibility
	* docs/man/blazer-common.txt, docs/man/nutdrv_qx.txt,
	  docs/man/tripplite_usb.txt, docs/man/usbhid-ups.txt: Docs: rephrase
	  Note for "device" option in USB drivers

2021-05-20  Denis Yurin <d.jurin@gmail.com>

	* drivers/powercom-hid.c: add temperature readings for Powercom
	  MRT-3000  add temperature readings support for Powercom MRT-3000

2021-05-18  Clappier, Eric <EricClappier@Eaton.com>

	* tests/nutclienttest.cpp: Fix typo

2021-05-18  Alexey Kazancev <ruskazancev@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx.c: bump version to 0.31
	* drivers/nutdrv_qx.c: nutdrv_qx.c: add batt.volt.act validation
	  Some UPS return zero batt voltage after communication error. This
	  validation must fix wrong runtime calculation.
	* drivers/nutdrv_qx.c: nutdrv_qx.c: fix snr_command communication
	  error in protocol matching phase.

2021-05-17  Clappier, Eric <EricClappier@Eaton.com>

	* clients/nutclientmem.cpp, clients/nutclientmem.h,
	  tests/nutclienttest.cpp: Take into account pull request remarks

2021-05-07  Clappier, Eric <EricClappier@Eaton.com>

	* drivers/bcmxcp_ser.c: Fix coverity test issue
	* tests/nutclienttest.cpp: Try fixing coverity test issue
	* clients/Makefile.am, configure.ac, lib/Makefile.am,
	  lib/libnutclientstub.pc.in, tests/Makefile.am: Separate lib for
	  stub

2021-05-06  Alexey Kazancev <ruskazancev@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx.c: bump version to 0.30

2021-05-05  Clappier, Eric <EricClappier@Eaton.com>

	* tests/nutclienttest.cpp: Add tests in cppunit
	* clients/Makefile.am: Fix missing header

2021-05-04  Clappier, Eric <EricClappier@Eaton.com>

	* clients/Makefile.am, clients/{nutclientmock.cpp =>
	  nutclientmem.cpp}, clients/{nutclientmock.h => nutclientmem.h},
	  tests/nutclienttest.cpp: Rename class  Fix cppunit test  Add
	  typedef for map
	* clients/nutclientmock.cpp: Fix indentation
	* clients/Makefile.am, clients/nutclient.cpp, clients/nutclient.h,
	  clients/nutclientmock.cpp, clients/nutclientmock.h: Separate
	  NutClientMock class
	* clients/nutclient.cpp, clients/nutclient.h,
	  tests/nutclienttest.cpp: Add mock for TcpClient

2021-04-26  Jim Klimov <jim@jimklimov.com>

	* docs/man/dummy-ups.txt: dummy-ups.txt: mention the DDL and
	  nut-ddl-dump.sh
	* drivers/Makefile.am: fix truncated comment  Text originates from
	  SVN-Git migration in e8e716e0598158f705e060c72f8f4b0444fbcd0f

2021-04-26  Alexey Kazancev <ruskazancev@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx.c: add correction of runtime
	  estimation

2021-04-23  Jim Klimov <jimklimov@gmail.com>

	* drivers/ever-hid.c: Update ever-hid.c  Make and comment the macro
	  for ST Microelectronics vendor id (to generate udev data, etc.
	  properly)
	* drivers/ever-hid.c: Update ever-hid.c  Lowercase the hex in vendor
	  ID macro, for consistency

2021-04-23  Jim Klimov <jim@jimklimov.com>

	* docs/nut.dict: docs/nut.dict + NEWS: fix both to pass spellcheck
	* NEWS, docs/nut.dict: docs/nut.dict + NEWS: fix both to pass
	  spellcheck
	* drivers/nutdrv_qx.c: fabula_hunnox_subdriver(): annotate
	  NUT_UNUSED_VARIABLE(device) arg
	* drivers/delta_ups-hid.c: fix initialization of
	  delta_ups_type_info[]
	* drivers/delta_ups-hid.c: fix initialization of
	  delta_ups_type_info[]
	* drivers/nutdrv_qx.c: fabula_hunnox_subdriver(): annotate
	  NUT_UNUSED_VARIABLE(device) arg
	* drivers/usbhid-ups.c: order includes and subdrivers alphabetically
	* drivers/usbhid-ups.c: order includes and subdrivers alphabetically
	* clients/nutclient.cpp, clients/nutclient.h:
	  clients/nutclient.{h,cpp}: explicitly request assignment operator
	  generation for exception classes
	* drivers/bestfortress.c: fix back setparam() arg type
	* drivers/delta_ups-mib.c: delta-mib.c: rename onbatt_info lookup
	  table in commented-away code sample (and match naming pattern with
	  other tables)
	* drivers/delta_ups-hid.c: typo in comment
	* drivers/nutdrv_qx.c: comment that Vendor ID 0x0483 is from ST
	  Microelectronics

2021-04-22  Nick Briggs <nicholas.h.briggs@gmail.com>

	* drivers/hidparser.c: correct 'for' loop initial declarations are
	  only allowed in C99 or C11 mode
	* drivers/hidparser.c: Extract values in HIDParse correctly when
	  compiled in 64-bit (LP64) mode  Reworks the conversion of bytes in
	  little-endian order to host order to operate independently of the
	  sizeof(long) and the byte-order of the host system. The extracted
	  value is stored as uint32_t as the code already performs casts to
	  signed/unsigned of varying sizes as appropriate to the context of
	  use.

2021-04-21  Jim Klimov <jim@jimklimov.com>

	* NEWS: Add 2.7.5 support for Tripplite AVR750U
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: sync polling frequencies
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: remove (read-only) mappings for ups.delay*
	  in favor of same points polled for ups.timer*
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: comment away ups.mfr/model/serial setting
	  per PR comments
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: set voltage/current/frequency precision to
	  %.1f same for all entries
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: set battery.charge* precision to %.0f same
	  for all entries
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: import delta_ups_hid2nut[] entries "as is"
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: import Helper lookup tables and mapping
	  functions from master
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: change delta_ups_hid2nut[] content order
	  by names to be same as in master
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: import named delta_ups_usage_lkp[] content
	  from master
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: import delta_ups_format_model() content
	  from master
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: move delta_ups_format_model() to same
	  position as in master
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: indentations in delta_ups_claim()
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: indentations in delta_ups_hid2nut[]
	* drivers/delta_ups-hid.c: drivers/delta_ups-hid.c/.h: sync PR #807
	  code with master branch: indentations in delta_ups_usage_lkp[]
	* drivers/delta_ups-hid.c, drivers/delta_ups-hid.h:
	  drivers/delta_ups-hid.c/.h: sync PR #807 code with master branch:
	  rename delta => delta_ups, sync comments
	* drivers/Makefile.am, drivers/{delta-hid.c => delta_ups-hid.c},
	  drivers/{delta-hid.h => delta_ups-hid.h}, drivers/usbhid-ups.c,
	  scripts/upower/95-upower-hid.rules: Rename delta-hid.c/.h to
	  delta_ups-hid.c/.h and sync vendor label for USB [#807]

2021-04-21  Edgar Fuß <ef@math.uni-bonn.de>

	* drivers/nutdrv_qx.c: Correct format string  size_t is unsigned, so
	  use %zu (not %zd) in upsdebug() format string.
	* drivers/nutdrv_qx.c: Remove vis-dependent debugging code  Remove
	  (level 4) debugging code in the phoenixtex/masterguard USB
	  subdriver that depends on the BSD strvis() family for visual string
	  formatting.

2021-04-20  Ygor Amadeo Sartori Regados <ygorre@tutanota.com>

	* docs/man/microsol-apc.txt: Man page compilation error fixes
	* docs/man/Makefile.am, docs/man/microsol-apc.txt: Added man page
	* drivers/microsol-apc.c, drivers/microsol-common.h: Fix: wrong
	  operator and unused function
	* drivers/microsol-apc.c, drivers/microsol-apc.h: Fixed driver name

2021-04-20  Jim Klimov <jimklimov@gmail.com>

	* drivers/delta-hid.c: Update delta-hid.c  Sync the vendor-name
	  comment (for udev generation among others) with another Delta HID
	  driver merged to master recently.
	* docs/nut.dict: Update nut.dict  Updated for PR #994
	* drivers/microsol-apc.c: Update microsol-apc.c  In upsdrv_info,
	  split contributors one per line for better source readability
	* docs/nut.dict: Update nut.dict  Some more keywords to the
	  dictionary from PR #638

2021-04-20  Jim Klimov <jim@jimklimov.com>

	* NEWS: List more achievements of 2.7.5
	* drivers/delta_ups-hid.c, scripts/upower/95-upower-hid.rules:
	  95-upower-hid.rules: regenerate for idVendor=05dd (Delta UPS)
	* docs/documentation.txt: add a section on reporting Data dumps for
	  the DDL
	* docs/man/nutdrv_qx.txt: fix copy-paste typo
	* drivers/nutdrv_qx.c: fix back the name for
	  "fabula_hunnox_subdriver" (USB protocol subdriver vs.
	  "hunnox_subdriver" for device data mapping)
	* drivers/nutdrv_qx.c: bump core DRIVER_VERSION to reflect changes
	  from PR #638 for "hunnox" support
	* docs/man/nutdrv_qx.txt, drivers/nutdrv_qx.c: drivers/nutdrv_qx.c:
	  simplify new subdriver/command naming from "fabula-hunnox" to
	  "hunnox"
	* drivers/nutdrv_qx.c: restore indentation with TABs
	* drivers/nutdrv_qx.c: fabula_command_hunnox(): comment about
	  truncating the buflen to 102 bytes
	* drivers/nutdrv_qx.c: fabula_command_hunnox(): comment away scoping
	  for (and use of) "hunnox_patch" leaving the markers in comments for
	  refactoring
	* drivers/nutdrv_qx.c: comment that fabula_hunnox_subdriver was
	  reported to support more than Hunnox branded devices
	* drivers/nutdrv_qx.c: fabula_command_hunnox(): restore originally
	  PRed choice of usb_get_string{,_simple}() based on langid_fix alone
	* drivers/nutdrv_qx.c: separate fabula_command_hunnox() from
	  fabula_command() without using a mixed routine, to ensure no impact
	  on currently supported devices
	* docs/nut.dict: typo fix

2021-04-19  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict  Update dictionary for Hunnox PR
	  #638
	* docs/man/nutdrv_qx.txt: Update nutdrv_qx.txt  Basically mention
	  updates from Hunnox subdriver and protocol addition (PR #638).
	* drivers/nutdrv_qx.c: Update nutdrv_qx.c  Err on the safer side of
	  changing behavior for non-hunnox device support, limit the
	  applicability of langid_fix (per PR #638 review cautionary
	  comments). Maybe the proposed original change did apply to other
	  devices that support the fix-up, but that should be evaluated
	  separately and this new constraint reversed if needed.
	* drivers/nutdrv_qx_hunnox.c: Update nutdrv_qx_hunnox.c  Updated file
	  heading
	* drivers/nutdrv_qx_hunnox.h: Update nutdrv_qx_hunnox.h  Updated file
	  heading

2021-04-10  Jim Klimov <jim@jimklimov.com>

	* docs/images/advanced.png, docs/images/bizarre.png: Vox populi:
	  replace master by primary and slave by secondary in documentation
	  images [#840]

2021-04-09  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict  Missed a couple of new dictionary
	  words
	* docs/nut.dict: Update nut.dict  Added "snr" and "SNR" to
	  spellchecker dictionary

2021-04-09  Jim Klimov <jim@jimklimov.com>

	* drivers/metasys.c: fix SIZE_MAX comparison
	* drivers/metasys.c: fix %zd printing of ssize_t res
	* docs/images/ci/fosshost.org_Host_Dark_56px.png,
	  docs/images/ci/jenkins-nut-large-256px.png,
	  docs/images/ci/jenkins-nut-large-squared.png,
	  docs/images/ci/jenkins-nut-large.pdn,
	  docs/images/ci/jenkins-nut-large.png,
	  docs/images/ci/jenkins-nut-small-256px.png,
	  docs/images/ci/jenkins-nut-small.pdn,
	  docs/images/ci/jenkins-nut-small.png,
	  docs/images/ci/jenkins-nut-squared.png,
	  docs/images/ci/jenkins-nut-transparent-bg-40px.png,
	  docs/images/ci/jenkins-nut-transparent-bg.png,
	  docs/images/ci/jenkins-nut.css, docs/images/ci/jenkins-nut.png,
	  docs/images/ci/jenkins-nut.txt: Add image and CSS resources used in
	  new Jenkins CI [#869]

2021-04-09  Alexey Kazancev <ruskazancev@gmail.com>

	* drivers/nutdrv_qx.c: add overflows protection for snr subdriver
	* docs/acknowledgements.txt: add NAG at manufacturer list
	* data/driver.list.in: add various SNR-UPS-LID-XXXX UPSes supported
	  by nutdrv_qx Protocol: 'megatec' USB subdriver: 'snr'
	* docs/man/nutdrv_qx.txt: update man page for new 'snr' USB subdriver
	* drivers/nutdrv_qx.c: add new 'snr' USB subdriver to support
	  SNR-UPS-LID units

2021-04-08  Jim Klimov <jim@jimklimov.com>

	* docs/man/Makefile.am: Update Makefile.am  Beside exactly "troff"
	  some systems have other "*roff" family tools and formats

2021-04-07  Jim Klimov <jimklimov@gmail.com>

	* configure.ac: satisfy both builders that have pkg-config installed
	  and those who do not
	* configure.ac: avoid syntax errors if pkg-config is not installed

2021-04-06  Aaron Thompson <dev@aaront.org>

	* drivers/powercom.c: Fix a small error in output voltage for KIN
	  models.

2021-03-31  Jim Klimov <jim@jimklimov.com>

	* drivers/metasys.c: protect failsafe logic from compiler warnings
	  with pragmas
	* drivers/metasys.c: upsdrv_initinfo(): pedantic and stylistic fixes
	* drivers/metasys.c: upsdrv_initinfo(): sanity-check that reply was
	  big enough to have a serial number, and then cast for memcpy()
	* drivers/metasys.c: get_answer(): rectify var types to avoid
	  signedness and range warnings
	* drivers/metasys.c: fix arg type for send_read_command() to avoid
	  signedness mismatches
	* drivers/metasys.c: refactor a get_word_float() to simplify code
	* drivers/metasys.c: fix fixed-width integers for
	  get_word()/get_long() or cast meaningfully where needed
	* drivers/bcmxcp.c: cast the bytes when constructing "cbuf[]"s
	  element by element
	* drivers/bcmxcp.c: instcmd(): cast use of sddelay to avoid
	  signedness warnings
	* drivers/bcmxcp.c: upsdrv_initinfo(): buf is size_t by usage
	* drivers/bcmxcp.c: upsdrv_initinfo(): fix atoi() of unsigned value
	  for shutdown_delay
	* drivers/bcmxcp.c: fix fixed-width integers for
	  get_word()/get_long()/init_outlet() or cast meaningfully where
	  needed
	* drivers/al175.c: avoid implicit conversion of byte to int during
	  bit-shifting
	* drivers/dstate.c: protect failsafe logic from compiler warnings
	  with pragmas

2021-03-30  Jim Klimov <jim@jimklimov.com>

	* drivers/al175.c: avoid implicit tcflag_t signedness conversion
	* drivers/al175.c: avoid implicit char/byte conversion
	* drivers/al175.c: avoid implicit long/unsigned long conversion, and
	  fix formatting nearby
	* drivers/al175.c: align arguments to wrappers of al175_do() with the
	  uint16_t type it accepts (avoid variable-width signed int)
	* drivers/libusb.c: mark hid_rep_index static (not externalized)
	* configure.ac: nut_enable_warnings: clang presets should let
	  "-Wdocumentation" slide: NUT does not use it now, and third-party
	  headers are what they are
	* drivers/dstate.c: alarm_set(): stretch slightly absurd ways to
	  avoid overflow and fix signed/unsigned mismatch (follow up for
	  #986)
	* configure.ac: add --enable-cppunit to allow disabling it even if
	  deemed supported by compiler  Practice shows that libcppunit.so may
	  be linked against a different compiler version and/or libc than the
	  one used for current NUT build. While formal support checked by the
	  script works, practical build fails.
	* NEWS: Reflect terminology change for upsmon

2021-03-29  Jim Klimov <jim@jimklimov.com>

	* clients/upsmon.c: rename static functions slavesync() =>
	  sync_secondaries() and checkmaster() => apply_for_primary() and
	  document them better
	* README, clients/nutclient.cpp, clients/nutclient.h,
	  clients/upsmon.c, clients/upsmon.h, conf/ups.conf.sample,
	  conf/upsd.users.sample, conf/upsmon.conf.sample.in,
	  docs/config-notes.txt, docs/design.txt, docs/features.txt,
	  docs/history.txt, docs/man/clone.txt, docs/man/genericups.txt,
	  docs/man/libnutclient_misc.txt, docs/man/nut.conf.txt,
	  docs/man/nutdrv_atcl_usb.txt, docs/man/richcomm_usb.txt,
	  docs/man/upsd.txt, docs/man/upsd.users.txt,
	  docs/man/upsmon.conf.txt, docs/man/upsmon.txt,
	  docs/net-protocol.txt, docs/new-drivers.txt, docs/scheduling.txt,
	  docs/security.txt, drivers/optiups.c, scripts/augeas/README,
	  scripts/augeas/nutupsdusers.aug.in,
	  scripts/augeas/tests/test_nut.aug, scripts/perl/Nut.pm,
	  scripts/python/module/PyNUT.py, server/netcmds.h, server/netuser.c,
	  server/netuser.h, server/user.c: Vox populi: replace manager/master
	  by primary and subordinate/slave by secondary
	* scripts/python/app/README: typo fix
	* docs/man/libnutclient_misc.txt: fix English wording a bit
	* docs/nut.dict: update word-count after large docs update

2021-03-27  orbea <orbea@riseup.net>

	* drivers/Makefile.am: drivers: Fix undefined references with
	  slibtool.

2021-03-26  Jim Klimov <jimklimov@gmail.com>

	* tools/nut-snmpinfo.py: Update nut-snmpinfo.py  Also handle the `//`
	  comments same way as `/*...`

2021-03-26  Arnaud Quette <ArnaudQuette@eaton.com>

	* scripts/upower/95-upower-hid.rules: Revert "95-upower-hid.rules
	  script updated"  This reverts commit
	  262c23c6b8f1368165c75a0df317b1ba9ff5c511.

2021-03-25  Arnaud Quette <ArnaudQuette@eaton.com>

	* tools/nut-snmpinfo.py: nut-scanner: improve SNMP extractor script
	  Also remove EOL comments

2021-03-24  Jim Klimov <jim@jimklimov.com>

	* drivers/bestups.c, drivers/blazer.c, drivers/blazer.h,
	  drivers/blazer_ser.c, drivers/blazer_usb.c: bestups, blazer* driver
	  sources: add obsoletion notices on top, in favor of nutdrv_qx
	  drivers
	* tools/nut-usbinfo.pl: allow to trace USB driver conflicts (e.g.
	  obsoleted and new handlers of same vendor/product IDs)

2021-03-23  Ygor Amadeo Sartori Regados <ygorre@tutanota.com>

	* drivers/microsol-apc.c, drivers/microsol-apc.h,
	  drivers/microsol-common.c, drivers/microsol-common.h: Bug fix:
	  battery charge calculation
	* drivers/microsol-common.c: Bug fix: Handle packet boundary
	  desynchronization

2021-03-23  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: make GitIgnores failure fatal (and report what the
	  difference is, for tracked and regenerated files)
	* tests/.gitignore: GitIgnore tests/nutlogtest binary
	* ci_build.sh: make GitIgnores failure fatal

2021-03-23  Degott, Francois Regis <FrancoisRegisDegott@eaton.com>

	* scripts/upower/95-upower-hid.rules: 95-upower-hid.rules script
	  updated
	* scripts/upower/95-upower-hid.rules: 95-upower-hid.rules script
	  updated
	* drivers/Makefile.am, drivers/eaton-ats16-nm2-mib.c,
	  .../{eaton-ats16-mib.h => eaton-ats16-nm2-mib.h},
	  .../{eaton-ats16-mib.c => eaton-ats16-nmc-mib.c},
	  drivers/eaton-ats16-nmc-mib.h, drivers/snmp-ups.c: improve support
	  of EATON ATS16 NMC/NM2

2021-03-21  Ygor Amadeo Sartori Regados <ygorre@tutanota.com>

	* drivers/microsol-apc.c: Fixed missing calculation part for BZ1500
	  Bug identified with data provided on issue #697
	* drivers/microsol-common.c: CI fix: C89 compilation fixed
	* drivers/Makefile.am: Missing header fixed
	* drivers/Makefile.am: CI error fix: missing header file

2021-03-19  Ygor Amadeo Sartori Regados <ygorre@tutanota.com>

	* drivers/microsol-common.c, drivers/microsol-common.h: Fixed LGTM
	  alert about localtime_r  Also passed microsol-common.c through
	  indent
	* drivers/Makefile.am, drivers/microsol-apc.c,
	  drivers/microsol-apc.h, drivers/microsol-common.c,
	  drivers/microsol-common.h: New driver: microsol-apc  Derived from
	  solis driver, for newer APC Back-UPS BR hardware. Support added for
	  APC Back-UPS BZ1500, BZ2200BI and BZ2200I. Tested on BZ2200BI.
	  Created common file that may be used on solis as well.

2021-03-14  JungEon Kim <me@jungeon.kim>

	* data/driver.list.in: Add Delta UPS Amplon R Series in drivers.list

2021-03-14  Jim Klimov <jim@jimklimov.com>

	* drivers/dstate.c: alarm_set(): at least log the truncated buf if it
	  does not fit into dstate field

2021-03-13  JungEon Kim <me@jungeon.kim>

	* drivers/Makefile.am, drivers/delta_ups-hid.c,
	  drivers/delta_ups-hid.h, drivers/usbhid-ups.c: delta_ups-hid: Add
	  support for Delta UPS Amplon R Series

2021-03-13  Jim Klimov <jim@jimklimov.com>

	* docs/developers.txt: replace "master" where it is easy, and update
	  some recommendations
	* clients/upsmon.c: comment that also several NUT drivers can
	  directly set FSD flag propagated from the smarter power devices
	* docs/security.txt: extend the Firewall section for more
	  considerations
	* docs/man/upsmon.txt: suggestions for experiments about timing the
	  shutdown vs. dummy SHUTDOWNCMD to check the skeleton logic
	* docs/man/upsmon.conf.txt: extend the example for "bigserver" with
	  manager vs subordinate upsmon's
	* docs/history.txt: reflect that slave/master terms were deprecated
	* README: Make note of UPSes which allow multiple managerial accesses
	* clients/nutclient.cpp, clients/nutclient.h, clients/upsmon.c,
	  docs/net-protocol.txt, scripts/perl/Nut.pm,
	  scripts/python/module/PyNUT.py, server/netcmds.h, server/netuser.c,
	  server/netuser.h, server/user.c: Identify points in source code
	  (and few related docs) for deprecating master|slave terminology
	* README, clients/upsmon.c, clients/upsmon.h, conf/ups.conf.sample,
	  conf/upsd.users.sample, conf/upsmon.conf.sample.in,
	  docs/config-notes.txt, docs/design.txt, docs/features.txt,
	  docs/man/clone.txt, docs/man/genericups.txt,
	  docs/man/libnutclient_misc.txt, docs/man/nut.conf.txt,
	  docs/man/nutdrv_atcl_usb.txt, docs/man/richcomm_usb.txt,
	  docs/man/upsd.txt, docs/man/upsd.users.txt,
	  docs/man/upsmon.conf.txt, docs/man/upsmon.txt,
	  docs/net-protocol.txt, docs/new-drivers.txt, docs/nut.dict,
	  docs/scheduling.txt, docs/security.txt, drivers/optiups.c,
	  scripts/augeas/README, scripts/augeas/nutupsdusers.aug.in,
	  scripts/augeas/tests/test_nut.aug, scripts/perl/Nut.pm,
	  server/user.c: Update documentation, emitted messages and
	  easy-to-fix code to rename master=>manager and slave=>subordinate
	* docs/man/upsmon.txt: suggestions for experiments about timing the
	  shutdown vs. dummy SHUTDOWNCMD to check the skeleton logic
	* docs/security.txt: extend the Firewall section for more
	  considerations
	* docs/security.txt: reword one shade of "master"
	* docs/solaris-usb.txt: reword one shade of "master"
	* drivers/asem.c: clarify the use of "S" word
	* drivers/phoenixcontact_modbus.c: clarify the use of "S" word
	* drivers/nutdrv_qx.c, drivers/usbhid-ups.c: drivers/nutdrv_qx.c &
	  usbhid-ups.c: reword "Reference list of..."
	* clients/upsmon.c, docs/net-protocol.txt: docs/net-protocol.txt +
	  upsmon.c: comment that also several NUT drivers can directly set
	  FSD flag propagated from the smarter power devices
	* conf/upsmon.conf.sample.in: note that systems should only shutdown
	  when less than MINSUPPLIES PSUs are non-critical
	* conf/upsmon.conf.sample.in: note about UPSes with manageable
	  thresholds for critical state
	* conf/upsmon.conf.sample.in: note that rack shutdowns can compete
	  for I/O and take longer
	* conf/upsmon.conf.sample.in: generalize the example about multi-PSU
	  servers
	* docs/config-notes.txt: update the example about multi-PSU servers
	* docs/config-notes.txt: note about upsmon with 0 PSUs for
	  just-monitoring
	* data/html/header.html.in, docs/cables/apc-rs500-serial.txt,
	  docs/cables/ge-imv-victron.txt, docs/cables/powerware.txt,
	  docs/cables/repotec.txt, docs/cables/sms.txt,
	  docs/man/apcsmart-old.txt, docs/man/apcsmart.txt,
	  docs/man/asem.txt, docs/man/bcmxcp.txt, docs/man/bcmxcp_usb.txt,
	  docs/man/belkin.txt, docs/man/belkinunv.txt, docs/man/bestfcom.txt,
	  docs/man/bestuferrups.txt, docs/man/bestups.txt,
	  docs/man/everups.txt, docs/man/genericups.txt, docs/man/index.txt,
	  docs/man/libnutclient_misc.txt, docs/man/libnutclient_tcp.txt,
	  docs/man/libupsclient-config.txt, docs/man/liebert-esp2.txt,
	  docs/man/metasys.txt, docs/man/mge-shut.txt,
	  docs/man/mge-utalk.txt, docs/man/nut-driver-enumerator.txt,
	  docs/man/nut-ipmipsu.txt, docs/man/nut-scanner.txt,
	  docs/man/nutdrv_atcl_usb.txt,
	  docs/man/nutscan_add_device_to_device.txt,
	  docs/man/nutscan_add_option_to_device.txt,
	  docs/man/nutscan_cidr_to_ip.txt,
	  docs/man/nutscan_display_parsable.txt,
	  docs/man/nutscan_display_ups_conf.txt,
	  docs/man/nutscan_free_device.txt,
	  docs/man/nutscan_get_serial_ports_list.txt,
	  docs/man/nutscan_init.txt, docs/man/nutscan_new_device.txt,
	  docs/man/nutscan_scan_avahi.txt,
	  docs/man/nutscan_scan_eaton_serial.txt,
	  docs/man/nutscan_scan_ipmi.txt, docs/man/nutscan_scan_nut.txt,
	  docs/man/nutscan_scan_snmp.txt, docs/man/nutscan_scan_usb.txt,
	  docs/man/nutscan_scan_xml_http.txt, docs/man/oneac.txt,
	  docs/man/optiups.txt, docs/man/phoenixcontact_modbus.txt,
	  docs/man/powercom.txt, docs/man/powerman-pdu.txt,
	  docs/man/rhino.txt, docs/man/richcomm_usb.txt,
	  docs/man/riello_ser.txt, docs/man/riello_usb.txt,
	  docs/man/skel.txt, docs/man/solis.txt, docs/man/tripplite.txt,
	  docs/man/ups.conf.txt, docs/man/upscli_add_host_cert.txt,
	  docs/man/upscli_connect.txt, docs/man/upscli_disconnect.txt,
	  docs/man/upscli_get.txt, docs/man/upscli_init.txt,
	  docs/man/upscli_splitaddr.txt, docs/man/upscli_splitname.txt,
	  docs/man/upscli_upserror.txt, docs/man/upsclient.txt,
	  docs/man/upscmd.txt, docs/man/upsd.conf.txt, docs/man/upsd.txt,
	  docs/man/upsd.users.txt, docs/man/upsdrvctl.txt,
	  docs/man/upsdrvsvcctl.txt, docs/man/upslog.txt,
	  docs/man/upsmon.conf.txt, docs/man/upsmon.txt, docs/man/upsrw.txt,
	  docs/man/upssched.txt, docs/man/upsset.cgi.txt,
	  docs/man/upsset.conf.txt, docs/man/upsstats.html.txt,
	  docs/man/usbhid-ups.txt, docs/man/victronups.txt: docs: fix some
	  trailing whitespaces

2021-03-12  Jim Klimov <jim@jimklimov.com>

	* drivers/dstate.c: limit alarm_buf string to fit into a dstate info
	  status, and log errors and overflows from alarm_set() [issue #960]

2021-03-02  Jim Klimov <jimklimov@gmail.com>

	* docs/man/nutdrv_qx.txt: Update nutdrv_qx.txt  Fixed typo in a new
	  masterguard paragraph

2021-03-02  Edgar Fuß <ef@math.uni-bonn.de>

	* docs/man/blazer-common.txt, docs/man/nutdrv_qx.txt,
	  docs/man/tripplite_usb.txt, docs/man/usbhid-ups.txt: Add a remark
	  that USB device numbers may be unstable  In the documentation of
	  the USB device number matching, add a remark that device numbers
	  need not to be stable across re-boots or when re-plugging the
	  device.
	* drivers/usb-common.c: USB device matching: add debug messages on
	  non-match  When failing to match the Device part, note this via
	  upsdebugx() just like when not matching any other part (VendorId,
	  ProductId, Bus, etc.).

2021-02-12  Edgar Fuß <ef@math.uni-bonn.de>

	* tools/nut-usbinfo.pl: Fix VendorID/ProductID matching  In a line
	  like { USB_DEVICE(0x06da, 0x0002),   "Phoenixtec Power","USB Cable
	  (V2.00)", &phoenixtec_subdriver },/* Masterguard A Series */ don't
	  match ProductID up to the closing parenthesis in the product name
	  string.

2021-02-11  Edgar Fuß <ef@math.uni-bonn.de>

	* docs/man/masterguard.txt, docs/man/nutdrv_qx.txt,
	  docs/nutdrv_qx-subdrivers.txt, drivers/Makefile.am,
	  drivers/nutdrv_qx.c, drivers/nutdrv_qx_masterguard.c,
	  drivers/nutdrv_qx_masterguard.h: Add Masterguard A/E driver based
	  on Q* framework  Add a new driver for Masterguard A and E series
	  based on the Q* framework (nutdrv_qx).  Based on vendor
	  documentation of both the command set and USB protocol I was both
	  asked not to disclose.  Supports "new" A700/1000/2000/3000(-19) and
	  E40/60/100(-19) (totally untested due to lack of hardware).  Still
	  sort of work in progress due to some open questions on NUT
	  integration.
	* docs/man/blazer-common.txt, docs/man/nutdrv_qx.txt,
	  docs/man/tripplite_usb.txt, docs/man/usbhid-ups.txt,
	  drivers/blazer_usb.c, drivers/libusb.c, drivers/nutdrv_qx.c,
	  drivers/riello_usb.c, drivers/tripplite_usb.c,
	  drivers/usb-common.c, drivers/usb-common.h, drivers/usbhid-ups.c:
	  Add USB device number matching  Extend the USB matching by a device
	  number (in addition to the existing bus number) by adding a Device
	  field to USBDevice_[st] and ammending the RegExp by a seventh
	  field. Maybe some #defines for the magical constants would be
	  appropriate.  Add DEBUG_EXACT_MATCH_DEVICE analogous to
	  DEBUG_EXACT_MATCH_BUS, whatever its intended usage is.  Document
	  the device field where the bus field was documented (which is not
	  the case everywhere it's actually used).

2021-02-01  Clappier, Eric <EricClappier@Eaton.com>

	* drivers/eaton-pdu-marlin-mib.c, drivers/powerware-mib.c: Fix dry
	  contacts status for EMP02

2021-01-31  TJ McConnell <tj@vergesense.com>

	* drivers/tripplite-hid.c: Move 0x3024 alphabetically. Add comment
	  about new version

2021-01-26  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/eaton-pdu-marlin-mib.c: snmp-ups: fix regression on Eaton
	  ePDU  Fix a regression that caused a mis-determination of the SNMP
	  base OID index (0 or 1, should be 1). This in turn caused a
	  mis-iteration over the outlets, from 0 to N-1 instead of 1 to N,
	  which resulted in the missing Nth outlet (last outlet of the PDU).
	  This also caused some data refresh issues
	* drivers/eaton-pdu-marlin-mib.c: snmp-ups: fix regression on Eaton
	  ePDU  Fix a regression that caused a mis-determination of the SNMP
	  base OID index (0 or 1, should be 1). This in turn caused a
	  mis-iteration over the outlets, from 0 to N-1 instead of 1 to N,
	  which resulted in the missing Nth outlet (last outlet of the PDU).
	  This also caused some data refresh issues

2021-01-23  Yifeng Li <tomli@tomli.me>

	* drivers/main.c: main.c: write upsdrv_initinfo/updateinfo() logs to
	  syslog  When a NUT driver is started (via upsdrvctl start), it runs
	  the following sequence:  1. Run as a foreground process. 2. Do some
	  basic initialization, log to stderr. 3. If not debugging: - fork()
	  - Run as a daemon, stderr off, syslog on.  The problem, however, is
	  that upsdrv_initinfo() and updateinfo() are first called before
	  forking, as a result, the log messages is only sent to stderr, not
	  syslog. On a traditional init + syslog server setup, those startup
	  messages are lost. However, those lost messages can be urgent - for
	  example, it can be a warning about a failed UPS inverter. If the
	  server is freshly started, the admin may miss them until much
	  later, or keep staring at the mysterious alarm word without finding
	  anything relevant in syslog. Similarly, other types of warnings,
	  such as a rounded ondelay value, should also be visible in syslog.
	  This patch checks the debugging flags and turn on syslog earlier
	  when it's in non-debug, non-fork mode, allowing the logs during
	  upsdrv_initinfo() and upsdrv_updateinfo() to be recorded in syslog.
	  Mailing list discussion:
	  https://alioth-lists.debian.net/pipermail/nut-upsdev/2021-January/007508.html

2021-01-23  TJ McConnell <tj@vergesense.com>

	* drivers/tripplite-hid.c, scripts/upower/95-upower-hid.rules: Add
	  AVR750U (0x3024). Use smart1500lcdt_scale for
	  voltage/current/frequence

2021-01-20  Jim Klimov <jim@jimklimov.com>

	* drivers/eaton-ats16-nm2-mib.c, drivers/eaton-ats16-nmc-mib.c:
	  eaton-ats16-nm?-mib.c: port comments from 42ity fork to clarify
	  what is going on here for mib2nut_info_t definitions
	* tools/nut-scanner/scan_snmp.c: comment about not-function pointers
	  from libnet-snmp
	* tools/nut-scanner/scan_snmp.c: fix indentations and whitespaces
	* tools/nut-scanner/scan_xml_http.c: fix indentations and whitespaces
	* tools/nut-scanner/nut-scanner.c: nut-scanner.c: some extra
	  whitespace, some missing, in longopts[]
	* drivers/delta_ups-mib.c: delta-mib.c: rename onbatt_info lookup
	  table in commented-away code sample
	* drivers/huawei-mib.c: huawei-mib.c: rename onbatt_info lookup table
	  in commented-away code sample
	* drivers/xppc-mib.c: xppc-mib.c: rename onbatt_info lookup table in
	  commented-away code sample

2021-01-08  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/snmp-ups.c: snmp-ups: fix instant commands using numeric
	  parameters  Instant commands using numeric parameters, like
	  on/off/cycle commands, were failing due to a bad value submitted
	  type (time instead of integer)   Cherry-picked from
	  https://github.com/42ity/nut/pull/120

2021-01-06  Jim Klimov <jim@jimklimov.com>

	* server/netssl.c: #include "nut_stdint.h" for limits definitions
	* clients/upscmd.c, clients/upsimage.c, clients/upsmon.c,
	  clients/upsrw.c, clients/upsstats.c, common/common.c, common/str.c,
	  drivers/al175.c, drivers/bcmxcp.c, drivers/bcmxcp_ser.c,
	  drivers/bcmxcp_usb.c, drivers/bestfortress.c, drivers/etapro.c,
	  drivers/genericups.c, drivers/metasys.c, drivers/netxml-ups.c,
	  drivers/nutdrv_siemens_sitop.c, drivers/powercom.h,
	  drivers/richcomm_usb.c, drivers/serial.c, drivers/snmp-ups.c,
	  server/upsd.c: Various sources: use nut_stdint.h where limits.h was
	  introduced recently
	* configure.ac, include/nut_stdint.h: nut_stdint.h: include limits.h
	  and make sure SIZE_MAX is defined

2020-12-29  Steve Magoun <smagoun@gmail.com>

	* drivers/macosx-ups.c: Add ups.mfr and ups.model legacy vars, fixes
	  #949

2020-12-29  Jim Klimov <jim@jimklimov.com>

	* tests/nut-driver-enumerator-test.sh: allow to pass
	  SHELL_PROGS="busybox_sh" as a single token
	* ci_build.sh: allow CI workers to say if they have functional libgd
	  (for the current compiler/ABI version) so whether it should not be
	  required

2020-12-28  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: treat helper dirs (tmp/ .inst/ CCACHE_DIR/) correctly
	  even if named FS objects are symlinks to dirs
	* docs/Makefile.am, docs/man/Makefile.am: docs/{man/,}Makefile.am:
	  parameterize EGREP and call "file" sanity checks case-insensitive
	* m4/nut_compiler_family.m4: detect Apple LLVM as CLANG

2020-12-28  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Add CPS VP1200ELCD (ValueII_1200E)
	  Closes: https://github.com/networkupstools/nut-ddl/issues/10
	* data/driver.list.in: HCL: Add Tripp Lite SMC15002URM  Closes:
	  https://github.com/networkupstools/nut/issues/812
	* data/driver.list.in: HCL: Add Cyber Power Systems BR1000ELCD
	  Closes: https://github.com/networkupstools/nut/issues/552

2020-12-27  Jim Klimov <jim@jimklimov.com>

	* drivers/richcomm_usb.c: fix size_t types for upsdebugx_hex() and
	  range-check the values
	* drivers/blazer_usb.c: fix static const struct
	* drivers/blazer_usb.c: fix whitespace
	* drivers/nutdrv_qx.c: fix static const struct
	* clients/nutclient.cpp, clients/nutclient.h:
	  clients/nutclient.{h,cpp}: explicitly request copy constructor
	  generation for exception classes
	* configure.ac, docs/developers.txt: configure.ac
	  docs/developers.txt: add a "medium" warning pre-set difficulty
	  level
	* configure.ac: document the choice rationale of no-warning macros
	* docs/developers.txt, docs/nut.dict: docs/developers.txt: document
	  the new --enable-warnings options
	* configure.ac: define a clang-minimal warning preset that our
	  codebase already survives
	* .travis.yml, configure.ac: Move comment about clang no-warning
	  selection from .travis.yml to configure.ac
	* .travis.yml: make use of BUILD_WARNFATAL=yes BUILD_WARNOPT=hard to
	  simplify the test setup specifications

2020-12-26  Jim Klimov <jim@jimklimov.com>

	* server/conf.c, server/upsd.c, server/upsd.h: server/upsd.{c,h}
	  conf.c: fix maxconn to long, to match sysconf() return value; check
	  that practical value range allows to malloc() the buffers
	* server/upsd.c: fix size_t/ssize_t types for {ssl_,}write() in
	  sendback()
	* server/netssl.c, server/netssl.h: server/netssl.{c,h}: fix
	  ssl_write()/ssl_read() to return ssize_t (like upsclient
	  net_write()/net_read())
	* server/netssl.c: fix int types for OpenSSL codepaths
	* drivers/liebert-esp2.c: fix numphases to unsigned int
	* drivers/liebert-esp2.c: fix int size_t types for read(), malloc()
	  etc.
	* drivers/liebert-esp2.c: fix size_t types for upsdebugx_hex() and
	  some indentation
	* drivers/isbmex.c: fix int size_t types for read(), malloc() etc.
	* drivers/genericups.c: fix int types for sleep()
	* drivers/genericups.c: cast termios types for bit magic
	* drivers/gamatronic.h: fix speed_t/size_t in baud_rates[] definition
	  like for bcmxcp_ser
	* drivers/gamatronic.c: fix some whitespace
	* drivers/gamatronic.c: fix int size_t types for read(), malloc()
	  etc.
	* drivers/etapro.c: constrain return value for etapro_get_response()
	  type
	* drivers/bestuferrups.c: fix size_t int type for execute()
	  (use-cases pass sizeof() anyway)
	* drivers/bestfortress.c: constrain value for usleep() in upssend()
	* drivers/bestfortress.c: constrain return value for upssend() type
	* drivers/bestfortress.c: fix size_t types for upsdebugx_hex()
	* drivers/bestfcom.c: fix size_t int type for execute() (use-cases
	  pass sizeof() anyway)
	* drivers/belkinunv.c: fix int types for read(), malloc() etc.
	* drivers/belkinunv.c: fix int types for reg (byte)
	* drivers/belkin.c: fix size_t/useconds_t int type for cnt (already
	  limited to byte range)
	* drivers/bcmxcp.c: whitespace fix indentation in
	  set_alarm_support_in_alarm_map()
	* drivers/bcmxcp.c: fix unsigned int type for index arguments in
	  set_alarm_support_in_alarm_map()
	* drivers/serial.c: fix ssize_t int type for function returns vs
	  size_t buflen argument
	* drivers/dstate.c: fix size_t int type for bufrw_max
	* drivers/main.c: fix int types for poll_interval
	* clients/upscmd.c: fix data range warnings for asserts about
	  implem-dependent overflow chances
	* clients/upsrw.c: fix data range warnings for asserts about
	  implem-dependent overflow chances
	* clients/upsclient.c: fix data range warnings for asserts about
	  implem-dependent overflow chances
	* clients/upsmon.c, clients/upsmon.h: clients/upsmon.c: fix int types
	  for power value and totalpv accounting
	* clients/upsmon.c: fix int types for sleep()
	* clients/upsimage.c: make explicit casts from floating-points into
	  int types for rendering
	* clients/upscmd.c: fix int types for timeouts from upsclient.c
	* clients/upsrw.c: fix int types for timeouts from upsclient.c
	* clients/upsclient.c: fix numq int types for verify_resp()
	* .travis.yml: move _matrix_linux_gnustd_warn_viable a bit up in
	  _matrix_required_linux listing, to get more probable failures
	  earlier
	* configure.ac: hush clang warnings about nullptr in C++ code (c++98
	  not compatible))
	* configure.ac: provide a hidden "gcc-legacy" warnings option to
	  cover previous behavior
	* ci_build.sh: allow passing --enable-warnings=... and
	  --enable-Werror=... args via BUILD_WARNOPT and BUILD_WARNFATAL
	  envvars
	* configure.ac: implement --enable-warnings=... and
	  --enable-Werror(=yes/no) to specify the presets we require to pass
	* m4/nut_arg_with.m4: add NUT_ARG_ENABLE and document the difference
	  vs NUT_ARG_WITH
	* ci_build.sh: support passing BUILD_SSL_ONCE=true to only try
	  whichever SSL implem is found, not both even if installed
	* autogen.sh: shell-check that generated configure script is
	  syntactically valid
	* m4/nut_compiler_family.m4: fix tracking nut_cv_CLANGCC and
	  determining CLANGCC=yes
	* drivers/apcsmart.c, drivers/apcsmart.h: drivers/apcsmart.{c,h}:
	  drop custom debx()/logx()/fatx()/fate() macros in favor of
	  NUT-standard ones

2020-12-25  Jim Klimov <jimklimov@gmail.com>

	* drivers/usbhid-ups.c: match_function_subdriver(): upsdebugx()
	  device matching faults to help troubleshoot driver setups

2020-12-25  Jim Klimov <jim@jimklimov.com>

	* clients/upsclient.c: make explicit a case size_t/ssize_t casting
	* clients/upsclient.c, clients/upsclient.h: clients/upsclient.{c,h}:
	  fix "timeout" type in
	  net_read/net_write/upscli_sendline_timeout/upscli_readline_timeout
	  to match upscli_select_read/upscli_select_write
	* clients/upsclient.c: fix int types for OpenSSL codepaths
	* common/common.c: fix initialization of a struct timeval (initialize
	  all fields)
	* drivers/eaton-pdu-marlin-mib.c: fix initialization of a info_lkp_t
	  (initialize all fields)
	* drivers/al175.c: assert incoming numbers, error-check the sprintf()
	  result, and comment why
	* drivers/blazer_usb.c, drivers/nutdrv_qx.c: nutdrv_qx blazer_usb:
	  report acceptable subdriver names in help()
	* drivers/bcmxcp_ser.c: add comment for per-warning pragma naming
	* drivers/bcmxcp_ser.c: fix wrong long macro name typo, for the
	  pragmas gating
	* drivers/bcmxcp_ser.c: drivers/bcmxcp_ser.h: #include <limits.h>
	  (lost in cherrypick web)
	* docs/nut.dict: add Evgeny
	* docs/nut.dict: add maintainership
	* drivers/bcmxcp_ser.c: fix nesting of macros for pragmas
	* drivers/bcmxcp_ser.c: use
	  HAVE_PRAGMAS_FOR_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_CONSTANT_OUT_OF_RANGE_COMPARE
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMAS_FOR_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_CONSTANT_OUT_OF_RANGE_COMPARE
	  (equivalent of HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TYPE_LIMITS on
	  some compilers)
	* drivers/bcmxcp_ser.c: comment in/out function contexts for the
	  pragma
	* drivers/bcmxcp_ser.c: do macro magic for
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TYPE_LIMITS_BESIDEFUNC working
	  with older compilers
	* m4/ax_c_pragmas.m4: separate the support for #pragma GCC
	  diagnostic... inside vs outside function bodies (gcc-4.4 and older
	  are upset about "inside" case)
	* drivers/bcmxcp_ser.c: cast type for printing speed_t on different
	  OSes

2020-12-24  Jim Klimov <jimklimov@gmail.com>

	* drivers/usb-common.c: usb-common.c: upsdebugx() device matching
	  faults to help troubleshoot driver setups

2020-12-23  Jim Klimov <jim@jimklimov.com>

	* docs/user-manual.txt: small typo fix
	* docs/nut.dict: nut.dict: update with project names that nut-website
	  spellchecking prefers to know
	* docs/nut.dict: nut.dict: update with project names that nut-website
	  spellchecking prefers to know
	* docs/nut.dict: nut.dict: update with project names that nut-website
	  spellchecking prefers to know

2020-12-21  Jim Klimov <jim@jimklimov.com>

	* docs/acknowledgements.txt: update persons currently involved, new
	  maintainer
	  https://alioth-lists.debian.net/pipermail/nut-upsdev/2020-November/007494.html

2020-12-16  Clappier, Eric <EricClappier@Eaton.com>

	* docs/nut-names.txt: Update nut name for sensor parent serial number
	* docs/nut-names.txt: Update nut names
	* drivers/eaton-pdu-marlin-mib.c, drivers/snmp-ups.c: Add
	  ambient.n.parent.serial for marlin epdu  Regarding dropped code
	  from snmp-ups.c - per discussion in
	  https://github.com/42ity/nut/pull/117 this was not a typo:  > It is
	  an intentional change for oid read value issue. > This allows to
	  actually retrieve an indirection value > (when an Oid points at an
	  Oid, like stood)

2020-12-15  Clappier, Eric <EricClappier@Eaton.com>

	* drivers/eaton-pdu-marlin-mib.c, drivers/powerware-mib.c: Change uid
	  and modbus address name according nut nomenclature

2020-12-15  Bi11 <Bi11gates9999@gmail.com>

	* drivers/snmp-ups.c, tools/nut-scanner/scan_snmp.c: Fix incorrect
	  fatal message for privProtocol
	* tools/nut-scanner/scan_snmp.c: Fix incorrect usmAESPrivProtocol
	  import in nut-scanner  In libnetsnmp, usmAES128PrivProtocol is a
	  pointer, while usmAESPrivProtocol is an array. This change is the
	  same as in c7cf507454bcf6f40b24b58e61c130c7772c5bf2.

2020-12-15  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/eaton-pdu-marlin-mib.c: snmp-ups: Restore legacy Eaton ePDU
	  switchability info  Use a hack to also have switchability for both
	  the unit and its outlets on legacy Eaton G2 ePDU
	* drivers/eaton-pdu-marlin-mib.c: snmp-ups: Restore legacy Eaton ePDU
	  switchability info  Use a hack to also have switchability for both
	  the unit and its outlets on legacy Eaton G2 ePDU   Partially
	  cherry-picked from 42ity fork, and bumped to their faster moving
	  MIB mapping revision number. See
	  https://github.com/42ity/nut/pull/118  As for the behavior of the
	  fix:  * on G2, the first outlet.switchable doesn't exist, so try
	  the 2nd, which is the ugly hack: try on the first outlet to see if
	  switchable  * on G3, the first is good, so flag unique does the
	  rest  Tested on MA G2 and G3.

2020-12-14  Clappier, Eric <EricClappier@Eaton.com>

	* drivers/powerware-mib.c: Add modbus_address and uuid in snmp-ups/pw
	  driver

2020-12-07  Jim Klimov <jim@jimklimov.com>

	* drivers/metasys.c: various routines: fix command_length into size_t
	* drivers/bcmxcp_io.h, drivers/bcmxcp_ser.c, drivers/bcmxcp_usb.c:
	  bcmxcp*: various routines: fix command_length into size_t
	* drivers/bcmxcp_ser.c: get_answer(): fix bytes_read, end_length and
	  length into size_t
	* drivers/bcmxcp_usb.c: get_answer(): fix bytes_read, end_length and
	  length into size_t
	* drivers/libusb.c: fix whitespace
	* drivers/bcmxcp_ser.c, drivers/bcmxcp_ser.h:
	  drivers/bcmxcp_ser.{c,h}: get_answer(): fix baud rate processing
	  into speed_t and size_t

2020-12-02  Jim Klimov <jimklimov@gmail.com>

	* drivers/solis.c: Update solis.c  Shuffle the comparison in the
	  if-clause to certainly bail out if we did not read from the port.
	* include/nut_float.h: Update nut_float.h  Consider equality to
	  epsilon to be also treated as zero
	* include/nut_float.h: Update nut_float.h  Fix copyright line

2020-12-02  Jim Klimov <jim@jimklimov.com>

	* drivers/bcmxcp.c: use size_t for upsdebugx_hex() and
	  upsdebugx_ascii() args for logged data length
	* drivers/bcmxcp.c: fix a few whitespaces (indentation)

2020-12-01  Jim Klimov <jim@jimklimov.com>

	* drivers/bestfortress.c: fix printing of ssize_t variable
	* drivers/masterguard.c: fix printing of ssize_t variable

2020-11-30  Jim Klimov <jim@jimklimov.com>

	* drivers/bestfortress.c: use size_t where it should be, for data
	  chunk length parsing
	* clients/upsstats.c: fix use of use size_t vs int-argumented
	  printf("%.*s", int, str) formatting
	* drivers/al175.c: check pointer math WRT buffer lengths passed to
	  logging
	* common/common.c, include/common.h: common.{c,h}: use size_t for
	  upsdebugx_hex() and upsdebugx_ascii() args for logged data length
	* drivers/tripplitesu.c: init_comm(): fix data types to size_t for
	  strlen() function
	* drivers/tripplitesu.c: do_command(): fix up "count" int type to be
	  unsigned
	* drivers/tripplitesu.c: do_command(): fix up "ret" int type to avoid
	  conversions
	* drivers/masterguard.c: avoid value type conversion by changing data
	  types to size_t for strlen() function
	* drivers/masterguard.c: avoid value type conversion by casting
	  explicitly the return value of strlen() function
	* clients/upsset.c: drivers/upsset.c: fix up int types to avoid
	  implicit conversions
	* clients/upsimage.c: drivers/upsimage.c: avoid value type conversion
	  by casting explicitly the return value of strlen() function
	* clients/upsimage.c: drivers/upsimage.c: fix up int types to avoid
	  conversions
	* clients/cgilib.c: drivers/cgilib.c: fix up int types to avoid
	  conversions
	* clients/upsstats.c: drivers/upsstats.c: fix up floating-point types
	  to avoid conversions and precision change
	* clients/upsstats.c: use size_t where it should be, for string
	  length related processing
	* clients/upslog.c: use size_t where it should be, for string length
	  related processing
	* clients/upslog.c: avoid implicit floating-integer conversion
	* drivers/dummy-ups.c: use size_t where it should be, for
	  numargs-related parsing
	* clients/upsclient.c: use size_t where it should be, for numargs
	  parsing
	* server/netcmds.h, server/netget.c, server/netget.h,
	  server/netinstcmd.c, server/netinstcmd.h, server/netlist.c,
	  server/netlist.h, server/netmisc.c, server/netmisc.h,
	  server/netset.c, server/netset.h, server/netssl.c, server/netssl.h,
	  server/netuser.c, server/netuser.h, server/upsd.c, server/user.c:
	  server/*: numerous upsd commands: use size_t where it should be,
	  for numargs parsing
	* server/sockdebug.c: use (and print) size_t where it should be, for
	  numargs parsing
	* drivers/dstate.c: use size_t where it should be, for numargs
	  parsing
	* clients/upssched.c: use (and print) size_t where it should be, for
	  numargs parsing
	* clients/upsmon.c: use size_t where it should be, for numargs
	  parsing
	* clients/upsset.c: use size_t where it should be, for numargs
	  parsing
	* server/conf.c: use size_t where it should be, for numargs parsing
	* drivers/snmp-ups.c: whitespace fix
	* drivers/snmp-ups.c: use size_t where it should be, for numargs
	  parsing
	* common/state.c, include/state.h, server/sstate.c: common and server
	  state.c: use size_t where it should be, for numargs and numflags
	  parsing
	* drivers/clone-outlet.c: use size_t where it should be, for numargs
	  parsing
	* drivers/clone.c: use size_t where it should be, for numargs parsing
	* server/netssl.c: avoid implicit size_t (arch-dependent) vs. PRInt32
	  (Mozilla NSS) integer conversion
	* clients/upsclient.c: avoid implicit size_t (arch-dependent) vs.
	  PRInt32 (Mozilla NSS) integer conversion
	* drivers/bestfortress.c: fix up int types to avoid implicit
	  conversions, and pre-initialize to avoid uninitialized use
	* drivers/nut-libfreeipmi.c: initialize variable to avoid potential
	  uninitialized use
	* drivers/blazer.c: initialize variable to avoid potential
	  uninitialized use and convey an error if that happens
	* drivers/powerpanel.c: initialize variable to avoid potential
	  uninitialized use and convey an error if that happens
	* drivers/solis.c: initialize variable to avoid potential
	  uninitialized use and convey an error if that happens
	* drivers/rhino.c: initialize variable to avoid potential
	  uninitialized use and convey an error if that happens
	* drivers/bestfortress.c: initialize variables to avoid potential
	  uninitialized use and null-pointer dereference if data processing
	  fails
	* drivers/cps-hid.c: employ nut_float.h for safer floating point
	  comparisons
	* drivers/snmp-ups.c: employ nut_float.h for safer floating point
	  comparisons
	* drivers/nutdrv_qx_voltronic.c: employ nut_float.h for safer
	  floating point comparisons
	* drivers/nutdrv_qx_bestups.c: employ nut_float.h for safer floating
	  point comparisons
	* drivers/nutdrv_qx.c: employ nut_float.h for safer floating point
	  comparisons
	* drivers/blazer.c: employ nut_float.h for safer floating point
	  comparisons
	* drivers/upscode2.c: employ nut_float.h for safer floating point
	  comparisons
	* drivers/solis.c: employ nut_float.h for safer floating point
	  comparisons
	* drivers/rhino.c: employ nut_float.h for safer floating point
	  comparisons
	* drivers/metasys.c: employ nut_float.h for safer floating point
	  comparisons
	* drivers/mge-hid.c: employ nut_float.h for safer floating point
	  comparisons
	* configure.ac, include/Makefile.am, include/nut_float.h: Introduce
	  nut_float.h and check more carefully for presence of math.h and/or
	  float.h in the build system
	* drivers/tripplitesu.c: avoid "bad function cast" by casting
	  explicitly the return value of the function
	* drivers/tripplite.c: avoid "bad function cast" by casting
	  explicitly the return value of the function
	* drivers/mge-xml.c: avoid "bad function cast" by casting explicitly
	  the return value of the function
	* drivers/bestfortress.c: avoid "bad function cast" by casting
	  explicitly the return value of the function
	* drivers/snmp-ups.c: fix snprintf() target buffer size from bogus
	  sizeof() determination (#926)

2020-11-29  Jim Klimov <jim@jimklimov.com>

	* drivers/nutdrv_atcl_usb.c: fix const qualifier usage
	* drivers/snmp-ups.c: fix const qualifier usage
	* drivers/snmp-ups.h: remove const qualifiers from strings in
	  snmp_info_t, we have code that writes into them
	* drivers/dstate.c: dstate_tree_dump(): fix const qualifier usage
	* drivers/bestfcom.c: avoid "bad function cast" by casting explicitly
	  the return value of the function
	* drivers/libshut.c: avoid alignment issues with buffer used actually
	  for different variable types
	* tools/nut-scanner/nutscan-ip.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_CAST_ALIGN to quiesce warnings
	  about a value we anyway receive a pointer to
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_CAST_ALIGN
	* server/sstate.c: sstate_dead(): do not shadow global varname
	  "maxage" with same-named func argument
	* drivers/snmp-ups.c: su_ups_get(): do not shadow function-scope
	  varname "value" with temporary-scope namesake
	* drivers/snmp-ups.c: snmp_ups_walk(): do not shadow global varnames
	  "(input|output|bypass)_phases" with same-named func local variables
	* drivers/upscode2.c: check_uppm(): do not shadow function-scope
	  varname "val" with temporary-scope namesake
	* drivers/libhid.c: new_report_buffer(): do not shadow global varname
	  "pDesc" with same-named func argument
	* drivers/libshut.c: do not shadow global varnames "upsfd" and
	  "device_path" with same-named func arguments in numerous routines
	* drivers/dummy-ups.c: parse_data_file(): do not shadow global
	  varname "upsfd" with same-named func argument (unused for good
	  measure)
	* clients/upsset.c: print_rw(): do not shadow global varname
	  "upsname" with same-named func argument
	* drivers/riello_usb.c: fix array initializers for sentinel entries
	* drivers/blazer_usb.c: fix array initializers for sentinel entries
	* drivers/nutdrv_qx_voltronic.c: fix array initializers for sentinel
	  entries
	* drivers/nutdrv_qx.c: fix array initializers for sentinel entries
	* drivers/apcsmart_tabs.c: fix array initializers for sentinel
	  entries
	* drivers/apcsmart_tabs.c: fix numeric 0 into pointer NULL
	* drivers/apcsmart.c: fix array initializers for sentinel entries
	* drivers/blazer_ser.c: fix array initializers for sentinel entries
	* drivers/blazer.c: fix array initializers for sentinel entries
	* drivers/powerp-txt.c: fix array initializers for sentinel entries
	* drivers/powerp-bin.c: fix array initializers for sentinel entries
	* drivers/mge-hid.c: fix array initializers for sentinel entries
	* drivers/liebert-esp2.c: upsdrv_initinfo(): fix array initializer;
	  small whitespace clean-up
	* server/upsd.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_COVERED_SWITCH_DEFAULT to
	  reinforce the defensive programming patterns
	* drivers/tripplite_usb.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_COVERED_SWITCH_DEFAULT to
	  reinforce the defensive programming patterns
	* drivers/nutdrv_qx.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_COVERED_SWITCH_DEFAULT to
	  reinforce the defensive programming patterns
	* drivers/powerp-bin.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_COVERED_SWITCH_DEFAULT to
	  reinforce the defensive programming patterns
	* drivers/upscode2.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_COVERED_SWITCH_DEFAULT to
	  reinforce the defensive programming patterns
	* drivers/usbhid-ups.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_COVERED_SWITCH_DEFAULT to
	  reinforce the defensive programming patterns
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_COVERED_SWITCH_DEFAULT
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRICT_PROTOTYPES
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_ASSIGN_ENUM
	* tools/nut-scanner/scan_nut.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRICT_PROTOTYPES to quiesce a
	  system definition of signal routines
	* drivers/dstate.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRICT_PROTOTYPES to quiesce a
	  system definition of signal routines
	* drivers/main.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRICT_PROTOTYPES to quiesce a
	  system definition of signal routines
	* clients/upssched.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRICT_PROTOTYPES to quiesce a
	  system definition of signal routines
	* clients/upsmon.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRICT_PROTOTYPES to quiesce a
	  system definition of signal routines
	* server/upsd.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRICT_PROTOTYPES to quiesce a
	  system definition of signal routines
	* tools/nut-scanner/scan_eaton_serial.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRICT_PROTOTYPES to quiesce a
	  system definition of signal routines
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_COVERED_SWITCH_DEFAULT
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRICT_PROTOTYPES
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_ASSIGN_ENUM
	* tools/nut-scanner/nutscan-ip.c: whitespace/formatting fixes
	* tools/nut-scanner/scan_nut.c: whitespace/formatting fixes
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_COVERED_SWITCH_DEFAULT
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRICT_PROTOTYPES
	* tools/nut-scanner/scan_avahi.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_ASSIGN_ENUM to quiesce a
	  thirdparty-strange usecase of enum
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_ASSIGN_ENUM
	* tools/nut-scanner/nut-scanner.c: whitespace/formatting fixes
	* tools/nut-scanner/nutscan-ip.h: whitespace/formatting fixes
	* tools/nut-scanner/nutscan-device.c: whitespace/formatting fixes
	* tools/nut-scanner/scan_avahi.c: drop semicolons after scope braces

2020-11-28  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: consider "gdlib" pkg-config presence equivalent to
	  "libgd"  There is a discrepancy between OS distro packaging names
	  and the delivered .pc file name...
	* .travis.yml: mark "gnu*-nowarn-x86-32bit" test cases evergreen

2020-11-27  Jim Klimov <jim@jimklimov.com>

	* drivers/bcmxcp.c, drivers/bcmxcp.h: drivers/bcmxcp.{h,c}: typo fix
	  CAPASITOR=>CAPACITOR
	* tests/cpputest.cpp: cpputest.cpp: be sure to be able to handle
	  exception objects
	* .travis.yml: xenial@s390x does not have "time" for us (missed one
	  beat)
	* .travis.yml: from 32-bit build envs, drop amd64 libs that confuse
	  the linker
	* .travis.yml: tell the linker to go 32-bit too
	* ci_build.sh: relax the naming of libgd options seen in the wild
	* clients/Makefile.am: AM_CXXFLAGS+=-I$(top_srcdir)/include

2020-11-26  Jim Klimov <jimklimov@gmail.com>

	* drivers/blazer_usb.c: annotate #if/#else/#endif relevant to TESTING
	  builds
	* scripts/Solaris/precheck.py: quote shell vars, and report
	  mismatches if any

2020-11-26  Jim Klimov <jim@jimklimov.com>

	* drivers/nutdrv_atcl_usb.c: copy-paste typo fix about unreachable
	  code
	* drivers/libusb.c: copy-paste typo fix about unreachable code
	* drivers/libusb.c: copy-paste typo fix about unreachable code
	* drivers/nutdrv_atcl_usb.c: copy-paste typo fix about unreachable
	  code
	* drivers/nutdrv_qx_blazer-common.c: remove overly-eager protection
	  from nonliteral format strings
	* .travis.yml: mark "gnu*-nowarn-s390x" test cases evergreen

2020-11-26  Bastien Nocera <hadess@hadess.net>

	* tools/nut-usbinfo.pl: Reindent upower rules header  This piece of
	  the code was really confusing because it looked like, at a glance
	  (and at more than a glance), that the line which we'd have read in
	  the generated rules file was commented out.  Turns out that
	  beginning of lines in the generated rules could be in the middle of
	  the line in the code that generated it. Reindent everything so that
	  each line in the output corresponds to one line in the input,
	  except for empty lines.  There are no differences in output between
	  the versions before and after this change.
	* tools/nut-usbinfo.pl: Simplify exit path  Why "!= usb" when we're
	  already checking for usb and other values above? Always go to the
	  end label if we didn't already jump to the section containing the
	  actual rules.
	* tools/nut-usbinfo.pl: Fix handling of "bind" events  See
	  https://lwn.net/Articles/837033/ for an in-depth explanation of how
	  "bind" events should be handled in udev rules.  In short: " The
	  ACTION line causes the entire file to be skipped for anything other
	  than ADD or CHANGE events; in particular, that is what will happen
	  with BIND events. That will cause properties associated with those
	  events to be lost — and the device in question to be set up
	  improperly (if at all). "

2020-11-25  Jim Klimov <jim@jimklimov.com>

	* drivers/solis.c: avoid variable-length arrays, their support became
	  optional after C99
	* drivers/nutdrv_qx.c: avoid variable-length arrays, their support
	  became optional after C99
	* drivers/apcsmart.c: avoid variable-length arrays, their support
	  became optional after C99
	* drivers/rhino.c: upsdrv_shutdown(): use sendshut()
	* drivers/rhino.c: sendshut(): handle negative returns from
	  send_command()
	* drivers/rhino.c: fix mismatched signedness in comparison
	* drivers/rhino.c: avoid variable-length arrays, their support became
	  optional after C99
	* tools/nut-scanner/scan_xml_http.c: drop semicolons after scope
	  braces
	* tools/nut-scanner/nutscan-device.c: drop semicolons after scope
	  braces
	* tools/nut-scanner/scan_ipmi.c: drop semicolons after scope braces
	* drivers/riello.c: drop extra semicolons
	* drivers/bcmxcp.c: drop semicolons after scope braces
	* tools/nut-scanner/scan_snmp.c: drop semicolons after scope braces
	* drivers/powercom.c: drop semicolons after scope braces
	* drivers/dstate.c: declare a macro for scoped block in a way that
	  semicolon may follow
	* tools/nut-scanner/scan_avahi.c: mark up NUT_UNUSED_VARIABLEs
	* tools/nut-scanner/scan_ipmi.c: mark up NUT_UNUSED_VARIABLEs
	* tools/nut-scanner/scan_xml_http.c: mark up NUT_UNUSED_VARIABLEs
	* tools/nut-scanner/scan_snmp.c: mark up NUT_UNUSED_VARIABLEs
	* tests/example.cpp, tests/nutclienttest.cpp: tests/nutclienttest.cpp
	  example.cpp: wrap into
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_GLOBAL_CONSTRUCTORS et al to
	  avoid warnings for CPPUnit macro implementation (boils down to
	  static vars)
	* tests/cpputest.cpp, tests/example.cpp, tests/nutclienttest.cpp,
	  tests/nutlogtest.c: tests/*.{c,cpp}: update legaleze headings
	* tests/example.cpp: fix casting
	* tests/nutclienttest.cpp: fix CPPUNIT assert after nullptr
	* tests/nutclienttest.cpp: fix NULL => nullptr
	* tests/nutclienttest.cpp: fix casting
	* tests/Makefile.am: fix delivery and tracking of CPPUNITTEST(ER)SRC
	* tests/nutlogtest.c: add more tests to investigate NUT_STRARG()
	  behaviors
	* configure.ac, include/str.h, m4/ax_c_pragmas.m4:
	  m4/ax_c_pragmas.m4, str.h => common.h: introduce
	  HAVE_PRINTF_STRING_NULL and NUT_STRARG(x) macro (for issue #904)
	* tests/nutlogtest.c: use
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_FORMAT_OVERFLOW detection to
	  quiesce warnings about "%s" resolving from NULL pointer  First shot
	  at issue NUT #904
	* m4/ax_c_pragmas.m4: introduce
	  HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_FORMAT_OVERFLOW detection  First
	  shot at issue NUT #904
	* tests/cpputest.cpp: print final result code more comprehensibly
	  (especially since process exit code is inverted)
	* clients/Makefile.am: be sure to use NUT libcommon for CXX client
	  builds
	* clients/nutclient.cpp, clients/nutclient.h:
	  clients/nutclient.{h,cpp}: move virtual destructors of exception
	  classes into CPP file to bolt a linker unit (avoid Weak Vtables
	  warnings and related build overheads)
	* clients/nutclient.cpp: (presumed) typo fix - line ended with comma
	  not semicolon
	* clients/nutclient.cpp: quiesce warning and make visible the unused
	  variable
	* clients/Makefile.am: define HAVE_NUTCOMMON for NUT C++ builds
	* clients/nutclient.cpp: use pragmas for -Wexit-time-destructors and
	  -Wglobal-constructors handling for an std:string static variable
	* m4/ax_c_pragmas.m4: define pragmas for -Wexit-time-destructors and
	  -Wglobal-constructors handling
	* clients/nutclient.cpp, clients/nutclient.h:
	  clients/nutclient.{h,cpp}: align strarr_alloc() type with xcalloc()
	  it uses => size_t
	* clients/nutclient.cpp: fix old-style C casts into static_cast<>s
	* clients/nutclient.cpp, clients/nutclient.h: clients/nutclient.cpp:
	  for (clang) c++ builds with C++11/17/20, avoid warnings about C++98
	  compatibility that we do not claim anyway - quiesce in C++ source
	* m4/ax_c_pragmas.m4: for (clang) c++ builds with C++11/17/20, avoid
	  warnings about C++98 compatibility that we do not claim anyway -
	  check that we have pragmas for that
	* clients/nutclient.h: align method docs with param names
	* tools/nut-scanner/scan_snmp.c: do not wrap variable definitions
	  into parentheses like function pointers
	* drivers/al175.c: declare function(void) prototypes explicitly
	* drivers/netxml-ups.c: netxml_alarm_subscribe(): explicitly cast
	  range-limited int conversions
	* drivers/powercom.c: wrap unreachable exit() added due to earlier
	  compiler warnings with "ifndef HAVE___ATTRIBUTE__NORETURN" to avoid
	  opposite warnings now
	* drivers/powerman-pdu.c: annotate upsdrv_shutdown() with noreturn
	  attr
	* drivers/powercom.c: annotate upsdrv_shutdown() with noreturn attr
	* drivers/riello_usb.c: annotate shutdown*() with noreturn attr
	* drivers/powercom.c: annotate shutdown*() with noreturn attr
	* drivers/al175.c: annotate upsdrv_shutdown() with noreturn attr
	* clients/upsmon.c: annotate forceshutdown() with noreturn attr
	* clients/upsimage.c: wrap unreachable exit() added due to earlier
	  compiler warnings with "ifndef HAVE___ATTRIBUTE__NORETURN" to avoid
	  opposite warnings now
	* clients/upsimage.c: annotate lots of routines with noreturn attr
	* tools/nut-scanner/scan_avahi.c: mark up NUT_UNUSED_VARIABLEs
	* tools/nut-scanner/scan_ipmi.c: mark up NUT_UNUSED_VARIABLEs
	* tools/nut-scanner/scan_xml_http.c: mark up NUT_UNUSED_VARIABLEs
	* tools/nut-scanner/scan_snmp.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/netxml-ups.c: align method docs with param names
	* drivers/netxml-ups.c: align method docs with supported keywords
	* drivers/al175.c: align method docs with param names
	* drivers/hidparser.c: satisfy pedantic macro parser (defined vs.
	  used value)
	* drivers/libshut.c: satisfy pedantic macro parser (defined vs. used
	  value)
	* drivers/nutdrv_qx.c: wrap unreachable exit() added due to earlier
	  compiler warnings with "ifndef HAVE___ATTRIBUTE__NORETURN" to avoid
	  opposite warnings now
	* .travis.yml: xenial@s390x does not have "time" for us
	* drivers/riello_usb.c: do not hijack system "errno" definition, and
	  no use for local var of that name found anyway
	* drivers/powerman-pdu.c: do not assign invalid value not from enum
	  range, especially when for no reason other than to have an un-used
	  initial value
	* drivers/tripplite_usb.c: cover all values of enum in a switch()
	  Note: everything not covered before this PR got aliased into
	  default cases. I do not know the hardware and models to rule this
	  out otherwise, possibly assignments of binary and/or smart protocol
	  (lack of?) support are now wrong.
	* drivers/powerp-bin.c: cover all values of enum in a switch()
	* drivers/bestfcom.c: do not "break" just after "fatalx()"
	* drivers/bcmxcp.c: do not "break" just after "return"
	* common/strerror.c: do not warn about unreachable code in the web of
	  ifdef built blocks
	* drivers/liebert-esp2.c: fix indentation
	* drivers/nutdrv_atcl_usb.c: do not warn about nonliteral format
	  string in this case
	* drivers/richcomm_usb.c: do not warn about nonliteral format string
	  in this case
	* drivers/snmp-ups.c: various routines: do not warn about nonliteral
	  format string in these cases
	* drivers/nutdrv_qx_voltronic.c: various routines: do not warn about
	  nonliteral format string in these cases
	* drivers/nutdrv_qx.c: do not warn about nonliteral format string in
	  this case
	* drivers/powerp-bin.c: do not warn about nonliteral format string in
	  this case
	* drivers/usbhid-ups.c: do not warn about nonliteral format string in
	  this case
	* drivers/liebert-esp2.c: do not warn about nonliteral format string
	  in these cases
	* drivers/liebert-esp2.c: rename scope-local 'val' variables that
	  shadow another from same routine
	* drivers/belkinunv.c: do not warn about nonliteral format string in
	  this case
	* drivers/bcmxcp.c: do not warn about nonliteral format string in
	  this case
	* drivers/serial.c: various routines: do not warn about nonliteral
	  format string in these cases
	* clients/upsset.c: clients/drivers: error_page(): do not warn about
	  nonliteral format string in this case
	* clients/upsmon.c: clients/drivers: do_notify(): do not warn about
	  nonliteral format string in this case
	* clients/upsimage.c: clients/drivers: drawbar() noimage(): do not
	  warn about nonliteral format string in this case
	* clients/upsclient.c: build_cmd(): do not warn about nonliteral
	  format string in this case
	* clients/upsclient.c: upscli_strerror(): do not warn about
	  nonliteral format string in this case
	* tools/nut-scanner/nutscan-display.c: declare
	  nutscan_device_type_string[] file-local variable as static, and fix
	  its indentation
	* clients/nutclient.h, tests/nutclienttest.cpp:
	  tests/nutclienttest.cpp: add tests on Device, Variable and Command
	  copying by assignment and by constructor

2020-11-24  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: Issue #823 follow-up: add s390x (BigEndian) builds in
	  Travis CI
	* clients/nutclient.cpp: whitespace fixes (indentations, blank lines)
	* clients/nutclient.h: whitespace fixes (indentations)
	* .travis.yml: run gnu17-clang-8-nowarn-ARM-64bit case in fightwarn
	  branches
	* .travis.yml: annotate clearer the different allowed_failure OS
	  build sections
	* .travis.yml: point all GCC -std=*++99 to *-98  I thought it was an
	  older GCC quirk, but even new ones complain:  g++: error:
	  unrecognized command-line option '-std=gnu++99'; did you mean
	  '-std=gnu++98'? g++ (FreeBSD Ports Collection) 10.0.0 20191222
	  (experimental) Copyright (C) 2019 Free Software Foundation, Inc.
	  This is free software; see the source for copying conditions.
	  There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
	  PARTICULAR PURPOSE.

2020-11-23  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: work around poor packaging of multilib perl in ubuntu
	* .travis.yml: define a &deps_driverlibs_cross_i386 list for
	  cross-builds (x86 32-bit)
	* .travis.yml: for x86-32 builds with gnu17 standard, try to change
	  install order for g++-multilib
	* .travis.yml: for x86-32 builds with gnu99 standard, avoid
	  g++-multilib
	* ci_build.sh: warn if libgd is not seen and a "default-all-errors"
	  build might go without CGI binaries
	* drivers/snmp-ups.c, drivers/snmp-ups.h: drivers/snmp-ups*.{c,h}:
	  export *_info vars to avoid not-used allegations
	* drivers/apcupsd-ups.h: comment away status_info[] as currently
	  un-used
	* drivers/riello.c, drivers/riello.h, drivers/riello_ser.c,
	  drivers/riello_usb.c: drivers/riello*.{c,h}: properly export
	  variables shared between driver subtypes
	* drivers/nut-libfreeipmi.c: comment away ipmi_config as currently
	  un-used
	* drivers/mge-xml.c, drivers/netxml-ups.c, drivers/netxml-ups.h:
	  drivers/netxml/mge-xml*.{c,h}: export shutdown_duration more
	  usefully
	* drivers/riello.h, drivers/riello_ser.c, drivers/riello_usb.c:
	  drivers/riello*.{c,h}: export get_ups_statuscode() to avoid
	  not-used allegations
	* drivers/libshut.c: fix pre-declaration of LIBshut_set_report()
	* drivers/al175.c: declare ACT methods to keep compiler happy even if
	  some are not currently used
	* drivers/bcmxcp.c: comment away FreqTol as currently un-used
	* tools/nut-scanner/nutscan-display.c: use nut-scan.h header
	* tools/nut-scanner/nutscan-init.c: tools/nut-scanner/nutscan-init.h:
	  use its own header
	* server/netcmds.h: declare function(non-void!) prototype explicitly
	* .travis.yml: mark gnuXX-gcc-*-arm64 test cases as evergreen
	* .travis.yml: separate ARM64 test case matrices into ..._viable and
	  ..._fatal subsets
	* .travis.yml: introduce
	  NUT_MATRIX_TAG="gnu17-gcc-9-nowarn-ARM-64bit" test case
	* .travis.yml: drop gcc-multilib in ARM builds, seems missing in
	  Debian
	* .travis.yml: drop arm-32bit builds, seems a no-go on Travis quickly
	* .travis.yml: Issue #823 follow-up: add ARM 32-bit and 64-bit builds
	  in Travis CI
	* m4/nut_report_feature.m4: report the compiler tools and flags
	  ultimately applied to this build
	* .gitignore: GitIgnore configure-test.docbuild* dirs
	* .travis.yml: separate the matrix for
	  _matrix_freebsd_gnustd_warn_viable and ..._fatal cases
	* .travis.yml: mark "gnuXX-gcc-freebsd-warn" cases as evergreen to
	  keep that way
	* .travis.yml: on freebsd, `pkg install libgd` explicitly (needs
	  sudo)
	* .travis.yml: introduce freebsd test cases with warnings (typo fix)

2020-11-22  Jim Klimov <jim@jimklimov.com>

	* clients/nutclient.h: declare strarr routines to be seen
	* tools/nut-scanner/scan_xml_http.c: expose load_library() routine
	* server/netcmds.h: declare function(void) prototype explicitly
	* tools/nut-scanner/scan_snmp.c: expose load_library() routine
	* clients/upslog.h: declare function(non-void*) prototype explicitly
	* tools/nut-scanner/scan_eaton_serial.c: declare multiple file-local
	  routines as static
	* tools/nut-scanner/scan_avahi.c: expose load_library() routine
	* tools/nut-scanner/scan_usb.c: expose load_library() routine
	* tools/nut-scanner/scan_ipmi.c: declare a file-local routine as
	  static
	* tools/nut-scanner/scan_nut.c: expose load_library() routine
	* tools/nut-scanner/scan_ipmi.c: expose load_library() routine
	* drivers/nut-ipmi.h: declare function(void) prototype explicitly
	* drivers/apcsmart.c: declare multiple file-local routines as static
	* drivers/powercom.c: declare multiple file-local variables as static
	* drivers/oneac.c: declare multiple file-local routines as static
	* drivers/libshut.c: declare multiple file-local routines as static
	* drivers/microdowell.c: rectify whitespaces (indentations and blank
	  lines)
	* drivers/microdowell.c: declare multiple file-local routines as
	  static
	* drivers/microdowell.c: declare a driver-local variable as static
	* drivers/metasys.c: declare multiple file-local routines as static
	* drivers/isbmex.c: declare multiple file-local routines as static
	* drivers/gamatronic.c: do not mark common routine as static
	* drivers/gamatronic.c: declare multiple file-local routines as
	  static
	* drivers/bestfortress.c: declare a file-local routine as static
	* drivers/bestfcom.c: declare multiple file-local routines as static
	* drivers/bestfcom.c: declare a driver-local variable as static
	* drivers/bcmxcp_ser.c: declare a file-local routine as static
	* drivers/al175.c: declare multiple file-local routines as static
	* server/conf.c: declare a file-local variable as static
	* server/user.c: declare multiple file-local variables as static, and
	  fix their indentation
	* server/upsd.c: declare multiple file-local routines as static
	* server/upsd.c: declare multiple file-local variables as static, and
	  fix their indentation
	* server/netcmds.h: declare a file-local variable as static
	* tools/nut-scanner/nutscan-serial.c: declare a file-local variable
	  as static
	* tools/nut-scanner/nut-scan.h: declare function(void) prototype
	  explicitly
	* tools/nut-scanner/nutscan-device.h: declare function(void)
	  prototype explicitly
	* tools/nut-scanner/scan_snmp.c: declare multiple file-local
	  variables as static
	* tools/nut-scanner/nut-scanner.c: declare a file-local routine as
	  static
	* tools/nut-scanner/nut-scanner.c: declare multiple file-local
	  variables as static
	* drivers/nut-libfreeipmi.c: declare function(void) prototype
	  explicitly
	* drivers/nut-libfreeipmi.c: declare multiple file-local variables as
	  static
	* drivers/nut-ipmipsu.c: declare multiple file-local variables as
	  static
	* drivers/powerman-pdu.c: declare multiple file-local variables as
	  static
	* drivers/netxml-ups.c: declare a driver-local variable as static
	* drivers/bcmxcp_usb.c: declare multiple file-local variables as
	  static
	* drivers/apc-hid.c: declare multiple file-local variables as static
	* drivers/emerson-avocent-pdu-mib.c: declare multiple file-local
	  variables as static
	* drivers/masterguard.c: declare multiple file-local variables as
	  static
	* drivers/Makefile.am, drivers/bcmxcp_ser.c, drivers/bcmxcp_ser.h,
	  tools/nut-scanner/scan_eaton_serial.c: Introduce bcmxcp_ser.h to
	  provide as extern some variables from the driver also used in
	  nut-scanner
	* drivers/raritan-px2-mib.c: declare a driver-local variable as
	  static
	* drivers/snmp-ups.h: clients/snmp-ups.h: declare some setter/getter
	  routines to be seen
	* drivers/snmp-ups.h: declare function(void) prototype explicitly
	* drivers/snmp-ups.c: declare multiple file-local routines as static
	* drivers/snmp-ups.c: declare multiple file-local variables as static
	* drivers/nutdrv_qx_bestups.c: declare multiple file-local variables
	  as static
	* drivers/riello_usb.c: declare multiple file-local routines as
	  static
	* drivers/riello_usb.c: declare multiple file-local variables as
	  static
	* drivers/riello_ser.c: declare multiple file-local routines as
	  static
	* drivers/riello_ser.c: declare multiple file-local variables as
	  static
	* drivers/riello.h: declare function(void) prototype explicitly
	* drivers/riello.c: declare multiple file-local variables as static
	* drivers/apcupsd-ups.h: declare a driver-local variable as static
	* drivers/apcsmart-old.h: declare multiple file-local variables as
	  static
	* drivers/victronups.c: declare multiple file-local variables as
	  static
	* drivers/mge-hid.c: declare multiple file-local variables as static
	* drivers/mge-hid.c: end all info_lkp_t arrays with sentinel entries
	* drivers/apc-hid.h, drivers/libhid.h: Move "extern int
	  max_report_size;" declaration from drivers/apc-hid.h to more
	  suitable drivers/libhid.h
	* drivers/mge-utalk.c: declare a driver-local variable as static
	* drivers/mge-utalk.h: declare a driver-local variable as static
	* drivers/metasys.c: declare multiple file-local variables as static
	* drivers/tripplite_usb.c: declare multiple file-local routines as
	  static
	* tools/nut-scanner/nutscan-serial.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (nonliteral format
	  strings)
	* drivers/nutdrv_qx_voltronic-qs-hex.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (nonliteral format
	  strings)
	* drivers/nutdrv_qx_voltronic-qs.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (nonliteral format
	  strings)
	* drivers/nutdrv_qx_mecer.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (nonliteral format
	  strings)
	* drivers/nutdrv_qx_blazer-common.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (nonliteral format
	  strings)
	* drivers/nutdrv_qx_bestups.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (nonliteral format
	  strings)
	* drivers/apcupsd-ups.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (nonliteral format
	  strings)
	* drivers/blazer.c: fix diags pragmas to use our configured-support
	  macros for cleaner fencing (nonliteral format strings)
	* drivers/powerp-txt.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (nonliteral format
	  strings)
	* drivers/mge-utalk.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (nonliteral format
	  strings)
	* drivers/bestfortress.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (nonliteral format
	  strings)
	* drivers/serial.c: fix diags pragmas to use our configured-support
	  macros for cleaner fencing (nonliteral format strings)
	* drivers/dstate.c: fix diags pragmas to use our configured-support
	  macros for cleaner fencing (nonliteral format strings)
	* clients/upssched.c: fix diags pragmas to use our configured-support
	  macros for cleaner fencing (nonliteral format strings)
	* common/common.c: fix diags pragmas to use our configured-support
	  macros for cleaner fencing (nonliteral format strings)
	* drivers/gamatronic.c: rectify whitespaces (indentations and blank
	  lines)
	* include/timehead.h: satisfy pedantic macro parser (defined vs. used
	  value)
	* m4/ax_c_pragmas.m4: alarm if bogus tests did not fail
	* m4/ax_c_pragmas.m4: adapt to gcc vs clang CLI capabilities
	* configure.ac, m4/nut_compiler_family.m4: Introduce
	  m4/nut_compiler_family.m4 detection
	* drivers/tripplite_usb.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (unreachable code)
	* drivers/nutdrv_atcl_usb.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (unreachable code)
	* drivers/libusb.c: fix diags pragmas to use our configured-support
	  macros for cleaner fencing (unreachable code)
	* drivers/richcomm_usb.c: fix diags pragmas to use our
	  configured-support macros for cleaner fencing (unreachable code)
	* configure.ac, m4/ax_c_pragmas.m4: Introduce m4/ax_c_pragmas.m4
	* .travis.yml: curiously, gcc-7 in Travis does not alias -std=gnu++99
	  to canonic gnu++98
	* autogen.sh: do not hide the progress of autoreconf
	* ci_build.sh: fix whitespace
	* ci_build.sh: parameterize $CONFIGURE_SCRIPT as it may be called
	  differently on some platforms
	* .travis.yml: amend cygwin bin files ACLs to let them execute
	  Thanks https://stackoverflow.com/a/4493653/4715872 for the hint
	* .travis.yml: use choco bins in PATH also with /cygdrive/ prefix
	  just in case
	* .travis.yml: use cygwin bins in PATH also with /cygdrive/ prefix
	  just in case
	* .travis.yml: allow to skip cygwin autotools install if it was done
	  earlier and cached
	* .travis.yml: add _matrix_freebsd_gnustd_warn to _matrix_freebsd
	* .travis.yml: introduce freebsd test cases with nowarn and gnu17
	* .travis.yml: introduce freebsd test cases with warnings
	* .travis.yml: mark "gnu99-gcc-freebsd-nowarn" and
	  "gnu99-clang-freebsd-nowarn" as required
	* ci_build.sh: as of now, skip building cgi (needs libgd) on freebsd
	  too, for "default-all-errors" test cases
	* .travis.yml: define simple freebsd scenarios

2020-11-21  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: use cygwin bins as last resort (e.g. for autoconf)
	* .travis.yml: Revert ".travis.yml: run Windows test cases with
	  cygwin bash"  This reverts commit
	  4592860aa82a208969eb1ae3ac2ec1f96e77bc07.

2020-11-20  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: explicit support on 64-bit Debianish systems for "gcc
	  -m32" at least appears with gcc-multilib and g++-multilib packages
	* common/upsconf.c: conf_args(): fix numargs type
	* common/str.c: str_to_{u,}short{,_strict}() routines: explicit cast
	  from temporary variable to return-value type
	* common/common.c: common/common.c: snprintfcat(): replace asserts by
	  negative returns (and errno where applicable)
	* common/common.c: common/common.c: snprintfcat(): sort out the messy
	  return types (avoid implicit cast in verification assert)
	* drivers/genericups.h: declare a driver-local variable as static
	* drivers/gamatronic.h: declare multiple file-local variables as
	  static
	* drivers/bestuferrups.c: declare a driver-local variable as static
	* drivers/dummy-ups.c: declare multiple file-local variables as
	  static
	* drivers/dummy-ups.h: declare a driver-local variable as static
	* drivers/bestuferrups.c: declare a file-local variable as static
	* drivers/bestfortress.c: declare a file-local variable as static
	* drivers/belkinunv.c: declare multiple file-local variables as
	  static
	* drivers/bcmxcp_ser.c: declare multiple file-local variables as
	  static
	* drivers/bcmxcp.c: declare multiple file-local variables as static
	* drivers/main.c: declare multiple file-local variables as static,
	  and fix their indentation
	* clients/upssched.c: declare multiple file-local variables as
	  static, and fix their indentation
	* clients/upsmon.h: declare file-local variable as static: struct
	  notifylist[]
	* clients/upsset.c: declare multiple file-local variables as static,
	  and fix their indentation
	* clients/upsimagearg.h: declare file-local variable as static:
	  struct imgarg[]
	* clients/status.h: declare file-local variable as static: struct
	  stattab[]
	* clients/upslog.h: declare file-local variable as static: struct
	  logcmds[]
	* clients/upsclient.c: declare file-local variable as static: struct
	  upscli_errlist[]
	* common/common.c: various routines: do not warn about nonliteral
	  format string in these cases
	* drivers/gamatronic.c: fix indentation and scope whitespace
	* drivers/gamatronic.c: fix trailing whitespace
	* common/common.c: cleaner macro processing for BUILD_64
	* drivers/nutdrv_atcl_usb.c: do not warn about unreachable code where
	  we handle a legacy off-chance that fatalx() might not exit the
	  program
	* drivers/richcomm_usb.c: do not warn about unreachable code where we
	  handle a legacy off-chance that fatalx() might not exit the program
	* drivers/libusb.c: do not warn about unreachable code where we
	  handle a legacy off-chance that fatalx() might not exit the program
	* server/upsd.c: a move "help" switch() handling to default case
	* server/upsd.c: a switch() default needs no break
	* drivers/upsdrvctl.c: a switch() default needs no break
	* drivers/riello_usb.c: wrap unreachable exit() added due to earlier
	  compiler warnings with "ifndef HAVE___ATTRIBUTE__NORETURN" to avoid
	  opposite warnings now
	* drivers/blazer_usb.c: wrap unreachable exit() added due to earlier
	  compiler warnings with "ifndef HAVE___ATTRIBUTE__NORETURN" to avoid
	  opposite warnings now
	* drivers/tripplite_usb.c: wrap unreachable exit() added due to
	  earlier compiler warnings with "ifndef HAVE___ATTRIBUTE__NORETURN"
	  to avoid opposite warnings now
	* drivers/tripplite_usb.c: control_outlet(): do not warn about
	  syntactic "break;" after returns in conditionals
	* drivers/usbhid-ups.c: wrap unreachable exit() added due to earlier
	  compiler warnings with "ifndef HAVE___ATTRIBUTE__NORETURN" to avoid
	  opposite warnings now
	* drivers/metasys.c: a switch() default needs no break, especially
	  not after fatalx()
	* drivers/dummy-ups.c: a switch() default needs no break, especially
	  not after fatalx()
	* .gitignore: GitIgnore temporary dirs made by configure script
	  (remain around if it is aborted)
	* clients/upsmon.c: wrap unreachable exit() added due to earlier
	  compiler warnings with "ifndef HAVE___ATTRIBUTE__NORETURN" to avoid
	  opposite warnings now
	* clients/upsmon.c: wrap unreachable switch()-break after help() with
	  "ifndef HAVE___ATTRIBUTE__NORETURN" to avoid warnings
	* clients/upslog.c: wrap unreachable switch()-break after help() with
	  "ifndef HAVE___ATTRIBUTE__NORETURN" to avoid warnings
	* clients/upscmd.c: wrap unreachable exit() added due to earlier
	  compiler warnings with "ifndef HAVE___ATTRIBUTE__NORETURN" to avoid
	  opposite warnings now
	* clients/upsc.c: wrap unreachable exit() added due to earlier
	  compiler warnings with "ifndef HAVE___ATTRIBUTE__NORETURN" to avoid
	  opposite warnings now
	* server/upsd.c: wrap unreachable exit() added due to earlier
	  compiler warnings with "ifndef HAVE___ATTRIBUTE__NORETURN" to avoid
	  opposite warnings now
	* include/attribute.h: align with AX_C___ATTRIBUTE__ autoconf macro
	* m4/ax_c___attribute__.m4: extend to declare support for certain
	  __attribute__((...)) use-cases of interest to NUT
	* configure.ac, m4/ax_c___attribute__.m4: configure.ac: introduce
	  AX_C___ATTRIBUTE__ from gnu.org
	* server/upsd.c: annotate help() with noreturn attr
	* drivers/nut-ipmipsu.c: annotate upsdrv_shutdown() with noreturn
	  attr
	* drivers/bcmxcp_usb.c: annotate nutusb_open_error() with noreturn
	  attr
	* drivers/bcmxcp_usb.c: fix indenting whitespace
	* drivers/riello_ser.c: annotate upsdrv_shutdown() with noreturn attr
	* drivers/blazer.c: annotate upsdrv_shutdown() with noreturn attr
	* drivers/dummy-ups.c: annotate upsdrv_shutdown() with noreturn attr
	* clients/upsmon.c: annotate several routines with noreturn attrs
	* clients/upsmon.c: help(): do not shadow global varname "progname"
	  with same-named func argument
	* clients/upsset.c: annotate several routines with noreturn attrs
	* clients/upsimage.c: annotate drawimage() with noreturn attr
	* clients/upslog.c: annotate help() with noreturn attr

2020-11-19  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: for windows builds, add /C/tools/cygwin/bin to PATH
	* .travis.yml: define a NUT_MATRIX_TAG="gnu99-clang-win-warn" test
	  case for completeness

2020-11-18  Jim Klimov <jimklimov@gmail.com>

	* scripts/Solaris/precheck.py: modernize calling sub-processes for
	  Python 2.6+ and 3+ (keep original way for older systems compat)

2020-11-18  Jim Klimov <jim@jimklimov.com>

	* drivers/tripplite.c: upsdrv_initinfo(): use a literal format string
	* tools/nut-scanner/nutscan-serial.c: do not warn about nonliteral
	  format string in this case
	* drivers/nutdrv_qx_voltronic-qs-hex.c: various routines: do not warn
	  about nonliteral format string in these cases
	* drivers/nutdrv_qx_voltronic-qs.c: do not warn about nonliteral
	  format string in this case
	* drivers/nutdrv_qx_mecer.c: various routines: do not warn about
	  nonliteral format string in these cases
	* drivers/nutdrv_qx_blazer-common.c: various routines: do not warn
	  about nonliteral format string in these cases
	* drivers/nutdrv_qx_bestups.c: various routines: do not warn about
	  nonliteral format string in these cases
	* drivers/apcupsd-ups.c: do not warn about nonliteral format string
	  in this case
	* drivers/blazer.c: various routines: do not warn about nonliteral
	  format string in these cases
	* drivers/powerp-txt.c: do not warn about nonliteral format string in
	  this case
	* drivers/mge-utalk.c: various routines: do not warn about nonliteral
	  format string in this case
	* drivers/bestfortress.c: setinfo_float(): comment about a casting
	  problem, and do not warn about nonliteral format string in this
	  case
	* drivers/bestfortress.c: do not warn about nonliteral format string
	  in this case
	* drivers/serial.c: do not warn about nonliteral format string in
	  this case
	* drivers/dstate.c: various routines: do not warn about nonliteral
	  format string in this case
	* clients/upssched.c: send_to_one(): do not warn about nonliteral
	  format string in this case
	* .travis.yml: fix typo in recent fix for clang warnings
	* drivers/dstate.h: dstate_setaux(): fix missed type change for "aux"
	* drivers/dstate.c: dstate_setaux(): fix missed type change for "aux"
	* .gitignore: GitIgnore NetBeans project directory

2020-11-17  Jim Klimov <jim@jimklimov.com>

	* drivers/phoenixcontact_modbus.c: mrir(): do not shadow global
	  varname "ctx" with same-named func argument
	* drivers/usbhid-ups.c: possibly_supported(): do not shadow global
	  varname "hd" with func argument "hd"
	* drivers/riello_ser.c: riello_serialcomm(): do not shadow global
	  varname "bufIn" with same-named func argument
	* tools/nut-scanner/scan_eaton_serial.c: shut_synchronise(): do not
	  shadow global varnames "upsfd" (from scan_eaton_serial.c and
	  main.c) with func argument "upsfd"
	* clients/nutclient.cpp, clients/nutclient.h: nutclient.cpp: match a
	  copy constructor with a copy assignment operator (Device, Variable,
	  Command classes)
	* common/common.c: snprintfcat(): do not warn about nonliteral format
	  string in this case
	* server/upsd.c: help(): do not shadow global varnames "progname"
	  (from upsd.c and main.c) with func argument "progname"
	* drivers/upsdrvctl.c: annotate help() with noreturn attr
	* drivers/macosx-ups.c: annotate upsdrv_shutdown() with noreturn attr
	* drivers/nutdrv_qx.c: annotate upsdrv_shutdown() with noreturn attr
	* drivers/apcupsd-ups.c: annotate upsdrv_shutdown() with noreturn
	  attr
	* drivers/ivtscd.c: annotate upsdrv_shutdown() with noreturn attr
	* drivers/clone.c: annotate upsdrv_shutdown() with noreturn attr
	* drivers/skel.c: annotate upsdrv_shutdown() with noreturn attr
	* drivers/liebert.c: annotate upsdrv_shutdown() with noreturn attr
	* drivers/serial.c: annotate ser_open_error() with noreturn attr
	* drivers/dstate.c: annotate sock_fail() with noreturn attr
	* drivers/main.c: annotate forceshutdown() with noreturn attr
	* common/parseconf.c: annotate pconf_fatal() with noreturn attr
	* scripts/augeas/gen-nutupsconf-aug.py: drop unused variables
	  Originally PR meant to drop "global" modifier outside a local
	  function context, but found that nothing defines or uses these
	  three names. Must be some leftover from planned but unfinished
	  development.  Re-ran ./autogen.sh and it generates the same file
	  for the build.
	* drivers/powerman-pdu.c: query_one() query_all(): do not shadow
	  global varname "pm" with same-named func argument
	* drivers/tripplite_usb.c: subdriver_match_func(): do not shadow
	  global varname "hd" with func argument "hd"
	* drivers/mge-xml.c: numerous routines: do not shadow global varname
	  "val" (for XML element temp store?) with same-named func argument
	* drivers/netxml-ups.c: send_http_request(): do not shadow global
	  varnames "session" and "uri" with func arguments
	* drivers/upscode2.c: upscode2.c: upsc_setstatus(): do not shadow
	  global varname "status" with func argument "status"
	* drivers/usbhid-ups.c: callback(): do not shadow global varname
	  "udev" with func argument "udev"
	* drivers/usbhid-ups.c: callback(): do not shadow global varname "hd"
	  with func argument "hd"
	* drivers/riello.c: riello_calc_CRC(): change data type to fix
	  comparisons
	* drivers/powercom.c: output_voltage(): avoid a multiplication
	  overflow by casting
	* server/upsd.c: upsd.c: actually include signal.h from system
	* common/common.c: upsdebug_hex() / upsdebug_ascii(): fix const-ness
	  of buf casting
	* common/common.c: get_libname(): fix type to receive strlen()
	* common/state.c, drivers/dstate.c, include/state.h, server/netget.c:
	  state.c dstate.c etc.: fix st_tree_t->aux to "long" as we convert
	  via strtol()
	* common/parseconf.c: addchar(): signedness-aware trim of ctx->ch
	  range
	* common/common.c: mark search_paths[] as a static array
	* common/common.c: snprintfcat(): sort out the messy return types
	* common/common.c: sendsignalfn(): fix pid to "long" as we convert
	  via strtol()
	* common/common.c: writepid(): fix data type for umask()
	* common/parseconf.c: parseconf.c: add_arg_word(): fix argpos to
	  size_t, we do not expect negative offsets
	* clients/upsclient.c, clients/upsclient.h, common/common.c,
	  drivers/apcsmart.c, drivers/serial.c, drivers/serial.h,
	  include/common.h: common, serial, upsclient: change read() and
	  write() operations from "int" to "ssize_t"
	* include/attribute.h: satisfy pedantic macro parser (defined vs.
	  used value)
	* drivers/powercom.c: do not check "if model >= 2000" just after
	  processing "model < 2000"
	* drivers/pijuice.c: do not check for "powerInput5vIo <=
	  POWER_PRESENT" twice in a row
	* drivers/bcmxcp.c: do not check for "value>=0" when we pick it from
	  "unsigned char[]" answer
	* common/common.c: search_paths[]: comment the reasoning (see also
	  issue NUT #805)
	* drivers/apcupsd-ups.c: comment about htons() return value range
	  (why I did not fix an "x<0" check)
	* .travis.yml: run Windows test cases with cygwin bash
	* .travis.yml: add at least a cygwin automake to Windows test cases
	* .travis.yml: limit builds on xcode7.x to C11
	* include/parseconf.h: fix trailing whitespace
	* .travis.yml: mark clang builds with fatal warnings, additionally
	  with -Wno-reserved-id-macro -Wno-padded to play around system
	  header issues
	* drivers/solis.c: convert from localtime() to localtime_r() which is
	  thread-safe
	* drivers/rhino.c: convert from localtime() to localtime_r() which is
	  thread-safe
	* drivers/microdowell.c: convert from localtime() to localtime_r()
	  which is thread-safe
	* drivers/mge-hid.c: convert from localtime() to localtime_r() which
	  is thread-safe
	* clients/upsstats.c: convert from localtime() to localtime_r() which
	  is thread-safe
	* clients/upslog.c: convert from localtime() to localtime_r() which
	  is thread-safe

2020-11-16  Jim Klimov <jim@jimklimov.com>

	* .gitignore: GitIgnore .gdb_history files
	* .gitignore: GitIgnore conf??????/ temporary directories that can
	  remain if configure script is aborted
	* .gitignore: GitIgnore conf_nut_report_feature file (made by
	  m4/nut_report)
	* configure.ac: rephrase the notice about looking for required C
	  library routines which are beyond strict C standards
	* configure.ac, m4/nut_stash_warnings.m4: Introduce
	  m4/nut_stash_warnings.m4 and NUT_STASH_WARNINGS and
	  NUT_POP_WARNINGS in configure.ac
	* ci_build.sh: build_to_only_catch_errors(): also report on `make
	  check` with the current test case
	* .travis.yml: Revert ".travis.yml: DISABLE test case
	  "gnu99-clang-5.0-nowarn": it has some problem with the recently
	  changed "tests/" (and runs clang-7 anyway as it does not use the
	  PPA for 5.0)"  This reverts commit
	  4749e0b26a33990dbd7bb56ff863cfc30db4245e as we can now have this
	  test case working again.
	* configure.ac: do not pick C++11 support if a standard is explicitly
	  requested by caller; fixes NUT issue #873
	* .travis.yml: fix test cases for NUT_MATRIX_TAG="*-clang-5.0-*" to
	  actually use clang-5.0 explicitly

2020-11-15  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: mark test-case "gnu17-gcc-9-warn" as passing now
	* .travis.yml: add libnss3-dev and libssl-dev to test against both
	  SSL implems
	* .travis.yml: DISABLE test case "gnu99-clang-5.0-nowarn": it has
	  some problem with the recently changed "tests/" (and runs clang-7
	  anyway as it does not use the PPA for 5.0)
	* drivers/snmp-ups.c, m4/nut_check_libnetsnmp.m4: drivers/snmp-ups.c:
	  fix the warning about how we get the size of usmAES128PrivProtocol
	* ci_build.sh: configure_nut(): sleep more before data dump so
	  interactive devs can react to the broken configure run
	* ci_build.sh: build_to_only_catch_errors(): report a SUCCESS when we
	  have one
	* ci_build.sh: allow caller to customize their PKG_CONFIG_PATH
	* tests/Makefile.am: fix include dir for cppunittest
	* server/netssl.c: comment about non-fatal build warnings from NSS
	  include names we use
	* server/netssl.c: mark up NUT_UNUSED_VARIABLEs for build with
	  Mozilla NSS
	* clients/upsclient.c: mark up NUT_UNUSED_VARIABLEs for build with
	  Mozilla NSS
	* m4/nut_check_libnss.m4: nut_check_libnss.m4 : warn that nss.pc is
	  more sensitive to matching PKG_CONFIG_PATH and build bitness than
	  others
	* ci_build.sh: ci_build.sh : enable SSL build variants of
	  "default-all-errors" with both OpenSS and Mozilla NSS
	* m4/nut_check_libnetsnmp.m4: pick correct bitness
	  net-snmp-config-{32,64} script if available

2020-11-14  Jim Klimov <jim@jimklimov.com>

	* tests/Makefile.am: fix include dir for nutlogtest

2020-11-13  Jim Klimov <jim@jimklimov.com>

	* tests/cpputest.cpp: tests/cpputest.cpp : wrap the test run to catch
	  exceptions, if any
	* tests/cpputest.cpp: tests/cpputest.cpp : comment the progress
	  through steps
	* tests/cpputest.cpp: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* tests/Makefile.am: tests/Makefile.am : comment the cases where we
	  do not compile CXX tests
	* tests/Makefile.am, tests/nutlogtest.c: Introduce tests/nutlogtest.c
	  for upslog*() and friends

2020-11-12  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict
	* docs/acknowledgements.txt: Update acknowledgements.txt  Do not
	  constrain contribution from EVER Power Systems to one person

2020-11-12  Jim Klimov <jim@jimklimov.com>

	* docs/nut.dict: nut.dict: spellcheck new keywords around "fightwarn"
	  chapter

2020-11-12  Jean-Baptiste Boric <Jean-BaptisteBORIC@Eaton.com>

	* drivers/main.c: Fix faulty dump mode logic

2020-11-11  Jim Klimov <jim@jimklimov.com>

	* docs/developers.txt: document NUT_UNUSED_VARIABLE()

2020-11-10  Jim Klimov <jim@jimklimov.com>

	* configure.ac: make checks for "Required C library routine" not
	  fatal: -Wall -Werror frowns upon the ways autotools probe the
	  system
	* configure.ac: detect routines that may be not available in
	  constrained standard-C modes
	* .travis.yml: .travis.yml (#823) : green-light several GCC test
	  cases that now pass even with all warnings enabled as fatal
	* clients/upsset.c: refine whitespace
	* docs/developers.txt: detail how to use ci_build.sh intended for
	  Travis CI to work on fixing stuff locally
	* configure.ac: configure.ac : detect abs() and fabs() funcs
	* include/common.h: include/common.h : drop NUT_UNUSED and
	  NUT_UNUSED_FUNCTION macros as not portable enough
	* drivers/mge-hid.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/tripplite-hid.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/richcomm_usb.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/serial.c: mark up NUT_UNUSED_VARIABLEs in the more portable
	  manner
	* drivers/bestfcom.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/dummy-ups.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/usbhid-ups.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/apcsmart-old.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/nutdrv_atcl_usb.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/cps-hid.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/apcsmart.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/bestfortress.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/bcmxcp_usb.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/nutdrv_qx.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/tripplite_usb.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/blazer_usb.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/upsdrvctl.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/apc-hid.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/nutdrv_qx_voltronic.c: mark up NUT_UNUSED_VARIABLEs in the
	  more portable manner
	* drivers/riello_usb.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/explore-hid.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* drivers/liebert-esp2.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* server/upsd.c: mark up NUT_UNUSED_VARIABLEs in the more portable
	  manner
	* clients/upssched.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* clients/upsset.c: mark up NUT_UNUSED_VARIABLEs in the more portable
	  manner
	* clients/upsimage.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* clients/upsstats.c: mark up NUT_UNUSED_VARIABLEs in the more
	  portable manner
	* clients/upslog.c: mark up NUT_UNUSED_VARIABLEs in the more portable
	  manner
	* clients/upsmon.c: mark up NUT_UNUSED_VARIABLEs in the more portable
	  manner
	* tools/nut-scanner/scan_eaton_serial.c: mark up NUT_UNUSED_VARIABLEs
	  in the more portable manner
	* tools/nut-scanner/nut-scanner.c: mark up NUT_UNUSED_VARIABLEs in
	  the more portable manner
	* tools/nut-scanner/scan_avahi.c: mark up NUT_UNUSED_VARIABLEs in the
	  more portable manner
	* drivers/libshut.c, drivers/riello_ser.c, drivers/snmp-ups.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_snmp.c: libshut.c riello_ser.c nut-scanner
	  bits: abolish non-standard u_char and u_short  Probably standard
	  C99 "uint8_t" and 16(?) bit short would be more proper, especially
	  for serial-line protocols. But the original code used types derived
	  from hardware implementation sized "char" and "short" - so they
	  stayed this way here.
	* drivers/riello_usb.c: avoid implicit switch fall-through
	* clients/upsc.c: avoid implicit switch fall-through
	* clients/upscmd.c: avoid implicit switch fall-through
	* drivers/nutdrv_qx.c: avoid implicit switch fall-through
	* drivers/usbhid-ups.c: avoid implicit switch fall-through
	* drivers/blazer_usb.c: avoid implicit switch fall-through
	* server/upsd.c: add blank lines for readability of opts processing
	  switch
	* server/upsd.c: avoid implicit switch fall-through
	* clients/upsstats.h: wrap with include-guards
	* clients/upssched.h: wrap with include-guards
	* clients/upsmon.h: wrap with include-guards
	* clients/upslog.h: wrap with include-guards
	* clients/upsimagearg.h: wrap with include-guards
	* clients/status.h: wrap with include-guards
	* clients/cgilib.h: wrap with include-guards
	* drivers/tripplite.h: wrap with include-guards
	* drivers/safenet.h: wrap with include-guards
	* drivers/riello.h: reword the wrap with include-guards
	* drivers/powercom.h: wrap with include-guards
	* drivers/mge-utalk.h: include/mge-utalk.h: wrap with include-guards
	* drivers/oneac.h: wrap with include-guards
	* drivers/main.h: reword the wrap with include-guards
	* drivers/libusb.h: reword the wrap with include-guards
	* drivers/libshut.h: reword the wrap with include-guards
	* drivers/libhid.h: reword the wrap with include-guards
	* drivers/hidparser.h: reword the wrap with include-guards
	* drivers/genericups.h: wrap with include-guards
	* drivers/gamatronic.h: wrap with include-guards and fix trailing
	  whitespace
	* drivers/dummy-ups.h: wrap with include-guards
	* drivers/apcupsd-ups.h: wrap with include-guards
	* drivers/apcsmart_tabs.h: reword the wrap with include-guards
	* drivers/apcsmart.h: reword the wrap with include-guards
	* drivers/apcsmart-old.h: wrap with include-guards
	* include/upsconf.h: wrap with include-guards
	* include/upsconf.h: add (C) and license header
	* include/upsconf.h: refine whitespace
	* include/timehead.h: add (C) and license header
	* include/timehead.h: wrap with include-guards
	* include/str.h: reword the wrap with include-guards
	* include/state.h: reword the wrap with include-guards
	* include/proto.h: add (C) and license header
	* include/proto.h: reword the wrap with include-guards
	* include/nut_stdint.h: reword the wrap with include-guards
	* include/nut_platform.h: reword the wrap with include-guards
	* include/extstate.h: add (C) and license header
	* include/extstate.h: reword the wrap with include-guards
	* include/extstate.h: refine whitespace
	* include/common.h: reword the wrap with include-guards
	* include/attribute.h: add (C) and license header
	* include/attribute.h: reword the wrap with include-guards
	* server/user.h: update (C) and license header
	* server/user.h: wrap with include-guards
	* server/user-data.h: update (C) and license header
	* server/user-data.h: wrap with include-guards
	* server/upstype.h: reword the wrap with include-guards
	* server/stype.h: reword the wrap with include-guards
	* server/sstate.h: reword the wrap with include-guards
	* server/nut_ctype.h: protect header files for C++ inclusion
	* server/netuser.h: wrap with include-guards
	* server/netuser.h: add (C) and license header
	* server/netssl.h: reword the wrap with include-guards
	* server/netset.h: wrap with include-guards
	* server/netset.h: add (C) and license header
	* server/netmisc.h: wrap with include-guards
	* server/netmisc.h: add (C) and license header
	* server/netcmds.h: add (C) and license header
	* server/netlist.h: wrap with include-guards
	* server/netlist.h: add (C) and license header
	* server/netinstcmd.h: wrap with include-guards
	* server/netinstcmd.h: add (C) and license header
	* server/netget.h: wrap with include-guards
	* server/netget.h: add (C) and license header
	* server/neterr.h: protect header files for C++ inclusion
	* server/neterr.h: wrap with include-guards
	* server/neterr.h: add (C) and license header
	* server/netcmds.h: wrap with include-guards
	* server/desc.h: add (C) and license header
	* server/desc.h: wrap with include-guards
	* server/conf.h: update (C) and license header
	* server/conf.h: wrap with include-guards

2020-11-09  Jim Klimov <jimklimov@gmail.com>

	* docs/nut.dict: Update nut.dict  Add EVER Sinline model name

2020-11-09  Jim Klimov <jim@jimklimov.com>

	* drivers/rhino.c: drop extraneous parentheses
	* drivers/nutdrv_qx.h: avoid a trailing comma in enum list (C89)
	* drivers/asem.c: drivers/al175.c: update Linux i2c include mesh
	  (thanks to pijuice.c)
	* drivers/pijuice.c: set_power_off(): drop unused "data"
	* drivers/pijuice.c: avoid setting "data" during a write  Compiler
	  warnings resolved this puzzle:  [2020-11-09 15:10:38] [build-err]
	  pijuice.c:737:2: note: in expansion of macro ‘I2C_WRITE_BYTE’
	  [2020-11-09 15:10:38] [build-err]   737 |  I2C_WRITE_BYTE( upsfd,
	  cmd, shutdown_delay, __func__ ) [2020-11-09 15:10:38] [build-err]
	  |  ^~~~~~~~~~~~~~ [2020-11-09 15:10:38] [build-err]
	  pijuice.c:710:10: warning: variable ‘data’ set but not used
	  [-Wunused-but-set-variable] [2020-11-09 15:10:38] [build-err]   710
	  |  uint8_t data; [2020-11-09 15:10:38] [build-err]       |
	  ^~~~  So we did not need to set it at all, can go to simple
	  anonymous negative-return check.
	* drivers/pijuice.c: use "__s32" de-facto in headers instead of "s32"
	  from manpages
	* drivers/pijuice.c: rearrange I2C_*() macros to catch -1 error codes
	  while fetching unsigned ints
	* drivers/apcsmart.c: fix variadic macro logx() call to accomodate
	  modern standards
	* drivers/apcsmart.c: fix variadic macro logx() call to accomodate
	  modern standards
	* drivers/apcsmart.c: fix variadic macro debx() call to accomodate
	  modern standards
	* drivers/pijuice.c: set_poweroff(): fix limited value range exceeded
	* drivers/pijuice.c: replace __FUNCTION__ by __func__ to avoid
	  warnings  error: ISO C does not support '__FUNCTION__' predefined
	  identifier [-Werror=pedantic]
	* drivers/bcmxcp.c: bump string buffer size to avoid potential
	  overflows  If we have some bug getting outlet numbers into billions
	  (int at 64-bit) the string might overflow indeed...
	* drivers/al175.c: document a warning to address later
	* drivers/snmp-ups.c: avoid warning: control may reach end of
	  non-void function

2020-11-08  Jim Klimov <jimklimov@gmail.com>

	* docs/developers.txt: Update developers.txt  Another spellcheck fix
	* docs/developers.txt: Update developers.txt  Avoid "quiesce" to
	  satisfy the spellchecker

2020-11-08  Jim Klimov <jim@jimklimov.com>

	* drivers/nutdrv_atcl_usb.c: avoid implicit switch fall-through
	* .travis.yml: our code (and checks) should not rely on specific
	  compiler features; implicit switch FALLTHRU was solved by explicit
	  goto jumps
	* docs/nut.dict: update for conf/upsstats-single.html.sample
	* docs/developers.txt: avoid spellcheck warning
	* drivers/eaton-pdu-marlin-mib.c: rearrange phases_nb and
	  sanity-check the value to debug-log unexpectancies
	* drivers/eaton-pdu-marlin-mib.c: sanity-check the outlet_group_nb
	  (not negative)
	* drivers/blazer_usb.c: upsdrv_initups(): constrain langid_fix
	  scanned values to fit into signed int
	* drivers/netxml-ups.c: rearrange sscanf() of inputs to avoid wrong
	  int values
	* drivers/belkin-hid.c: use fabs() for floating-point math
	* drivers/belkin-hid.c: use fabs() for floating-point math
	* drivers/netxml-ups.c: instcmd(): find a use for "extra"
	* drivers/riello_usb.c: instcmd(): find a use for "extra"
	* drivers/tripplite_usb.c: instcmd(): find a use for "extra"
	* drivers/mge-xml.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/netxml-ups.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/nutdrv_atcl_usb.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/riello_usb.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/richcomm_usb.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/blazer_usb.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/tripplite_usb.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/bcmxcp_usb.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/tripplite-hid.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/explore-hid.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/explore-hid.c: a few whitespace fixes
	* drivers/cps-hid.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/usbhid-ups.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/apc-hid.c: mark up NUT_UNUSED_VARIABLEs (and comment a
	  FIXME about possible use for that)
	* drivers/snmp-ups.c: comment about issue found by pedantic compiler
	  snmp-ups.c: In function 'nut_snmp_init': snmp-ups.c:599:66: error:
	  division 'sizeof (oid * {aka long unsigned int *}) / sizeof (oid
	  {aka long unsigned int})' does not compute the number of array
	  elements [-Werror=sizeof-pointer-div] 599 |
	  g_snmp_sess.securityPrivProtoLen =
	  sizeof(usmAESPrivProtocol)/sizeof(oid); |
	  ^ In file included from /usr/include/net-snmp/snmpv3_api.h:27, from
	  /usr/include/net-snmp/net-snmp-includes.h:78, from snmp-ups.h:79,
	  from snmp-ups.c:39:
	  /usr/include/net-snmp/library/transform_oids.h:50:26: note: first
	  'sizeof' operand was declared here 50 | NETSNMP_IMPORT oid
	  *usmAES128PrivProtocol; /* backwards compat */ |
	  ^~~~~~~~~~~~~~~~~~~~~ cc1: all warnings being treated as errors
	  make[1]: *** [Makefile:1953: snmp_ups-snmp-ups.o] Error 1
	* drivers/apc-hid.c: a few whitespace fixes
	* drivers/openups-hid.c: initialize all fields of info_lkp_t arrays
	* drivers/tripplite-hid.c: initialize all fields of info_lkp_t arrays
	* drivers/powercom-hid.c: initialize all fields of info_lkp_t arrays
	* drivers/cps-hid.c: initialize all fields of info_lkp_t arrays
	* drivers/belkin-hid.c: initialize all fields of info_lkp_t arrays
	* drivers/apc-hid.c: initialize all fields of info_lkp_t arrays
	* drivers/apc-pdu-mib.c: define APC_PDU_DEVICE_MODEL macro on top of
	  file
	* drivers/apc-pdu-mib.c: initialize all fields of mib2nut_info_t
	  arrays
	* drivers/apc-pdu-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/apc-ats-mib.c: initialize all fields of mib2nut_info_t
	  array
	* drivers/apc-ats-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/eaton-ats16-mib.c: initialize all fields of mib2nut_info_t
	  arrays
	* drivers/eaton-ats16-mib.c: initialize all fields of info_lkp_t
	  arrays
	* drivers/huawei-mib.c: initialize all fields of mib2nut_info_t array
	* drivers/huawei-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/hpe-pdu-mib.c: initialize all fields of mib2nut_info_t
	  array
	* drivers/hpe-pdu-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/eaton-ats30-mib.c: initialize all fields of mib2nut_info_t
	  array
	* drivers/eaton-ats30-mib.c: initialize all fields of info_lkp_t
	  arrays
	* drivers/delta_ups-mib.c: initialize all fields of mib2nut_info_t
	  array
	* drivers/delta_ups-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/cyberpower-mib.c: initialize all fields of mib2nut_info_t
	  array
	* drivers/cyberpower-mib.c: initialize all fields of info_lkp_t
	  arrays
	* drivers/bestpower-mib.c: initialize all fields of mib2nut_info_t
	  array
	* drivers/bestpower-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/xppc-mib.c: initialize all fields of info_lkp_t arrays, and
	  end sentinel entries to close them off
	* docs/developers.txt, docs/nut.dict: Satisfy the spellchecker
	* drivers/xppc-mib.c: initialize all fields of mib2nut_info_t array
	* drivers/raritan-pdu-mib.c: initialize all fields of mib2nut_info_t
	  array
	* drivers/raritan-px2-mib.c: initialize all fields of mib2nut_info_t
	  array
	* drivers/raritan-px2-mib.c: fix indentations
	* drivers/raritan-px2-mib.c: initialize all fields of info_lkp_t
	  arrays, and fix indentations in the table
	* drivers/raritan-pdu-mib.c: initialize all fields of info_lkp_t
	  arrays
	* drivers/powerware-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/netvision-mib.c: initialize all fields of mib2nut_info_t
	  array
	* drivers/netvision-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/mge-mib.c: initialize all fields of mib2nut_info_t array
	* drivers/mge-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/ietf-mib.c: initialize all fields of mib2nut_info_t arrays
	* drivers/ietf-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/emerson-avocent-pdu-mib.c: initialize all fields of
	  info_lkp_t arrays
	* drivers/emerson-avocent-pdu-mib.c: initialize all fields of
	  mib2nut_info_t array
	* drivers/eaton-pdu-revelation-mib.c: initialize all fields of
	  mib2nut_info_t array
	* drivers/eaton-pdu-revelation-mib.c: initialize all fields of
	  info_lkp_t arrays
	* drivers/eaton-pdu-pulizzi-mib.c: initialize all fields of
	  mib2nut_info_t array
	* drivers/eaton-pdu-pulizzi-mib.c: initialize all fields of
	  info_lkp_t arrays
	* drivers/eaton-pdu-marlin-mib.c: initialize all fields of
	  mib2nut_info_t array
	* drivers/eaton-pdu-marlin-mib.c: initialize all fields of info_lkp_t
	  arrays
	* drivers/eaton-pdu-genesis2-mib.c: initialize all fields of
	  mib2nut_info_t array
	* drivers/compaq-mib.c: initialize all fields of mib2nut_info_t array
	* drivers/compaq-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/baytech-mib.c: initialize all fields of mib2nut_info_t
	  array
	* drivers/baytech-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/apc-mib.c: initialize all fields of mib2nut_info_t array
	  (and comment concern whether the addition was right?)
	* drivers/apc-mib.c: replace verbatim OID string we seek with a macro
	  APC_UPS_DEVICE_MODEL like elsewhere
	* drivers/apc-mib.c: initialize all fields of info_lkp_t arrays
	* drivers/mge-xml.c: avoid implicit switch fall-through (comment
	  whether that wondering is the right thing to do though)
	* drivers/blazer_usb.c: avoid implicit switch fall-through
	* drivers/riello_usb.c: avoid implicit switch fall-through
	* drivers/tripplite_usb.c: avoid implicit switch fall-through
	* ci_build.sh: refactor to track failing "default-all-errors" so we
	  can extend it to "configure_nut()" and
	  "build_to_only_catch_errors()" more variants
	* ci_build.sh: refactor to have a build_to_only_catch_errors()
	  routine
	* ci_build.sh: refactor to have a configure_nut() routine
	* docs/developers.txt: document a valid use-case of goto for clean
	  switch-case fall-through

2020-11-07  Jim Klimov <jimklimov@gmail.com>

	* drivers/eaton-ats16-mib.c: Update eaton-ats16-mib.c  Reworded the
	  comments
	* drivers/nutdrv_qx.c: Update nutdrv_qx.c  drivers/nutdrv_qx.c:
	  rectify indentations
	* drivers/tripplite_usb.c: Update tripplite_usb.c
	  drivers/tripplite_usb.c: drop trailing whitespace
	* drivers/ve-direct.c: Update ve-direct.c  Small spelling fix
	  (ret_lenght => ret_length)
	* docs/man/ve-direct.txt: Update ve-direct.txt  Minor whitespace
	  fixes
	* docs/acknowledgements.txt: Update acknowledgements.txt  Acknowledge
	  a vendor contribution from EVER Power Systems
	* drivers/ever-hid.c: Update ever-hid.c  Small whitespace fixes
	* docs/acknowledgements.txt: Update acknowledgements.txt  Add vendor
	  contribution from AMETEK Powervar for UPM series
	* drivers/liebert-hid.c: Update liebert-hid.c  Minor whitespace fixes

2020-11-06  amccartney <andrew.mccartney@ametek.com>

	* drivers/powervar-hid.c: Final clean up and edits for Powervar UPM
	  support

2020-11-06  Jim Klimov <jim@jimklimov.com>

	* tools/nut-scanner/scan_xml_http.c: drop g_usec_timeout which is not
	  actually used
	* drivers/libusb.c: fix debug string formatting
	* drivers/nutdrv_qx.c: upsdrv_initups(): constrain langid_fix scanned
	  values to fit into signed int
	* drivers/nutdrv_qx_voltronic.c: avoid buffer overflows iterating
	  item->info_rw, possible NPE, and fix the check for hitting the
	  sentinel entry  Fix warnings like:  nutdrv_qx_voltronic.c:4037:39:
	  error: division 'sizeof (info_rw_t *) / sizeof (info_rw_t)' does
	  not compute the number of array elements
	  [-Werror=sizeof-pointer-div]  4037 |  if (i >=
	  (int)(sizeof(item->info_rw) / sizeof(item->info_rw[0]))) { |
	  ^  nutdrv_qx_voltronic.c: In function 'voltronic_p31g_set':
	* drivers/nutdrv_qx_voltronic.c: voltronic_fault(): avoid buffer
	  overflows with sprintf()
	* tools/nut-scanner/scan_xml_http.c: avoid possible buffer overflow
	* drivers/snmp-ups.c: su_alarm_set(): bump alarm_info_value size to
	  avoid print overflows
	* drivers/upscode2.c: use fabs() for floating-point math
	* drivers/riello_ser.c: instcmd(): find a use for "extra"
	* drivers/apcsmart-old.c: instcmd(): find a use for "extra"
	* drivers/ivtscd.c: instcmd(): find a use for "extra"
	* drivers/clone.c: instcmd(): find a use for "extra"
	* drivers/powerman-pdu.c: instcmd(): find a use for "extra"
	* drivers/powerp-txt.c: powpan_instcmd(): find a use for "extra"
	* drivers/powerp-bin.c: powpan_instcmd(): find a use for "extra"
	* drivers/victronups.c: instcmd(): find a use for "extra"
	* drivers/nutdrv_qx_voltronic.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/nutdrv_qx.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/apcsmart-old.c: mark up NUT_UNUSED_VARIABLEs
	* tools/nut-scanner/nut-scanner.c: mark up NUT_UNUSED_VARIABLEs
	* server/netuser.c: mark up NUT_UNUSED_VARIABLEs
	* server/netmisc.c: mark up NUT_UNUSED_VARIABLEs
	* server/netssl.c: mark up NUT_UNUSED_VARIABLEs
	* server/upsd.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/upsdrvctl.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/apcsmart.c: mark up NUT_UNUSED_VARIABLEs
	* tools/nut-scanner/scan_eaton_serial.c: mark up NUT_UNUSED_VARIABLEs
	* tools/nut-scanner/scan_avahi.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/apcsmart_tabs.c: initialize all fields of upsdrv_info_t
	  array
	* drivers/apcsmart_tabs.c: initialize all fields of apc_vartab_t
	  arrays
	* tools/nut-scanner/nutscan-serial.c: initialize all fields of
	  device_portname_t arrays
	* drivers/upscode2.c: initialize all fields of cmd_t and simple_t
	  arrays
	* drivers/upscode2.c: comment the fallthrough in upsc_simple()
	  switch, so far consider it explicitly desired as it was before
	* drivers/isbmex.c: replace FALLTHRU comments with more portable and
	  reliable goto jumps
	* tools/nut-scanner/nut-scanner.c: explicit fall through to
	  displaying help
	* drivers/nutdrv_qx.c: qx_command(): explicit fall through the switch
	* drivers/mge-hid.c: replace FALLTHRU comments with same returns as
	  the next default case
	* drivers/usbhid-ups.c: replace FALLTHRU comments with more portable
	  and reliable goto jumps
	* clients/upsc.c: replace FALLTHRU comments with more portable and
	  reliable goto jumps
	* common/snprintf.c: replace FALLTHRU comments with more portable and
	  reliable goto jumps
	* configure.ac: drop trailing whitespace
	* tools/nut-usbinfo.pl: drop trailing whitespace
	* tools/nut-recorder.sh: drop trailing whitespace
	* tools/nut-ddl-dump.sh: drop trailing whitespace
	* tests/nutclienttest.cpp: drop trailing whitespace
	* server/user.c: drop trailing whitespace
	* server/upstype.h: drop trailing whitespace
	* server/sstate.c: drop trailing whitespace
	* server/sockdebug.c: drop trailing whitespace
	* server/netlist.c: drop trailing whitespace
	* server/netinstcmd.c: drop trailing whitespace
	* server/netget.c: drop trailing whitespace
	* server/conf.c: drop trailing whitespace
	* common/upsconf.c: drop trailing whitespace
	* common/state.c: drop trailing whitespace
	* common/setenv.c: drop trailing whitespace
	* common/parseconf.c: drop trailing whitespace
	* clients/upsmon.h: drop trailing whitespace
	* clients/upsimagearg.h: rectify whitespace
	* clients/upsclient.h: drop trailing whitespace
	* clients/nutclient.cpp, clients/nutclient.h:
	  clients/nutclient.{cpp,h}: drop trailing whitespace
	* clients/cgilib.c: drop trailing whitespace
	* drivers/nut-ipmipsu.c, drivers/nut-libfreeipmi.c:
	  drivers/nut-*ipmi**.{c,h}: drop trailing whitespace
	* drivers/netxml-ups.c, drivers/netxml-ups.h:
	  drivers/netxml-ups.{c,h}: drop trailing whitespace
	* drivers/mge-utalk.h, drivers/mge-xml.c, drivers/mge-xml.h:
	  drivers/mge*.{c,h}: drop trailing whitespace
	* drivers/main.h: drop trailing whitespace
	* drivers/main.c: Drop exec bit from source file
	* drivers/liebert-hid.h, drivers/liebert.c: drivers/liebert*: drop
	  trailing whitespace
	* drivers/libhid.c: drivers/libhid.h: drop trailing whitespace
	* drivers/idowell-hid.c: drivers/idowell-hid.h: drop trailing
	  whitespace
	* drivers/hidtypes.h: drop trailing whitespace
	* drivers/genericups.h: drop trailing whitespace
	* drivers/everups.c: drop trailing whitespace
	* drivers/eaton-pdu-pulizzi-mib.c: drop trailing whitespace
	* drivers/dummy-ups.h: drop trailing whitespace
	* drivers/dstate.c: drop trailing whitespace
	* drivers/delta_ups-mib.c: drop trailing whitespace
	* drivers/cyberpower-mib.c: drop trailing whitespace
	* drivers/blazer.c, drivers/blazer_usb.c: drivers/blazer*.{c,h}: drop
	  trailing whitespace
	* drivers/bestuferrups.c: rectify indentations
	* drivers/bestuferrups.c: drop trailing whitespace
	* drivers/belkin-hid.c, drivers/belkin-hid.h: drivers/belkin*.{c,h}:
	  drop trailing whitespace
	* drivers/bcmxcp_io.h, drivers/bcmxcp_ser.c, drivers/bcmxcp_usb.c:
	  drivers/bcmxcp*.{c,h}: drop trailing whitespace
	* drivers/baytech-mib.c: drop trailing whitespace
	* drivers/apc-mib.c: drop trailing whitespace
	* drivers/apc-hid.c, drivers/apc-hid.h: drivers/apc-hid.{c,h}: drop
	  trailing whitespace
	* drivers/xppc-mib.c: drivers/xppc-mib.h: drop trailing whitespace
	* drivers/tripplite-hid.h: drop trailing whitespace
	* drivers/snmp-ups.h: drop trailing whitespace
	* drivers/skel.c: drop trailing whitespace
	* drivers/richcomm_usb.c: drop trailing whitespace
	* drivers/powerware-mib.c: drop trailing whitespace
	* drivers/openups-hid.c: drop trailing whitespace
	* drivers/oneac.c, drivers/oneac.h: drivers/oneac.{c,h}: drop
	  trailing whitespace
	* drivers/nutdrv_atcl_usb.c: drop trailing whitespace
	* drivers/riello.c, drivers/riello_ser.c, drivers/riello_usb.c:
	  drivers/riello*.{c,h}: drop trailing whitespaces
	* drivers/apcsmart-old.c, drivers/apcsmart-old.h:
	  drivers/apcsmart-old.{c,h}: drop trailing whitespaces
	* tools/nut-scanner/nut-scanner.c: fix whitespaces
	* tools/nut-scanner/nut-scanner.c, tools/nut-scanner/nutscan-ip.c,
	  tools/nut-scanner/nutscan-ip.h, tools/nut-scanner/scan_avahi.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_usb.c:
	  tools/nut-scanner/*.{c,h}: drop trailing whitespaces
	* server/netmisc.c: drop trailing whitespaces
	* server/netssl.c: drop trailing whitespaces
	* server/upsd.c: drop trailing whitespaces
	* drivers/ivtscd.c: drop trailing whitespaces
	* drivers/powerp-bin.h, drivers/powerp-txt.h, drivers/powerpanel.c,
	  drivers/powerpanel.h: drivers/powerp*.{c,h}: drop trailing
	  whitespaces
	* drivers/powerp-txt.c: drop trailing whitespaces
	* drivers/powerp-bin.c: drop trailing whitespaces
	* drivers/victronups.c: rectify whitespace
	* drivers/upscode2.c: rectify whitespace

2020-11-05  Jim Klimov <jim@jimklimov.com>

	* drivers/hidparser.c: hide logging check that never fires
	  hidparser.c:347:28: error: comparison is always false due to
	  limited range of data type [-Werror=type-limits] 347 |
	  if(pParser->Data.ReportID >= MAX_REPORT) uint8_t vs "500"  CC
	  @aquette
	* drivers/solis.h: swap "const static" => "static const"  Avoids
	  error: 'static' is not at beginning of declaration
	  [-Werror=old-style-declaration]
	* drivers/solis.c: rectify C-style comments
	* drivers/isbmex.c: comment about magic D() macro got debug logging
	  vs. upsdebugx()
	* drivers/rhino.c: ScanReceivePack(): rephrase if-clause to avoid
	  warnings  Seems this is a correct change logically: - if( !(
	  SourceFail ) == RedeAnterior ) + if( RedeAnterior == !( SourceFail
	  ) )  given this assignment just below the if-clause: RedeAnterior =
	  !( SourceFail );  to avoid a compiler warning that "!" might apply
	  not in a way intended by author
	* drivers/masterguard.c: StringSplit(): use the maxlen
	* drivers/liebert-esp2.c: setvar(): find a use for "val"
	* drivers/bestfcom.c: increase buffers to avoid overflow (warnings)
	* drivers/bcmxcp.c: setvar(): increase buffers to avoid overflow
	  (warnings)
	* drivers/tripplitesu.c: instcmd(): find a use for "extra"
	* drivers/tripplite.c: instcmd(): find a use for "extra"
	* drivers/solis.c: instcmd(): find a use for "extra"
	* drivers/nutdrv_siemens_sitop.c: instcmd(): find a use for "extra"
	* drivers/safenet.c: instcmd(): find a use for "extra"
	* drivers/rhino.c: instcmd(): find a use for "extra"
	* drivers/powercom.c: instcmd(): find a use for "extra"
	* drivers/optiups.c: instcmd(): find a use for "extra"
	* drivers/mge-utalk.c: instcmd(): find a use for "extra"
	* drivers/metasys.c: instcmd(): find a use for "extra"
	* drivers/liebert-esp2.c: instcmd(): find a use for "extra"
	* drivers/etapro.c: instcmd(): find a use for "extra"
	* drivers/dummy-ups.c: instcmd(): find a use for "extra"
	* drivers/bestups.c: instcmd(): find a use for "extra"
	* drivers/bestfortress.c: instcmd(): find a use for "extra"
	* drivers/belkinunv.c: instcmd(): find a use for "extra"
	* drivers/belkin.c: instcmd(): find a use for "extra"
	* drivers/bcmxcp.c: instcmd(): find a use for "extra"
	* drivers/mge-hid.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/libshut.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/liebert-esp2.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/dummy-ups.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/bestfortress.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/bestfcom.c: mark up NUT_UNUSED_VARIABLEs
	* drivers/optiups.c: initialize all fields of ezfill_t tables
	* drivers/mge-hid.c: update arrays of info_lkp_t with fourth (nuf)
	  field and comment where a real nuf() might be useful
	* drivers/usbhid-ups.c: update arrays of info_lkp_t with fourth (nuf)
	  field and comment where a real nuf() might be useful
	* drivers/usbhid-ups.c: update arrays of info_lkp_t with fourth (nuf)
	  field
	* drivers/usbhid-ups.c: update HIDDevice_t object with missing
	  initializer for bcdDevice
	* drivers/mge-hid.c: drivers/mge-utalk.c: update arrays of info_lkp_t
	  with fourth (nuf) field
	* drivers/gamatronic.h: initialize the "value" field in the struct
	  array
	* drivers/gamatronic.h: avoid anonymous struct
	* drivers/isbmex.c: upsdrv_updateinfo(): fix switch/break
	* drivers/mge-hid.c: quiesce -Wimplicit-fallthrough=3 warnings about
	  fall-through in switch
	* drivers/usbhid-ups.c: quiesce -Wimplicit-fallthrough=3 warnings
	  about fall-through in switch
	* .travis.yml: in NUT_MATRIX test cases, specify
	  -Werror=implicit-fallthrough=3 to let special comments quiesce the
	  warning where a FALLTHRU is intentional
	* .travis.yml: in clang test cases, do not insist that all macros are
	  used, or we can not pass even autoconf
	* drivers/tripplitesu.c: drop trailing whitespaces
	* drivers/solis.c, drivers/solis.h: drivers/solis.{c,h}: rectify
	  whitespaces
	* drivers/safenet.c: drop trailing whitespaces
	* drivers/rhino.c: normalize whitespace heavily
	* drivers/powercom.c: rectify leading whitespaces
	* drivers/powercom.c: drop trailing whitespaces
	* drivers/powercom.h: drop trailing whitespaces
	* drivers/optiups.c: rectify whitespaces
	* drivers/hidparser.c: drop trailing whitespaces
	* drivers/usb-common.c: drop trailing whitespaces
	* drivers/libshut.h, drivers/libusb.h, drivers/usb-common.h:
	  drivers/libshut.h libusb.h usb-common.h: drop trailing whitespaces
	* drivers/libshut.c: rectify whitespaces per style guide
	* drivers/mge-utalk.c: drop trailing whitespaces
	* drivers/metasys.c: drop trailing whitespaces
	* drivers/masterguard.c: rectify whitespaces and drop comments
	  opposing the project style guide
	* drivers/masterguard.c: drop trailing whitespaces
	* drivers/liebert-esp2.c: rectify whitespaces
	* drivers/liebert-esp2.c: drop trailing whitespaces
	* drivers/isbmex.c: rectify whitespaces
	* drivers/isbmex.c: drop trailing whitespaces
	* drivers/gamatronic.h: rectify whitespaces
	* drivers/dummy-ups.c: drop trailing whitespaces
	* drivers/bestups.c: drop trailing whitespaces
	* drivers/bestfortress.c: rectify whitespaces
	* drivers/bestfcom.c: rectify whitespaces
	* drivers/belkinunv.c: drivers/belkin.c: rectify whitespaces
	* drivers/belkin.c: drop trailing whitespaces
	* drivers/bcmxcp.c: fix leading whitespaces

2020-11-04  Jim Klimov <jimklimov@gmail.com>

	* drivers/solis.c: Update solis.c  Drop temporary unicode comment for
	  PR
	* drivers/nutdrv_qx_voltronic.c: Update nutdrv_qx_voltronic.c  Drop
	  temporary comment with unicode for PR

2020-11-04  Jim Klimov <jim@jimklimov.com>

	* clients/upssched.c: main(): find use for argc
	* clients/upsmon.c: sigpipe(): find use for sig
	* clients/upsset.c: print_rw(): find use for upsname
	* clients/upscmd.c: increase buffers to avoid overflow (warnings)
	* clients/upsrw.c: increase buffers to avoid overflow (warnings)
	* clients/upssched.c: increase buffers to avoid overflow (warnings)
	* drivers/al175.c: instcmd(): find use for "extra"
	* drivers/serial.c: mark up NUT_UNUSED_VARIABLEs
	* clients/upssched.c: mark up NUT_UNUSED_VARIABLEs
	* clients/upsmon.c: mark up NUT_UNUSED_VARIABLEs
	* clients/upsset.c: mark up NUT_UNUSED_VARIABLEs
	* clients/upsimage.c, clients/upsstats.c: clients/upsimage.c: mark up
	  NUT_UNUSED_VARIABLEs
	* clients/upsstats.c: mark up NUT_UNUSED_VARIABLEs
	* clients/upslog.c: mark up NUT_UNUSED_VARIABLEs
	* clients/upsclient.c: mark up NUT_UNUSED_VARIABLEs for ifdef-ed
	  codepaths
	* include/common.h: introduce NUT_UNUSED* macros to mark up codebase
	* drivers/bcmxcp.c: fix info_lkp_t arrays to consider fourth "nuf"
	  field
	* clients/upsc.c: quiesce -Wimplicit-fallthrough=3 warnings about
	  fall-through in switch
	* common/snprintf.c: quiesce -Wimplicit-fallthrough=3 warnings about
	  fall-through in switch
	* include/common.h: introduce NUT_UNUSED* macros to mark up codebase
	* .travis.yml: .travis.yml : enable "-Wextra -Weverything" for clang
	  (follow-up to issue #823)
	* .travis.yml: .travis.yml : enable "-Wextra" for newer gcc versions
	  on Linux (follow-up to issue #823)
	* .travis.yml: .travis.yml : enable "-Wextra" for default gcc
	  versions on Linux (follow-up to issue #823)
	* configure.ac: revise the fix for AC_PROG_LIBTOOL to only revert
	  settings already passed to the compiler (that older releases may
	  not understand if we just force them)
	* configure.ac: configure.ac : work around libtool weakness seen by
	  pedantic compilers (did not test for "${CLANG}" so drop it for now)
	* configure.ac: configure.ac : work around libtool weakness seen by
	  pedantic compilers
	* ci_build.sh: do not hide autogen.sh stderr
	* ci_build.sh: if configure failed, sleep a bit before dumping
	  config.log
	* drivers/bcmxcp.c: drop trailing whitespaces
	* drivers/bcmxcp.h: drop trailing whitespaces
	* drivers/serial.c: drop trailing whitespaces
	* clients/upssched.c: drop trailing whitespaces
	* clients/upsmon.c: drop trailing whitespaces
	* clients/upsset.c: drop trailing whitespaces
	* clients/upsimage.c: drop indented whitespaces
	* clients/upsstats.c: drop trailing whitespaces
	* clients/upslog.c: drop trailing whitespaces
	* clients/upsc.c: drop trailing whitespaces
	* clients/upsclient.c: drop trailing whitespaces
	* common/snprintf.c: rectify whitespace
	* configure.ac: Fix issue #833 for (sys/)termios.h on BSD  ...And
	  generally check if we CAN build serial drivers before trying to
	  (and/or guessing if we should try).

2020-11-03  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: comment for exploring ways to get 32-bit travis builds
	* .travis.yml: Issue #823 follow-up: add explicitly x86 32-bit builds
	  in Travis CI
	* ci_build.sh: ci_build.sh : if configure script fails, dump its log
	  before exiting
	* .travis.yml: .travis.yml : rephrase some comments
	* .travis.yml: .travis.yml : separate the "_matrix_gnustd_nowarn"
	* .travis.yml: Issue #823 follow-up: support branches named like
	  "fightwarn" to build more test cases in Travis CI (actually enable
	  those build matrices)
	* .travis.yml: Issue #823 follow-up: support branches named like
	  "fightwarn" to build more test cases in Travis CI

2020-11-03  Eric Clappier <ericclappier@eaton.com>

	* drivers/eaton-ats16-mib.c: Apply patch "Nut-scanner fix for
	  discovery ats16 with legacy NMC and newer Network-M2"

2020-10-26  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/eaton-pdu-marlin-mib.c: snmp-ups: fix outlet ID on Eaton
	  ePDU  Tie outlet ID to a real OID, to avoid erroneous indexes (-1,
	  0)
	* docs/nut-names.txt, drivers/eaton-pdu-marlin-mib.c: snmp-ups: fix
	  Eaton ePDU switch ability  Expose a general switchability of the
	  unit, using outlet.switchability, along with a more suitable
	  per-outlet mechanism

2020-10-25  Jim Klimov <jim@jimklimov.com>

	* docs/man/Makefile.am: docs/man/Makefile.am : @echo diagnostic
	  messages without a trace by default

2020-10-22  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/main.c: Fix dstate init call WRT data dump  Closes:
	  https://github.com/networkupstools/nut/issues/835

2020-10-15  Jim Klimov <jim@jimklimov.com>

	* docs/man/Makefile.am: docs/man/Makefile.am : in check-man-*
	  targets, count the checked files (to see better the cases where
	  none were available)
	* docs/man/Makefile.am: docs/man/Makefile.am : typo fix ">&@" =>
	  ">&2" for stderr

2020-10-13  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: .travis.yml (#823) : in default builds, disable
	  whatever is not in "_matrix_required"
	* .travis.yml: .travis.yml (#823) : define a _matrix_linux and
	  _matrix_all groupings
	* .travis.yml: .travis.yml (#823) : clarify the distro-dependent
	  relations of matrix jobs as required and allowfail per distro

2020-10-12  amccartney <andrew.mccartney@ametek.com>

	* docs/man/usbhid-ups.txt, drivers/powervar-hid.c: Changes per NUT
	  review comments. Removed info fields from polling. Added
	  company/contributor info. Updated docs/man/usbhid-ups.txt

2020-10-12  Konstantin Gizdov <kgizdov@gmail.com>

	* drivers/usbhid-ups.c: address some comments

2020-10-12  Jim Klimov <jimklimov@gmail.com>

	* docs/man/usbhid-ups.txt: Update usbhid-ups.txt  Rearranged lines to
	  keep "all" block together, and finish the list item with a comma
	  without much context change ;)
	* docs/nut.dict: Update nut.dict for PR #733  Add new product name
	  and vendor keywords
	* configure.ac: Update configure.ac  Whitespace mess
	* .travis.yml: .travis.yml (#823) : win bash has no time

2020-10-12  Jim Klimov <jim@jimklimov.com>

	* docs/acknowledgements.txt: revise the last paragraph for listing
	  corporate contributors
	* docs/nutdrv_qx-subdrivers.txt: revise a few typos
	* docs/configure.txt: update for gdlib pkg-config support (follow-up
	  to #809)
	* docs/configure.txt: update for gdlib pkg-config support (follow-up
	  to #809)
	* docs/man/upsd.conf.txt: mention that ALLOW_NO_DEVICE envvar (e.g.
	  from nut.conf) can override the setting in upsd.conf
	* conf/nut.conf.sample: fix ALLOW_NO_DEVICE example to "export" it on
	  a separate line
	* .travis.yml: ci_build.sh (#823) : add gnu99-clang-win-nowarn
	* ci_build.sh: ci_build.sh (#823) : only call dpkg on linux
	* ci_build.sh: ci_build.sh (#823) : investigate win autogen
	* .travis.yml: .travis.yml (#823) : fix delivery of ccache to win
	  builds

2020-10-11  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: .travis.yml (#823) : do not cache /usr/local/Cellar on
	  osx, it is too big and rejected anyway
	* .travis.yml: .travis.yml (#823, #828) : extend matrix for osx
	  builds with -std=gnu* variants that seem to pass
	* .travis.yml: .travis.yml (#823) : for osx builds, avoid "brew
	  update" by default, that since 2.0.0 release involves cleanup
	  automagically and takes a needless 15-30 minutes hit on a Travis
	  worker  When desired we can set HOMEBREW_NO_AUTO_UPDATE
	  customizable per run
	* .travis.yml: .travis.yml (#823) : for osx builds, add ccache; and
	  only bother for asciidoc + docbook-xsl if building docs
	* .travis.yml: .travis.yml (#823) : cache locations related to Brew
	  between runs
	* .travis.yml: .travis.yml (#823) : for now, enable CI_TRACE on Win
	  always (to find where ci_build.sh script dies)
	* .travis.yml: .travis.yml : set jobs.fast_finish:true

2020-10-10  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: .travis.yml (#823) : group tests into YAML _matrix-*
	  lists to pick some easier for particular runs on dev branches
	* .travis.yml: .travis.yml (#823) : xcode6.4 is deprecated on Travis,
	  try a newer oldest alternative (7.3)
	* .travis.yml: .travis.yml (#823) : add c99-clang-xcode10.2-warn
	* .travis.yml: .travis.yml (#823) : reorder some allowed_failure
	  tests to group logically
	* .travis.yml: .travis.yml (#823) : drop gnu14-gcc-8-nowarn (no C14),
	  add gnu17-clang-8-nowarn
	* .travis.yml: .travis.yml (#823) : drop gnu14 and gnu17 attempts
	  with gcc-7; try gnu14 with gcc-8
	* .travis.yml: .travis.yml (#823) : mark gnu17-gcc-9-nowarn as OK
	* ci_build.sh: .travis.yml (#823) : give up on gdlib (--with-cgi) on
	  win for now
	* .travis.yml: .travis.yml (#823) : add a few MacOS X and
	  Windows+clang9 build combos for diversity
	* .travis.yml: .travis.yml (#823) : add more compilers and standards
	  to try, to collect max diags: c17-clang-8-warn gnu17-gcc-9-warn
	* .travis.yml: .travis.yml (#823) : add more compilers and standards
	  to try : gnu14-gcc-7-nowarn gnu17-gcc-7-nowarn gnu17-gcc-9-nowarn
	  c99-clang-3.5-nowarn c17-clang-8-nowarn
	* .travis.yml: .travis.yml (#823) : specify "compiler" in our
	  handmade matrix to hint to Travis which env we want
	* .travis.yml: .travis.yml (#823) : comment the reference of C/C++
	  standard support by gcc and clang versions used
	* .travis.yml: .travis.yml : reshuffle default required builds order
	  to have the quicker ones more likely to fail in development
	  iterations to run first
	* .travis.yml: .travis.yml : move BUILD_TYPE=default and
	  BUILD_TYPE=default-tgt:distcheck-light into common stack for
	  manageability
	* .travis.yml: declare linux "dist" that we want by default
	* ci_build.sh: handle runs with unspecified BUILD_TYPE
	* ci_build.sh: report if PATH includes ccache, and if CC and CXX
	  understand passed C(XX)FLAGS
	* ci_build.sh: report values of PATH, CC and CXX (and versions of the
	  latter) before adding CCACHE into the mix

2020-10-09  Konstantin Gizdov <kgizdov@gmail.com>

	* drivers/usbhid-ups.c: more compact logic
	* drivers/usbhid-ups.c: remove leftover lines
	* drivers/usbhid-ups.c: lay the groundwork for CyberPower UT
	  cputquirk
	* drivers/usbhid-ups.c: fix indentation style

2020-10-09  Jim Klimov <jim@jimklimov.com>

	* docs/developers.txt: docs/developers.txt : document coding style
	  examples for tabs vs spaces
	* docs/developers.txt: docs/developers.txt : document a "for loop
	  initial declarations are only allowed in C99 or C11 mode"
	  portability offense
	* docs/developers.txt: docs/developers.txt : document the official
	  C99+ standard support and that we have CI to help make sure what is
	  upheld
	* .travis.yml: .travis.yml : update comment for the NUT_MATRIX_TAG
	  block of tests
	* .travis.yml: .travis.yml : fix comment-naming for
	  cDefault-gcc-default-nowarn/gnu99-gcc-default-nowarn primary
	  not-failing case to keep up
	* .travis.yml: .travis.yml : mark gnu89-gcc-default-nowarn as a
	  not-failing case to keep up
	* drivers/solis.c: drivers/solis.c : fix C89 for-loop var
	  declarations
	* .travis.yml: .travis.yml : mark gnu11-gcc-7-nowarn
	  gnu99-clang-5.0-nowarn as not-failing cases to keep up
	* .travis.yml: .travis.yml : add gnu89-gcc-default-nowarn to the test
	  matrix to check if at least the basic syntax is okay (note that
	  current warnings for C89 seem to indicate faults that may be fatal
	  in binary code)
	* .travis.yml: .travis.yml : mark gnu99-gcc-7-nowarn as a not-failing
	  case to keep up
	* .travis.yml: .travis.yml : add gnu99-clang-5.0-nowarn to the test
	  matrix (hope clang can do GNU C dialect)
	* .travis.yml: .travis.yml : add gnu11-gcc-7-nowarn to the test
	  matrix

2020-10-08  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: .travis.yml : add c11-clang-5.0-nowarn and
	  c11-clang-5.0-warn to the matrix
	* .travis.yml: .travis.yml : add gnu99-gcc-7-nowarn
	  c99-clang-5.0-nowarn to test matrix (expected to be green)
	* .travis.yml: .travis.yml : warning comment about multitoken CFLAGS
	  and distcheck
	* ci_build.sh: ci_build.sh : spell case statements in consistent
	  style
	* ci_build.sh: ci_build.sh : define default-all-errors separately
	  from default-alldrv
	* ci_build.sh: ci_build.sh : revise multi-token CONFIG_OPTS entries
	* .travis.yml, ci_build.sh: .travis.yml / ci_build.sh : define a
	  BUILD_TYPE=default-all-errors specifically to list all files with
	  errors fatal for current build config (but not list whatever
	  succeds)
	* ci_build.sh: ci_build.sh : allow to stack multi-token CC="ccache
	  clang" and such
	* ci_build.sh: ci_build.sh : recognize is_clang() for ccache wrapping
	* ci_build.sh: ci_build.sh : recognize is_clang()
	* .travis.yml, ci_build.sh: Issue #823 : Set up Travis CI testing for
	  more compiler implementations and C/C++ standards
	* ci_build.sh: ci_build.sh : fix a few historic typos
	* ci_build.sh: make sure we build all possible binaries in
	  default-alldrv mode
	* drivers/Makefile.am: drivers/Makefile.am : drop redundant
	  pijuice_SOURCES listed in wrong section

2020-10-08  Alexey Rodionov <alexey.rodionov@red-soft.ru>

	* .../python/app/locale/ru/LC_MESSAGES/NUT-Monitor.mo,
	  scripts/python/app/locale/ru/ru.po: Fixed two typos and translation
	  of the term load
	* .../app/locale/ru/LC_MESSAGES/NUT-Monitor.mo,
	  scripts/python/app/locale/ru/ru.po: Additional corrections of the
	  Russian translation
	* .../app/locale/ru/LC_MESSAGES/NUT-Monitor.mo,
	  scripts/python/app/locale/ru/ru.po: Fixed typos, made changes
	  according to comments

2020-10-07  Jim Klimov <jimklimov@gmail.com>

	* drivers/snmp-ups.c: Update snmp-ups.c  Fixed indentation for
	  multiline if-clause
	* clients/upsmon.c: Update upsmon.c  Log a warning if an UPS is both
	  OB+LB+Calibrating so due to this combo we do not tell the host to
	  shut down gracefully. Comment some ideas to work around such
	  situation in a smarter way if we have additional info to know if we
	  are in a safe environment just calibrating, or a known-unsafe one
	  with a real outage in progress.
	* common/state.c: state.c: state_delinfo(): comment on immutables
	  For `state_delinfo()` not deleting immutable variables, comment
	  this near the function and log for runtime hits to help
	  troubleshooting.

2020-10-07  Jim Klimov <jim@jimklimov.com>

	* docs/man/snmp-ups.txt, docs/nut.dict: Update snmp-ups manpage for
	  symmetrathreephase quirk to complete PR #788
	* docs/man/Makefile.am, docs/man/index.txt, docs/man/pijuice.txt,
	  docs/nut.dict: Add initial manpage for pijuice driver, hastily
	  ripped off one for asem driver
	* drivers/pijuice.c: pijuice.c cleanup : rectify leading indentations
	* drivers/pijuice.c: pijuice.c cleanup : rectify tabulation of
	  definitions
	* drivers/pijuice.c: pijuice.c cleanup : comment end of big block of
	  nested #if macros
	* drivers/pijuice.c: pijuice.c cleanup : rectify indentation and
	  blank-line the default return
	* drivers/pijuice.c: pijuice.c cleanup : indent stacked #if* macros
	* drivers/pijuice.c: pijuice.c cleanup : trailing whitespaces

2020-10-06  Arnaud Quette <ArnaudQuette@eaton.com>

	* drivers/main.c: Driver datadump improvements  Do not switch to
	  statepath, nor write pidfile, when using the datadump (-s -d) mode

2020-09-22  Ross Williams <ross@ross-williams.net>

	* clients/upsmon.c, clients/upsmon.h: Do not shutdown if UPS is
	  performing calibration  Some UPS calibration procedures (e.g.
	  CyberPower) involve discharging the battery below the LB level, but
	  we don't want systems to shut down if the UPS is only on battery
	  because it is calibrating.

2020-08-12  Konstantin Gizdov <kgizdov@gmail.com>

	* drivers/usbhid-ups.c: initial patch that works

2020-08-08  Sean McBride <sean@rogue-research.com>

	* clients/cgilib.c, clients/nutclient.cpp, clients/upsmon.c,
	  clients/upsset.c, drivers/al175.c, drivers/apcsmart-old.c,
	  drivers/asem.c, drivers/bcmxcp.c, drivers/belkinunv.c,
	  drivers/dstate.c, drivers/gamatronic.c, drivers/isbmex.c,
	  drivers/mge-utalk.c, drivers/nut-libfreeipmi.c,
	  drivers/nutdrv_qx_voltronic-qs-hex.c,
	  drivers/nutdrv_qx_voltronic.c, drivers/oneac.c, drivers/powercom.c,
	  drivers/rhino.c, drivers/riello_ser.c, drivers/snmp-ups.c,
	  drivers/solis.c, drivers/tripplite_usb.c, drivers/tripplitesu.c,
	  server/netssl.c, tools/nut-scanner/scan_nut.c: WIP: Fixed various
	  warnings and errors identified by cppcheck  Specifically:
	  arrayIndexThenCheck,drivers/nutdrv_qx_voltronic-qs-hex.c:222,style,Array
	  index 'i' is used before limits check.
	  arrayIndexThenCheck,drivers/oneac.c:176,style,Array index 'i' is
	  used before limits check.
	  clarifyCalculation,drivers/belkinunv.c:1063,style,Clarify
	  calculation precedence for '&' and '?'.
	  clarifyCalculation,drivers/belkinunv.c:922,style,Clarify
	  calculation precedence for '&' and '?'.
	  clarifyCalculation,drivers/powercom.c:677,style,Clarify calculation
	  precedence for '&' and '?'.
	  clarifyCalculation,drivers/powercom.c:732,style,Clarify calculation
	  precedence for '&' and '?'.
	  clarifyCondition,drivers/asem.c:248,style,Boolean result is used in
	  bitwise operation. Clarify expression with parentheses.
	  duplicateConditionalAssign,drivers/solis.c:725,style,The statement
	  'if (DaysOnWeek!=DaysOffWeek) DaysOnWeek=DaysOffWeek' is logically
	  equivalent to 'DaysOnWeek=DaysOffWeek'.
	  duplicateExpression,clients/cgilib.c:49,style,Same expression on
	  both sides of '||'.
	  duplicateExpression,drivers/nutdrv_qx_voltronic.c:270,style,Same
	  expression on both sides of '||'.
	  duplicateExpression,drivers/nutdrv_qx_voltronic.c:303,style,Same
	  expression on both sides of '||'.
	  duplicateExpression,drivers/nutdrv_qx_voltronic.c:397,style,Same
	  expression on both sides of '||'.
	  identicalInnerCondition,drivers/tripplite_usb.c:579,warning,Identical
	  inner 'if' condition is always true.
	  incorrectLogicOperator,drivers/dstate.c:1170,warning,Logical
	  conjunction always evaluates to false: c2 && !c2.
	  incorrectLogicOperator,drivers/rhino.c:190,warning,Logical
	  disjunction always evaluates to true: BattVoltage > 129 ||
	  BattVoltage < 144.
	  incorrectStringBooleanError,drivers/mge-utalk.c:899,warning,Conversion
	  of string literal "\r\n" to bool always evaluates to true.
	  invalidPrintfArgType_sint,clients/upsset.c:393,warning,%d in format
	  string (no. 1) requires 'int' but the argument type is 'unsigned
	  int'. invalidPrintfArgType_sint,clients/upsset.c:676,warning,%d in
	  format string (no. 1) requires 'int' but the argument type is
	  'unsigned int'.
	  invalidPrintfArgType_sint,drivers/isbmex.c:178,portability,%d in
	  format string (no. 1) requires 'int' but the argument type is
	  'ssize_t {aka signed long}'.
	  invalidPrintfArgType_sint,drivers/tripplitesu.c:435,warning,%d in
	  format string (no. 1) requires 'int' but the argument type is
	  'unsigned int'.
	  knownConditionTrueFalse,clients/upsmon.c:919,style,Condition 'un'
	  is always true
	  knownConditionTrueFalse,drivers/gamatronic.c:111,style,Condition
	  'ret>=0' is always true
	  knownConditionTrueFalse,drivers/powercom.c:696,style,Condition
	  'battval>bat0' is always true
	  knownConditionTrueFalse,drivers/solis.c:485,style,Condition
	  'AppPower==0' is always false
	  knownConditionTrueFalse,tools/nut-scanner/scan_nut.c:180,style,Condition
	  'numa>=3' is always true memleak,clients/upsset.c:664,error,Memory
	  leak: val
	  nullPointerRedundantCheck,drivers/snmp-ups.c:1554,warning,Either
	  the condition 'info_template==NULL' is redundant or there is
	  possible null pointer dereference: info_template.
	  pointerLessThanZero,drivers/nut-libfreeipmi.c:864,style,A pointer
	  can not be negative so it is either pointless or an error to check
	  if it is. pointerLessThanZero,drivers/nut-libfreeipmi.c:884,style,A
	  pointer can not be negative so it is either pointless or an error
	  to check if it is.
	  postfixOperator,clients/nutclient.cpp:896,performance,Prefer prefix
	  ++/-- operators for non-primitive types.
	  redundantInitialization,drivers/al175.c:548,style,Redundant
	  initialization for 'reply'. The initialized value is overwritten
	  before it is read.
	  uninitMemberVar,clients/nutclient.cpp:504,warning,Member variable
	  'TcpClient::_timeout' is not initialized in the constructor.
	  uninitMemberVar,clients/nutclient.cpp:513,warning,Member variable
	  'TcpClient::_timeout' is not initialized in the constructor.
	  uninitvar,server/netssl.c:546,error,Uninitialized variable: ret
	  unsignedLessThanZero,drivers/apcsmart-old.c:928,style,Checking if
	  unsigned expression 'sdtype' is less than zero.
	  unsignedPositive,drivers/bcmxcp.c:785,style,Unsigned expression
	  'commandByte' can't be negative so it is unnecessary to test it.
	  uselessAssignmentPtrArg,drivers/riello_ser.c:105,warning,Assignment
	  of function parameter has no effect outside the function. Did you
	  forget dereferencing it?

2020-07-29  Fabrice Fontaine <fontaine.fabrice@gmail.com>

	* m4/nut_check_libgd.m4: nut_check_libgd.m4: try to find gd through
	  pkg-config  gdlib-config has been dropped from version 2.3.0 with
	  https://github.com/libgd/libgd/commit/d62f608c7c4a814c70d4ba777725e3e62d9e2cde

2020-07-21  Luka Kovačič <luka.kovacic@builtin.io>

	* drivers/delta-hid.c: drivers: delta-hid: Update entry flags
	  appropriately  Update entry flags to use HU_FLAG_QUICK_POLL for
	  status and alarm variables, HU_FLAG_SEMI_STATIC for variables that
	  can change on user changes and HU_FLAG_STATIC for variables that
	  don't need to be updated after init.

2020-07-17  Alexey Rodionov <alexey.rodionov@red-soft.ru>

	* .../app/locale/ru/LC_MESSAGES/NUT-Monitor.mo,
	  scripts/python/app/locale/ru/ru.po: Add Russian translation for
	  NUT-Monitor

2020-07-11  Matt Merhar <mattmerhar@protonmail.com>

	* docs/security.txt: Fix typo in TCP Wrappers documentation

2020-07-02  Luka Kovačič <luka.kovacic@builtin.io>

	* drivers/Makefile.am, drivers/delta-hid.c, drivers/delta-hid.h,
	  drivers/usbhid-ups.c, scripts/upower/95-upower-hid.rules: drivers:
	  delta-hid: Add Delta HID subdriver  Delta HID subdriver is added to
	  support Delta RT Series, Single Phase, 1/2/3 kVA UPS devices.  The
	  driver was tested and tweaked on Delta RT 3 kVA UPS.

2020-06-15  Florian Bernd <flobernd@users.noreply.github.com>

	* drivers/apcupsd-ups.c: Do not overwrite `poll_interval` in
	  `apcupsd-ups`  This commit removes the hardcoded poll-interval of
	  60 seconds and instead only makes sure that the user-defined
	  interval is greater than a minimum-interval.
	* drivers/apcupsd-ups.c, drivers/apcupsd-ups.h: Do not call
	  `dstate_delinfo()` for LB-condition variables  This commit fixes
	  the `ignorelb` flag for the `apcupsd-ups` driver. Previusly
	  "battery.charge" and "battery.runtime" was cleared before invoking
	  `status_commit()` which caused the LB-condition to always be
	  `false`.
	* common/state.c: Respect `ST_FLAG_IMMUTABLE` in `dstate_delinfo()`

2020-06-11  Peter Klein <kleinpa00@gmail.com>

	* clients/nutclient.cpp, clients/nutclient.h: Remove dynamic
	  exception specifications from clients/nutclient.cpp  These are
	  invalid in c++17 and must be removed for compatibility with modern
	  compilers.

2020-06-11  Eric Zinnikas <eric@zinnikas.org>

	* drivers/cyberpower-mib.c: Support CyberPower RMCARD205

2020-06-02  Jim Klimov <jim@jimklimov.com>

	* drivers/apc-ats-mib.c: apc-ats-mib.c : use a ..._MODEL_NAME macro
	  and bump version to complete earlier fix

2020-05-31  Timothy Pearson <tpearson@raptorengineering.com>

	* drivers/snmp-ups.c: Fix long-standing transfer threshold read bug
	  with APCC 3 phase Symmetra units

2020-05-14  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-scanner/scan_snmp.c: SNMP scan: check the match dup on
	  'mib' instead of 'sysoid'  This actually avoids duplication when
	  multiple sysOIDs are declared for the same MIB

2020-05-01  gprints <g.s@arcor.de>

	* drivers/liebert-hid.c: Update liebert-hid.c

2020-04-29  Jim Klimov <jim@jimklimov.com>

	* scripts/systemd/nut-driver-enumerator-daemon-activator.service.in:
	  nut-driver-enumerator-daemon-activator.service : use older
	  Service/StartLimitInterval for broader compatibility  Should help
	  avoid this warning and unachieved functionality on systemd-229 and
	  older: * systemd[1]:
	  [/lib/systemd/system/nut-driver-enumerator-daemon-activator.service:30]
	  Unknown lvalue 'StartLimitIntervalSec' in section 'Service'

2020-04-28  Arnaud Quette <Arnaud.Quette@free.fr>

	* drivers/eaton-ats16-mib.c: snmp-ups: cleanup Eaton ATS16 with new
	  Network-M2  Duplicate the definition, as a workaround to the bugger
	  scanner data extraction, and point at the same eaton_ats16 name,
	  since there is no interest in separating mib2nut entries pointing
	  at the same MIB mapping
	* tools/nut-snmpinfo.py: Fix Python issue in the SNMP scan extractor
	* drivers/huawei-mib.c: Huawei MIB: add a counter check OID  This
	  avoids getting a false result when trying all OIDs, due to the use
	  of Net SNMP sysOID (.1.3.6.1.4.1.8072.3.2.10), found in various
	  implementations

2020-04-21  Jim Klimov <jim@jimklimov.com>

	* scripts/augeas/nutupsdconf.aug.in: nutupsdconf.aug.in: complete the
	  ALLOW_NO_DEVICE definition
	* conf/nut.conf.sample, conf/upsd.conf.sample,
	  docs/man/upsd.conf.txt, scripts/augeas/nutupsdconf.aug.in,
	  scripts/augeas/tests/test_nut.aug, server/conf.c, server/upsd.c,
	  server/upsd.h: Rename NUT_NOCONF_ALLOWED to ALLOW_NO_DEVICE as
	  suggested in PR comments
	* conf/nut.conf.sample: nut.conf.sample: update the comment about
	  NUT_NOCONF_ALLOWED
	* server/upsd.c: upsd.c : CONST char* temp "envvar" as we do not
	  change the string later

2020-04-20  Jim Klimov <jim@jimklimov.com>

	* scripts/systemd/nut-driver-enumerator-daemon-activator.service.in:
	  nut-driver-enumerator-daemon-activator.service.in : disable
	  quick-start throttling

2020-04-17  Jim Klimov <jim@jimklimov.com>

	* conf/upsd.conf.sample, docs/man/upsd.conf.txt: Re-spell "Boolean"
	  to satisfy spell-checker
	* conf/upsd.conf.sample, docs/man/upsd.conf.txt,
	  scripts/augeas/nutupsdconf.aug.in,
	  scripts/augeas/tests/test_nut.aug, server/conf.c, server/upsd.c,
	  server/upsd.h: Allow to configure NUT_NOCONF_ALLOWED option via
	  upsd.conf

2020-04-17  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/eaton-ats16-mib.c, drivers/eaton-ats16-mib.h,
	  drivers/snmp-ups.c: snmp-ups: add Eaton ATS16 with new Network-M2
	  Add support for Eaton ATS16 using the new Network-M2 communication
	  cards, and including a fixed sysOID fingerprint

2020-04-03  Jim Klimov <jim@jimklimov.com>

	* clients/nutclient.cpp: sanity-check getDevicesVariableValues()
	  called with empty device list

2020-03-14  Jim Klimov <jim@jimklimov.com>

	* docs/nut.dict: nut.dict : fixes for NUT_NOCONF_ALLOWED addition
	* scripts/systemd/nut-driver-enumerator.service.in,
	  scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in: SystemD service units:
	  source EnvironmentFile=...nut.conf if available
	* conf/nut.conf.sample: nut.conf.sample : prepare an uncommentable
	  line for NUT_NOCONF_ALLOWED=true
	* server/upsd.c: introduce support for envvar NUT_NOCONF_ALLOWED=true
	  to allow starting with 0 ups.conf sections

2020-02-19  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in: when autostarting/reloading upsd
	  (nut-server), do it for previously "failed" unit too
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in: do systemctl daemon-reload between
	  editing a unit definition and auto-starting it

2020-02-09  Laurent Bigonville <bigon@users.noreply.github.com>

	* scripts/python/app/nut-monitor.appdata.xml,
	  scripts/python/app/nut-monitor.desktop: Update the appdata file to
	  the latest version of the specification (#727)  * nut-monitor:
	  Update the appdata file to the latest version of the specification
	  Fixes: #724  * nut-monitor: Update the desktop file to follow the
	  last version of the sepcification

2020-02-09  Jim Klimov <jim@jimklimov.com>

	* docs/Makefile.am, docs/documentation.txt, docs/nut.dict,
	  docs/solaris-usb.txt, scripts/Solaris/README: Add
	  docs/solaris-usb.txt for posterity (#755)

2020-01-20  Jim Klimov <jim@jimklimov.com>

	* NEWS: described nut-driver-enumerator introduction

2020-01-15  Clappier, Eric <EricClappier@eaton.com>

	* drivers/ietf-mib.c: Issue corection filter ietf mib  (cherry picked
	  from commit 93a64efbdae28355be60329b651d3c42c7ddedf8)
	* tools/nut-scanner/scan_snmp.c, tools/nut-snmpinfo.py: Fix nutscan
	  snmp  (cherry picked from commit
	  bc5a6c218e21c0af454007e2929c084129b6f3ed)
	* drivers/apc-ats-mib.c: Issue correction no pointer null at
	  beginning of the SNMP IDs device table  (cherry picked from commit
	  9d167892a36bf75d30839e7d4d6b53f037751666)

2020-01-08  Fernando Chaves <38504809+fernandolcx@users.noreply.github.com>

	* drivers/apcupsd-ups.h: apcupsd-ups: add real power and current
	  variables  LOAD_W => ups.realpower LOADAPNT => power.percent
	  OUTCURNT => `output.current` LOAD_VA => `ups.power` NOMAPNT =>
	  `ups.power.nominal`  Closes:
	  https://github.com/networkupstools/nut/pull/753

2019-11-07  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/powerware-mib.c: SNMP Eaton Gb Network Card: various data
	  completion  * fix reading of input.voltage, related to the ending
	  ".0", * fix existing commands handling, * add support for the load
	  segment (managed outlets), including status information and
	  commands

2019-11-06  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Add PowerWalker VFI 1000 CG PF1  Closes:
	  https://github.com/networkupstools/nut/issues/648

2019-09-25  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/snmp-ups.c: Fix false positive when communication is lost

2019-09-19  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/eaton-pdu-marlin-mib.c, drivers/powerware-mib.c: SNMP Eaton
	  EMP002: handle sensor presence  Sensor may not be present (or
	  connected). However, the values (temperature, humidity, ...) are
	  still available, but should not be considered
	* drivers/eaton-pdu-marlin-helpers.c: SNMP Eaton ePDU: always return
	  celsius for temperature  since the value reading is always adapted
	  to celsius

2019-09-18  andrewmccartney <andrew.mccartney@ametek.com>

	* drivers/Makefile.am, drivers/libusb.c, drivers/powervar-hid.c,
	  drivers/powervar-hid.h, drivers/usbhid-ups.c: Changes to add
	  support for Powervar UPM as usb-hid UPS. Includes adding a report
	  index to libusb.c in order to handle the composite device in the
	  UPM.

2019-09-12  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/nut-names.txt: Fix wording on ambient collection
	* drivers/eaton-pdu-marlin-helpers.c, drivers/eaton-pdu-marlin-mib.c,
	  drivers/powerware-mib.c, drivers/snmp-ups.c, drivers/snmp-ups.h:
	  Typo fix: sorry Mr Fahrenheit  And thanks to Jim Klimov for the
	  review!
	* drivers/eaton-pdu-marlin-mib.c: Fix compilation warning

2019-09-12  Andrew Anderson <andrew@lirn.net>

	* drivers/pijuice.c: Conditionally include linux/i2c.h  Check for
	  I2C_FUNC_I2C to avoid errors caused by conflicts between
	  linux/i2c-dev.h and linux/i2c.h
	* configure.ac, drivers/pijuice.c: Add more granular I2C support
	  checks  Accommodate one more variation of SMBUS/I2C support  where
	  both the headers and the libraries exist and are usable.
	* drivers/pijuice.c: Pull over the latest development version  Clean
	  up the upsdebugX() labels Pull the conditional I2C support code
	  closer to the includes block Don't report battery temp as UPS temp
	  Warn if we adjust shutdown_delay
	* drivers/pijuice.c: Fix the length passed into memset()
	* drivers/asem.c: Add pijuice I2C driver for PiJuice HAT 4/4  Update
	  asem.c to complie cleanly by adding an include for <sys/ioctl.h>
	* configure.ac: Add pijuice I2C driver for PiJuice HAT 3/4  Check for
	  both the i2c-tools 3.x and 4.x include files (i2c-dev.h/smbus.h)
	  and set flags accordingly.  Link with the i2c library file from
	  i2c-tools 4.x if it is available.
	* drivers/Makefile.am: Add pijuice I2C driver for PiJuice HAT 2/4
	  Update the driver Makefile.am to add pijuice driver to the
	  LINUX_I2C_DRIVERLIST
	* drivers/pijuice.c: Add pijuice I2C driver for PiJuice HAT 1/4  Add
	  pijuice driver

2019-09-09  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/nut-names.txt: nut-names: increase ambient collection  Add
	  several variables to the ambient collection, to support smart
	  sensors like Eaton EMPDT1H1C2
	* drivers/powerware-mib.c: SNMP Eaton Gb Network Card: support for
	  EMPDT1H1C2
	* drivers/eaton-pdu-marlin-helpers.c,
	  drivers/eaton-pdu-marlin-helpers.h, drivers/eaton-pdu-marlin-mib.c:
	  SNMP Eaton ePDU: support for EMPDT1H1C2
	* drivers/snmp-ups.c, drivers/snmp-ups.h: snmp-ups: support for
	  daisychained ambient sensor

2019-09-02  Laurent Bigonville <bigon@bigon.be>

	* scripts/python/app/nut-monitor.desktop: nut-monitor: Drop the .png
	  extension for the Icon in the .desktop file

2019-08-18  Laurent Bigonville <bigon@bigon.be>

	* scripts/python/Makefile.am,
	  scripts/python/app/icons/256x256/nut-monitor.png, .../python/app/{
	  => icons/48x48}/nut-monitor.png,
	  scripts/python/app/icons/64x64/nut-monitor.png,
	  scripts/python/app/icons/scalable/nut-monitor.svg: nut-monitor: Add
	  scalable, 64x64 and 256x256 icon for nut-monitor  FTR, this icon
	  comes from gnome-icon-theme 2.28

2019-07-30  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_siemens_sitop.c: nutdrv_siemens_sitop: move to the
	  new "battery.charge.approx" var
	* data/cmdvartab, docs/nut-names.txt: Add and document a new
	  "battery.charge.approx" var

2019-07-22  rpvelloso <rvelloso@gmail.com>

	* drivers/solis.c: solis: avoid index out of bounds  Since the
	  parameter taken by autonomy_calc() is used to index a couple of
	  arrays of 5 positions and the variable `im`, which is passed to
	  autonomy_calc(), can be equal to 4, blindly incrementing it by one,
	  when it's 4, leads to an index out of bounds.

2019-07-12  Spencer Shimko <spencer@quarksecurity.com>

	* drivers/tripplite_usb.c: Report load for Tripp Lite USB 3005
	  protocol  The debug output for a device using the Tripp Lite 09ae
	  3005 protocol seems to show that the ups.debug.L is the load as
	  noted on mailing list posts. Decode it and report it as ups.load.
	  Tested on TRIPP LITE SMART500RT1U.

2019-07-11  Jim Klimov <jim@jimklimov.com>

	* scripts/Solaris/nut-driver.xml.in: Solaris/nut-driver.xml.in :
	  constrain the impact of managing SMF instances for missing devices
	* scripts/systemd/nut-driver@.service.in: nut-driver@.service.in :
	  fix back templated @SBINDIR@
	* scripts/systemd/nut-driver@.service.in: Problem: Attempts to start
	  a nut-driver@bogusname actually run upsdrvctl on everything
	  Solution: First check if service instance name is valid, then use
	  it Should fix https://github.com/42ity/nut/issues/87

2019-07-10  Laurent Bigonville <bigon@bigon.be>

	* clients/Makefile.am, tools/nut-scanner/Makefile.am: libupsclient,
	  libnutscan: Only export symbols part of the public API  Fixes: #713

2019-07-09  Laurent Bigonville <bigon@bigon.be>

	* clients/upsclient.c, clients/upsmon.c, drivers/apcsmart.c,
	  drivers/bcmxcp.h, drivers/bestuferrups.c, drivers/main.c,
	  drivers/masterguard.c, drivers/metasys.c, drivers/mge-hid.c,
	  drivers/mge-mib.c, drivers/nutdrv_qx_q1.c, drivers/nutdrv_qx_q1.h,
	  drivers/optiups.c, drivers/solis.c, scripts/python/app/NUT-Monitor,
	  tools/nut-scanner/nut-scanner.c: Fix several typos
	* configure.ac, lib/libupsclient.pc.in, m4/nut_check_libnss.m4,
	  m4/nut_check_libopenssl.m4: Use pkg-config module names instead of
	  listing the libraries  Fixes: #709

2019-07-02  Jim Klimov <jim@jimklimov.com>

	* common/common.c: common.c : BUILD_64 not detected in some distros,
	  needs stdint.h

2019-04-26  William Chase <wchome@freet.org>

	* drivers/bestfcom.c: Fix for Ferrups FE7000 "off" command (#692)
	  "off" command for FE7000 required at least 5 seconds for the
	  command to be accepted.  Also should match the off with autostart
	  or "o" with "a" to be consistent with the manual:
	  https://www.eaton.com/content/dam/eaton/products/backup-power-ups-surge-it-power-distribution/backup-power-ups/eaton-ferrups-tower-ups/eaton-ferrups-FE-QFE-userguide-.pdf
	  (o [time] a is how the manual references the "short" command)

2019-04-16  Ross Williams <ross@ross-williams.net>

	* drivers/snmp-ups.c: snmp-ups: add ability to set TimeTicks
	  correctly (#687)  * snmp-ups: add ability to set TimeTicks
	  correctly  Driver had been setting read/write parameters as either
	  Integer or String, but OIDs that expect TimeTicks cannot be set
	  using an Integer.  snmp-ups already supported getting TimeTicks
	  correctly and had helper functions for setting TimeTicks, but logic
	  had not been implemented in su_setOID().  * Missing semicolon ;-(
	  * snmp-ups: use NUT's str_to_long() in su_setOID()  Safer
	  conversion from provided strings to instant command or read/write
	  value. Omitted default value if !SU_MODE_INSTCMD because it is not
	  possible for read/write variable functions to be called without a
	  value (unlike instant commands).

2019-04-15  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : optimize large string-emptiness tests
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : expose for debugging
	  hook_findSavedDeviceName and hook_getSavedDeviceName
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : fix systemd_findSavedDeviceName() to
	  return expected values
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : avoid sub-shelling and varname clash
	  in smf_setSavedUniq() and smf_setSavedMD5()

2019-04-11  Jim Klimov <jimklimov@gmail.com>

	* drivers/eaton-pdu-marlin-mib.c, drivers/snmp-ups.c: [DNMY] Fix snmp
	  templates (#681)  * eaton-pdu-marlin-mib.c : move "outlet.count"
	  query higher  * snmp-ups.c : anticipate lack of OIDs in templates

2019-04-11  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : in systemd_getSavedDeviceName() strip
	  quotes around returned DEVICE == "..." value
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : escape the verbatim dollar in
	  doublequotes

2019-04-05  Jim Klimov <jimklimov@gmail.com>

	* .travis.yml, Makefile.am, ci_build.sh: Introduce shell script
	  syntax checks (#675)  * Introduce shell script syntax checks  *
	  Makefile.am : do not shellcheck/spellcheck by default as it can
	  fail for external circumstances (e.g. missing tools)  * Makefile.am
	  : visibly separate the "check-scripts-syntax" implementation (with
	  current system shells) vs "shellcheck" which may get impemented
	  differently (with external tools) in later iterations  *
	  Makefile.am : update the check-scripts-syntax comment (clarify
	  text, fix typo)  * Makefile.am : clarify the check-scripts-syntax
	  vs shellcheck comment  * .travis.yml and ci_build.sh : leave TBDs
	  for future shellcheck tool integration  * ci_build.sh : call both
	  shellcheck and check-scripts-syntax targets; it does not duplicate
	  the work and reports while one calls another for now - and will do
	  two tests when they become independent
	* configure.ac: configure.ac : fix mismatched usage of have_cxx11
	  envvar (#689)
	* server/conf.c: Problem: isdigit() receives a char* instead of char
	  (#690)  Solution: as a quick fix, pick the first char of the string
	  we pass. The proper fix would be to use the str_*() API for safe
	  conversions, in a later iteration.  See-also:
	  https://github.com/networkupstools/nut/issues/676

2019-04-05  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : typo fix in
	  systemd_findSavedDeviceName()

2019-04-01  Ross Williams <ross@ross-williams.net>

	* drivers/cyberpower-mib.c: cyberpower-mib: fix instant command
	  declarations  Had desired OID values in default value field. Also,
	  default value for SU_TYPE_CMD should be NULL.
	* drivers/cyberpower-mib.c: cyberpower-mib: got delay OID wrong  Left
	  off .0
	* drivers/cyberpower-mib.c: cyberpower-mib: Add delay variables  Add
	  some read/write variables affecting the sleep delay and return
	  delay.
	* drivers/cyberpower-mib.c: cyberpower-mib: fix instant command
	  declarations  Had desired OID values in default value field. Also,
	  default value for SU_TYPE_CMD should be NULL.
	* drivers/cyberpower-mib.c: cyberpower-mib: NUT runtime is seconds
	  not minutes
	* drivers/cyberpower-mib.c: cyberpower-mib: clarify status values
	* drivers/cyberpower-mib.c: cyberpower-mib: correct sysOID  At least
	  newer CyberPower management cards report a sysOID of CPS-MIB::ups,
	  not the base CyberPower enterprise MIB that was previously defined.

2019-04-01  Jim Klimov <jimklimov@gmail.com>

	* include/common.h: common.h : use the common do/while idiom for
	  macro with if clause

2019-04-01  Jim Klimov <jim@jimklimov.com>

	* common/common.c, include/common.h: Problem: upsdebug*() pass data
	  and allocate vars always  Solution: wrap old well-known API
	  routines into macros that check debugging level first, and only
	  invest into calling routines and passing data later - if that would
	  not be in vain.
	* docs/nut.dict: nut.dict : add "daemonize"
	* docs/man/nut-driver-enumerator.txt,
	  scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in man/nut-driver-enumerator.txt :
	  document --daemon-after mode

2019-03-29  Ross Williams <ross@ross-williams.net>

	* drivers/cyberpower-mib.c: cyberpower-mib: Add instant commands
	* drivers/cyberpower-mib.c: cyberpower-mib: Add instant commands
	* drivers/cyberpower-mib.c: cyberpower-mib: add support for battery
	  status  Reports LB, CAL, and RB flags

2019-03-29  Jim Klimov <jimklimov@gmail.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : refactor
	  nut_driver_enumerator_full_reconfigure() into a routine
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : refactor get_service_for_device()
	  into a routine
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : added
	  update_upslist_savednames_find_missing() into single-run and
	  daemonized modes, to update inconsistent configs
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : refactor
	  list_services_for_devices(_once) and get_device_for_service() into
	  routines
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : introduce
	  upslist_savednames_missing() and upslist_savednames_find_mismatch()
	  to upgrade entries without saved names
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : comment that we trust
	  hook_getSavedDeviceName data to be consistent (ensuring it is is
	  expensive and belongs elsewhere)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : to be sure, chop instance names from
	  SMF FMRIs more intensively
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : introduce hook_findSavedDeviceName()
	  for faster --get-service-for-device processing
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : use hook_getSavedDeviceName() to
	  speed up --get-device-for-service processing where possible (typo
	  fix)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : standardize hook_setSavedDeviceName()
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : use hook_getSavedDeviceName() to
	  speed up --get-device-for-service processing where possible
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : update (C) 2019
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : refactor expansions "$_VAR" =>
	  "${_VAR}" for better readability
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : add a BIG NOTE about shell
	  interpreter

2019-03-28  Jim Klimov <jimklimov@gmail.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : save original device name into
	  service props
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : run smf_setSaved*() in subprocesses
	  to avoid variable pollution in caller
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : smf_setSavedMD5() : refactor the
	  actual setter into smf_setSavedUniq() for other use-cases
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : smf_setSavedMD5() : do not spam
	  stderr about yet-missing property
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : smf_setSavedMD5() : do not try to
	  refresh the non-instance service (for global config)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : smf_getSavedMD5() : do not spam
	  stderr about yet-missing property
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh : do not create a hashed SMF instance if
	  failed to add a normally-named one because it already exists (clean
	  it up and then add)

2019-03-25  Jean-Baptiste Boric <boricj@users.noreply.github.com>

	* tools/nut-scanner/scan_snmp.c: Fix nut-scanner SNMPv3 (#680)

2019-03-19  Jim Klimov <jim@jimklimov.com>

	* drivers/main.c: drivers/main.c : rearrange handling of configured
	  nut_debug_level_global vs nut_debug_level_driver vs ultimately used
	  nut_debug_level
	* drivers/main.c: driver/main.c : separate toggles for driver
	  debugging and backgrounding

2019-03-19  Jean-Baptiste Boric <boricj@users.noreply.github.com>

	* tools/nut-scanner/scan_snmp.c: Fix SNMPv3 in nut-scanner (#679)

2019-03-19  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/compaq-mib.c, drivers/eaton-ats16-mib.c,
	  drivers/eaton-pdu-marlin-mib.c, drivers/hpe-pdu-mib.c,
	  drivers/netxml-ups.c, drivers/powerware-mib.c: Refresh firmware
	  information for Eaton/HPE devices  Despite the static nature of
	  these data, firmware can be updated by various means, and should
	  thus be refreshed by the driver, without needing a driver restart.
	  A "semi static" approach should be done in the end, as in
	  usbhid-ups, but is not part of the present development, though
	  commented in the code. For the time being, simply remove the STATIC
	  flags to refresh the data (snmp-ups) and allow to refresh product
	  information (netxml-ups)

2019-03-18  Jim Klimov <jim@jimklimov.com>

	* drivers/main.c: drivers/main.c : allow to configure debug_min=NUM
	  to ease service debugging

2019-03-15  Arnaud Quette <arnaud.quette@free.fr>

	* NEWS: Add entry for openssl-1.1.0 support

2019-03-15  Arjen de Korte <build+github@de-korte.org>

	* clients/upsclient.c, clients/upssched.c,
	  m4/nut_check_libopenssl.m4, server/netssl.c: Add support for
	  openssl-1.1.0 (#504)  * Add support for openssl-1.1.0  * Allow
	  TLSv1 and higher (not just TLSv1)  * Fix check for empty string  *
	  Report TLS handshake in debug mode  * Update
	  nut_check_libopenssl.m4  * Update upsclient.c  * Update netssl.c

2019-03-14  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/nutupsdrv.txt, docs/man/ups.conf.txt: nutupsdrv: reword
	  "user" directive section  Closes:
	  https://github.com/networkupstools/nut/issues/336 Closes:
	  https://github.com/networkupstools/nut/issues/671

2019-03-13  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut.dict: Update spelling dictionary
	* docs/nut.dict: Update spelling dictionary

2019-03-11  Jean-Baptiste Boric <boricj@users.noreply.github.com>

	* clients/nutclient.cpp, clients/nutclient.h, docs/new-clients.txt,
	  docs/nut.dict: Implement tracking commands in libnutclient (#673)
	  * Implement tracking commands in libnutclient   * Add
	  TrackingResult::INVALID_ARGUMENT

2019-03-11  Arnaud Quette <arnaud.quette@free.fr>

	* docs/new-clients.txt: libnutclient: add comments to the code sample

2019-02-28  Arnaud Quette <arnaud.quette@free.fr>

	* NEWS: Update NEWS for next release

2019-02-26  Roberto Panerai Velloso <rvelloso@gmail.com>

	* drivers/solis.c, drivers/solis.h: Added author info for previous
	  merge https://github.com/networkupstools/nut/pull/511 (#672)  *
	  added author information

2019-02-26  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/solis.c: Fix regression in solis authors list
	* clients/Makefile.am, clients/upsclient.c, clients/upsclient.h,
	  clients/upscmd.c, clients/upsrw.c, common/snprintf.c,
	  conf/upsd.conf.sample, docs/man/Makefile.am,
	  docs/man/upscli_cleanup.txt, docs/man/upscli_readline.txt,
	  docs/man/upscli_sendline.txt, docs/man/upscmd.txt,
	  docs/man/upsd.conf.txt, docs/man/upsrw.txt, docs/net-protocol.txt,
	  docs/nut-names.txt, docs/nut.dict, docs/sock-protocol.txt,
	  drivers/dstate.c, drivers/upshandler.h, include/common.h,
	  scripts/augeas/nutupsdconf.aug.in,
	  scripts/augeas/tests/test_nut.aug, server/conf.c, server/netget.c,
	  server/netinstcmd.c, server/netset.c, server/nut_ctype.h,
	  server/sstate.c, server/upsd.c, server/upsd.h,
	  tools/nut-scanner/nut-scanner.c: INSTCMD and SET VAR status
	  tracking implementation  (#659)  * INSTCMD and SET VAR status
	  tracking implementation  This commit implements the instant
	  commands (instcmd) and variables settings (setvar) status tracking,
	  to get the actual execution status from the driver   * Missing
	  Revision history   * Fix nut-names.txt modification that should not
	  be here   * Augeas support: add CMDSETSTATUSDELAY for upsd.conf   *
	  INSTCMD and SET VAR status tracking completion  Following Daniele
	  Pezzini thorough review, sanitize and improve the code, and also
	  complete documentation   * INSTCMD and SET VAR status tracking
	  completion  implement support for status tracking in upscmd and
	  upsrw   * upscmd/upsrw: delay retries for status tracking   *
	  Remove comment  There is no need to condition CMDSET_STATUS
	  commands received by upsd from the driver, on
	  cmdset_status_enabled, since what matters is the presence of a list
	  and id   * Complete comment   * UUID v4 implementation  replaced
	  the initial rxi/uuid4 library used by a cross platform version.
	  Though more basic, it is enough for our needs, at least for now   *
	  status_info should be static   * No need for else, since fatalx is
	  called before   * Suppress \n from debug output   * Group sanity
	  checks   * Get rid of dynamic memory allocation   * Improve and
	  enforce the use of UUID4_LEN   * Comment on the size of dest for
	  nut_uuid_v4()   * Move structures and defines to more appropriate
	  places   * Add functions with timeout  Add upscli_sendline_timeout
	  and upscli_readline_timeout, beside from the classic blocking
	  versions. Also make a common define for timeout, and use it in
	  upsclient and nut-scanner   * upscmd/upsrw: add a timeout option
	  * Basic homebrew UUID v4 implementation   * Prefer to use static
	  buffer for UUID   * log actual result of instcmd / setvar   * Fix
	  tracking ID reporting due to static memory changes   * upsclient:
	  use unsigned int for timeouts  Also, explicit that upscli_cleanup()
	  takes no argument.  * upscmd/upsrw: use unsigned int for timeout +
	  our str_to_uint() for it  Also, slightly reword the help message
	  for `-t` (timeout) option, in order to clarify which is the unit
	  (seconds) used for the provided value.  * upscmd/upsrw: don't sleep
	  after receiving a non-PENDING CMDSET_STATUS  Also, remove some
	  nesting in do_cmd() and do_set().  * net-protocol: clarify the
	  format of GET CMDSET_STATUS + <status_id>  <status_id> is not
	  optional to get the status of a command/setvar with CMDSET_STATUS,
	  so drop the [square brackets] from it. Also drop "quotes" in SET
	  CMDSET_STATUS's <value>, since it's expected to be a single word.
	  Plus, fix markup of INSTMCD's <cmdparam> parameter.  *
	  sock-protocol: align case and markup of command parameters  *
	  dstate: fix handling of INSTCMD's optional parameters  We should
	  still support the old `INSTCMD <cmdname> [<cmdparam>]` format, and
	  not only consider <cmdparam> when also `STATUS_ID <id>` is
	  provided.  Also, fix the format of our sock-protocol commands
	  mentioned in comments, and add function names to debug info.  *
	  common: document the recently added things  * upsd: in INSTCMD/SET
	  handlers, also accept NULL for status_id  Plus: - use a simpler
	  approach to test if status_id is not empty, - align the way the SET
	  command is built to the one used for the INSTCMD command.  * upsd:
	  drop unnecessary/unused global  * upsd: move sanity checks of
	  cmdset_status_get() after declaration of vars  Also, drop some
	  nesting in that function.  * Move from CMDSET_STATUS / STATUS_ID to
	  TRACKING  This is just a big, big rename, no code changes.  * upsd:
	  refine the tracking API  Add a couple of functions to change in a
	  predictable way the value of the general enablement of tracking and
	  make it visible only inside upsd.c. Also, move the tracking type
	  (tracking_t) and the list of items inside upsd.c.  * net-protocol:
	  also return TRACKING between OK and <id>, for INSTCMD/SET VAR  *
	  dstate: *really* fix handling of INSTCMD's optional parameters
	  Erroring out on `INSTCMD <cmdname>` doesn't seem like a good
	  idea...  * common: massage default timeouts  Rename the default
	  timeout used in network operations by upsclient and nut-scanner to
	  be more specific: from DEFAULT_TIMEOUT to DEFAULT_NETWORK_TIMEOUT.
	  Plus, make the default timeout used when retrieving the result of
	  an INSTCMD/SET VAR with TRACKING enabled a common #define'd value
	  (DEFAULT_TRACKING_TIMEOUT), and use it also to publish the default
	  value of the -t option in the help messages of upscmd and upsrw.
	  As suggested by Charles Lepple.  * upsd: ignore case of UUID4 in
	  tracking API  Also, remove some nesting in tracking_del().  *
	  libupsclient: generate manpages for
	  upscli_{read,send}line_timeout()  To keep things simple, at least
	  for now, only generate manpages and not html pages (and, as such,
	  don't even think of using our linkman AsciiDoc macro with those
	  functions, to avoid dead links).  * libupsclient: bump version as
	  per recent changes  - addition of upscli_{read,send}line_timeout(),
	  - upscli_cleanup() -> upcli_cleanup(void)  Note: only increase
	  'current' and not 'age', because the upscli_cleanup() change could
	  (potentially) make it not compatible with previous versions.  *
	  upscmd/upsrw: warn that also the drivers need to support TRACKING,
	  for -w  * Fix typo and spelling   * Add check around atoi()
	  conversion

2019-02-25  Roberto Panerai Velloso <rvelloso@gmail.com>

	* drivers/solis.c, drivers/solis.h: solis: various improvements and
	  fixes  - fixed two memory leaks (unnecessary strdup's), - removed
	  ser_flush calls that were causing the driver to desync, -
	  refactored code, mostly bit mainpulation functions, - other minor
	  improvements in source code.

2019-02-23  Jim Klimov <jim@jimklimov.com>

	* clients/Makefile.am: clients/Makefile.am : also consider HAVE_CXX11
	  for .la target
	* tests/Makefile.am: tests/Makefile.am : explicitly consider
	  HAVE_CXX11
	* clients/Makefile.am, tests/Makefile.am: tests, clients Makefiles :
	  consider HAVE_CXX11
	* configure.ac: configure.ac : expose HAVE_CXX11 into automake
	* configure.ac: configure.ac : add C++0X as draft C++11 support
	  detection (older GCC on some systems)
	* configure.ac: configure.ac : refactor C++11 detection for
	  readability
	* configure.ac: Problem: OpenBSD mktemp complains on short pattern
	  Solution: bump from XXXXX to XXXXXXX which did not complain in
	  another part of the configure script

2019-02-20  Jim Klimov <jim@jimklimov.com>

	* clients/Makefile.am, tools/nut-scanner/Makefile.am: nut-scanner and
	  clients Makefile.am : comments about version-information

2019-02-16  Jim Klimov <jim@jimklimov.com>

	* docs/nut.dict: nut.dict : add words for upsdrvsvcctl doc

2019-02-08  Jim Klimov <jim@jimklimov.com>

	* common/common.c: Problem: 32-bit builds fail to load 64-bit libs
	  Solution: Do our best to guess the bitness of a build, and use it
	  in search paths for get_libname()

2019-02-03  Daniele Pezzini <hyouko@gmail.com>

	* server/upsd.c: upsd: fix the calling of netcmds items' func()
	  Since, as per our network protocol, it's perfectly legal to have
	  single-word commands (and we already have a few, e.g. VER, NETVER,
	  HELP, ...), we do not do an early check to ensure that at least one
	  argument was provided to the command. As such, the list of words
	  generated by parseconf could actually end with the command itself.
	  That said, trying to access something that should not be there
	  doesn't seem like a good idea, so, only pass to netcmds items'
	  func() the list of arguments (which starts at the second item of
	  the list of words), if there are arguments, otherwise just pass
	  NULL.
	* server/sstate.c: sstate: make sure ADDRANGE/DELRANGE have all the
	  needed parameters  Since ADDRANGE and DELRANGE take 3 arguments
	  (<varname>, <minvalue>, <maxvalue>), we have to ensure all of them
	  were provided, before attempting to use them.
	* drivers/dstate.c: dstate: fix dstate_delrange() socket protocol
	  command  The documented (and used in server-side) command for
	  deleting a range is `DELRANGE <varname> <minvalue> <maxvalue>`, not
	  `DELRANGE <varname> "<minvalue> <maxvalue>"`, as used in
	  dstate_delrange(). So, fix that unused (well, at least in NUT)
	  function to use the correct format.  Also, remove an extraneous
	  additional space in the command used in dstate_addrange().

2019-02-01  Arnaud Quette <arnaud.quette@free.fr>

	* configure.ac: Fix wording that breaks some syntax highlighting
	  systems
	* configure.ac, scripts/augeas/Makefile.am: Augeas support: execute
	  lenses tests if possible  This is however disabled for now, while
	  waiting to fix the reported issue  Ref:
	  https://github.com/networkupstools/nut/issues/657
	* configure.ac: Fix wording that breaks some syntax highlighting
	  systems
	* docs/nut-names.txt: Add the missing delayed versions of some
	  commands

2019-01-30  Jean-Baptiste Boric <boricj@users.noreply.github.com>

	* clients/nutclient.cpp, clients/nutclient.h: libnutclient: introduce
	  getDevicesVariableValues() (#654)  A performance bottleneck was
	  identified within the 42ity project, where querying all variable
	  values from 300 ePDUs through upsd and libnutclient took 15 seconds
	  to complete. The new method TcpClient::getDevicesVariableValues()
	  allows querying device variable values in bulk, by sending all LIST
	  VAR commands ahead of time and then parsing all the results at
	  once. Throughput is vastly improved, with the mega-query completing
	  about 15 times faster.

2019-01-28  Arnaud Quette <arnaud.quette@free.fr>

	* clients/Makefile.am, clients/nutclient.h: libnutclient: fix version
	  and interface  * Library version should be updated to reflect
	  changes, and is now 1:0:0 * Interface should be adapted so that the
	  additional argument to instant commands can be optional
	* drivers/eaton-pdu-marlin-mib.c, drivers/hpe-pdu-mib.c: snmp-ups:
	  support extra param for instcmd (Eaton/HPE)  Add support for extra
	  parameter for instant commands on Eaton and HPE ePDU
	* drivers/snmp-ups.c: snmp-ups: fix potential segfault  when using
	  delayed instant commands, with a NULL default value, and not
	  providing a value, the driver can segfault
	* docs/nut.dict: Fix spellcheck
	* clients/nutclient.cpp, clients/nutclient.h, docs/net-protocol.txt:
	  Add support for extra parameter for instant commands  Instant
	  commands were almost ready for supporting additional parameter.
	  However, it was not documented, and libnutclient was not supporting
	  it yet

2019-01-24  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/apc-ats-mib.c, drivers/apc-mib.c, drivers/apc-pdu-mib.c,
	  drivers/baytech-mib.c, drivers/bestpower-mib.c,
	  drivers/compaq-mib.c, drivers/cyberpower-mib.c,
	  drivers/eaton-ats16-mib.c, drivers/eaton-ats30-mib.c,
	  drivers/eaton-pdu-genesis2-mib.c, drivers/eaton-pdu-marlin-mib.c,
	  drivers/eaton-pdu-pulizzi-mib.c,
	  drivers/eaton-pdu-revelation-mib.c,
	  drivers/emerson-avocent-pdu-mib.c, drivers/hpe-pdu-mib.c,
	  drivers/ietf-mib.c, drivers/mge-mib.c, drivers/netvision-mib.c,
	  drivers/powerware-mib.c, drivers/raritan-pdu-mib.c,
	  drivers/raritan-px2-mib.c, drivers/snmp-ups.c, drivers/snmp-ups.h,
	  scripts/subdriver/gen-snmp-subdriver.sh: snmp-ups: Rework instant
	  commands handling  Use snmp_info_t->dfl, which is a char*, instead
	  of snmp_info_t->info_len for instant commands default value. This
	  allows to distinguish between commands that do not require a
	  mandatory value. For instcmd requiring a parameter (such as
	  *.delay), a NULL snmp_info_t->dfl and no extradata will result in
	  STAT_INSTCMD_INVALID value returned  Also adapt subdrivers and
	  gen-snmp-subdriver.sh to match this
	* drivers/delta_ups-mib.c, drivers/eaton-pdu-marlin-mib.c,
	  drivers/huawei-mib.c, drivers/snmp-ups.c, drivers/snmp-ups.h,
	  drivers/xppc-mib.c, scripts/subdriver/gen-snmp-subdriver.sh:
	  snmp-ups: Simplify the mapping structure  * snmp_info_t->setvar is
	  not used anymore, so drop it, * hence, also delete flag
	  SU_FLAG_SETINT and references to it, * adapt subdrivers and
	  gen-snmp-subdriver.sh to match this

2019-01-23  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: Fix warnings
	  (memset-elt-size/pointer-sign)
	* drivers/snmp-ups.c: snmp-ups: Actually fix commands offset (off by
	  1)  The last fix was wrongly setting the offset to negative, and
	  substracting it again from the current device number, which
	  resulted in an addition, not a substraction
	* drivers/mge-hid.c, drivers/usbhid-ups.c: usbhid-ups / MGE: bump
	  versions to reflect changes

2019-01-22  Jean-Baptiste Boric <boricj@users.noreply.github.com>

	* drivers/mge-xml.c, drivers/netxml-ups.c, drivers/netxml-ups.h:
	  netxml-ups: Report calibration status (#650)

2019-01-22  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/mge-hid.c, drivers/usbhid-ups.c, drivers/usbhid-ups.h:
	  usbhid-ups: Fix erroneous OB report on Eaton UPS  Also created a
	  read accessor on status bits and move the related definitions to
	  the driver header
	* data/driver.list.in, drivers/Makefile.am, drivers/hpe-pdu-mib.c,
	  drivers/hpe-pdu-mib.h, drivers/snmp-ups.c: snmp-ups: Add support
	  for HPE ePDU

2019-01-21  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: Improve ALARM flag handling

2019-01-17  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: Fix ALARM flag on non-daisychained
	  devices
	* drivers/snmp-ups.c: snmp-ups: Fix erroneous integration of hpe_pdu
	* drivers/snmp-ups.c: snmp-ups: Fix commands offset (off by 1)
	* drivers/snmp-ups.c: snmp-ups: Fix detection and display of hex
	  strings

2019-01-11  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/compaq-mib.c: snmp-ups: Add firmware version for new
	  Network card  Also bump HPE/Compaq subdriver version to 1.62

2018-12-18  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : centralize management of TIMEOUT_CMD
	  and TIMEOUT_ARGS, and use it for driver stop/start - it hangs too
	  sometimes
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : centralize management of TIMEOUT_CMD
	  and TIMEOUT_ARGS, and use it for driver stop/start - it hangs too
	  sometimes
	* docs/man/upsdrvsvcctl.txt, scripts/upsdrvsvcctl/upsdrvsvcctl.in:
	  upsdrvsvcctl.in : support --timeout-cmd and --timeout-args to limit
	  running the systemctl/svcadm commands

2018-12-07  Scott Shambarger <devel@shambarger.net>

	* clients/upsmon.c, clients/upssched.c, common/parseconf.c: Add
	  FD_CLOEXEC flag to config files, pipes and sockets  File
	  descriptors are leaking to processes spawned by upsmod and
	  upssched, leading to SELinux errors when (for example) sendmail
	  attempts to read from fd #4.

2018-12-05  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : log the reevaluation frequency when
	  daemonizing
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : reword a log message
	* scripts/Solaris/nut-driver-enumerator.xml.in:
	  nut-driver-enumerator.xml.in : use --daemon-after to verify that
	  the config was correct, and only then daemonize
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : handle TERM et al more visibly
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : re-evaluate ups.conf checksum if
	  interrupted during sleep
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : refactor $RECONFIGURATION_SIGNALS in
	  daemonize() mode and add graceful termination support
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : refactor SIGHUP trap handling in
	  daemonize() mode
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : do not further subshell the aready
	  backgrounded daemonize()
	* scripts/systemd/nut-driver-enumerator-daemon.service.in,
	  scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator-daemon.sh /
	  nut-driver-enumerator-daemon.service.in : support a daemon-after
	  mode
	* scripts/systemd/nut-driver-enumerator-daemon-activator.service.in:
	  nut-driver-enumerator-daemon-activator.service.in : Make it a
	  short-lived oneshot service after all
	* scripts/systemd/nut-driver-enumerator-daemon.service.in:
	  nut-driver-enumerator-daemon.service.in : remove irrelevant
	  comments (from non-daemonized origins) and we do forking
	* scripts/systemd/nut-driver-enumerator-daemon-activator.service.in:
	  nut-driver-enumerator-daemon-activator.service.in : Limit the
	  ammount of times we try to reload/restart
	  nut-driver-enumerator-daemon.service
	* .../systemd/nut-driver-enumerator-daemon-activator.service.in:
	  nut-driver-enumerator-daemon-activator.service.in : This unit is
	  intentionally not installed as PartOf/WantedBy anything, no
	  auto-start

2018-12-04  Jim Klimov <jim@jimklimov.com>

	* configure.ac, docs/config-notes.txt, scripts/systemd/.gitignore,
	  scripts/systemd/Makefile.am, scripts/systemd/README,
	  .../nut-driver-enumerator-daemon-activator.path.in,
	  ...t-driver-enumerator-daemon-activator.service.in,
	  .../nut-driver-enumerator-daemon.service.in,
	  scripts/systemd/nut-driver-enumerator.path.in,
	  scripts/systemd/nut-driver-enumerator.service.in:
	  nut-driver-enumerator-daemon* : Introduce a systemd service unit
	  bundle for daemonized mode
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh : note to not skip full "main" evaluation
	  in daemon mode
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh : support SIGHUP causing a quick reconfig
	  when received both during the sleep and processing in-progress
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh : avoid continuous reconfiguration (esp.
	  in daemon mode)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : for many discovered changes, avoid
	  the lag of running systemctl daemon-reload for every item in the
	  loop
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : in single-run, daemon and
	  full-reconfig modes, take note if the config file had changed while
	  we were running - re-sync services vs sections ASAP then
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : introduce calc_md5_file() and comment
	  calc_md5() a bit better

2018-12-01  mjan <mjmail@correo.casa.loc>

	* drivers/Makefile.am, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_hunnox.c, drivers/nutdrv_qx_hunnox.h: Add support
	  for Hunnox HNX-850

2018-11-19  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : critical typo fix (Environment is
	  valid in section Service, not Unit)

2018-11-16  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : refactor upsconf_getSection_content()
	  to have one place of logic to add the parsed section line
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in,
	  tests/nut-driver-enumerator-test--ups.conf,
	  tests/nut-driver-enumerator-test.sh: nut-driver-enumerator.sh.in :
	  section-name brackets should contain a single token and not be
	  inside another string
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : refactor
	  upslist_normalizeFile_filter() into a more readable standalone
	  routine

2018-11-13  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : update the list of config factors
	  that mean an USB nutdrv_qx device
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in,
	  tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  / nut-driver-enumerator-test--ups.conf /
	  nut-driver-enumerator.sh.in : extend upsconf_getValue() to query
	  for several values in the same call to more efficiently check if
	  any key/flag is set
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in,
	  tests/nut-driver-enumerator-test--ups.conf,
	  tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  / nut-driver-enumerator-test--ups.conf /
	  nut-driver-enumerator.sh.in : do not ignore driver flags followed
	  by a comment
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : fix \t into TABCHAR
	* tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  : show the expected vs actual diff in any shell interpreter
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : add a disclaimer about config parser
	  (probable non-)conformity to NUT binary definitions
	* tests/nut-driver-enumerator-test--ups.conf:
	  nut-driver-enumerator-test--ups.conf : test a section with indented
	  name
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in,
	  tests/nut-driver-enumerator-test--ups.conf,
	  tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  / nut-driver-enumerator-test--ups.conf /
	  nut-driver-enumerator.sh.in : in section-name lines, ignore
	  anything outside the first set of brackets
	* tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  : show a diff of expected vs actual, if the shell allows in-place
	  docs
	* tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  : suggest to a dev how to re-run the failed test verbosely

2018-11-05  Jim Klimov <jimklimov@gmail.com>

	* tools/Makefile.am, tools/nut-scanner/Makefile.am: tools/ Makefiles
	  : refactor with clarifications from DMF branch (#636)

2018-11-04  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : fix svcprop queries to base service
	  level
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : consider "unknown" systemd unit state
	  as one to be restarted
	* scripts/upsdrvsvcctl/upsdrvsvcctl.in: upsdrvsvcctl.in : fix -D for
	  debugging level
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in,
	  tests/nut-driver-enumerator-test--ups.conf,
	  tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  / nut-driver-enumerator.sh.in : support USB and Serial modes for
	  nutdrv_qx
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : track changes of global config and
	  restart drivers and nut-server if that happened
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in,
	  tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  / nut-driver-enumerator.sh.in : in upslist_debug() show also the
	  global config section
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in,
	  tests/nut-driver-enumerator-test--ups.conf,
	  tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  / nut-driver-enumerator.sh.in : support flag values (line is a
	  single token)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : do not use an "other" section as a
	  magic value
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : "break" the loop, not return from it
	  (artefact of moving code from a sub-shell)

2018-11-01  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh : Use a timeout to restart/reload
	  nut-server (systemd)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh : Do not restart/reload nut-server if not
	  already running (systemd)

2018-10-22  Robert W. Cashman <rob@cashmans.org>

	* drivers/cyberpower-mib.c: Added UPS load, battery charge, input
	  voltage/frequency, and output voltage, MIB mappings to
	  cyberpower-mib.c

2018-10-12  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: .travis.yml : move nut-driver-enumerator-test jobs
	  lower in stack - we want slow jobs to start first
	* .travis.yml: .travis.yml : matrix job seems to require having at
	  least two items

2018-10-11  Jim Klimov <jimklimov@gmail.com>

	* tests/nut-driver-enumerator-test.sh: Update
	  nut-driver-enumerator-test.sh  Standardize the testing setup

2018-10-11  Jim Klimov <jim@jimklimov.com>

	* builds/nut-driver-enumerator-test/ci_build.sh:
	  builds/nut-driver-enumerator-test/ci_build.sh : use the "selftest"
	  dummy service framework if systemd is not available in the testing
	  OS environment
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : support a "selftest" dummy service
	  framework
	* builds/nut-driver-enumerator-test/ci_build.sh:
	  builds/nut-driver-enumerator-test/ci_build.sh : let the tests have
	  some SERVICE_FRAMEWORK
	* tests/nut-driver-enumerator-test.sh:
	  tests/nut-driver-enumerator-test.sh : update envvar processing
	* builds/nut-driver-enumerator-test/ci_build.sh:
	  builds/nut-driver-enumerator-test/ci_build.sh : export BUILDDIR
	  SRCDIR for the test script
	* builds/nut-driver-enumerator-test/ci_build.sh:
	  builds/nut-driver-enumerator-test/ci_build.sh : debug the testing
	  script itself
	* .travis.yml, builds/nut-driver-enumerator-test/ci_build.sh,
	  tests/nut-driver-enumerator-test.sh: Problem: nut-driver-enumerator
	  not Travised  Solution: Add call to its selftest

2018-10-10  Jim Klimov <jim@jimklimov.com>

	* docs/nut.dict: nut.dict : add components of --show-all-configs
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : echo if there is nothing to
	  reconfigure (add timestamp, do not spam in daemonized loop by
	  default)
	* scripts/Solaris/postinstall.in, scripts/Solaris/preremove.in:
	  Solaris preremove.in postinstall.in : pass the last-active
	  nut-driver-enumerator instance across package upgrades done over a
	  short timeframe
	* scripts/Solaris/postinstall.in, scripts/Solaris/preremove.in:
	  Solaris preremove.in postinstall.in : less spam from "svcadm clear"
	  of not-failed services
	* scripts/Solaris/postinstall.in, scripts/Solaris/preremove.in:
	  Solaris preremove.in postinstall.in : support the multi-instance
	  nut-driver-enumerator service now
	* tests/Makefile.am: tests/Makefile.am : EXTRA_DIST the new
	  nut-driver-enumerator-test script and config
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : echo if there is nothing to
	  reconfigure (early on or after the loop has done some changes)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : update comments regarding SMF service
	  instance wrapping
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : test for changed sections before
	  testing for changed set of section vs service names
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : small sanity check in
	  upslist_checksums_unchanged()
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : update comments regarding new support
	  for detection of changed device section contents
	* scripts/upsdrvsvcctl/upsdrvsvcctl.in: upsdrvsvcctl.in : SMF service
	  management should wait for completion, to be same as systemd
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : optimize loop work
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : basic support for detecting changes
	  in ups.conf
	* tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  : commented a couple of FIXMEs illustrated by the test expected
	  data
	* tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  : call testcase_upslist_debug() last in the suite
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : store SECTION_CONTENT in a variable
	  and spit it out once
	* tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  : update tests for only trimming whitespace around first "="
	  character
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : refer to systemd unit via SVCINST not
	  $1 when registering
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : update comments
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : drop unneeded assignment in
	  calc_md5()
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : in upslist_normalizeFile() only trim
	  whitespace around first "=" character (do not touch subsequent ones
	  in value part)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : optimize upsconf_getValue() since we
	  use pre-normalized data
	* tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  : add DEBUG=trace
	* tests/nut-driver-enumerator-test--ups.conf,
	  tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  : add a test case for dummy-ups proxying to a localhost "remote"
	  device; add examples of quoted key values with spaces

2018-10-09  Jim Klimov <jim@jimklimov.com>

	* tests/nut-driver-enumerator-test--ups.conf,
	  tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  : add a test case for querying global config pseudo-section
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : support getting global config values
	  (when device section value is empty)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : zsh not supported
	* tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  : add a test case for config value that was quoted
	* tests/nut-driver-enumerator-test.sh: nut-driver-enumerator-test.sh
	  : control values of section and device name checksums in
	  upsconf_debug()
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : expose section and device name
	  checksums in upsconf_debug()
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : introduce upsconf_getSection_MD5() to
	  checksum the normalized payload of a config section
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : in --reconfigure should exit() not
	  return()
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : in systemd_validFullUnitName() add
	  the .service suffix if needed
	* tests/.gitignore, tests/nut-driver-enumerator-test--ups.conf,
	  tests/nut-driver-enumerator-test.sh: Introduce simple unit tests
	  for nut-driver-enumerator.sh
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : expose upsconf_debug() and
	  upslist_debug() to CLI
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : avoid direct exit during loop
	  processing
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : use a variable SYSTEMD_CONFPATH
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : use UPSCONF_DATA_SDP and rearrange
	  getSection() routines for certain use-cases
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : use upslist_readFile_once() in
	  command-line tools to avoid re-parsing the config many times
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : use cached UPSCONF_DATA in
	  upsconf_getSection() rather than FS access every time
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : rearrange and document the initial
	  slurping and normalization of ups.conf, reducing the work done
	* docs/man/nut-driver-enumerator.txt,
	  scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in,
	  scripts/upsdrvsvcctl/upsdrvsvcctl.in: nut-driver-enumerator.sh.in :
	  add --show-configs to expose UPSCONF_DATA with normalized content
	  of ups.conf

2018-10-05  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/upsdrvsvcctl.in: upsdrvsvcctl.in : add
	  "reconf(igure)" call to pass into nut-driver-enumerator.sh
	* scripts/upsdrvsvcctl/upsdrvsvcctl.in: upsdrvsvcctl.in : update
	  usage()
	* docs/man/nut-driver-enumerator.txt,
	  scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.txt : make spellchecker happy
	* scripts/Solaris/postinstall.in: solaris postinstall :
	  REPORT_RESTART_42=no when reconfiguring
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : update message for reconfig dropping
	  of old service
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : fix fall-through daemonization for
	  DASH
	* scripts/Solaris/README: Solaris README : update about two
	  nut-driver-enumerator instances
	* docs/man/nut-driver-enumerator.txt: nut-driver-enumerator.txt : add
	  recently introduced options into manpage
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : typo fix
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : typo fix
	* scripts/Solaris/nut-driver-enumerator.xml.in:
	  nut-driver-enumerator.xml.in : support daemonization into
	  background (contract service)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : support daemonization into background
	* scripts/Solaris/nut-driver-enumerator.xml.in:
	  nut-driver-enumerator.xml.in : typo fix
	* scripts/Solaris/nut-driver-enumerator.xml.in:
	  nut-driver-enumerator.xml.in : avoid creating default service twice
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : support SIGHUP for the daemon
	* scripts/Solaris/README,
	  scripts/Solaris/nut-driver-enumerator.xml.in: nut-driver-enumerator
	  : use --daemon(=freq) in Solaris SMF service, implement it as an
	  option (two prepackaged services, with and without loop)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator : add --daemon(=freq) to monitor ups.conf vs.
	  services changes ourselves in a loop
	* scripts/Solaris/postinstall.in: nut-driver-enumerator : use
	  --reconfigure to remake units from scratch in Solaris postinstall
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator : add --reconfigure to remake units from
	  scratch

2018-10-04  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : for network-depending connections,
	  wait for ifplugd to set up physical network, if enabled
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : for network-depending connections,
	  wait for DNS resolver to appear
	* scripts/systemd/nut-driver-enumerator.service.in:
	  nut-driver-enumerator.service.in : do NOT remain active when done,
	  allow nut-driver-enumerator.path to start this again
	* scripts/Solaris/README: Solaris README : note that there is no
	  dynamic refresh when ups.conf is changed
	* scripts/Solaris/README: Solaris README : update reference to
	  upsdrvsvcctl directory
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : when removing a systemd instance,
	  also remove systemd complaints about it (if any)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : less ambiguity - manage ".service"
	  instances as such

2018-10-03  Jim Klimov <jimklimov@gmail.com>

	* common/common.c: get_libname() : support more 64-bit pathname
	  patterns (#609)

2018-10-02  Jim Klimov <jim@jimklimov.com>

	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : in systemd use-case, fall back to
	  rude restart if reload-or-restart of nut-server stalled and failed

2018-09-28  Jim Klimov <jimklimov@gmail.com>

	* scripts/systemd/nutshutdown.in: Update nutshutdown.in  No strict
	  restrictions for fallback timeout

2018-09-27  Jim Klimov <jim@jimklimov.com>

	* scripts/Solaris/nut-server.xml.in,
	  scripts/Solaris/svc-nut-server.in,
	  scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in / nut-server.xml.in / svc-nut-server.in
	  : reload the running upsd instead of restarting it fully when
	  possible (Solaris SMF)
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : reload the running upsd instead of
	  restarting it fully when possible (Linux SystemD)

2018-09-26  Jim Klimov <jim@jimklimov.com>

	* scripts/systemd/nut-driver-enumerator.path.in:
	  nut-driver-enumerator.path.in : typo fix for CONFDIR => CONFPATH
	* docs/man/Makefile.am: docs/man/Makefile.am : handle other
	  nutclient*.3 manpages that are mass-implemented by some
	  libnutclient*.txt
	* scripts/systemd/nutshutdown.in: nutshutdown.in : fallback short
	  timeout if config is absent or not parsable
	* scripts/systemd/nutshutdown.in: nutshutdown.in : check that needed
	  programs exist first

2018-09-19  Jim Klimov <jim@jimklimov.com>

	* configure.ac: configure.ac : syntactic sugar
	* drivers/usbhid-ups.c: usbhid-ups.c : report the libusb version
	  involved in the driver at this time - reformatted
	* drivers/usbhid-ups.c: usbhid-ups.c : report the libusb version
	  involved in the driver at this time - also the values registered
	  with comm_driver structure
	* drivers/usbhid-ups.c: usbhid-ups.c : report the libusb version
	  involved in the driver at this time
	* drivers/usbhid-ups.c: usbhid-ups.c : report the libusb version
	  involved in the driver at this time - reformatted
	* drivers/usbhid-ups.c: usbhid-ups.c : report the libusb version
	  involved in the driver at this time - also the values registered
	  with comm_driver structure
	* drivers/usbhid-ups.c: usbhid-ups.c : report the libusb version
	  involved in the driver at this time
	* tools/Makefile.am, tools/nut-scanner/Makefile.am: Update comments
	  in tools(/nut-scanner)/Makefile.am regarding new more proper
	  dependency definitions

2018-09-19  Arnaud Quette <ArnaudQuette@Eaton.com>

	* server/upsd.c: upsd should return EXIT_FAILURE when -c failed

2018-09-17  Daniele Pezzini <hyouko@gmail.com>

	* data/driver.list.in: HCL: update support level of some Meta System
	  devices  As per the provided protocol: see nut-website's
	  66d30c90401ff7929b25e5a87f9299b728f861ea

2018-09-08  Jim Klimov <jimklimov@gmail.com>

	* drivers/usbhid-ups.c: usbhid-ups.c : libusb/libshut tracing debug
	  text

2018-09-08  Jim Klimov <jim@jimklimov.com>

	* tools/Makefile.am: tools/Makefile.am : GENERATED_USB_FILES also
	  depend on nutdrv_qx.c
	* tools/Makefile.am: tools/Makefile.am : generalize
	  GENERATED_SNMP_FILES too for consistency
	* tools/Makefile.am: Makefile.am : fix back calling scripts from
	  distdir while being in builddir
	* scripts/Solaris/postinstall.in: Solaris/postinstall.in : clarify
	  tests for present vs non-empty config files
	* scripts/Solaris/postinstall.in, scripts/Solaris/postremove.in,
	  scripts/Solaris/preinstall.in, scripts/Solaris/preremove.in: Insert
	  or update header comments in Solaris pre/post-install/remove
	  scripts

2018-09-07  Jim Klimov <jimklimov@gmail.com>

	* tools/Makefile.am, tools/nut-snmpinfo.py, tools/nut-usbinfo.pl:
	  tools/nut-snmpinfo.py tools/nut-usbinfo.pl tools/Makefile : use
	  TOP_SRCDIR/TOP_BUILDDIR to pass with distcheck too
	* tools/Makefile.am: tools/Makefile.am : update dependency on C
	  sources
	* Makefile.am: Makefile.am : "dist" drivers/*.c before tools (which
	  generates further files from that)
	* drivers/libusb0.c, drivers/libusb1.c: libusb0/1.c : ease debugging
	  by trace messages
	* drivers/libusb1.c: libusb1.c : inverted order of
	  usb_communication_subdriver_t name/ver fields
	* drivers/libusb0.c: libusb.c : inverted order of
	  usb_communication_subdriver_t name/ver fields
	* configure.ac: configure.ac  : syntactic sugar
	* drivers/libusb.c: libusb.c : inverted order of
	  usb_communication_subdriver_t name/ver fields
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : fix initial setup with 0 service
	  instances present
	* scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in:
	  nut-driver-enumerator.sh.in : try to enable "nut-server" when
	  restarting it
	* tools/Makefile.am: tools/Makefile.am : avoid rebuilding generated
	  files after "make dist" over and over
	* tools/nut-scanner/Makefile.am: tools/nut-scanner/Makefile.am :
	  structurally arrange built dependencies, reduce hardcoded
	  references to their names

2018-09-06  Jim Klimov <jimklimov@gmail.com>

	* drivers/libshut.c, drivers/libusb.c, drivers/usbhid-ups.c: libusb
	  tracing debug text

2018-09-06  Gabriele Taormina <gabriele.taormina@legrand.com>

	* drivers/metasys.c: metasys: retrieve also battery charge and
	  runtime  The added command is only supported by devices with an 'id
	  code' >= 14, while for other, older, models the command is not
	  enabled by default, and the user has to perform a specific
	  procedure via serial to enable it (where supported).

2018-09-06  Daniele Pezzini <hyouko@gmail.com>

	* data/driver.list.in: HCL: add some Legrand devices supported by
	  nutdrv_qx  Also, specify that Legrand Multiplug is USB-only.
	* data/driver.list.in: HCL: update support level of some Meta System
	  devices  As per the provided protocol: see nut-website's
	  570c1e5e9f1fb4f82abef9359897b5159e88fc50 Also, fix name of "HF Line
	  /2".

2018-09-05  Daniele Pezzini <hyouko@gmail.com>

	* drivers/metasys.c: metasys: remove useless initialisation of vars

2018-08-29  Jim Klimov <jim@jimklimov.com>

	* scripts/systemd/Makefile.am: EXTRA_DIST scripts/systemd/nut.target
	  also

2018-08-27  Gabriele Taormina <gabriele.taormina@legrand.com>

	* data/driver.list.in, drivers/metasys.c: metasys: support some newer
	  Meta System and Legrand devices  Add to the metasys driver a few
	  new models (Meta System DHEA, and others now branded Legrand)
	  speaking the Meta System UPS protocol.
	* drivers/metasys.c: metasys: treat any '\0' in the serial number as
	  a '0'
	* drivers/metasys.c: metasys: for bypass mode, call status_set() with
	  "BYPASS", not "BY"
	* drivers/metasys.c: metasys: fix handling of errors/special values
	  As per protocol documentation, data is sent by the device with
	  unsigned integers of 8, 16 or 32 bits, with errors/special values
	  being: - for uint16: 0xFFFF and 0xFFFE, - for uint32: 0xFFFFFFFF.
	  Alas, those values are (and, probably, have always been) actually
	  reported in the documentation (mostly) as if their types were not
	  unsigned (so, in decimal: -1, and -2) and the metasys driver used
	  them like that, converting the values to non-fixed width signed
	  types (int and long) and then expecting a value of -1 or -2 to
	  signal a particular event, but this only happens on platforms where
	  int is exactly 16 bits, and long 32 bits. So, leave values as
	  unsigned types (adjusting all the printf formats accordingly), and
	  use the right hex values, instead.
	* data/driver.list.in, drivers/Makefile.am, drivers/legrand-hid.c,
	  drivers/legrand-hid.h, drivers/usbhid-ups.c: usbhid-ups: add
	  Legrand subdriver
	* data/driver.list.in, drivers/nutdrv_qx.c: nutdrv_qx: add support
	  for some Legrand USB devices

2018-08-21  Jim Klimov <jim@jimklimov.com>

	* m4/nut_check_libneon.m4: nut_check_libneon.m4 : shell typo fix
	* m4/nut_check_libneon.m4: nut_check_libneon.m4 : do not AC_MSG_WARN
	  inside a standard message chain
	* m4/nut_check_libneon.m4: nut_check_libneon.m4 : provide fallback
	  defaults when pkg-config fails

2018-08-19  Daniele Pezzini <hyouko@gmail.com>

	* configure.ac: configure: fix messages of pkg-config checks  The
	  PKG_*() macros we use there already print messages, therefore we
	  can't use AC_MSG_CHECKING() before calling them, and
	  AC_MSG_RESULT() after, or we will get something like:  checking for
	  autoconf macro support of pkg-config... checking for pkg-config...
	  /usr/bin/pkg-config ^^^ AC_MSG_CHECKING()
	  ^^^ PKG_*() macro output checking pkg-config is at least version
	  0.9.0... yes ^^^ PKG_*() macro output -- continuation ok ^^^
	  AC_MSG_RESULT() checking for autoconf macro support of pkg-config
	  module checker... checking for dummy_PKG_CONFIG... yes ^^^
	  AC_MSG_CHECKING()                                               ^^^
	  PKG_*() macro output ok ^^^ AC_MSG_RESULT()  ...which is not
	  exactly desirable.  So, move the messages to AC_MSG_NOTICE(), with
	  the result being explicitly printed only on failure (AC_MSG_WARN()
	  call).
	* docs/man/Makefile.am: docs/man: fix man8 target for linux/i2c
	* docs/man/Makefile.am, drivers/Makefile.am: nutdrv_qx: don't
	  duplicate make targets  Since nutdrv_qx is both a serial and a USB
	  driver, up until now, its executable and manpages appeared in two
	  lists: serial and USB drivers, in order to be built in both cases,
	  when ./configure'd for only one of them... but, by doing this, when
	  ./configure'd for both, we ended up with dupes, which could
	  potentially cause problems, e.g. when installing them (and this
	  just happened).  For the executable, luckily, libtool calls install
	  one file at a time, so this was not, and it still should not be, a
	  problem. For the manpages, we were previously saved by automake,
	  which splits the list of files to be installed in different calls
	  if they are too many (see automake's am__install_max var, currently
	  set to 40), so the two nutdrv_qx entries ended up in different
	  calls to install, but the 8b75b03 commit, by adding more manpages
	  before nutdrv_qx's ones, pushed also the first occurrence to the
	  second call to install, which already contained the other one,
	  causing an error.  While other alternative, more flexible, but also
	  less portable, ways for solving this exist (e.g. using GNU make's
	  $(sort) on the generated lists), at least for now, prefer a more
	  portable solution, adding new intermediate lists for serial/USB
	  drivers and using simple automake conditionals.  Close
	  https://github.com/networkupstools/nut/issues/594

2018-08-14  Jim Klimov <jimklimov@gmail.com>

	* .gitignore, Makefile.am, README, common/Makefile.am, configure.ac,
	  docs/FAQ.txt, docs/config-notes.txt, docs/developers.txt,
	  docs/features.txt, docs/man/Makefile.am, docs/man/index.txt,
	  docs/man/nut-driver-enumerator.txt, docs/man/upsdrvctl.txt,
	  docs/man/upsdrvsvcctl.txt, docs/net-protocol.txt, docs/nut.dict,
	  include/Makefile.am, scripts/Aix/.gitignore, scripts/Aix/nut.init,
	  scripts/Aix/nut.init.in, scripts/Makefile.am,
	  scripts/Solaris/.gitignore, scripts/Solaris/Makefile.am,
	  scripts/Solaris/README, scripts/Solaris/makelocal.sh,
	  scripts/Solaris/nut-driver-enumerator.xml.in,
	  scripts/Solaris/nut-driver.xml.in,
	  scripts/Solaris/nut-monitor.xml.in,
	  scripts/Solaris/nut-server.xml.in, scripts/Solaris/nut.in,
	  scripts/Solaris/nut.xml.in, scripts/Solaris/pkginfo.in,
	  scripts/Solaris/postinstall.in, scripts/Solaris/postremove,
	  scripts/Solaris/postremove.in, scripts/Solaris/preinstall,
	  scripts/Solaris/preinstall.in, scripts/Solaris/prepackage.py,
	  scripts/Solaris/{preproto.pl => preproto.pl.in},
	  scripts/Solaris/preremove.in, scripts/Solaris/svc-nut-monitor.in,
	  scripts/Solaris/svc-nut-server.in, scripts/systemd/.gitignore,
	  scripts/systemd/Makefile.am, scripts/systemd/README,
	  scripts/systemd/nut-driver-enumerator.path.in,
	  scripts/systemd/nut-driver-enumerator.service.in,
	  scripts/systemd/nut-driver.service.in,
	  scripts/systemd/nut-driver.target,
	  scripts/systemd/nut-driver@.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in, scripts/systemd/nut.target,
	  scripts/systemd/nutshutdown.in, scripts/upsdrvsvcctl/.gitignore,
	  scripts/upsdrvsvcctl/Makefile.am, scripts/upsdrvsvcctl/README,
	  scripts/upsdrvsvcctl/nut-driver-enumerator.sh.in,
	  scripts/upsdrvsvcctl/upsdrvsvcctl.in: Use target for drivers in
	  Linux systemd (updated) and SMF instances for drivers in new
	  Solaris-like systems (and bring AIX initscript into better shape)
	  (#330)  * Use target for drivers in systemd  This allows much
	  better granularity and better monitoring in case of multiple UPSes.
	  * nut-driver.target improvements suggested by @peterhoeg in PR#229
	  * systemd units dependencies revised and commented  *
	  nut-driver-enumerator.sh initial commit  * nut-driver@.service.in :
	  integrate comments from @peterhoeg about extending unit
	  requirements  * WIP : initial integration of
	  nut-driver-enumerator.sh/service into makefiles etc.  *
	  nut-driver-enumerator.sh renamed into nut-driver-enumerator.sh.in
	  as it has processable templates in code  *
	  nut-driver-enumerator.sh.in : add its own config-file support to
	  set the variables used inside (if not via command-line env)  *
	  nut-driver-enumerator.sh.in : fix up the copyright header  *
	  Subject: Fix systemd service file for Debian From: Laurent
	  Bigonville <bigon@debian.org> Forwarded: not-needed  *
	  nut-driver-enumerator.sh.in : complete the Solaris SMF support in
	  the helper script  * EXTRA_DIST the
	  scripts/systemd/nut-driver.target (non-templated) file  *
	  nut-driver-enumerator.sh.in : updated comments (esp. about usage
	  and exit-codes) and runtime messages  *
	  nut-driver-enumerator.service.in : define an actual service payload
	  * nut-driver-enumerator.sh.in : refactor the logic of MAIN PROGRAM
	  into smaller routines for readability  *
	  nut-driver-enumerator.sh.in : introduce routines to help define
	  custom dependencies of particular drivers on other services  *
	  nut-driver-enumerator.sh.in : allow custom NUT_CONF_DIR from
	  envvar, to facilitate testing  * nut-server.service.in : typo fix
	  in comments  * nut-driver-enumerator.sh.in : support the concept of
	  localhost networking dependencies, and define vars with lists of
	  services to depend on  * nut-driver-enumerator.sh.in : use proper
	  FMRI:instance separator for SMF  * nut-driver-enumerator.sh.in :
	  added variables for dependency type on third-party service units  *
	  nut-driver-enumerator.sh.in : change upsconf_getDriverMedia()
	  output from tab-separated to multiline; add upsconf_getMedia() and
	  upsconf_debug() and upslist_debug()  * nut-driver-enumerator.sh.in
	  : refactor with upsconf_getValue() and cached pre-cooked ups.conf
	  data; infrastructure to configure service dependencies when adding
	  the service instance  * Remove hardcoded dependencies on udev and
	  network from provided systemd units; add comments about extending
	  via drop-in files and that nut-driver-enumerator will do this for
	  nut-drivers  * nutshutdown.in : mark executable  *
	  nut-driver-enumerator.sh.in : complete the systemd drop-in support
	  for custom dependencies for a driver  * nut-driver-enumerator.sh.in
	  : complete the SMF drop-in support for custom dependencies for a
	  driver  * nut-driver-enumerator.sh.in : comment-away
	  upslist_debug() in default runs  * WIP Adding Solaris SMF manifests
	  for NUT  * Sanitize Solaris SVR4 packaging rules  * Sanitize
	  Solaris packaging scripts some more  * Add configure options for
	  Solaris packaging variants  * Sanitize Solaris packaging scripts
	  some more - consider DESTDIR for installation root  * Turn solaris
	  preproto.pl into a template so it uses proper (configured)
	  user/group strings  * Makefile.am : ensure there is a DESTDIR set
	  before packaging  * Makefile.am : use $(MAKE) $(AM_MAKEFLAGS)
	  instead of explicit "make" (mostly in packaging recipe)  *
	  makelocal.sh : commented and revised  * Solaris/Makefile.am : put
	  generated SVR4 package into builddir (not srcdir that may be
	  readonly) to match other OS recipes  * Makefile.am : ensure the
	  DESTDIR is used for packaging purposes (when calling sub-makes)  *
	  Solaris/pkginfo.in : ARCH is CPU_TYPE, not OS_NAME  * GitIgnore
	  built Solaris/NUT*.local.gz product  * GitIgnore built systemd
	  files  * GitIgnore _install_pkgprotodir  * Makefile.am : ensure
	  only the custom DESTDIR is used for packaging purposes  *
	  Makefile.am : convert the big packaging "if" into "case"; link
	  steps with "&&"; retain DESTDIR if Solaris packaging fails; ensure
	  the correct custom DESTDIR is absent before packaging (and after
	  Solaris packaging)  * Solaris/Makefile.am : Revise recipe-names and
	  comments for Solaris packaging variants  * Solaris/Makefile.am and
	  *.xml.in : relocate SMF methods and manifests under NUT DATADIR to
	  package compactly  * Solaris-SMF : svc-nut.in svc-nut-client.in :
	  use @RUN_AS_*@ and @PIDPATH@ vars instead of hardcoding  *
	  Solaris/Makefile.am : list helper scripts and installation scripts
	  and data in variables and depend on them in packaging; chmod +x the
	  scripts after copying over to proto area  * GitIgnore config.cache
	  * Remove Solaris/prepackage.py (unreferenced duplicate of
	  precheck.py)  * Solaris/nut.in : sanitize the default init-script
	  * Solaris/Makefile.am : put init-scripts under NUT share (DATADIR)
	  to package it compactly; copy to OS dirs in postinstall  *
	  Makefile.am .gitignore etc. relocate successfully built package
	  files to abs_top_builddir  * Change Aix/nut.init to a .in template
	  * svc-nut.in svc-nut-client.in : consider nut.conf if available  *
	  Solaris/Makefile.am and SVR4 scripts : install augeas lenses as
	  part of NUT package (in DATADIR at least)  * configure.ac : comment
	  about sysconfdir for NUT  * Sanitize Aix/nut.init.in  * More
	  standardization of Solaris initscripts and SMF methods; use
	  LD_LIBRARY_PATH to prefer NUT provided libs in case of conflicts
	  (facilitate bundling with third-party packages)  *
	  Solaris/Makefile.am : add ability to "make check" something here,
	  e.g. validate manifest XMLs  * Solaris SMF XML manifests : fix
	  "dependent" definitions, and add dependencies on required config
	  files  * configure.ac : fix a manually crafted "Checking for" into
	  using AC_MSG routines  * Solaris SVR4 packaging should now take
	  care of SMF service registration/teardown  * Solaris preremove.in
	  postinstall.in : Usage of @datadir@ caused "${prefix}" strings to
	  pop up - define the vars  * Solaris scripts : use lower-cased
	  @datadir@ in templates processed by configure  *
	  Solaris/preremove.in : fix FMRI pattern when removing package  *
	  Solaris/postinstall.in : fix SMF manifest dir  *
	  Solaris/postremove.in : fix verbose RM; wipe the /var/run/nut dir
	  too  * Solaris/preremove.in : fix commands when removing package  *
	  Solaris/postinstall.in : enable SMF services if configs are already
	  available (esp. create nut-driver instances)  *
	  Solaris/preremove.in : fix commands when removing package  *
	  Solaris/postinstall.in : enable SMF services if configs are already
	  available (esp. create nut-driver instances) - verbosity  *
	  Solaris/nut-driver-enumerator.xml.in : use a unique dependency name
	  (avoid conflict in nut-driver instances chain of deps)  * systemd
	  and Solaris : fix up embedded ${prefix} in service files and SMF
	  manifests after generation  * systemd/README : add recent authors
	  * Define a NUT_DATADIR and NUT_LIBEXECDIR with expanded path values
	  to use in service manifests  * Solaris : packaged service
	  addition/removal more verbose  * nut-driver-enumerator.xml.in
	  nut-driver.xml.in : do not block startup of nut server  *
	  nut.xml.in : do not block startup of nut server due to failed
	  nut-driver-enumerator  * nut-driver-enumerator.sh.in : improve
	  portability by using TAB char as is (not regex \t which gets
	  misinterpreted by some tools)  * nut-driver-enumerator.sh.in :
	  comment the caveats  * nut-driver-enumerator.sh.in : apcsmart is
	  serial only  * nut-driver-enumerator.sh.in : By default, update
	  wrapping of devices into services... but keep the door open to
	  other uses of the script  * nut-driver-enumerator.sh.in : refactor
	  a bit and add externally callable actions  * Introduce upsdrvsvcctl
	  with semantics similar to upsdrvctl, but managing stop/start of SMF
	  or systemd unit instances  * nut-driver-enumerator.sh.in : consider
	  possible difference of device and service instance names  *
	  nut-driver-enumerator.sh.in : refactor md5  *
	  nut-driver-enumerator.xml.in : add REFRESH action and do not die on
	  RESTART  * Mention nut-driver-enumerator and upsdrvsvcctl in
	  (systemd/|Solaris/)README  * upsdrvsvcctl.in : updated comments  *
	  upsdrvsvcctl.in : added a resync option  * Rename Solaris SMF
	  services to match systemd patterns and ease life for sysadmins  *
	  Add systemd nut.target to manage the bundle of NUT services  *
	  config-notes.txt : document the systemd and SMF support in NUT  *
	  nut.dict : update spellchecker  * Solaris/Makefile.am : support
	  copying where attrs can not be preserved  * Solaris postinstall :
	  report if services were not instantly enabled due to missing config
	  files  * upsdrvsvcctl.in : reformat prettily  *
	  nut-driver-enumerator.sh.in : wrap usage()  *
	  nut-driver-enumerator.sh.in : added --list-services-for-devices  *
	  nut-driver@.service.in : comment about aligning timeouts with
	  ups.conf maxstartdelay  * nut.xml.in : Revise comments  *
	  nut-driver-enumerator.sh.in : when amending service unit instance
	  config for systemd, update the Description to state the NUT device
	  section name  * nut-driver-enumerator.sh.in : support common
	  NUT_CONFPATH envvar  * Add upsdrvsvcctl.txt manpage and references
	  to upsdrvsvcctl in other docs  * upsdrvsvcctl.txt manpage : refer
	  to service management system logs  * upsdrvsvcctl : support "list
	  upsname" CLI action to help troubleshooting  * upsdrvsvcctl : add
	  handling for "shutdown" command  * Docs about upsdrvsvcctl -
	  clarify that it may not be preinstalled with non-SMF/non-systemd OS
	  packages  * Pass spellcheck for upsdrvsvcctl doc updates  * Solaris
	  packaging of nut-driver-enumerator.sh : deliver into libexecdir
	  same as in Linux  * Move nut-driver-enumerator.sh.in and
	  upsdrvsvcctl.in into scripts/upsdrvsvcctl to share on par between
	  Linux and Solaris (for starters)  * Use @NUT_LIBEXECDIR@ for
	  nut-driver-enumerator.sh  * Introduce nut-driver-enumerator.path.in
	  for systemd  * nut-driver-enumerator.service.in : be part of
	  nut.target, not common multi-user  * Systemd services : be
	  PartOf=nut.target to propagate service stops  * postinstall.in :
	  use NUT_DATADIR  * nut-monitor.xml.in : depend on nut-server (if
	  locally running)  * nut.xml.in : fix path (use pre-eval-ed version)
	  * nut-driver-enumerator.sh.in : add a way to print out just an
	  instance suffix name  * nut-driver-enumerator.sh.in : when printing
	  full instance name, do not add stuff if the argument is already a
	  full name  * nut-driver-enumerator.sh.in : implement
	  --get-device-for-service  * nut-driver (systemd/SMF) : use
	  "nut-driver-enumerator.sh --get-device-for-service" for current
	  service instance name  * nut.xml.in : this service is transient  *
	  upsdrvsvcctl.in : fix parameter passing  * upsdrvsvcctl.in :
	  "clear" the SMF service state when stopping/starting, just in case
	  it was failed  * nut-driver-enumerator.sh.in : restart upsd IFF the
	  set of known-device mappings was changed  * Revise and relax some
	  dependencies for Solaris SMF services  *
	  nut-driver-enumerator.sh.in : info messages go to stderr; reply for
	  request only goes to stdout  * nut-driver-enumerator.sh.in :
	  complete the upslist_equals() method  * nut.xml.in : never fail on
	  stop (if component services did not stop, it is their problem)  *
	  Solaris preremove.in SMF : clear sevices before stopping them, just
	  in case  * upsdrvsvcctl.in : post-process clearing of SMF service
	  instances if any have failed  * nut.xml.in : never fail on stop (if
	  component services did not stop, it is their problem)  * Solaris
	  preremove.in SMF : remove nut before services it depends on  *
	  main.c upsdrvctl.c : make debug messages a bit more useful  *
	  Solaris preremove.in SMF : do not block stopping NUT driver
	  services, but follow up with upsdrv(svc)ctl stop of everything  *
	  Solaris preremove.in SMF : sleep after stopping drivers before
	  removing their services  * Solaris preremove.in SMF : force-remove
	  services of drivers  * nut-driver.xml.in : rename a dependency to
	  avoid conflicts  * Solaris nut.xml.in : add a refresh action
	  handler  * Solaris postinstall.in SMF : first use
	  nut-driver-enumerator.sh.in to just register the mappings, no
	  autostarts  * Solaris preremove.in SMF : stop drivers with common
	  method (and use NUT_SBINDIR) before going one by one  * Solaris
	  postinstall.in SMF : start the drivers via upsdrvsvcctl after
	  registering (so the mapping is stable)  * Solaris postinstall.in
	  preremove.in : NUT_SBINDIR => SBINDIR  * Add manpage for
	  nut-driver-enumerator[8]  * Handle EXTRA_DIST of
	  scripts/upsdrvsvcctl/ with their own Makefile  *
	  nut-driver-enumerator.txt : change to be more like other page
	  sources  * Spellcheck nut-driver-enumerator.txt  * Add
	  scripts/upsdrvsvcctl/README  * Update gitignores  * List new
	  manpages upsdrvsvcctl nut-driver-enumerator in index  * Add
	  upsdrvsvcctl do scripts/Makefile.am SUBDIRS  * upsdrvsvcctl.in
	  nut-driver-enumerator.sh.in : Add a way to show configs per device
	  * nut-driver-enumerator.sh.in : fix upsconf_getValue() to return
	  success if key was found, or report an error if not  *
	  nut-driver-enumerator.sh.in : expose upsconf_getValue() as
	  --show-device-config-value  * nut-driver-enumerator.sh.in : NOTE on
	  top about the choice of simplified shell  *
	  nut-driver-enumerator.sh.in : in upsconf_getSection() stop after
	  printing out the section contents  * nut-driver-enumerator.sh.in :
	  refactor upsconf_getValue() to use upsconf_getSection()  *
	  nut-driver-enumerator.sh.in : update comment in header  *
	  nut-driver-enumerator.service.in : do not fail the systemd unit, it
	  cannot restart  * Fix references for configure.in to point to
	  configure.ac nowadays  * nut-driver-enumerator.sh.in : use
	  fully-pathed SMF svccfg in all parts of code consistently  *
	  nut-driver-enumerator.sh.in : comment about not-detecting
	  reconfigurations of existing sections currently
	* docs/man/Makefile.am, scripts/subdriver/gen-snmp-subdriver.sh:
	  Upstream smaller fixes from 42ity NUT (#587)  *
	  gen-snmp-subdriver.sh : replace multiline "echo" with questional
	  tabbing by a single-string "printf"  * docs/man/Makefile.am : fix
	  merge error that broke manpage packaging

2018-08-14  Jim Klimov <jim@jimklimov.com>

	* m4/nut_check_libneon.m4: nut_check_libneon.m4 : comment about
	  detecting without pkgconfig as a fallback
	* m4/nut_check_libavahi.m4: nut_check_libavahi.m4 : typo fix

2018-08-07  Jim Klimov <jim@jimklimov.com>

	* drivers/powerware-mib.c: powerware-mib.c : fix fallout from
	  "snmp-ups: support newer Genepi management cards" (unused variable
	  warning)

2018-08-07  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/powerware-mib.c: snmp-ups: support newer Genepi management
	  cards  * duplicate some OIDs, with refinement to point at the first
	  index (i.e ".0" or ".1.0") since otherwise the agent doesn't
	  respond to queries. This could be fixed at the snmp-ups level later
	  * fixed "ups.type" (power topology of the UPS) which was pointing
	  at the output.source or ups.mode

2018-08-02  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/eaton-pdu-marlin-mib.c: snmp-ups: Eaton feed color is semi
	  static

2018-07-31  Daniele Pezzini <hyouko@gmail.com>

	* tools/nut-scanner/nut-scanner.c: nutscanner: get debug level early
	  (for nutscan_init()) and restore options (#541)  * Revert "Problem:
	  nutscan_init() called before debug is enabled"  This reverts commit
	  f613d45f78c96c290a1d63d4a2c3f28385d90d42.  When parsing the command
	  line (or showing help), many options rely on a nutscan_avail_* var
	  already initialized by nutscan_init() -- moving that call after the
	  parsing of opts renders those options unavailable.  * nutscanner:
	  parse debug level opts separately before anything else  In order to
	  have early the value of the desired debug level (needed to
	  correctly debug nutscan_init()), split the parsing of command line
	  options into two loops: - the first one, before the call to
	  nutscan_init(), will only care about debug level, - the second one,
	  after the call to nutscan_init(), will consider the remaining (and
	  possibly depending on a nutscan_avail_* var already initialized by
	  nutscan_init()) arguments (and moan in case of errors).  Closes
	  https://github.com/networkupstools/nut/issues/500

2018-07-28  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: support USB devices that don't
	  close their replies with a CR  Since some devices, when
	  communicating via USB, don't close their replies to our
	  commands/queries with the expected (and mandated by the specs) CR,
	  rendering the driver almost useless as protocols get one less
	  character than they expect, update the various USB subdrivers
	  (leaving out the ones that rely on a CR to stop reading from the
	  device) to add the missing terminating CR in such cases (as long as
	  we get anything usable). This is a bit of a cheat, but, at least
	  for now, it will do -- not to mention the fact that it is way less
	  invasive than touching all the places of the driver that expect a
	  closing CR and all the qx2nut tables of the various protocols.
	  Close https://github.com/networkupstools/nut/issues/441

2018-07-25  mbastiaan <35669404+mbastiaan@users.noreply.github.com>

	* drivers/tripplite_usb.c: input_voltage_nominal, added case 6
	  SMX500RT1U 230V requires case 6.
	* drivers/tripplite_usb.c: Update tripplite_usb.c  Incremented driver
	  version for pull request #584
	* data/driver.list.in: Update driver.list.in  Added new line for
	  SMX500RT1U with product ID 0001. Updated line for other product IDs

2018-07-24  mbastiaan <35669404+mbastiaan@users.noreply.github.com>

	* drivers/tripplite_usb.c: Update tripplite_usb.c  Added
	  battery.charge status for 3005 protocol. Tested on SMX500RT1U,
	  charge level seems ok-ish considering how it's calculated and the
	  voltage jumping up and down.

2018-06-26  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/nut-names.txt: Complete missing variables
	  input.feed.{desc,color}, input.realpower.nominal and
	  outlet.group.n.input. Also add a note on outlet.group actions
	  NOTE: Cherry-picked from FTY branch commit e5505f63eab which had a
	  conflicting definition of input.realpower.nominal dropped here (and
	  in original FTY branch by later commits).
	* docs/nut-names.txt, drivers/eaton-pdu-marlin-mib.c: snmp-ups: Eaton
	  ePDU input.power.nominal is realpower  Fix data name, since the
	  published value is in Watts, so realpower, not power

2018-06-17  Links <help.markus+gitk@gmail.com>

	* drivers/mge-hid.c: get PowerWalker VFI 2000 TGS working, read
	  values correctly

2018-05-24  Charles Lepple <clepple+nut@gmail.com>

	* drivers/tripplite-hid.c: usbhid-ups: Add support for
	  Delta/Minuteman UPS
	  https://github.com/networkupstools/nut/issues/555

2018-05-22  Jim Klimov <jim@jimklimov.com>

	* .travis.yml, ci_build.sh: Change the Travis test-case for
	  NO_PKG_CONFIG==true

2018-05-18  Arnaud Quette <ArnaudQuette@Eaton.com>

	* scripts/subdriver/gen-snmp-subdriver.sh: Improve the SNMP subdriver
	  generation script  Provide a 3rd mode to allow an offline creation
	  for a complete MIB walk. In this mode, we get data from 1 file
	  (numeric snmpwalk dump of the whole SNMP tree). The sysOID is
	  extracted from the dump, and only the pointed subtree is used. A
	  MIB file MUST be provided, and is used to produce the string SNMP
	  walk.  Also reformatted the whole script using tab only, and
	  reconciled with the DMF version.

2018-05-15  Bernhard M. Wiedemann <githubbmw@lsmod.de>

	* tools/nut-snmpinfo.py, tools/nut-usbinfo.pl: Sort input file list
	  (#528)  so that nut builds in a reproducible way in spite of
	  indeterministic filesystem readdir order and
	  http://bugs.python.org/issue30461  See
	  https://reproducible-builds.org/ for why this is good.

2018-05-04  Matthijs ten Berge <m.tenberge@awl.nl>

	* docs/man/nutdrv_siemens_sitop.txt: Spelling fix
	* drivers/nutdrv_siemens_sitop.c: Remove %-sign from variable values
	* drivers/nutdrv_siemens_sitop.c: Fix line endings
	* docs/man/nutdrv_siemens_sitop.txt: Better explanation of serial
	  port polling

2018-05-02  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: in 'sgs' USB subdriver, use
	  #define'd value for USB timeouts

2018-04-11  Matthijs ten Berge <m.tenberge@awl.nl>

	* data/driver.list.in, docs/man/Makefile.am,
	  docs/man/{siemens-sitop.txt => nutdrv_siemens_sitop.txt},
	  drivers/Makefile.am, drivers/{siemens-sitop.c =>
	  nutdrv_siemens_sitop.c}: Rename driver siemens-sitop to
	  nutdrv_siemens_sitop  As requested in
	  https://github.com/networkupstools/nut/pull/545#pullrequestreview-106712942

2018-03-26  Matthijs ten Berge <m.tenberge@awl.nl>

	* drivers/siemens-sitop.c: Various code improvements after review  -
	  The number of delimiter characters is no longer hard-coded, but
	  will be detected and thrown away at runtime - Discard any remains
	  in the RX buffer after communication errors - collapse repeating
	  code - upsdrv_shutdown now uses instcmd (removes duplicate code) -
	  obsolete ups.* variables removed - poll_interval not hard-coded,
	  but give a warning when a large value is encountered - option
	  parsing improved
	* docs/man/siemens-sitop.txt: Improve manpage layout

2018-03-23  Matthijs ten Berge <m.tenberge@awl.nl>

	* docs/man/siemens-sitop.txt, docs/nut.dict: Spellcheck fixes
	* data/driver.list.in, docs/man/Makefile.am,
	  docs/man/siemens-sitop.txt, drivers/Makefile.am,
	  drivers/siemens-sitop.c: Initial commit of siemens-sitop: driver
	  for Siemens SITOP UPS500-series UPSes

2018-03-17  Steve Gilbert <stevegilbert23@gmail.com>

	* drivers/libhid.c: In HIDGetEvents.c call to get_interrupt, increase
	  timeout from 250 to 750 ms to allow more time for UPS response
	  (cherry picked from commit 5cea18c04a79cd873347efeffb6bb869edd8643e
	  --@clepple)  Closes:
	  https://github.com/networkupstools/nut/pull/543 Closes:
	  https://github.com/networkupstools/nut/issues/542

2018-03-15  Daniele Pezzini <hyouko@gmail.com>

	* tools/nut-scanner/scan_usb.c: nutscanner: in scan_usb.c, nullify
	  free()'d pointers that are later reused  We assign 'device_name',
	  'serialnumber' and 'vendor_name' only if the analyzed device
	  provides that data and, since we use these pointers also to check
	  if those items are available so that we can store and free() them,
	  after free()'ing them we must make them NULL, or the next device,
	  if it does not provide that data, will inherit the old (now
	  free()'d) pointer and will attempt to access it and re-free() it.
	* drivers/libusb1.c: libusb1: don't use the same var to iterate both
	  devices and interface descriptor  From our old libusb.c, libusb1.c
	  inherited a for loop that iterates over the interface descriptor in
	  order to try and find the HID descriptor among its 'extra' bytes.
	  Unluckily, it uses the same var (i) that's now used, at the same
	  time, for the iteration through the device list, in which it
	  happens to be nested. Since this obviously spells disaster, make
	  these vars unique (and add a bit of debugging info).

2018-03-14  Daniele Pezzini <hyouko@gmail.com>

	* data/cmdvartab, docs/nut-names.txt: libusb: update example of
	  driver.version.usb and add it to cmdvartab
	* data/cmdvartab, docs/nut-names.txt: libusb: update example of
	  driver.version.usb and add it to cmdvartab
	* drivers/libusb1.c: libusb1: publish actual libusb version
	* tools/nut-scanner/scan_usb.c: libusb: in nutscanner, free busname
	  also on nutscan_new_device() errors or when done with it
	* drivers/bcmxcp_usb.c, drivers/libusb0.c, drivers/libusb1.c,
	  drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c,
	  tools/nut-scanner/scan_usb.c: libusb: improve handling of errors
	  when allocating new memory  - libusb 0.1 (when not shared with
	  libusb 1.0): prefer our xstrdup() function -- on errors, it'll
	  automatically call fatal*(), - libusb 1.0 (and nutscanner): don't
	  use our x{malloc,strdup,...}() functions, so that we can free the
	  list of devices (and close the device and call libusb_exit() in
	  nutscanner) before exiting.
	* drivers/libusb1.c: libusb1: publish the interface we are actually
	  using
	* drivers/richcomm_usb.c: richcomm_usb: use the local USB device
	  handle in usb_device_open()  Although at that point of
	  usb_device_open(), both the local (handle) and the global (udev)
	  device handles point to the same thing, prefer the local one to
	  make things clearer.
	* drivers/bcmxcp_usb.c, drivers/libusb0.c, drivers/libusb1.c,
	  drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c,
	  tools/nut-scanner/scan_usb.c: libusb: clean up after ourselves
	  libusb 1.0: - a device list allocated with libusb_get_device_list()
	  must be deallocated with a call to libusb_free_device_list(), -
	  ditto for the config descriptor.  libusb 0.1 and 1.0: - release
	  (commented-out) interfaces when done with them, - remove
	  unnecessary goto's after calls to fatal*() functions, - nutscanner:
	  also close the USB device handle (and libusb_exit() for libusb 1.0)
	  on errors.

2018-03-13  Georg Altmann <george@george-net.de>

	* docs/nut.dict: doc: update nut.dict
	* INSTALL.nut: doc: Update installation instructions for FreeBSD
	  Details usb device permissions. Also pkg and new port config style.

2018-03-13  Daniele Pezzini <hyouko@gmail.com>

	* drivers/bcmxcp_usb.c, drivers/tripplite_usb.c: usb drivers: free
	  USBDevice_t's dynamically allocated items when cleaning

2018-03-10  Patrik Dufresne <ikus060@kase>

	* drivers/powerp-txt.c: Fix tabs
	* drivers/powerp-txt.c: Change status line parsing for CyberPower
	  OR1500LCDRTXL2U  Add a new way to parse the status line in
	  powerpanel text driver to support CyberPower model OR1500LCDRTXL2U
	  with serial cable. This model doesn't provide temperature, but does
	  provide runtime.

2018-03-09  Jim Klimov <jim@jimklimov.com>

	* drivers/main.c, drivers/upsdrvctl.c: main.c upsdrvctl.c : make
	  debug messages a bit more useful

2018-03-05  Daniele Pezzini <hyouko@gmail.com>

	* drivers/richcomm_usb.c: richcomm_usb: don't libusb_exit() when
	  closing a previously opened device
	* drivers/nutdrv_atcl_usb.c: nutdrv_atcl_usb: don't libusb_exit()
	  when closing a previously opened device
	* drivers/libusb1.c: libusb1: don't libusb_exit() when closing a
	  previously opened device
	* drivers/riello_usb.c: riello_usb: use libusb_bulk_transfer() for
	  bulk operations
	* drivers/nutdrv_atcl_usb.c: nutdrv_atcl_usb: add missing 'inline'
	  keyword

2018-03-04  Charles Lepple <clepple+nut@gmail.com>

	* drivers/usbhid-ups.c: usbhid-ups: fix instcmd logging before
	  fallback check  The hidups_item pointer needs to be checked for
	  NULL before dereferencing.

2018-02-28  Jim Klimov <jimklimov@gmail.com>

	* drivers/snmp-ups.c: Fix the recently added update for Avocent
	  support (#532)  * Problem: snmp-ups segfaults  Solution:
	  base_snmp_template_index() prevented from processing empty argument
	  * Problem: index has to be counted for any device not just for
	  daisychain  Solution: counted for both   * Problem: debug info
	  needs improvement  Solution: added   * drivers/snmp-ups.c : bump
	  the version for public-release driver fix  * snmp-ups.c : Fix
	  indentation for recent fixes

2018-02-28  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/nut.dict: Add Avocent to the spell check list

2018-02-27  Arnaud Quette <ArnaudQuette@Eaton.com>

	* NEWS: Update NEWS for Emerson Avocent PM3000 PDU

2018-02-20  Bernhard M. Wiedemann <bwiedemann@suse.de>

	* tools/nut-usbinfo.pl: Cleanup usbinfo code  to reduce code
	  duplication and solve an associated FIXME

2018-02-16  Arnaud Quette <ArnaudQuette@Eaton.com>

	* data/driver.list.in, drivers/Makefile.am,
	  drivers/emerson-avocent-pdu-mib.c,
	  drivers/emerson-avocent-pdu-mib.h, drivers/snmp-ups.c: snmp-ups:
	  Add support for Emerson Avocent PM3000 PDU
	* drivers/snmp-ups.c, drivers/snmp-ups.h: snmp-ups: various
	  improvements  This prepares the addition of newer devices

2018-01-11  Daniele Pezzini <hyouko@gmail.com>

	* m4/nut_check_libusb.m4: autoconf: support libusb 0.1
	  implementations identified as 'libusb-0.1'  Make NUT_CHECK_LIBUSB
	  macro aware of those libusb 0.1 implementations named in their
	  pkg-config files as 'libusb-0.1', instead of just 'libusb' (e.g. on
	  FreeBSD).

2018-01-10  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: update USB errors handling to
	  support both libusb 0.1 and 1.0

2018-01-03  Jim Klimov <jim@jimklimov.com>

	* configure.ac, scripts/augeas/Makefile.am: Define an
	  `auglenstestsdir` to install the augeas `test_nut.aug` file

2018-01-02  Charles Lepple <clepple+nut@gmail.com>

	* configure.ac: Fix AC_MSG_*() quoting  The autoconf quote characters
	  are `[` and `]` - no need for `"`.

2018-01-01  Charles Lepple <clepple+nut@gmail.com>

	* m4/nut_check_libusb.m4: Add autoconf check for libusb_strerror()
	  Closes: https://github.com/networkupstools/nut/issues/509
	* docs/man/nutdrv_qx.txt, docs/man/snmp-ups.txt,
	  docs/man/ups.conf.txt, docs/man/usbhid-ups.txt: doc: Clean up
	  description of `pollfreq` and USB interrupts  Closes:
	  https://github.com/networkupstools/nut/issues/476

2017-12-31  Jim Klimov <jim@jimklimov.com>

	* configure.ac: configure.ac : Avoid rebuilding existing man=dist
	  build products due to their timestamp dependencies
	* configure.ac: configure.ac : add support for
	  --with-doc=man=dist-auto to prefer pre-disted docs if available

2017-12-05  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: .travis.yml : add a test-case for builds in absence of
	  pkg-config in the OS

2017-11-29  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/configure.txt, docs/man/nutupsdrv.txt, docs/man/upsd.txt: doc:
	  missing documentation for NUT_* env vars  Complete documentation
	  for upsd and drivers related to the environment variables
	  NUT_CONFPATH, NUT_STATEPATH and NUT_ALTPIDPATH

2017-11-28  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/man/usbhid-ups.txt: doc: minor formatting in usbhid-ups man
	  page

2017-11-27  Jim Klimov <jim@jimklimov.com>

	* tools/nut-scanner/nut-scanner.c: Problem: nutscan_init() called
	  before debug is enabled  Solution: Move the call to this stateless
	  function to the point after we parse arguments and just before we'd
	  start the actual scans. Later this can be extended to also consider
	  which scans were requested and so which libs to load.  Thanks to
	  @clepple for research in
	  https://github.com/networkupstools/nut/issues/500

2017-11-27  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/man/nutupsdrv.txt: doc: reword nutupsdrv man page  Reference:
	  https://github.com/networkupstools/nut/issues/476

2017-11-26  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/usbhid-ups.txt: doc: reword other parts of usbhid-ups man
	  page
	* docs/man/usbhid-ups.txt: doc: mention CPS delay quirks in
	  usbhid-ups man page  Closes:
	  https://github.com/networkupstools/nut/issues/432
	* tools/nut-scanner/scan_usb.c: nut-scanner: update
	  usb_get_string_simple() for libusb-1.0 API  Closes:
	  https://github.com/networkupstools/nut/issues/499
	* drivers/libusb1.c: libusb1: const-ify the USB interface number
	  Remove a few "magic numbers" from USB/HID-related calls.
	* drivers/libusb1.c: libusb1: LBYL approach to
	  libusb_set_auto_detach_kernel_driver()  Switch to
	  look-before-you-leap (LBYL) approach to calling
	  libusb_set_auto_detach_kernel_driver(), since FreeBSD (11.0 and
	  11.1; probably others) requires root privileges to attempt the
	  kernel driver detach (even if no detach operation is needed).
	* m4/nut_check_libusb.m4: libusb1: check for
	  libusb_kernel_driver_active()

2017-11-21  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Change Riello IDG/IPG support level to 4
	  The IDG and IPG models were not included in the protocol
	  documentation provided to the NUT project. Some values are also
	  returned as 0xFF/0xFFF/0xFFFF - see the HCL for details.  Source:
	  http://lists.alioth.debian.org/pipermail/nut-upsdev/2017-November/007357.html

2017-11-17  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/eaton-ats16-nmc-mib.c, drivers/eaton-pdu-marlin-mib.c,
	  drivers/mge-mib.c, drivers/mge-xml.c, drivers/powerware-mib.c:
	  Modify "open" to "opened" for dry contacts status  While "open" is
	  the best adjective for the opposite of "closed", and thus suitable
	  for GPI status, this may lead to confusion with the GPO actions
	  "open|close" Vs the GPI status "opened|closed". These last are also
	  not inapropriate, since they can refer to the fact that the GPI
	  state has change due to some external action or event
	* NEWS: Update NEWS for next release
	* NEWS: Update NEWS for next release
	* docs/man/nutupsdrv.txt, docs/man/usbhid-ups.txt: man pages:
	  clarification on polling parameters  Explain difference between
	  pollfreq and pollinterval in usbhid-ups, and highlight the
	  pollinterval parameter use from ups.conf in nutupsdrv  Closes:
	  https://github.com/networkupstools/nut/issues/476
	* data/driver.list.in: HCL: Eaton 9PX supported by mge-shut,
	  usbhid-ups and netxml-ups
	* data/driver.list.in: HCL: Eaton ATS 30 supported by snmp-ups
	* drivers/Makefile.am, drivers/mge-hid.c: mge-shut/usbhid-ups:
	  compute Output load for Eaton UPS  When HID data
	  UPS.PowerConverter.Output.ActivePower is not present, compute a
	  realpower approximation using available data. This is needed for
	  Eaton 5E and some other units  Closes:
	  https://github.com/networkupstools/nut/issues/484

2017-11-03  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/eaton-ats16-nm2-mib.c, drivers/eaton-ats16-nmc-mib.c,
	  drivers/mge-mib.c, drivers/mge-xml.c, drivers/powerware-mib.c: Add
	  support for dry contacts to Eaton ATS16 and UPS  Add support for
	  the 2 GPI accessible through EMP001 environmental sensor, connected
	  to a UPS or ATS16. The same is already available for Eaton ePDU.
	  This affect the snmp-ups driver (eaton_ats16 and pw/pxgx_ups MIBs),
	  and the netxml-ups driver

2017-10-31  barraudl <lilianbarraud@eaton.com>

	* tools/nut-scanner/Makefile.am, tools/nut-scanner/README,
	  tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-init.c, tools/nut-scanner/nutscan-init.h:
	  Revise use of semaphores in nut-scanner vs libnutscanner  Original
	  commit in 42ITy fork in 2017: "Fix the Debian package generation"
	  Adapted into NUT upstream code, considering 4 years of codebase
	  evolution, in 2021:

2017-10-30  Michal Marek <MichalMarek1@eaton.com>

	* Makefile.am, configure.ac, scripts/systemd/Makefile.am:
	  configure.ac: Fix systemd shutdown directory detection  The
	  configure script assumes that systemd is installed below ${libdir},
	  which is not true on many biarch Linux distros with /lib64. Instead
	  of guessing, use pkg-config to find the path and provide a
	  --with-systemdshutdowndir option so that make distcheck can
	  override it. Also, rename the internal varable to
	  systemdshutdowndir to rhyme with the respective systemd.pc
	  variable.

2017-10-30  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/eaton-pdu-marlin-mib.c: eaton-pdu-marlin-mib.c/dmf: add
	  outlet timers  Add support for shutdown and start timers

2017-10-23  barraudl <lilianbarraud@eaton.com>

	* configure.ac, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: Add thread limitation to avoid
	  memory error  Original development in 42ITy fork in 2017:   UPDATE:
	  Merged with NUT upstream, considering evolution of codebases over 4
	  years since original commit, revised 2021:

2017-10-20  Jim Klimov <jimklimov@gmail.com>

	* configure.ac: Problem: configure fails on system without pkg-config
	  Solution: detect presence and usability of pkg-config program and
	  autotools macros (they end up as unexpanded tokens if pkg-config is
	  not installed), and use this knowledge to proceed with search for
	  libcppunit - or not. When the test is optional, we should not kill
	  the build if we can not make it due to missing tools.

2017-10-17  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/eaton-pdu-marlin-mib.c: snmp-ups: fix Eaton ePDU group
	  phase handling  Remove the not needed SU_FLAG_UNIQUE and the
	  erroneous value lookup structure index
	* drivers/eaton-pdu-marlin-helpers.c,
	  drivers/eaton-pdu-marlin-helpers.h, drivers/eaton-pdu-marlin-mib.c:
	  snmp-ups: simplify Eaton ePDU group phase handling

2017-10-13  Jim Klimov <jim@jimklimov.com>

	* drivers/eaton-pdu-marlin-mib.c: eaton-pdu-marlin-mib.c : updated
	  comments about input/feed relationship, and daisychain implications
	* drivers/eaton-pdu-marlin-mib.c: eaton-pdu-marlin-mib.c : fix OID
	  and raise questions on input.power.nominal

2017-10-13  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/eaton-pdu-marlin-mib.c: Problem: Need to fix published feed
	  variables  Solution: Attach 1 feed to the current input

2017-10-11  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: snmp-ups.c : publish device.count==1 too
	* drivers/eaton-pdu-marlin-helpers.c: eaton-pdu-marlin-helpers.c : in
	  device_count helper do not assume a trailing comma (as last char)
	  as an extra device
	* drivers/eaton-pdu-marlin-mib.c: eaton-pdu-marlin-mib.c : preferred
	  templated outlet.%i.name goes last in MIB
	* drivers/eaton-pdu-marlin-helpers.c,
	  drivers/eaton-pdu-marlin-helpers.h: eaton-pdu-marlin-* : add
	  support for extended fun/nuf l2s/s2l conversions
	* drivers/eaton-pdu-marlin-mib.c: eaton-pdu-marlin-mib.c : Revised
	  added OIDs with a single-group ePDU  Also update line-breaks for
	  readability and 80-col standard
	* drivers/snmp-ups.c, drivers/snmp-ups.h: snmp-ups.[ch] : introduce
	  SU_FLAG_SEMI_STATIC
	* drivers/eaton-pdu-marlin-mib.c: eaton-pdu-marlin-mib.c :
	  line-breaks for readability and 80-col standard - pass 2
	* drivers/eaton-pdu-marlin-mib.c: eaton-pdu-marlin-mib.c :
	  line-breaks for readability and 80-col standard

2017-10-09  Jim Klimov <jim@jimklimov.com>

	* drivers/eaton-pdu-marlin-helpers.c,
	  drivers/eaton-pdu-marlin-helpers.h, drivers/eaton-pdu-marlin-mib.c:
	  eaton-pdu-marlin-mib.c / drivers/eaton-pdu-marlin-helpers.[ch] :
	  Implement conversion func for "device.count" which returns a
	  comma-separated list
	* drivers/eaton-pdu-marlin-helpers.c,
	  drivers/eaton-pdu-marlin-helpers.h, drivers/eaton-pdu-marlin-mib.c:
	  eaton-pdu-marlin-mib.c / drivers/eaton-pdu-marlin-helpers.[ch] :
	  Implement conversion func for "outlet.group.%i.phase"
	* docs/nut-names.txt, drivers/eaton-pdu-marlin-mib.c:
	  eaton-pdu-marlin-mib.c : add basic listing of newly defined OIDs
	  (not a full solution - some mapping functions are needed and
	  revision of MIB data types)

2017-10-08  Charles Lepple <clepple+nut@gmail.com>

	* NEWS, UPGRADING, docs/nut.dict: Spell-check release notes
	* NEWS, UPGRADING: Update NEWS and UPGRADING for next release
	  Current as of master @ b8df06b761, assuming libusb-1.0+0.1 gets
	  merged
	* docs/hid-subdrivers.txt: hid-subdrivers.txt: fix explore command
	  line  Also reformat some surrounding text.  Closes:
	  https://github.com/networkupstools/nut/issues/436
	* docs/hid-subdrivers.txt: hid-subdrivers.txt: clarify Tripp-Lite USB
	  reference  Closes:
	  https://github.com/networkupstools/nut/issues/452
	* docs/man/powerpanel.txt: powerpanel: emphasize that this driver is
	  serial-only  Apparently, the PowerPanel Plus vendor tool also has
	  USB support.
	* docs/man/belkin.txt, docs/man/belkinunv.txt: belkin/belkinunv: add
	  links to man pages for other Belkin drivers
	* docs/man/tripplite_usb.txt: tripplite_usb: update man page  * Fix
	  link to tripplitesu(8) * Add 3005 protocol * Update protocol
	  variable name
	* docs/man/dummy-ups.txt: dummy-ups: last state should be "OB LB" to
	  match text  Also corrected a typo.

2017-10-04  Daniele Pezzini <hyouko@gmail.com>

	* configure.ac, m4/nut_check_libusb.m4: libusb 1.0 port: directly use
	  `--with-usb` to choose the library

2017-10-03  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/configure.txt: Remove an extraneous point
	* docs/configure.txt: Update configure documentation for libusb
	  Document the possibility to override the auto-detection choice,
	  even though the implementation of this override is not yet
	  currently working
	* docs/configure.txt: Update configure documentation for libusb
	  Document the possibility to override the auto-detection choice
	* docs/configure.txt: Remove an extraneous point
	* docs/configure.txt: Update configure documentation for libusb
	  Document the possibility to override the auto-detection choice,
	  even though the implementation of this override is not yet
	  currently working

2017-10-02  Daniele Pezzini <hyouko@gmail.com>

	* docs/configure.txt, m4/nut_check_libusb.m4: libusb 1.0 port:
	  support libusb 0.1/-compat even when 1.0 is available  Since libusb
	  1.0 can happily coexist with libusb 0.1/libusb-compat, rework our
	  NUT_CHECK_LIBUSB macro so that, if both are available, libusb 1.0
	  precedence can be overridden passing to `configure` appropriate
	  values for `--with-usb-includes` and `--with-usb-libs` (i.e. libusb
	  0.1/libusb-compat-only settings).
	* m4/nut_check_libusb.m4: libusb 1.0 port: expand a bit the
	  introductory comment of libusb ac macro
	* m4/nut_check_libusb.m4: libusb 1.0 port: use only one AC_DEFINE'd
	  variable for libusb 0.1/-compat  Libusb 0.1/libusb-compat can be
	  found with both pkg-config and with its own libusb-config, but,
	  regardless of how we found it, we need to use the same AC_DEFINE'd
	  variable to signal its presence.
	* m4/nut_check_libusb.m4: libusb 1.0 port: don't check if libusb is
	  usable, if it's not available  Since LIBUSB_VERSION is always
	  non-empty ('none', if libusb is not found), testing for
	  non-emptiness will always fail and libusb 0.1/libusb-compat checks
	  will always be performed. So, test instead that it is not 'none'.

2017-09-21  Spiros Ioannou <sivann@inaccess.com>

	* drivers/phoenixcontact_modbus.c: phoenixcontact_modbus: fix stale
	  data detection  Also mark driver as DRV_BETA  Source:
	  http://lists.alioth.debian.org/pipermail/nut-upsdev/2017-September/007331.html

2017-09-17  Jim Klimov <jim@jimklimov.com>

	* configure.ac, tests/Makefile.am: Improve configure script and
	  recipe for CPPUNIT and C++11 detection  * Detect C++11 support and
	  its use for CPPUNIT tests through configure.ac - should address
	  issue #472 * Report after detecting C++11 support, presence of
	  libcppunit, and request for valgrind, whether we'd build the
	  cppunit tests * Update relevant comments in configure.ac
	* drivers/libusb0.c, drivers/libusb1.c: libusb0.c / libusb1.c :
	  report more visibly if we encountered errors accessing the device
	  (issue #477)
	* drivers/libusb0.c, drivers/libusb1.c: libusb0.c / libusb1.c :
	  sanitize indentation and break up long-lines
	* configure.ac: configure.ac : look for CPPUNIT after detecting
	  pkg-config presence, can help vs. issue #478

2017-09-06  Jim Klimov <jim@jimklimov.com>

	* common/common.c: common.c : dflt_statepath() / altpidpath() :
	  support defined-but-empty envvars to have same effect as
	  not-defined
	* common/common.c: common.c : altpidpath() : support priority of an
	  envvar, like statepath does

2017-09-05  Jim Klimov <jim@jimklimov.com>

	* drivers/main.c: main.c : update usage message with hints about
	  running as unprivileged user

2017-08-30  Jim Klimov <jim@jimklimov.com>

	* drivers/eaton-pdu-marlin-mib.c: Fix typo in OID, noticed by aquette

2017-08-28  Jim Klimov <jimklimov@gmail.com>

	* .travis.yml, clients/upsclient.c, drivers/dstate.h,
	  drivers/eaton-pdu-marlin-mib.c, tests/Makefile.am: A few small
	  fixes for cleaner codebase and compilations (#466)  * dstate.h :
	  use our timehead.h to have "struct timeval" defined  * eaton-marlin
	  : cosmetic whitespace fixes  * tests/Makefile.am : cppunit should
	  build with C++11  * .travis.yml : make sure to use "docker" env
	  with its gcc-4.8+ for support of C++11 in cppunit tests

2017-08-24  Jim Klimov <jim@jimklimov.com>

	* drivers/eaton-pdu-marlin-mib.c, drivers/snmp-ups.c,
	  drivers/snmp-ups.h: snmp-ups / eaton-marlin : introduce
	  WITH_SNMP_LKP_FUN to separate codebases that support these
	  callbacks from those that currently do not
	* drivers/eaton-pdu-marlin-helpers.c,
	  drivers/eaton-pdu-marlin-helpers.h: eaton-pdu-marlin-helpers.c/h
	  fix
	* drivers/eaton-pdu-marlin-helpers.c: eaton-pdu-marlin-helpers.c :
	  update comments for marlin_outlet_group_phase_fun()
	* docs/Makefile.am: docs/Makefile.am : fix up access rights for other
	  files in docs too (some PNGs end up inaccessible otherwise)

2017-08-23  Jim Klimov <jimklimov@gmail.com>

	* docs/snmp-subdrivers.txt, drivers/Makefile.am, drivers/eaton-mib.h,
	  drivers/eaton-pdu-genesis2-mib.c, drivers/eaton-pdu-genesis2-mib.h,
	  drivers/{eaton-mib.c => eaton-pdu-marlin-mib.c},
	  drivers/eaton-pdu-marlin-mib.h, drivers/eaton-pdu-pulizzi-mib.c,
	  drivers/eaton-pdu-pulizzi-mib.h,
	  drivers/eaton-pdu-revelation-mib.c,
	  drivers/eaton-pdu-revelation-mib.h, drivers/snmp-ups.c: Eaton ePDU
	  SNMP MIB file split in four (#465)  * snmp-subdrivers.txt :
	  reference the multitude of eaton subdrivers  * eaton-mib.h renamed
	  into separate constituent headers  * eaton-mib.c renamed into
	  separate constituent sources, earlier history retained in
	  eaton-pdu-genesis2-mib.c  * eaton-pdu-revelation-mib.c
	  eaton-pdu-pulizzi-mib.c eaton-pdu-genesis2-mib.c : no use to
	  include dstate.h here  * eaton-pdu-marlin-mib.c
	  eaton-pdu-revelation-mib.c : port the renamed structure names from
	  original eaton-mib.c evolution

2017-08-23  Jim Klimov <jim@jimklimov.com>

	* drivers/Makefile.am, drivers/eaton-pdu-marlin-helpers.c,
	  drivers/eaton-pdu-marlin-helpers.h: Expel the helper function that
	  interacts with dstate from eaton-pdu-marlin-mib.c to
	  eaton-pdu-marlin-helpers.c/.h

2017-08-23  Christian Ehrhardt <christian.ehrhardt@canonical.com>

	* drivers/Makefile.am: automake: only pass net-snmp cflags to
	  snmp-ups (#464)  Other than formerly assumed in the makefile cflags
	  can be more than includes. And some of them need to be in sync in
	  regard to CFLAGS and LDFLAGS - for example usage of -fPIE.  This
	  conflicts with a current assumption in the makefile "In any case,
	  CFLAGS are only -I options, so there is no harm".  On a
	  Distribution where PIE is enabled by default, but disabled for
	  special cases (like net-snmp) the configure detection gets them as:
	  LIBNETSNMP_CFLAGS = -DNETSNMP_ENABLE_IPV6 -fno-strict-aliasing -g
	  -O2 -fdebug-prefix-map=/build/net-snmp-nlMQSZ/net-snmp-5.7.3+dfsg=.
	  -specs=/usr/share/dpkg/no-pie-compile.specs
	  -fstack-protector-strong -Wformat -Werror=format-security
	  -DNETSNMP_USE_INLINE -Ulinux -Dlinux=linux -D_REENTRANT
	  -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe
	  -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
	  -I/usr/lib/x86_64-linux-gnu/perl/5.26/CORE -Wdate-time
	  -D_FORTIFY_SOURCE=2 -I/usr/include LIBNETSNMP_LIBS =
	  -Wl,-Bsymbolic-functions -specs=/usr/share/dpkg/no-pie-link.specs
	  -Wl,-z,relro -Wl,-z,now -L/usr/lib/x86_64-linux-gnu -lnetsnmp
	  -lcrypto -lm  Of importance are:
	  -specs=/usr/share/dpkg/no-pie-compile.specs
	  -specs=/usr/share/dpkg/no-pie-link.specs  Now when compiling the
	  non-snmp objects incorrectly get the
	  "-specs=/usr/share/dpkg/no-pie-compile.specs" due to the assumption
	  that it is safe to add up all CFLAGS to the global one.  LDFLAGS
	  imported that way are only added to snmp. snmp_ups_LDADD =
	  $(LDADD_DRIVERS) $(LIBNETSNMP_LIBS) [...] snmp-ups$(EXEEXT):
	  $(snmp_ups_OBJECTS) $(snmp_ups_DEPENDENCIES)
	  $(EXTRA_snmp_ups_DEPENDENCIES) @rm -f snmp-ups$(EXEEXT)
	  $(AM_V_CCLD)$(LINK) $(snmp_ups_OBJECTS) $(snmp_ups_LDADD) $(LIBS)
	  That leads to other (all non snmp_ups) objects in drivers failing
	  to build. They get the no-pie-compile.specs (incorrect) spec but
	  not the no-pie-link.specs on the link step.  Some other parts like
	  mge_shut and nutdrv_qx already have custom CFLAGS/LDFLAGS that are
	  not added to the global CFLAGS. So despite the commend in the
	  makefile this doesn't seem to be new in general to nut.  I don't
	  want to mess too much with your build system for now as I don't
	  know many of its implications. So I chose not the full drop of that
	  global CFLAGS merge, but a minimal patch for now which fixes the
	  issue described.  Thereby closes #463

2017-08-23  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut-names.txt, docs/nut.dict, drivers/eaton-ats16-mib.c:
	  snmp-ups: add support for input.phase.shift (#433)  * snmp-ups: add
	  support for input.phase.shift  ATS can now publish the electrical
	  dephasing between input sources   * Make spellchecker happy about
	  "dephasing"

2017-08-16  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/snmp-ups.c: snmp-ups: fix the rounding / truncation of some
	  values  The multiplier system of the snmp-ups driver resulted in
	  some values being rounded to the nearby integer value, thus causing
	  a loss of the decimals and the value precision in general. This was
	  mainly visible on the value of currents, but also on some voltages

2017-08-10  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/apc-ats-mib.c, drivers/apc-ats-mib.h: Remove exec bits on
	  SNMP subdrivers

2017-08-07  Tobby <tobby88@users.noreply.github.com>

	* drivers/apcupsd-ups.c: apcupsd-ups: interpret "SHUTTING DOWN" as
	  "LB"  Fix issue https://github.com/networkupstools/nut/issues/460
	  so NUT with apcupsd-ups driver will correctly initiate a shut down
	  on low battery.  Bump version to 0.5  Closes:
	  https://github.com/networkupstools/nut/issues/460 Closes:
	  https://github.com/networkupstools/nut/issues/461

2017-08-04  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/nut-names.txt: NUT namespace: fix an extraneous character
	  insertion  A character was wrongly inserted during the previous
	  commit, triggering a spellcheck error
	* drivers/eaton-mib.c: snmp-ups: Publish outlet.n.name for Eaton ePDU
	* docs/nut-names.txt: Extend namespace for iPDU and outlets  Extend
	  NUT namespace to also publish the name of an outlet, using
	  "outlet.n.name", beside from the existing "outlet.n.desc"

2017-08-03  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/eaton-mib.c: snmp-ups: Fix the phase of outlet groups for
	  Eaton PDU  Compute the phase to which an outlet group is connected
	  WRT the total number of phase(s) and the considered outlet group
	  number.
	* drivers/snmp-ups.c, drivers/snmp-ups.h: snmp-ups: Introduce values
	  lookup functions  As already used in other drivers, such as
	  usbhid-ups, introduce optional values lookup functions, beside from
	  values lookup mapping. This allows to have a more powerful and
	  generic values processing before publication

2017-08-02  Charles Lepple <clepple+nut@gmail.com>

	* drivers/cps-hid.c: CPS HID: add input.frequency and
	  output.frequency (0.5)  Suggested by Andy Jan:
	  http://lists.alioth.debian.org/pipermail/nut-upsuser/2017-August/010856.html

2017-07-22  Charles Lepple <clepple+nut@gmail.com>

	* drivers/openups-hid.c: usbhid-ups: only check iOEMInformation once
	  for openups2  This prevents the 'libusb_get_string: invalid
	  argument' message from being logged continously.  Patch provided by
	  Alphonse <alphsteiner@gmail.com>
	  http://lists.alioth.debian.org/pipermail/nut-upsdev/2017-July/007314.html

2017-06-26  Jim Klimov <jim@jimklimov.com>

	* docs/man/Makefile.am: docs/man/Makefile.am : Suffice to have
	  prebuilt docs in dist-ed sources only if DOC_INSTALL_DISTED_MANS is
	  enabled
	* docs/man/Makefile.am: docs/man/Makefile.am : Fix up dist-ed manpage
	  source timestamps regardless of DOC_INSTALL_DISTED_MANS value
	* docs/man/Makefile.am: docs/man/Makefile.am : Fix up manpage source
	  timestamps when dist-ing
	* docs/Makefile.am: docs/Makefile.am : make sure the builddir copy of
	  docbook-xsl.css is writeable (file is copied from OS, some distros
	  have it 444 and not 644)
	* docs/man/Makefile.am: docs/man/Makefile.am : do not rebuild docs
	  and do not error out if a prebuilt copy is among sources (not only
	  in builddir as before)
	* configure.ac docs/man/Makefile.am : track DOC_INSTALL_DISTED_MANS
	  fallback behavior
	* m4/nut_check_asciidoc.m4 configure.ac : parametrize the required
	  minimum versions (asciidoc/a2x, dblatex)
	* configure.ac: configure.ac : refer to detailed doc from --with-doc
	  help text; preset explicit nut_with_doc=man=auto value
	* docs/man/Makefile.am: docs/man/Makefile.am : small typo in comment
	* configure.ac: configure.ac : move comment to a more relevant line

2017-06-25  Charles Lepple <clepple+nut@gmail.com>

	* tools/gitlog2changelog.py: gitlog2changelog: log parse errors for
	  Author and Date  Suggested by Jim Klimov.
	* tools/gitlog2changelog.py: gitlog2changelog: Date header only
	  occurs at start of line  Alternative to
	  https://github.com/networkupstools/nut/pull/427

2017-06-13  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/main.c: all drivers: update inline help for '-d <count>'

2017-06-12  Emilien Kia (Eaton) <EmilienKia@Eaton.com>

	* docs/man/nutupsdrv.txt, drivers/main.c: Add option to run driver on
	  standalone mode. (#423)  When a driver is launched with '-s <id>'
	  instead of '-a <id>', the driver does not read ups.conf and only
	  looks for parameters on command line arguments (-x <var>=<val>). At
	  least, 'port' parameter shall be specified.

2017-06-12  EVER-PowerSystems <it.support@ever.eu>

	* drivers/ever-hid.c: fixed status names, added comments, fixed
	  duplicates
	* drivers/ever-hid.c: fixed NUT names

2017-06-12  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/powerware-mib.c: snmp-ups: add input.bypass.frequency for
	  Eaton 3ph
	* docs/man/nutupsdrv.txt, drivers/main.c: all drivers: change
	  dump_data from flag to variable  The new option '-d dump_data' can
	  now accept the number of update loops requested as its value

2017-06-09  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/main.c: all drivers: add '-d' data dump option  Add '-d'
	  option to the driver-core, which causes the driver to dump the data
	  tree in upsc-like format to stdout, and exit

2017-06-09  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/man/nutupsdrv.txt, drivers/dstate.c, drivers/dstate.h,
	  drivers/main.c: all drivers: add '-d' data dump option  Add '-d'
	  option to the driver-core, which causes the driver to dump the data
	  tree in upsc-like format to stdout, and exit

2017-06-06  Petr Kubanek <petr@kubanek.net>

	* docs/nut.dict: added Petr and ve to spellcheck dictionary
	* drivers/ve-direct.c: fixed for C99 fpr loop
	* docs/nut.dict: added Kubanek to dict

2017-06-03  Charles Lepple <clepple+nut@gmail.com>

	* drivers/belkin-hid.c: usbhid-ups: add Liebert GXT4 USB VID:PID
	  [10AF:0000]  Source:
	  http://lists.alioth.debian.org/pipermail/nut-upsuser/2017-June/010682.html
	  Voltage and ConfigVoltage appear to be scaled improperly per the
	  debug output.

2017-05-24  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut-names.txt, drivers/eaton-mib.c, drivers/snmp-ups.c:
	  snmp-ups: add support for outlet.group phase (#422)  * snmp-ups:
	  fix oid2info value lookup  When oid2info returns NULL, don't
	  publish the variable. Previously, this was returning "UNKNOWN"
	  which was not suitable   * snmp-ups: add support for outlet.group
	  phase  Outlets groups can now publish the electrical phase to which
	  the physical outlets group (Gang) is connected to. This is useful
	  for 3ph ePDU

2017-05-21  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: CPS EC750G  Source:
	  http://lists.alioth.debian.org/pipermail/nut-upsuser/2016-December/010461.html
	* data/driver.list.in: HCL: CPS PR2200LCDRT2U (SNMP)

2017-05-20  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Add APC Back-UPS CS; edit other APC USB
	  entries  Closes: https://github.com/networkupstools/nut/issues/365
	* data/driver.list.in: HCL: CyberPower EC350G supported by usbhid-ups
	  (v2.7.3)  Per @aurimasv on GitHub:  > Test results: Tested on
	  FreeNAS 9.10.1. Unplugged the UPS and the system > shutdown after
	  30 seconds.  Closes:
	  https://github.com/networkupstools/nut/issues/347  Also sorted CPS
	  entries.
	* data/driver.list.in: HCL: Powercool 350VA to 1600VA USB (v2.7.2+)
	  Closes: https://github.com/networkupstools/nut/issues/203
	* data/driver.list.in: HCL: Numeric Digital 800 plus works with
	  nutdrv_qx  Closes:
	  https://github.com/networkupstools/nut/issues/115 (~ 2.7.4)

2017-05-08  EVER-PowerSystems <it.support@ever.eu>

	* drivers/Makefile.am: fixed errors in makefile
	* drivers/Makefile.am, drivers/ever-hid.c, drivers/ever-hid.h,
	  drivers/usbhid-ups.c, scripts/upower/95-upower-hid.rules: add EVER
	  hid ups

2017-04-21  Jim Klimov <jim@jimklimov.com>

	* docs/Makefile.am: docs: build cables html documentation  Don't skip
	  cables from html documentation.
	* docs/Makefile.am: docs/Makefile.am : make the working directory
	  contents writable before running a2x, so it can manage files copied
	  as read-only in earlier steps

2017-04-10  Jim Klimov <jimklimov@gmail.com>

	* docs/man/Makefile.am: Update Makefile.am  Some systems detect text
	  sources as "ISO-8859 English" text - please them.

2017-04-10  Jim Klimov <jim@jimklimov.com>

	* docs/Makefile.am, docs/man/Makefile.am: Some systems detect
	  html-pages as "XML" - please them too
	* docs/man/Makefile.am: Some systems detect man-pages as "ASCII text"
	  - please them

2017-04-09  Jim Klimov <jim@jimklimov.com>

	* docs/Makefile.am: docs/Makefile.am : typo fix not-building
	  FAQ.chunked
	* docs/man/Makefile.am: docs/man/Makefile.am : fix check-man-html for
	  distcheck
	* docs/man/Makefile.am: docs/man/Makefile.am : fix check-man-pages
	  for distcheck
	* docs/man/Makefile.am: docs/man/Makefile.am : fix check-man-txt for
	  distcheck
	* configure.ac, docs/Makefile.am, docs/man/Makefile.am: Add "make
	  check" for generated (or "released" pre-built) docs
	* docs/Makefile.am: docs/Makefile.am : typo fix not-building
	  FAQ.chunked
	* configure.ac: configure.ac : add
	  --with-doc(s)=all={yes,no,skip,auto} to manch e.g. man=skip etc.
	  syntax

2017-04-08  Sam Varshavchik <mrsam@courier-mta.com>

	* docs/man/Makefile.am: Fix creation of documentation from
	  libnutclient_misc.txt  A simple .txt.3 rule doesn't understand that
	  libnutclient_misc.txt creates a bunch of .3.  A parallel build, say
	  'make -j 10' results in make trying to figure out how to build
	  nutclient_authenticate.3 before building libnutclient_misc.3, and
	  without a corresponding .txt in sight it gives up.  Rebased onto
	  master by Charles Lepple clepple+nut@gmail.com Closes:
	  https://github.com/networkupstools/nut/pull/418

2017-04-05  Arnaud Quette <ArnaudQuette@Eaton.com>

	* data/driver.list.in: Add support for Eaton 9PX Split Phase 6/8/10
	  kVA  Using netxml-ups, usbhid-ups and mge-shut
	* drivers/netxml-ups.c: netxml-ups: bump driver version  In order to
	  reflect update for 2phases, bump driver version
	* drivers/dstate.c: dstate_detect_phasecount: update for 2phases
	  Update the code to be able to handle 2phases devices, also known as
	  "split phases"

2017-04-04  Arnaud Quette <arnaud.quette@free.fr>

	* clients/upsclient.c, drivers/gamatronic.c, drivers/openups-hid.c,
	  drivers/snmp-ups.c, server/netssl.c,
	  tools/nut-scanner/nutscan-ip.c, tools/nut-scanner/nutscan-serial.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_xml_http.c: Cppcheck improvements (#405)
	  Fix all Cppcheck errors, using standard c89: * Uninitialized
	  variables, * Memory leak, * Brackets balancing, * Common realloc
	  mistake, * Possible null pointer dereference, * Array index out of
	  bounds, * Not null-terminated string

2017-04-04  Arnaud Quette <ArnaudQuette@Eaton.com>

	* clients/status.h: upsstats (CGI): add support for alarms  Whenever
	  a device publishes the ALARM flag in ups.status, the CGI will
	  publish it part of the Status
	* clients/upsmon.c, clients/upsmon.h, conf/upsmon.conf.sample.in,
	  docs/man/upsmon.conf.txt, docs/man/upsmon.txt: upsmon: add support
	  for alarms  Add general support for alarms to upsmon, which relates
	  to the ups.status variable of a device holding the flag "ALARM".
	  upsmon now has a "notify type" alarm, which allows to react on such
	  events, as with other events
	* MAINTAINERS, data/driver.list.in, docs/man/nutupsdrv.txt,
	  drivers/Makefile.am, drivers/mge-shut.c, drivers/mge-shut.h:
	  oldmge-shut: final deprecation and removal  oldmge-shut is not
	  anymore part of the distribution, and is replaced by mge-shut

2017-03-31  Nash Kaminski <nashkaminski@comcast.net>

	* docs/man/liebert-esp2.txt, docs/nut.dict, drivers/liebert-esp2.c:
	  liebert-esp2 changes: Correct battery V scaling, update docs,
	  implement split-phase unit support (#412)  * Update liebert-esp2
	  documentation, include note that port on GXT2 series does not fully
	  follow RS-232 specs.  * Refactor output format of liebert-esp2
	  driver to follow that of other drivers to fix the nut-cgi interface
	  as well as for overall consistency. Implement support for 2 phase
	  i.e. split phase input Liebert GXT2 series units. Correct battery
	  voltage scaling for GXT2 series units as well.  * Update nut.dict
	  * Update nut.dict

2017-03-30  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: Problem: NUT tests in Travis CI often wait for
	  default-withdoc  Solution in .travis.yml : since Travis cloud
	  starts the jobs as soon as it has resources, move the bulk of
	  quicker matrix jobs to start after the longest withdocs build.
	  Experimental note: we still need one job defined in the simple
	  matrix for default environment, but can keep others in a single
	  explicitly ordered list. Now the "Running for" time got cut from
	  8-9 to 5.5-6 minutes.

2017-03-29  Jim Klimov <jim@jimklimov.com>

	* docs/Makefile.am: docs/Makefile.am : update comment about
	  spellcheck-sortdict post-processing, to make it more relevant
	* docs/man/upsd.conf.txt, docs/nut.dict: Fix some more typos and add
	  nut.dict exceptions

2017-03-29  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/man/upsd.conf.txt: upsd.conf.txt: fix a typo from the previous
	  commit
	* conf/upsd.conf.sample, docs/man/upsd.conf.txt: upsd.conf:
	  clarification on the LISTEN directive

2017-03-22  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/libusb1.c, drivers/nut_libusb.h,
	  tools/nut-scanner/scan_usb.c: Fix spacers
	* drivers/libusb1.c, drivers/nut_libusb.h,
	  tools/nut-scanner/scan_usb.c: Fix spacers
	* clients/upssched-cmd, conf/upssched.conf.sample.in: upssched: align
	  documentation and sample files  Align documentation and sample
	  configuration and script, so that the whole is more coherent

2017-03-21  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/scheduling.txt: upssched: some clarification on TIMER

2017-03-20  Charles Lepple <clepple+git@gmail.com>

	* docs/nut.dict: Re-sort nut.dict (#406)  * Re-sort nut.dict  *
	  nut.dict header line

2017-03-16  Petr Kubanek <petr@kubanek.net>

	* drivers/ve-direct.c: commands to set/get things
	* drivers/ve-direct.c: commands to set/get things

2017-03-15  Petr Kubanek <petr@pc115b.fzu.cz>

	* drivers/ve-direct.c: HEX checksums
	* drivers/ve-direct.c: HEX checksums

2017-03-15  Jim Klimov <jim@jimklimov.com>

	* docs/config-notes.txt: config-notes.txt : small clarifications in
	  the text
	* docs/developers.txt: developers.txt : small clarifications in the
	  text and line-wrapping and backticks
	* docs/config-notes.txt: config-notes.txt : small clarifications in
	  the text and line-wrapping
	* docs/cables.txt: cables.txt : line-wrapping
	* docs/asciidoc.txt: asciidoc.txt : line-wrapping
	* docs/acknowledgements.txt: acknowledgements.txt : line-wrapping
	* docs/support.txt: support.txt : small clarifications in the text
	  and line-wrapping
	* docs/security.txt: security.txt : small clarifications in the text
	  and line-wrapping
	* docs/outlets.txt: outlets.txt : line-wrapping
	* docs/new-drivers.txt: new-drivers.txt : line-wrapping
	* docs/net-protocol.txt: net-protocol.txt : line-wrapping
	* docs/maintainer-guide.txt: maintainer-guide.txt : small
	  clarifications in the text and line-wrapping and backticks
	* docs/macros.txt: macros.txt : line-wrapping
	* docs/history.txt: history.txt : line-wrapping
	* docs/features.txt: features.txt : small clarifications in the text
	  and line-wrapping and backticks
	* docs/download.txt: download.txt : line-wrapping
	* docs/developers.txt: developers.txt : small clarifications in the
	  text and line-wrapping and backticks
	* docs/daisychain.txt: daisychain.txt : small clarifications in the
	  text and line-wrapping
	* docs/configure.txt: configure.txt : small clarifications in the
	  text
	* docs/config-notes.txt: config-notes.txt : small clarifications in
	  the text
	* docs/acknowledgements.txt: acknowledgements.txt : small
	  clarifications in the text
	* docs/FAQ.txt, docs/nutdrv_qx-subdrivers.txt:
	  nutdrv_qx-subdrivers.txt : small clarifications in the text
	* docs/nut.dict: nut.dict : know of "nowait"

2017-03-14  Spiros Ioannou <sivann@inaccess.com>

	* .travis.yml: added libmodbus-dev to travis configuration

2017-03-14  Petr Kubanek <petr@pc115b.fzu.cz>

	* drivers/ve-direct.c: reply to commands
	* drivers/ve-direct.c: poll_interval, better input buffer handling
	* drivers/ve-direct.c: fixed problem with reading from driver by
	  lines
	* drivers/ve-direct.c: reply to commands
	* drivers/ve-direct.c: poll_interval, better input buffer handling
	* drivers/ve-direct.c: fixed problem with reading from driver by
	  lines

2017-03-14  Petr Kubanek <petr@kubanek.net>

	* drivers/ve-direct.c: fix process text buffer
	* docs/man/Makefile.am, docs/man/ve-direct.txt, drivers/ve-direct.c:
	  added ping command
	* drivers/ve-direct.c: fix process text buffer
	* docs/man/Makefile.am, docs/man/ve-direct.txt, drivers/ve-direct.c:
	  added ping command

2017-03-13  Spiros Ioannou <sivann@inaccess.com>

	* configure.ac, data/driver.list.in, docs/man/Makefile.am,
	  docs/man/index.txt, docs/man/phoenixcontact_modbus.txt,
	  docs/nut.dict, drivers/Makefile.am,
	  drivers/phoenixcontact_modbus.c, m4/nut_check_libmodbus.m4:
	  phoenixcontact_modbus driver  Closes:
	  https://github.com/networkupstools/nut/pull/404

2017-03-13  Petr Kubanek <petr@kubanek.net>

	* drivers/Makefile.am, drivers/ve-direct.c: basic thinks works
	* drivers/Makefile.am, drivers/ve-direct.c: basic thinks works

2017-03-13  Jim Klimov <jim@jimklimov.com>

	* docs/nut.dict: nut.dict : add "distros" slangey
	* docs/configure.txt, docs/contact-closure.txt, docs/daisychain.txt,
	  docs/developers.txt, docs/features.txt, docs/history.txt,
	  docs/net-protocol.txt, docs/new-drivers.txt, docs/nut-names.txt,
	  docs/nut-qa.txt, docs/nutdrv_qx-subdrivers.txt, docs/outlets.txt,
	  docs/sock-protocol.txt: docs/*.txt : cleanup long-dash (use
	  double-minus)
	* docs/acknowledgements.txt, docs/cables.txt, docs/configure.txt,
	  docs/contact-closure.txt, docs/design.txt,
	  docs/developer-guide.txt, docs/developers.txt,
	  docs/documentation.txt, docs/download.txt, docs/features.txt,
	  docs/hid-subdrivers.txt, docs/history.txt, docs/macros.txt,
	  docs/maintainer-guide.txt, docs/net-protocol.txt,
	  docs/new-clients.txt, docs/new-drivers.txt, docs/nut-names.txt,
	  docs/nut-qa.txt, docs/outlets.txt, docs/packager-guide.txt,
	  docs/snmp-subdrivers.txt, docs/snmp.txt, docs/sock-protocol.txt,
	  docs/support.txt, docs/user-manual.txt: docs/*.txt : cleanup
	  trailing whitespace
	* docs/FAQ.txt, docs/config-notes.txt, docs/scheduling.txt,
	  docs/security.txt: Some docs/ files revised to backtick pathnames,
	  clean up trailing whitespace, and use double-minuses for long-dash
	  in sentences
	* docs/nut.dict: docs/nut.dict : add "FHS"

2017-03-13  Arnaud Quette <ArnaudQuette@Eaton.com>

	* scripts/systemd/nutshutdown.in: Prefer @CONFPATH@ over @sysconfdir@
	  Otherwise, the generated nutshutdown script can end up with a non
	  fully expanded path like "${prefix}/etc/nut.conf" when not
	  specifying --sysconfdir and using default flags
	* scripts/systemd/nutshutdown.in: Prefer @CONFPATH@ over @sysconfdir@
	  Otherwise, the generated nutshutdown script can end up with a non
	  fully expanded path like "${prefix}/etc/nut.conf" when not
	  specifying --sysconfdir and using default flags
	* docs/scheduling.txt: Disambiguate FHS - Filesystem Hierarchy
	  Standard
	* docs/security.txt: Missing space

2017-03-04  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: snmp-ups.c : presumed typo fix : NUT var for
	  bypass mapping is "input.bypass" (fix the caller too)
	* docs/hid-subdrivers.txt, docs/nut.dict: spellcheck: "futher" is a
	  mistaken exception in custom dictionary
	* docs/nut.dict: nut.dict bumped to support nut-website documents
	  with words that Travis does not know
	* drivers/snmp-ups.c: snmp-ups.c : presumed typo fix : NUT var for
	  bypass mapping is "input.bypass" (fix the caller too)
	* docs/nut.dict: nut.dict bumped to support nut-website documents
	  with words that Travis does not know
	* docs/nut.dict: nut.dict bumped to support nut-website documents

2017-03-04  Arnaud Quette <ArnaudQuette@Eaton.com>

	* docs/FAQ.txt, docs/config-notes.txt, docs/scheduling.txt,
	  docs/security.txt: Try to adapt paths in documentation
	  Documentation still widely uses the default paths source when
	  compiled from source. While it is feasible to adapt some at
	  compilation time, it is not desirable since, for example, the
	  online documentation on networkupstools.org has to be generic. So
	  try to make these paths more generic when possible, and otherwise
	  make a note

2017-03-02  Arnaud Quette <ArnaudQuette@Eaton.com>

	* tools/nut-ddl-dump.sh: nut-ddl-dump.sh: various improvements
	  Improve the script to generate NUT device dumps by adding: * a
	  header line that mentions the generation source (automatic) and
	  date * add upsrw dump as comments * add upscmd dump as comments
	* drivers/eaton-ats16-mib.c: snmp-ups: ATS16 fixes for ambient sensor
	  values  Values for the attached ambient sensor to an ATS16 were
	  erroneously multiplied by 10

2017-03-01  Jim Klimov <jimklimov@gmail.com>

	* drivers/mge-xml.c: Update mge-xml.c  Include drivers/main.h to get
	  testvar() declared properly

2017-03-01  Jim Klimov <jim@jimklimov.com>

	* docs/man/upscli_init.txt: docs/man/upscli_init.txt : rephrase the
	  text to pass spellcheck (and human readability) and wrap some long
	  lines
	* drivers/snmp-ups.c: snmp-ups.c : presumed typo fix : NUT var for
	  bypass mapping is "input.bypass"
	* drivers/snmp-ups.c: snmp-ups.c : added comments about some
	  daisychain global vars

2017-02-28  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: drivers/snmp-ups.c : in snmp_ups_walk(), report
	  in log if aborting because of exit_flag
	* drivers/snmp-ups.c: drivers/snmp-ups.c : in snmp_ups_walk(), update
	  some comments
	* drivers/snmp-ups.c: drivers/snmp-ups.c : presumed typo fix in
	  comment about daisy (should be "1..N" not "2..N" in final code)
	* drivers/snmp-ups.c: drivers/snmp-ups.c : comment in snmp_ups_walk()
	  about daisychains vs unitary devices
	* drivers/snmp-ups.c: drivers/snmp-ups.c : comment in snmp_ups_walk()
	  about daisychains vs unitary devices
	* drivers/snmp-ups.c: drivers/snmp-ups.c : fix trailing whitespace
	* drivers/dstate.c, drivers/dstate.h, drivers/usbhid-ups.h:
	  drivers/dstate.c : in dstate_detect_phasecount() do not hardcode a
	  buf[] size but use a macro
	* drivers/dstate.c: drivers/dstate.c : extend a comment about 2-phase
	  devices into dstate_detect_phasecount()
	* docs/man/netxml-ups.txt, drivers/mge-xml.c, drivers/netxml-ups.c:
	  mge-xml / netxml-ups : reimplement do_convert_deci as a simple
	  VAR_FLAG setting
	* data/Makefile.am: data/Makefile.am : did not link back to
	  "spellcheck-sortdict"

2017-02-27  Jim Klimov <jim@jimklimov.com>

	* drivers/mge-xml.c: mge-xml.c : add debug logging of values which
	  were converted
	* docs/man/netxml-ups.txt, docs/nut.dict, drivers/mge-xml.c,
	  drivers/netxml-ups.c: netxml-ups and mge-xml : allow users to
	  reenable legacy convert_deci() behavior at run-time, with a
	  configuration toggle (documented)
	* drivers/mge-xml.c: mge-xml.c : updated comment about convert_deci()
	  pre-history
	* drivers/netxml-ups.c: netxml-ups.c : typo fix (shutdwon =>
	  shutdown)
	* docs/man/netxml-ups.txt: docs/man/netxml-ups.txt : trailing
	  whitespace fixes

2017-02-21  Jim Klimov <jim@jimklimov.com>

	* drivers/mge-xml.c: drivers/mge-xml.c : when reporting deprecation
	  of convert_deci(), do it once visibly with details like issue
	  tracker URL, and in regular debug messages refer to that line

2017-02-20  Jim Klimov <jim@jimklimov.com>

	* drivers/mge-xml.c: drivers/mge-xml.c : in convert_deci() now report
	  it is deprecated (with debug level 5) so we get reports if
	  deprecation bites anyone in reality
	* drivers/mge-xml.c: drivers/mge-xml.c : bump subdriver version
	* drivers/mge-xml.c: drivers/mge-xml.c : bump copyrights

2017-02-18  Jim Klimov <jimklimov@gmail.com>

	* drivers/mge-xml.c: Disable convert_deci() that was needed a decade
	  ago  Left the old code in place, commented away. If devices with
	  old NetXML pop up (those which served in XML 10x the measured
	  value), fixes can be applied based on voltage and amps and power
	  (order of magnitude comparison), or perhaps model names and/or
	  firmware versions or release dates, if we get those.

2017-02-12  Jim Klimov <jim@jimklimov.com>

	* drivers/dstate.c: dstate.c : catch a few more zero value
	  representation and comment about others

2017-02-10  Jim Klimov <jim@jimklimov.com>

	* drivers/dstate.c: dstate.c : refactor dstate_detect_phasecount() :
	  change the report about calculated values to use common format with
	  __func__
	* drivers/dstate.c: dstate.c : refactor dstate_detect_phasecount() :
	  change the no-longer-sexy overgrown one-liners with a readable
	  macro
	* drivers/dstate.c: dstate.c : important typo fixed for
	  dstate_detect_phasecount()
	* drivers/dstate.c: dstate.c : revise comment for
	  dstate_detect_phasecount()
	* drivers/dstate.c: dstate.c : address code style (move var
	  declarations to top of scope)
	* drivers/dstate.c: dstate.c : address some nit-picks

2017-02-09  Jim Klimov <jim@jimklimov.com>

	* drivers/dstate.c, drivers/dstate.h, drivers/mge-xml.c: Refactor
	  dstate_detect_phasecount(), adding a read-only mode (so the caller
	  can query the guesswork logic without changing active dstates)
	* drivers/dstate.c, drivers/dstate.h, drivers/mge-xml.c: Refactor the
	  dstate guesswork and setting for 1/3 phases, move it to common
	  dstate.c/.h and rename to dstate_detect_phasecount()
	* drivers/mge-xml.c: Refactor recent logic into a common
	  set_phasecount()
	* drivers/mge-xml.c: Drop an empty line
	* drivers/mge-xml.c: mge-xml.c : calculate
	  (input|bypass|output).phases number (1 or 3) based on available
	  non-zero measurements - typo fix for "INPUT.bypass."
	* drivers/mge-xml.c: mge-xml.c : calculate
	  (input|bypass|output).phases number (1 or 3) based on available
	  non-zero measurements - consider absence of Lx values for 1-phase
	  case
	* drivers/mge-xml.c: mge-xml.c : calculate
	  (input|bypass|output).phases number (1 or 3) based on available
	  non-zero measurements - also consider current (amps)
	* drivers/mge-xml.c: mge-xml.c : calculate
	  (input|bypass|output).phases number (1 or 3) based on available
	  non-zero measurements

2017-02-04  Steven Bell <stv.bell07@gmail.com>

	* docs/nut.dict: Removed line left over from merge conflict. Ooops!

2017-02-02  Daniel Schaal <daniel@schaal.email>

	* drivers/main.c: Add foreground option to drivers
	* docs/man/upsd.txt, scripts/systemd/nut-server.service.in,
	  server/upsd.c: Add foreground option to upsd

2017-01-28  Laurent Bigonville <bigon@bigon.be>

	* scripts/systemd/nutshutdown.in: Add support for POWEROFF_WAIT
	  parameter  Use "systemctl reboot --force --force" to reboot the
	  machine has not been shutdown after the POWEROFF_WAIT delay.
	  Closes: #382
	* scripts/systemd/nutshutdown.in: Add support for POWEROFF_WAIT
	  parameter  Use "systemctl reboot --force --force" to reboot the
	  machine has not been shutdown after the POWEROFF_WAIT delay.
	  Closes: #382

2017-01-28  Jim Klimov <jim@jimklimov.com>

	* docs/man/ups.conf.txt, docs/man/upsdrvctl.txt, drivers/upsdrvctl.c:
	  From: Arnaud Quette <arnaud.quette@free.fr> Date: Sat, 7 Jun 2014
	  02:27:15 +0200 Subject: [PATCH] Add 'nowait' option for upsdrvctl
	  in ups.conf  The nowait flag allow to tell upsdrvctl to not wait at
	  all for the driver(s) to execute the request command. The default
	  behavior, when this variable is omitted, is to wait 'maxstartdelay'
	  seconds
	* drivers/eaton-ats30-mib.c: drivers/eaton-ats30-mib.c : fix
	  whitespace
	* drivers/snmp-ups.c: drivers/snmp-ups.c : fix trailing whitespaces
	* docs/nut.dict: nut.dict : know of "nowait"
	* docs/Makefile.am: docs/Makefile.am : after spellcheck-interactive,
	  advise how to review the dictionary changes and avoid regressions
	* conf/upsd.conf.sample, conf/upsmon.conf.sample.in,
	  conf/upssched.conf.sample.in, docs/nut.dict: Spellchecked the conf/
	  sample files
	* Makefile.am, conf/Makefile.am: Spellcheck the conf/ directory
	* conf/upsd.users.sample, conf/upsmon.conf.sample.in:
	  upsmon.conf.sample.in : clarify nuances of master/slave systems,
	  and special use-cases of SHUTDOWNCMD and powervalue==0
	* conf/hosts.conf.sample, conf/nut.conf.sample, conf/ups.conf.sample,
	  conf/upsd.conf.sample, conf/upsd.users.sample,
	  conf/upsmon.conf.sample.in, conf/upssched.conf.sample.in,
	  conf/upsset.conf.sample, conf/upsstats.html.sample: Sample
	  configuration files : fix leading and trailing whitespace (mix of
	  tab/space)
	* conf/ups.conf.sample: ups.conf.sample : move maxretry example
	  higher in the file so it is before driver-block examples
	* drivers/apc-pdu-mib.c: Date:   Fri Aug 19 02:43:44 2016 +0200
	  apc-pdu-mib.c fixes : * added trailing NULLs for proper structure
	  size; * fixed some items' flags; * fixed whitespace; * bumped
	  MIBmap version
	* data/driver.list.in, drivers/Makefile.am, drivers/apc-pdu-mib.c,
	  drivers/apc-pdu-mib.h, drivers/snmp-ups.c: From: Arnaud Quette
	  <arnaud.quette@free.fr> Date: Fri, 8 Apr 2016 14:40:00 +0200
	  Subject: [PATCH] snmp-ups: support APC PDU  Based on initial work
	  and data from Opengear, using SNMP subdriver creation script, add
	  support for the more recent APC PDU.  This was tested with a
	  AP8958, but should cover other models
	* docs/man/ups.conf.txt, docs/man/upsdrvctl.txt, drivers/upsdrvctl.c:
	  From: Arnaud Quette <arnaud.quette@free.fr> Date: Sat, 7 Jun 2014
	  02:27:15 +0200 Subject: [PATCH] Add 'nowait' option for upsdrvctl
	  in ups.conf  The nowait flag allow to tell upsdrvctl to not wait at
	  all for the driver(s) to execute the request command. The default
	  behavior, when this variable is omitted, is to wait 'maxstartdelay'
	  seconds
	* conf/ups.conf.sample: Document and pre-set the "maxretry" option in
	  ups.conf.sample

2017-01-27  Steven Bell <stv.bell07@gmail.com>

	* docs/man/upscli_connect.txt, docs/nut.dict: Fixed issues with
	  documentation for automated spellcheck during CI check.
	* docs/man/upscli_add_host_cert.txt, docs/man/upscli_connect.txt,
	  docs/man/upscli_init.txt: Updated and corrected documentation.

2017-01-27  Jim Klimov <jim@jimklimov.com>

	* drivers/eaton-ats16-mib.c, drivers/eaton-ats30-mib.c: Prefix
	  structures in eaton-atsXY-mib.c files with an eaton_atsXY rather
	  than just atsXY
	* README: not asciidoc, and redistributed - do not link to volatile
	  build status
	* docs/nut.dict: docs/nut.dict : sorted to facilitate further
	  maintenance
	* NEWS, docs/nut.dict: Spellcheck : Fixed typo in Tore O*r*petveit's
	  name
	* README: README : embed a Travis status image link for NUT Master
	  branch
	* Makefile.am, docs/.gitignore, docs/Makefile.am,
	  docs/man/Makefile.am: Spellcheck : add a recipe to keep nut.dict
	  sorted so git diffs are clearer
	* Makefile.am: Makefile.am : when calling spellcheck or
	  spellcheck-interactive for several subdirs, do not stop after the
	  first failed sub-make

2017-01-27  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/snmp-ups.c: snmp-ups: Fix counter OID matching  In case of
	  multiple similar sysOID (i.e. same sysOID in different subdrivers),
	  there is a counter matching OID (generally using the model OID).
	  However, the matching was causing a crash of snmp-ups in case where
	  it was not the right MIB mapping and the OID for model entry was
	  not available
	* Makefile.am, data/Makefile.am, data/cmdvartab: Integrate cmdvartab
	  to the spellcheck target  This also includes 2 spelling fixes
	* drivers/Makefile.am, drivers/eaton-ats16-mib.c,
	  drivers/eaton-ats16-mib.h, drivers/snmp-ups.c: snmp-ups: rename
	  Eaton ATS16 resources  Rename the subdriver files along with the
	  structure and entries, to make a clear difference with the newly
	  added eaton_ats30. This completes the previous commit, where some
	  files was erroneously committed
	* drivers/{eaton-ats-mib.c => eaton-ats16-mib.c},
	  drivers/{eaton-ats-mib.h => eaton-ats16-mib.h},
	  drivers/eaton-ats30-mib.c: Fix unterminated comment, from previous
	  commit
	* tools/nut-scanner/scan_snmp.c: nut-scanner: force numeric
	  resolution of OIDs  As done in snmp-ups, force the numeric
	  resolution of OIDs, to ensure correct OID matching in all cases
	* drivers/snmp-ups.c: Only free variable when needed in
	  su_setvar/su_setOID  Previously, we tried to free temporary
	  pointers in all cases. However, this pointer may ever point at the
	  static structure, in case we do not need to instantiate variable
	  (outlet.* collection), and which causes a crash of the driver
	* drivers/eaton-ats30-mib.c: Add a comment on the unused OIDs
	* drivers/snmp-ups.c: Fix spacing
	* drivers/eaton-ats30-mib.c, drivers/eaton-ats30-mib.h: Fix legal
	  information

2017-01-26  Tomas Halman <TomasHalman@eaton.com>

	* drivers/Makefile.am, drivers/eaton-ats30-mib.c,
	  drivers/eaton-ats30-mib.h, drivers/snmp-ups.c: snmp-ups: support
	  Eaton Automatic Transfer Switch ATS30  ATS30 MIB differs from
	  previously integrated EATON ATS driver.

2017-01-24  Jim Klimov <jim@jimklimov.com>

	* common/common.c, configure.ac: Add support for system library
	  directories with names based on target/build/host OS spec (for GCC
	  at least)

2017-01-23  Jim Klimov <jim@jimklimov.com>

	* drivers/mge-hid.c, drivers/nutdrv_qx.h,
	  drivers/nutdrv_qx_bestups.c: Fix the non-ASCII quote character away
	  from C sources
	* docs/daisychain.txt, docs/man/al175.txt, docs/man/apcsmart.txt,
	  docs/man/apcupsd-ups.txt, docs/man/bcmxcp_usb.txt,
	  docs/man/bestups.txt, docs/man/blazer-common.txt,
	  docs/man/clone.txt, docs/man/libnutclient_commands.txt,
	  docs/man/libnutclient_misc.txt, docs/man/libnutclient_tcp.txt,
	  docs/man/libnutclient_variables.txt, docs/man/macosx-ups.txt,
	  docs/man/mge-shut.txt, docs/man/nut-scanner.txt,
	  docs/man/nutdrv_qx.txt, docs/man/nutscan_add_device_to_device.txt,
	  docs/man/nutscan_add_option_to_device.txt,
	  docs/man/nutscan_cidr_to_ip.txt,
	  docs/man/nutscan_get_serial_ports_list.txt, docs/man/nutupsdrv.txt,
	  docs/man/skel.txt, docs/man/snmp-ups.txt, docs/man/solis.txt,
	  docs/man/ups.conf.txt, docs/man/upscode2.txt,
	  docs/man/upsd.conf.txt, docs/man/upsd.txt,
	  docs/man/upsmon.conf.txt, docs/man/upsmon.txt, docs/man/upsrw.txt,
	  docs/man/upssched.conf.txt, docs/man/upsstats.html.txt,
	  docs/man/usbhid-ups.txt, docs/nut.dict: Update nut.dict and manpage
	  sources after initial spellchecking integration
	* Makefile.am, ci_build.sh, docs/man/Makefile.am:
	  docs/man/Makefile.am : track all manpage sources in a separate
	  variable and use that for spellchecker
	* docs/Makefile.am: docs/Makefile.am : add daisychain to ALL_TXT_SRC
	* docs/Makefile.am: docs/Makefile.am : revised TODOs for spellchecker

2017-01-21  Jim Klimov <jim@jimklimov.com>

	* indent.sh: Initial commit of indent.sh helper

2017-01-20  Jim Klimov <jimklimov@gmail.com>

	* .travis.yml: Enable valgrind in travis matrix

2017-01-20  Jim Klimov <jim@jimklimov.com>

	* Makefile.am, tests/Makefile.am: VALGRIND: abuse distcheck to run
	  tested programs in debug mode under valgrind
	* configure.ac: valgrind config fix
	* ci_build.sh: Travis : make spellcheck failures fatal now
	* docs/nut.dict: docs/nut.dict : add another word missed by earlier
	  private dict
	* docs/nut.dict: docs/nut.dict : try to enable UTF8 contributor names
	* docs/Makefile.am: docs/Makefile.am : try to enable UTF8 in args and
	  env
	* .travis.yml, ci_build.sh: Travis : enable i2c tests
	* .travis.yml: .travis.yml : rearrange apt deps and special case for
	  doc/spell tests in the matrix
	* .travis.yml, ci_build.sh: Travis: port the test-script structure
	  from DMF brach (better case than if)

2017-01-19  Jim Klimov <jimklimov@gmail.com>

	* docs/Makefile.am: docs/Makefile.am : parametrize aspell common
	  args; add togglable debugging of aspell setup

2017-01-19  Jim Klimov <jim@jimklimov.com>

	* tools/nut-scanner/nutscan-init.c: nutscan-init.c : We can also use
	  libusb-compat from newer libusb-1.0 releases (issue #361)
	* docs/nut.dict: docs/nut.dict : add some words not in dictionaries
	  available to Travis CI; add some developer names to the dictionary
	* NEWS, TODO, UPGRADING, common/parseconf.c, docs/FAQ.txt,
	  docs/acknowledgements.txt, docs/cables/sms.txt,
	  docs/config-notes.txt, docs/download.txt, docs/hid-subdrivers.txt,
	  docs/new-drivers.txt, docs/nut-qa.txt, docs/nut.dict,
	  docs/nutdrv_qx-subdrivers.txt, docs/packager-guide.txt,
	  docs/snmp-subdrivers.txt, lib/README, scripts/augeas/README:
	  Spellchecker : Fix or rephrase issues found by spellchecker, and
	  update the NUT custom dictionary
	* docs/developers.txt: docs/developers.txt : fix non-ASCII tick
	  character
	* docs/acknowledgements.txt, docs/packager-guide.txt: Added myself to
	  docs/acknowledgements.txt docs/packager-guide.txt
	* docs/nut-qa.txt: docs/nut-qa.txt : rearranged the paragraph with CI
	  (to fit in 80 cols) and added link to Travis CI dashboard for NUT
	  branches
	* docs/packager-guide.txt: docs/packager-guide.txt : rearranged the
	  paragraph with recommended package description (to fit in 80 cols)
	* docs/developers.txt: docs/developers.txt : mention the recently
	  added Travis CI integration
	* docs/developers.txt: docs/developers.txt : reformat the paragraph
	  on distcheck-light, and mention the recently added option to skip
	  building docs
	* Makefile.am: Makefile.am : allow to call from workspace root the
	  docs/Makefile for targets: spellcheck spellcheck-interactive doc
	* ci_build.sh, docs/Makefile.am: docs/Makefile.am + Travis : support
	  a SPELLCHECK_ERROR_FATAL toggle, and use it from Travis for now  *
	  docs/Makefile.am : also report if the build succeeds despite
	  spellcheck errors (due to this setting)
	* docs/Makefile.am: docs/Makefile.am : name the en lang explicitly
	* docs/Makefile.am: docs/Makefile.am : big reorganization of
	  spellcheck  * spellcheck targets should fail the build not only if
	  the last document failed the test * make sure to use custom
	  spellcheck dictionary from NUT source tree; revise erroring out if
	  automatic aspell finds issues * also set LC_ALL=C for aspell *
	  revised spellcheck failure message to suggest next steps for the
	  human * comment the spellcheck test; use more portable shell test
	  (instead of bracket); do not fail on empty aspell outputs
	* .travis.yml, ci_build.sh: Travis CI should call spellcheck as a
	  separate spellchecking job (parallelize, optimize for speed,
	  separate error causes/reports)
	* .travis.yml: .travis.yml : add libcppunit to travis env, so tests
	  in NUT will be enabled

2017-01-14  Jim Klimov <jim@jimklimov.com>

	* drivers/nut-libfreeipmi.c: drivers/nut-libfreeipmi.c : set the 4
	  voltage_range variable to unsigned ints

2017-01-11  Jim Klimov <jim@jimklimov.com>

	* .travis.yml: .travis.yml : drop comment for PR #354

2017-01-10  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/snmp-ups.c: snmp-ups: fix device.type setting in daisychain
	  mode  device.type was not set due to a coding error, but pushed to
	  device.model (reported by Evgeny "Jim" Klimov from Eaton)
	* drivers/main.c: drivers: set the default device.type even earlier
	  device.type default setting to "ups" has to be done prior to the
	  initups() call, otherwise some devices (such as daisychained PDUs)
	  will not be able to override it

2017-01-06  Daniele Pezzini <hyouko@gmail.com>

	* common/state.c: state: consider also ST_FLAG_NUMBER flags
	* drivers/dstate.c: dstate: report ST_FLAG_NUMBERs also in response
	  to a DUMPALL request
	* drivers/dstate.c: dstate: when dealing with ranges, don't lose
	  already-set flags  Ranges are now explicitly flagged as numbers,
	  but the use of dstate_setflags() means that we substitute any
	  previously-set flag with the ones we pass to that function, losing,
	  for example, an already-set r/w status, with the result of making
	  an affected var unchangeable. Use instead the newly added
	  dstate_addflags() function, which preserves already-set flags.
	* drivers/dstate.c, drivers/dstate.h: dstate: add a couple of
	  functions to ease the manipulation of flags

2017-01-04  Jim Klimov <jim@jimklimov.com>

	* ci_build.sh: ci_build.sh : list contents of installation directory
	* ci_build.sh: ci_build.sh : fix installation directories for /etc
	  and udev, devd and hotplug (not hardcoded root paths)
	* ci_build.sh: ci_build.sh : list contents of installation directory
	* ci_build.sh: ci_build.sh : fix installation directories for /etc
	  and udev, devd and hotplug (not hardcoded root paths)
	* .travis.yml, ci_build.sh: Travis : take advantage of
	  "--with-doc=skip" support recently added in configure and Makefiles
	* ci_build.sh: ci_build.sh : comment about missing i2c
	* ci_build.sh: ci_build.sh : generalize the skipping of distcheck and
	  make it more comprehensible in script code
	* .travis.yml: .travis.yml : include the headers needed for i2c
	* .travis.yml: .travis.yml : use specific libgd
	* .travis.yml: .travis.yml : add graphics pkgs for CGI builds
	* ci_build.sh: .travis.yml / ci_build.sh : speed up with parallel
	  build (fall back to sequential if this fails)
	* .travis.yml, ci_build.sh: .travis.yml / ci_build.sh : current NUT
	  does not skip docs safely, so enable just manpages in default build
	* .travis.yml: .travis.yml : add libipmimonitoring packages too
	* .travis.yml: .travis.yml : older freeipmi in Travis Ubuntu 12.04.5
	* ci_build.sh: ci_build.sh : fix the doc-skipping option
	* .travis.yml: .travis.yml : apparently, libfreeipmi16 pkg requires
	  extra invitation
	* .travis.yml, ci_build.sh: Travis : require docs tools only for
	  "default-withdoc" builds; change "default" to skip the docs (and
	  try to pass distcheck)
	* .travis.yml: .travis.yml : only define default-alldrv once
	* .travis.yml, ci_build.sh: Initial integration of a travis matrix
	  build (different scenarios)
	* .gitignore, .travis.yml, ci_build.sh, docs/Makefile.am: Initial
	  commits of config and script files for Travis CI automatic
	  validation (simply do a compile and distcheck)
	* configure.ac: configure.ac : switch default option to
	  "--with-doc=man=auto" so ordinary builds succeed by default on any
	  system
	* configure.ac: configure.ac alias
	* configure.ac: configure.ac : add the "--with-docs" as alias to
	  "--with-doc"
	* configure.ac, m4/ax_compare_version.m4, m4/nut_check_asciidoc.m4:
	  Refactor nut_check_asciidoc.m4 and configure.ac to check all
	  doc-tools in one place (and also only once), and fix comments and
	  some coding issues

2017-01-04  Arnaud Quette <ArnaudQuette@Eaton.com>

	* m4/nut_check_asciidoc.m4: Minor typo fixes

2016-12-29  Charles Lepple <clepple+nut@gmail.com>

	* docs/new-drivers.txt: docs: reword/reformat new-drivers.txt
	  Distinguish HID PDC from Q*, etc.

2016-12-17  Daniel Schaal <daniel@schaal.email>

	* clients/upsmon.c, docs/man/upsmon.txt,
	  scripts/systemd/nut-monitor.service.in: Add option to run upsmon in
	  foreground

2016-11-29  Florian Bruhin <git@the-compiler.org>

	* tools/gitlog2changelog.py: Fix gitlog2changelog.py on python 3
	* scripts/augeas/gen-nutupsconf-aug.py: Make gen-nutupsconf-aug.py
	  work with Python 3  This makes the script work with Python 2.6+.
	  Fixes #345.

2016-11-28  Daniele Pezzini <hyouko@gmail.com>

	* configure.ac: configure: fix checks for a2x-built docs  Since,
	  starting from commit d4a55ed, we now check that documents are
	  buildable in an 'external' directory, we need to call a2x with
	  '--destination-dir' pointing to that directory, otherwise a2x will
	  put the generated documents in the same directory where source
	  files are and then testing the non-existent files under our
	  'external' directory will always fail, meaning that we will never
	  pass these checks.

2016-11-21  Jim Klimov <jim@jimklimov.com>

	* common/snprintf.c: common/snprintf.c : avoid a few compilation
	  warnings and a possible crash due to padded ints in variadic
	  functions
	* common/snprintf.c, configure.ac: common/snprintf.c and configure.ac
	  : avoid a few compilation warnings
	* docs/Makefile.am: EXTRA_DIST the docs/asciidoc.txt as used in
	  configure script checks
	* configure.ac: configure.ac : avoid nonportable "mktemp --tmpdir"
	  option

2016-11-17  Michal Soltys <soltys@ziu.info>

	* autogen.sh: minor script fixup  In case any of the perl / python
	  parts fails (for example if system default is python3, the script
	  will complain about print), cd ../.. won't be executed.
	  Furthermore - if any of those scripts fail, there's no point in
	  continuing as both files are mandatory.
	* docs/man/apcsmart.txt, drivers/apcsmart.c, drivers/apcsmart.h:
	  apcsmart: CS "hack" updates  This patch adds cshdelay option (with
	  default set to 3.5s) between "simulate power failure" and "soft
	  hibernate" commands.

2016-11-16  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/mge-hid.c: sbhid-ups: fix Eaton/MGE mapping for beeper
	  handling  Two HID Paths exists for handling beeper status and
	  commands. However, only one historic was implement, which was not
	  actually suitable for issuing the commands on newer units (such as
	  3S, 5P*, ...) (reported by Sergey Talchuk)  Closes:
	  https://github.com/networkupstools/nut/issues/9
	* drivers/usbhid-ups.c: usbhid-ups: adjust debuging info

2016-11-09  Charles Lepple <clepple+nut@gmail.com>

	* docs/nut-names.txt, drivers/libusb0.c, drivers/libusb1.c: Add
	  `driver.version.usb` variable  Reference:
	  https://github.com/networkupstools/nut/issues/300
	* docs/nut-names.txt, drivers/libusb0.c, drivers/libusb1.c: Add
	  `driver.version.usb` variable  Reference:
	  https://github.com/networkupstools/nut/issues/300
	* docs/nut-names.txt, drivers/libusb0.c, drivers/libusb1.c: Add
	  `driver.version.usb` variable  Reference:
	  https://github.com/networkupstools/nut/issues/300

2016-11-03  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: CP1500EPFCLCD  Source:
	  https://github.com/networkupstools/nut/issues/337

2016-11-02  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Eaton 5E2200VA  Reference:
	  https://github.com/networkupstools/nut/issues/335
	* data/driver.list.in: HCL: Eaton Ellipse PRO 650 VA (USB) supported
	  by usbhid-ups  Closes:
	  https://github.com/networkupstools/nut/issues/255

2016-10-21  Charles Lepple <clepple+nut@gmail.com>

	* docs/download.txt: download.txt: Add Slackware link

2016-10-12  Kirill Ovchinnikov <ovchinnikov@ians.aero>

	* drivers/apc-mib.c, drivers/snmp-ups.c: apc-mib.c modified for
	  ups.delay.{start,shutdown} to include SU_TYPE_TIME

2016-10-11  Yann E. MORIN <yann.morin.1998@free.fr>

	* clients/upsclient.c: client/ups: add missing include  struct
	  timeval is declared in sys/time.h, so we need to #include it.

2016-10-11  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c:
	  Remove unimplement nut-scanner option  The -F --fingerprints-file
	  option, used to provide an additional list of SNMP fingerprints,
	  was never implemented, but made its way into the code. Remove it,
	  at least while waiting for an actual implementation
	* docs/man/nut-scanner.txt: Update nut-scanner manual page
	* tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/scan_xml_http.c: Fix c++ style comments

2016-10-05  Arnaud Quette <arnaud.quette@free.fr>

	* common/common.c: Fix c++ style comments
	* drivers/snmp-ups.c: Fix exit code for --list

2016-09-28  Jim Klimov <jim@jimklimov.com>

	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_xml_http.c: nut-scanner : implement
	  single-IP and IP-range UDP NetXML device discovery
	* tools/nut-scanner/scan_snmp.c: scan_xml_http.c : fix leading
	  whitespaces (SPACE vs TABs mixed in code)
	* tools/nut-scanner/scan_snmp.c: scan_xml_http.c : replace some
	  fprintf with upsdebugx
	* tools/nut-scanner/nut-scanner.c: nut-scanner.c : increased
	  debug-tracing messages of nut-scanner progress
	* tools/nut-scanner/nut-scanner.c: nut-scanner.c : replaced printq()
	  with standard upsdebugx(), added "-D" option to increase debug
	  verbosity as common in NUT, moved the help text printout to its own
	  function

2016-09-27  Jim Klimov <jim@jimklimov.com>

	* common/common.c, include/common.h: common.c/.h : simplify the
	  upsdebugx() enhancement (no need to fight with warnings/pragmas)

2016-09-26  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/systemd/nut-server.service.in: systemd: add reload support
	  for nut-server / upsd  Add ExecReload entry to execute a
	  configuration reload of upsd, using the available 'upsd -c reload'

2016-09-25  Charles Lepple <clepple+nut@gmail.com>

	* drivers/libusb1.c: libusb1: use return code from libusb_open()  Per
	  <http://libusb.sf.net/api-1.0/group__dev.html#ga8163100afdf933fabed0db7fa81c89d1>,
	  the handle is only populated when the return code is 0.  This fixes
	  a crash during device detection where more than one HID UPS is
	  available, and the driver needs to skip the first one.
	* drivers/libusb1.c: libusb1: use return code from libusb_open()  Per
	  <http://libusb.sf.net/api-1.0/group__dev.html#ga8163100afdf933fabed0db7fa81c89d1>,
	  the handle is only populated when the return code is 0.  This fixes
	  a crash during device detection where more than one HID UPS is
	  available, and the driver needs to skip the first one.
	* drivers/libusb1.c: libusb1: use return code from libusb_open()  Per
	  <http://libusb.sf.net/api-1.0/group__dev.html#ga8163100afdf933fabed0db7fa81c89d1>,
	  the handle is only populated when the return code is 0.  This fixes
	  a crash during device detection where more than one HID UPS is
	  available, and the driver needs to skip the first one.

2016-09-21  Jim Klimov <jim@jimklimov.com>

	* include/common.h: common.h : rearranged the
	  ENABLE_WARNING/DISABLE_WARNING macro definitions so they are only
	  called for supported compilers and generate empty macros (no-op)
	  for others

2016-09-20  Jim Klimov <jim@jimklimov.com>

	* common/common.c: common.c : move anti-warning macros out of the
	  function body, some compilers do not like that

2016-09-19  Jim Klimov <jim@jimklimov.com>

	* tools/nut-scanner/scan_xml_http.c: scan_xml_http.c : do not suggest
	  NetXML support for ePDUs (almost exclusively they are XMLv4 and do
	  not work with current NUT)

2016-09-18  Jim Klimov <jim@jimklimov.com>

	* common/common.c: common.c : in upsdebugx() added "[Dx]" prefix : do
	  not add it for level 0

2016-09-17  Jim Klimov <jim@jimklimov.com>

	* configure.ac: configure.ac : do not fail configuration if a doctype
	  picked with "auto" can not be built on this system - just skip it

2016-09-17  Jim Klimov <EvgenyKlimov@eaton.com>

	* common/common.c, include/common.h: common.c : augment upsdebugx()
	  and upsdebug_with_errno() by prepending the debug-level to logged
	  messages
	* common/common.c: common.c : fix whitespaces

2016-09-16  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.h: snmp-ups: update todo list  The addition of
	  sysContact and sysLocation support is now addressed centrally
	* drivers/snmp-ups.c: snmp-ups: add sysContact and sysLocation
	  support  The generic MIB-2 provides system contact and location
	  information that are now publish respectively as device.contact and
	  device.location

2016-09-15  Jim Klimov <jim@jimklimov.com>

	* drivers/snmp-ups.c: Added and documented an snmp-ups argument to
	  list currently loaded MIB-to-NUT mappings (typo fix)
	* docs/man/snmp-ups.txt, drivers/snmp-ups.c: Added and documented an
	  snmp-ups argument to list currently loaded MIB-to-NUT mappings
	* drivers/snmp-ups.c: snmp-ups.c : small typo fix
	* docs/man/snmp-ups.txt, drivers/ietf-mib.c: Mention tripplite
	  mapping in snmp-ups manpage; updated some comments about it in
	  ietf-mib.c
	* configure.ac: configure.ac : when verifying ability to build docs,
	  consider out-of-tree builds too

2016-09-14  Jim Klimov <jim@jimklimov.com>

	* common/common.c: common.c : revised upsdebugx() and upslogx() calls
	  to not trail an extra newline
	* common/common.c, configure.ac: Add support for system library
	  directories with names based on short target/build/host OS spec too
	* common/common.c: common.c : added logging and small optimizations
	  during get_libname()
	* common/common.c: common.c : add /usr/local/lib64 to search path
	* tools/nut-scanner/nutscan-init.c: nut-scanner : support
	  libneon-gnutls.so as an alternative name
	* configure.ac: configure.ac : verify that we can actually build a
	  simple or chunked HTML document, beside having nominal versions of
	  software
	* configure.ac: configure.ac : verify that we can actually build a
	  manpage document, beside having nominal versions of software
	* configure.ac: configure.ac : verify that we can actually build a
	  simple PDF document, beside having nominal versions of software

2016-09-13  Jim Klimov <jim@jimklimov.com>

	* configure.ac, docs/man/Makefile.am: configure.ac,
	  docs/man/Makefile.am - support SKIP_MANS as an explicit non-fatal
	  situation
	* drivers/ietf-mib.c: Give the Tripplite SNMP MIB a name, do not
	  duplicate "ietf" entries

2016-09-07  Jim Klimov <jim@jimklimov.com>

	* drivers/dstate.c: dstate.c : a pedantic compiler warning fix
	* configure.ac: configure.ac : add potential usage of valgrind,
	  optional and configurable/detectable

2016-09-02  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/bcmxcp_usb.c, drivers/blazer_usb.c, drivers/libusb1.c,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_qx.c,
	  drivers/richcomm_usb.c, drivers/riello_usb.c: libusb 1.0 port: fix
	  return code for interrupt ops  libusb 1.0 returns on success, the
	  number of bytes actually transferred or otherwise an error code,
	  except for interrupt transfers, where the actual transfer size is
	  stored in a separate variable. The libusb 1.0 implementation in NUT
	  thus needed to be fixed to behave the same way than the libusb 0.1
	  implementation  Reference:
	  https://github.com/networkupstools/nut/issues/300
	* drivers/bcmxcp_usb.c, drivers/blazer_usb.c, drivers/libusb1.c,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_qx.c,
	  drivers/richcomm_usb.c, drivers/riello_usb.c: libusb 1.0 port: fix
	  return code for interrupt ops  libusb 1.0 returns on success, the
	  number of bytes actually transferred or otherwise an error code,
	  except for interrupt transfers, where the actual transfer size is
	  stored in a separate variable. The libusb 1.0 implementation in NUT
	  thus needed to be fixed to behave the same way than the libusb 0.1
	  implementation  Reference:
	  https://github.com/networkupstools/nut/issues/300
	* drivers/bcmxcp_usb.c, drivers/blazer_usb.c, drivers/libusb1.c,
	  drivers/nutdrv_atcl_usb.c, drivers/nutdrv_qx.c,
	  drivers/richcomm_usb.c, drivers/riello_usb.c: libusb 1.0 port: fix
	  return code for interrupt ops  libusb 1.0 returns on success, the
	  number of bytes actually transferred or otherwise an error code,
	  except for interrupt transfers, where the actual transfer size is
	  stored in a separate variable. The libusb 1.0 implementation in NUT
	  thus needed to be fixed to behave the same way than the libusb 0.1
	  implementation  Reference:
	  https://github.com/networkupstools/nut/issues/300

2016-08-31  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/libusb1.c: libusb 1.0 port: remove the check on USB device
	  count  With the port to libusb 1.0, a sanity check was done on the
	  available number of USB devices to try. This however caused a
	  behavior regression, since the only device that NUT may have access
	  to can be the only UPS connected. In this case, the driver may exit
	  upon trying to reconnect if the device is transiently not available
	  Reference: https://github.com/networkupstools/nut/issues/300
	* drivers/libusb1.c, drivers/richcomm_usb.c: libusb 1.0 port:
	  complete usb_set_altinterface code  usb_set_altinterface allows to
	  force the USB code to call `libusb_set_interface_alt_setting (0,
	  0)` (equivalent to `libusb_set_altinterface(0)` in libusb 0.1), as
	  was done in NUT 2.7.2 and earlier. However, the libusb 1.0
	  implementation was still missing the related code  Reference:
	  https://github.com/networkupstools/nut/issues/300
	* drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c: libusb 1.0 port:
	  fix kernel driver detachment  Following the recent modification for
	  the kernel driver detachment, and the related functions
	  availability depending on the platforms, nutdrv_atcl_usb and
	  richcomm_usb were using the wrong macro for
	  libusb_set_auto_detach_kernel_driver and were missing the libusb
	  1.0 code for explicit kernel driver detachment  Reference:
	  https://github.com/networkupstools/nut/issues/300
	* drivers/libusb1.c: libusb 1.0 port: remove the check on USB device
	  count  With the port to libusb 1.0, a sanity check was done on the
	  available number of USB devices to try. This however caused a
	  behavior regression, since the only device that NUT may have access
	  to can be the only UPS connected. In this case, the driver may exit
	  upon trying to reconnect if the device is transiently not available
	  Reference: https://github.com/networkupstools/nut/issues/300
	* drivers/libusb1.c, drivers/richcomm_usb.c: libusb 1.0 port:
	  complete usb_set_altinterface code  usb_set_altinterface allows to
	  force the USB code to call `libusb_set_interface_alt_setting (0,
	  0)` (equivalent to `libusb_set_altinterface(0)` in libusb 0.1), as
	  was done in NUT 2.7.2 and earlier. However, the libusb 1.0
	  implementation was still missing the related code  Reference:
	  https://github.com/networkupstools/nut/issues/300
	* drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c: libusb 1.0 port:
	  fix kernel driver detachment  Following the recent modification for
	  the kernel driver detachment, and the related functions
	  availability depending on the platforms, nutdrv_atcl_usb and
	  richcomm_usb were using the wrong macro for
	  libusb_set_auto_detach_kernel_driver and were missing the libusb
	  1.0 code for explicit kernel driver detachment  Reference:
	  https://github.com/networkupstools/nut/issues/300
	* drivers/libusb1.c: libusb 1.0 port: remove the check on USB device
	  count  With the port to libusb 1.0, a sanity check was done on the
	  available number of USB devices to try. This however caused a
	  behavior regression, since the only device that NUT may have access
	  to can be the only UPS connected. In this case, the driver may exit
	  upon trying to reconnect if the device is transiently not available
	  Reference: https://github.com/networkupstools/nut/issues/300
	* drivers/libusb1.c, drivers/richcomm_usb.c: libusb 1.0 port:
	  complete usb_set_altinterface code  usb_set_altinterface allows to
	  force the USB code to call `libusb_set_interface_alt_setting (0,
	  0)` (equivalent to `libusb_set_altinterface(0)` in libusb 0.1), as
	  was done in NUT 2.7.2 and earlier. However, the libusb 1.0
	  implementation was still missing the related code  Reference:
	  https://github.com/networkupstools/nut/issues/300
	* drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c: libusb 1.0 port:
	  fix kernel driver detachment  Following the recent modification for
	  the kernel driver detachment, and the related functions
	  availability depending on the platforms, nutdrv_atcl_usb and
	  richcomm_usb were using the wrong macro for
	  libusb_set_auto_detach_kernel_driver and were missing the libusb
	  1.0 code for explicit kernel driver detachment  Reference:
	  https://github.com/networkupstools/nut/issues/300

2016-08-17  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/libusb1.c, m4/nut_check_libusb.m4: libusb 1.0 port: rework
	  the kernel driver detachment  libusb 1.0 has introduced a new
	  function (libusb_set_auto_detach_kernel_driver), beside from the
	  explicit kernel driver detachment request
	  (libusb_detach_kernel_driver). However, the former is not available
	  on all systems. As an example, FreeBSD 10.1-10.3 does not have
	  this. The detachment and interface claiming has been reworked to
	  handle this case (reported by Charles Lepple)  Reference:
	  https://github.com/networkupstools/nut/issues/300
	* drivers/libusb1.c, m4/nut_check_libusb.m4: libusb 1.0 port: rework
	  the kernel driver detachment  libusb 1.0 has introduced a new
	  function (libusb_set_auto_detach_kernel_driver), beside from the
	  explicit kernel driver detachment request
	  (libusb_detach_kernel_driver). However, the former is not available
	  on all systems. As an example, FreeBSD 10.1-10.3 does not have
	  this. The detachment and interface claiming has been reworked to
	  handle this case (reported by Charles Lepple)  Reference:
	  https://github.com/networkupstools/nut/issues/300
	* drivers/libusb1.c, m4/nut_check_libusb.m4: libusb 1.0 port: rework
	  the kernel driver detachment  libusb 1.0 has introduced a new
	  function (libusb_set_auto_detach_kernel_driver), beside from the
	  explicit kernel driver detachment request
	  (libusb_detach_kernel_driver). However, the former is not available
	  on all systems. As an example, FreeBSD 10.1-10.3 does not have
	  this. The detachment and interface claiming has been reworked to
	  handle this case (reported by Charles Lepple)  Reference:
	  https://github.com/networkupstools/nut/issues/300

2016-08-16  Arnaud Quette <arnaud.quette@free.fr>

	* clients/upsrw.c: upsrw: display the variable type beside ENUM /
	  RANGE  upsrw now displays more information, beside the ENUM and
	  RANGE, such as the variable type (NUMBER or STRING), and the
	  maximum length for STRING  Closes:
	  https://github.com/networkupstools/nut/issues/267
	* include/extstate.h: Add an explicit type NONE (ST_FLAG_NONE)
	  Reference: https://github.com/networkupstools/nut/issues/267
	* server/netget.c: Modify server side publication for variable type
	  ENUM can be either NUMBER or STRING, which was previously not
	  published.  Reference:
	  https://github.com/networkupstools/nut/issues/267
	* drivers/dstate.c: Automatically set the "NUMBER" flag for ranges
	  Ranges, added through dstate_addrange(), only support numeric
	  ranges. So automatically add the ST_FLAG_NUMBER flag to range
	  Reference: https://github.com/networkupstools/nut/issues/267
	* drivers/dstate.c: Support ST_FLAG_NUMBER in dstate_setflags()
	  Allow the drivers to explicitly use ST_FLAG_NUMBER through
	  dstate_setflags()  Reference:
	  https://github.com/networkupstools/nut/issues/267
	* include/extstate.h: Add an explicit type NUMBER (ST_FLAG_NUMBER)
	  Beside from the existing ST_FLAG_STRING, a need has arise to have
	  an explicit type NUMBER, and thus a flag for this type, can be used
	  generally, and more specifically with the driver primitive
	  dstate_setflags()  Reference:
	  https://github.com/networkupstools/nut/issues/267

2016-08-12  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/libusb1.c: libusb 1.0: remove unused typesafe_control_msg()
	  workaround  For libusb 0.1 implementation, we had to workaround a
	  libusb API goofs, by wrapping the base function usb_control_msg(),
	  and casting the variables to the right type. This is not needed for
	  libusb 1.0 implementation, but was wrongly left in the code
	  (reported by Charles Lepple)
	* drivers/libusb1.c: libusb 1.0: remove unused typesafe_control_msg()
	  workaround  For libusb 0.1 implementation, we had to workaround a
	  libusb API goofs, by wrapping the base function usb_control_msg(),
	  and casting the variables to the right type. This is not needed for
	  libusb 1.0 implementation, but was wrongly left in the code
	  (reported by Charles Lepple)
	* drivers/libusb1.c: libusb 1.0: remove unused typesafe_control_msg()
	  workaround  For libusb 0.1 implementation, we had to workaround a
	  libusb API goofs, by wrapping the base function usb_control_msg(),
	  and casting the variables to the right type. This is not needed for
	  libusb 1.0 implementation, but was wrongly left in the code
	  (reported by Charles Lepple)
	* clients/upsrw.c: upsrw: display current values of NUMBER variables
	  References: https://github.com/networkupstools/nut/issues/267
	* drivers/snmp-ups.c: snmp-ups: discard decimals when set to "0"
	  Publish values as integer when decimals are set to "0". This at
	  least makes sense for some values that are real integers (phases
	  and outlets counts for example), but also with many other values
	  that have not sufficient precision to provide decimals

2016-08-11  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/bcmxcp_usb.c: bcmxcp_usb: fix a warning on unused variable
	* drivers/bcmxcp_usb.c, drivers/libusb1.c, drivers/nutdrv_atcl_usb.c,
	  drivers/richcomm_usb.c: libusb 1.0 port: simplify bus publication
	  bus publication was wrongly listing both the bus and the portname,
	  instead of the bus only. This may have caused some issue when
	  trying to match the port
	* drivers/usbhid-ups.c: usbhid-ups/mge-shut: forgotten version bump
	* drivers/usbhid-ups.c: usbhid-ups/mge-shut: rework errno/errors
	  handling  libusb 1.0 has its own set of return codes, and error
	  interface. Rework the common HID core (shared between usbhid-ups
	  and mge-shut) so that error handling can work with both, and using
	  either libusb 0.1 or 1.0 for usbhid-ups
	* tools/nut-scanner/scan_usb.c: nut-scanner: missing symbols lookup
	  for libusb 1.0  A few symbols from libusb 1.0 were wrongly used
	  directly, instead of being looked up and loaded at init time
	* drivers/bcmxcp_usb.c, drivers/libusb1.c, drivers/nutdrv_atcl_usb.c,
	  drivers/richcomm_usb.c: libusb 1.0 port: add missing libusb_exit()
	  calls
	* tools/nut-scanner/nutscan-init.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-usbinfo.pl: nut-scanner: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c: Remove redundant
	  variable
	* drivers/tripplite_usb.c: tripplite_usb: remove extraneous comment
	  char
	* drivers/nut_libusb.h: permute typedef order of usb_dev_handle
	* drivers/nutdrv_qx.c: nutdrv_qx: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* drivers/richcomm_usb.c: richcomm_usb: missing function remap for
	  libusb 0.1  usb_strerror was not remapped for libusb 0.1
	  implementation
	* drivers/tripplite_usb.c: tripplite_usb: initial port to libusb 1.0
	  The port to libusb 1.0 is complete, at least from a build
	  perspective. This now needs to be tested with devices
	* drivers/riello_usb.c: riello_usb: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* drivers/bcmxcp_usb.c: bcmxcp_usb: fix a warning on unused variable
	* drivers/bcmxcp_usb.c, drivers/libusb1.c, drivers/nutdrv_atcl_usb.c,
	  drivers/richcomm_usb.c: libusb 1.0 port: simplify bus publication
	  bus publication was wrongly listing both the bus and the portname,
	  instead of the bus only. This may have caused some issue when
	  trying to match the port
	* drivers/usbhid-ups.c: usbhid-ups/mge-shut: rework errno/errors
	  handling  libusb 1.0 has its own set of return codes, and error
	  interface. Rework the common HID core (shared between usbhid-ups
	  and mge-shut) so that error handling can work with both, and using
	  either libusb 0.1 or 1.0 for usbhid-ups
	* tools/nut-scanner/scan_usb.c: nut-scanner: missing symbols lookup
	  for libusb 1.0  A few symbols from libusb 1.0 were wrongly used
	  directly, instead of being looked up and loaded at init time
	* drivers/bcmxcp_usb.c, drivers/libusb1.c, drivers/nutdrv_atcl_usb.c,
	  drivers/richcomm_usb.c: libusb 1.0 port: add missing libusb_exit()
	  calls
	* tools/nut-scanner/nutscan-init.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-usbinfo.pl: nut-scanner: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c: Remove redundant
	  variable
	* drivers/tripplite_usb.c: tripplite_usb: remove extraneous comment
	  char
	* drivers/nut_libusb.h: permute typedef order of usb_dev_handle
	* drivers/nutdrv_qx.c: nutdrv_qx: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* drivers/richcomm_usb.c: richcomm_usb: missing function remap for
	  libusb 0.1  usb_strerror was not remapped for libusb 0.1
	  implementation
	* drivers/tripplite_usb.c: tripplite_usb: initial port to libusb 1.0
	  The port to libusb 1.0 is complete, at least from a build
	  perspective. This now needs to be tested with devices
	* drivers/riello_usb.c: riello_usb: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* drivers/bcmxcp_usb.c: bcmxcp_usb: fix a warning on unused variable
	* drivers/bcmxcp_usb.c, drivers/libusb1.c, drivers/nutdrv_atcl_usb.c,
	  drivers/richcomm_usb.c: libusb 1.0 port: simplify bus publication
	  bus publication was wrongly listing both the bus and the portname,
	  instead of the bus only. This may have caused some issue when
	  trying to match the port
	* drivers/usbhid-ups.c: usbhid-ups/mge-shut: forgotten version bump
	* drivers/usbhid-ups.c: usbhid-ups/mge-shut: rework errno/errors
	  handling  libusb 1.0 has its own set of return codes, and error
	  interface. Rework the common HID core (shared between usbhid-ups
	  and mge-shut) so that error handling can work with both, and using
	  either libusb 0.1 or 1.0 for usbhid-ups
	* tools/nut-scanner/scan_usb.c: nut-scanner: missing symbols lookup
	  for libusb 1.0  A few symbols from libusb 1.0 were wrongly used
	  directly, instead of being looked up and loaded at init time
	* drivers/bcmxcp_usb.c, drivers/libusb1.c, drivers/nutdrv_atcl_usb.c,
	  drivers/richcomm_usb.c: libusb 1.0 port: add missing libusb_exit()
	  calls
	* tools/nut-scanner/nutscan-init.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-usbinfo.pl: nut-scanner: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* drivers/nutdrv_atcl_usb.c, drivers/richcomm_usb.c: Remove redundant
	  variable
	* drivers/tripplite_usb.c: tripplite_usb: remove extraneous comment
	  char
	* drivers/nut_libusb.h: permute typedef order of usb_dev_handle
	* drivers/nutdrv_qx.c: nutdrv_qx: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* drivers/richcomm_usb.c: richcomm_usb: missing function remap for
	  libusb 0.1  usb_strerror was not remapped for libusb 0.1
	  implementation
	* drivers/tripplite_usb.c: tripplite_usb: initial port to libusb 1.0
	  The port to libusb 1.0 is complete, at least from a build
	  perspective. This now needs to be tested with devices
	* drivers/riello_usb.c: riello_usb: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices

2016-08-10  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/richcomm_usb.c: richcomm_usb: initial port to libusb 1.0
	  The port to libusb 1.0 is complete, at least from a build
	  perspective. This now needs to be tested with devices
	* drivers/nutdrv_atcl_usb.c: nutdrv_atcl_usb: add the missing detach
	  call  libusb 1.0 provide its own routine for detaching kernel
	  driver
	* drivers/Makefile.am, drivers/libhid.c, drivers/nut_libusb.h:
	  Forgotten occurences of libusb.h renaming  NUT internal header
	  "libusb.h" was renamed, since it collides with the libusb 1.0
	  header, which has the same name. A few occurences of reference and
	  documentation were however missing
	* drivers/nutdrv_atcl_usb.c: nutdrv_atcl_usb: initial port to libusb
	  1.0  The port to libusb 1.0 is complete, at least from a build
	  perspective. This now needs to be tested with devices
	* drivers/blazer_usb.c: blazer_usb: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* drivers/bcmxcp_usb.c: bcmxcp_usb: code cleanup
	* drivers/richcomm_usb.c: richcomm_usb: initial port to libusb 1.0
	  The port to libusb 1.0 is complete, at least from a build
	  perspective. This now needs to be tested with devices
	* drivers/nutdrv_atcl_usb.c: nutdrv_atcl_usb: add the missing detach
	  call  libusb 1.0 provide its own routine for detaching kernel
	  driver
	* drivers/Makefile.am, drivers/libhid.c, drivers/nut_libusb.h:
	  Forgotten occurences of libusb.h renaming  NUT internal header
	  "libusb.h" was renamed, since it collides with the libusb 1.0
	  header, which has the same name. A few occurences of reference and
	  documentation were however missing
	* drivers/nutdrv_atcl_usb.c: nutdrv_atcl_usb: initial port to libusb
	  1.0  The port to libusb 1.0 is complete, at least from a build
	  perspective. This now needs to be tested with devices
	* drivers/blazer_usb.c: blazer_usb: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* drivers/bcmxcp_usb.c: bcmxcp_usb: code cleanup
	* drivers/richcomm_usb.c: richcomm_usb: initial port to libusb 1.0
	  The port to libusb 1.0 is complete, at least from a build
	  perspective. This now needs to be tested with devices
	* drivers/nutdrv_atcl_usb.c: nutdrv_atcl_usb: add the missing detach
	  call  libusb 1.0 provide its own routine for detaching kernel
	  driver
	* drivers/Makefile.am, drivers/libhid.c, drivers/nut_libusb.h:
	  Forgotten occurences of libusb.h renaming  NUT internal header
	  "libusb.h" was renamed, since it collides with the libusb 1.0
	  header, which has the same name. A few occurences of reference and
	  documentation were however missing
	* drivers/nutdrv_atcl_usb.c: nutdrv_atcl_usb: initial port to libusb
	  1.0  The port to libusb 1.0 is complete, at least from a build
	  perspective. This now needs to be tested with devices
	* drivers/blazer_usb.c: blazer_usb: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* drivers/bcmxcp_usb.c: bcmxcp_usb: code cleanup

2016-08-09  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/bcmxcp_usb.c: bcmxcp_usb: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* docs/configure.txt, drivers/Makefile.am, drivers/libhid.c,
	  drivers/libhid.h, drivers/{libusb.c => libusb0.c},
	  drivers/libusb1.c, drivers/{libusb.h => nut_libusb.h},
	  drivers/usb-common.h, drivers/usbhid-ups.c: ushid-ups: complete the
	  port to libusb 1.0  The port to libusb 1.0 is now complete for
	  usbhid-ups. Other USB drivers (bcmxcp_usb, blazer_usb,
	  nutdrv_atcl_usb, richcomm_usb, riello_usb, tripplite_usb,
	  nutdrv_qx) have still to be addressed
	* drivers/bcmxcp_usb.c: bcmxcp_usb: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* docs/configure.txt, drivers/Makefile.am, drivers/libhid.c,
	  drivers/libhid.h, drivers/{libusb.c => libusb0.c},
	  drivers/libusb1.c, drivers/{libusb.h => nut_libusb.h},
	  drivers/usb-common.h, drivers/usbhid-ups.c: ushid-ups: complete the
	  port to libusb 1.0  The port to libusb 1.0 is now complete for
	  usbhid-ups. Other USB drivers (bcmxcp_usb, blazer_usb,
	  nutdrv_atcl_usb, richcomm_usb, riello_usb, tripplite_usb,
	  nutdrv_qx) have still to be addressed
	* drivers/bcmxcp_usb.c: bcmxcp_usb: initial port to libusb 1.0  The
	  port to libusb 1.0 is complete, at least from a build perspective.
	  This now needs to be tested with devices
	* docs/configure.txt, drivers/Makefile.am, drivers/libhid.c,
	  drivers/libhid.h, drivers/{libusb.c => libusb0.c},
	  drivers/libusb1.c, drivers/{libusb.h => nut_libusb.h},
	  drivers/usb-common.h, drivers/usbhid-ups.c: ushid-ups: complete the
	  port to libusb 1.0  The port to libusb 1.0 is now complete for
	  usbhid-ups. Other USB drivers (bcmxcp_usb, blazer_usb,
	  nutdrv_atcl_usb, richcomm_usb, riello_usb, tripplite_usb,
	  nutdrv_qx) have still to be addressed

2016-08-06  Jim Klimov <jim@jimklimov.com>

	* docs/man/dummy-ups.txt: dummy-ups.txt : noted the sleep between
	  loops
	* docs/man/dummy-ups.txt: dummy-ups.txt : text and formatting revised
	  to be clearer to the uninitiated

2016-08-04  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/snmp-ups.txt: snmp-ups: document the use of non-standard
	  port  SNMP agent may publish data over a non-standard port, i.e.
	  not 161. This feature is supported since the origin, but was not
	  explicitly documented nor usable

2016-08-01  Arnaud Quette <arnaud.quette@free.fr>

	* configure.ac, m4/nut_check_libusb.m4: Initial port to libusb 1.0
	  Starting with the configure checks, to detect if libusb 1.0 if
	  available, and otherwise fall back to the libusb 0.1 backend
	* configure.ac, m4/nut_check_libusb.m4: Initial port to libusb 1.0
	  Starting with the configure checks, to detect if libusb 1.0 if
	  available, and otherwise fall back to the libusb 0.1 backend
	* configure.ac, m4/nut_check_libusb.m4: Initial port to libusb 1.0
	  Starting with the configure checks, to detect if libusb 1.0 if
	  available, and otherwise fall back to the libusb 0.1 backend

2016-07-12  Carlos Dominguez <cdominguezm@gmail.com>

	* common/common.c, include/common.h,
	  tools/nut-scanner/nutscan-init.c: Arnaud's patch applied, dynamic
	  library bug fixed, tested!

2016-07-11  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: fix device.type publication  In
	  daisychain mode at least, device.type was not set to its actual
	  value, using the current mapping structure, but defaulting to "ups"
	  (reported by Tomas Halman, from Eaton)
	* drivers/snmp-ups.c: snmp-ups: fix and improve match_sysoid  The
	  function was returning FALSE instead of NULL in one case. Also
	  retry at most 3 times to get the sysOID

2016-07-07  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: fix instant commands publication
	  With non-daisychain setup, there was a bug that created an infinite
	  test loop when trying to add instant commands

2016-07-04  Arnaud Quette <arnaud.quette@free.fr>

	* common/common.c, include/common.h,
	  tools/nut-scanner/nutscan-init.c: Move get_libname() to common
	  This function, originally created for nut-scanner, to be able to
	  lookup for libraries loaded using libtool loader, is now also
	  useful for the DMF support. This last loads libneon at runtime, to
	  load DMF structure (including the one for nut-scanner) and unload
	  it once the file were read

2016-07-04     Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/nut-scanner.txt: comment about debugging level for
	  troubleshooting  Originates from commit 951f8f8b3 by  Date:
	  Mon Jul 4 16:27:29 2016 +0200

2016-06-30  Tomas Halman <TomasHalman@eaton.com>

	* clients/nutclient.cpp: nutclient: fix library segmentation fault if
	  device name doesn't exists.  If device doesn't exist, getClient()
	  returns NULL. Then calling the method like
	  getClient()->getDeviceDescription(getName()) causes segfault. We
	  rather check the status and throw an exception in this case.

2016-06-25  Charles Lepple <clepple+nut@gmail.com>

	* docs/acknowledgements.txt: doc: fix acknowledgements link to GitHub

2016-06-23  Timothy Pearson <kb9vqf@pearsoncomputing.net>

	* drivers/libhid.c, drivers/tripplite-hid.c, drivers/usbhid-ups.c,
	  scripts/upower/95-upower-hid.rules: Add support for SU3000LCD2UHV
	  Note that protocol 1330 does not respond to requests for
	  UPS.OutletSystem.Outlet.DelayBeforeReboot, therefore those requests
	  needed to be bypassed in the driver.

2016-06-23  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/mge-xml.c: netxml-ups: detect the unsupported XML v4
	  protocol  The XML/PDC protocol had an update with version 4, for
	  ePDU. However, this version is not supported by netxml-ups. We now
	  detect this version, and explicitly exit with an "XML v4 protocol
	  is not supported!" message
	* drivers/netxml-ups.c: netxml-ups: fix a segmentation fault
	  netxml_get_page() was not checking if page is NULL, hence resulting
	  in a segmentation fault with Eaton ePDU, which use the unsupported
	  version 4 of the XML/PDC protocol. Bump the driver version to 0.41

2016-06-13  Tomas Halman <TomasHalman@eaton.com>

	* clients/nutclient.cpp: NUT client library: internal::Socket class
	  must close socket in destructor.

2016-06-09  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: 2nd pass on fixing memory leaks  Fix
	  some remaining memory leaks reported by Coverity scan
	* drivers/snmp-ups.c: snmp-ups: fix memory leaks and incorrect
	  expression  Following the registration of NUT in Coverity scan, a
	  number of issues were identified. This is the very first set of QA
	  fixes related to this static code analysis

2016-06-08  Arnaud Quette <arnaud.quette@free.fr>

	* Makefile.am: AIX package: reference the exact tarball version

2016-06-07  Charles Lepple <clepple+nut@gmail.com>

	* docs/download.txt: Update VMware ESXi package link (from René
	  Garcia)

2016-06-07  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: fix some regression due to daisychain
	  A few issues were remaining, following the daisychain support
	  addition. Issues were related to, at least, 3ph initialization and
	  data not being published, and identified with Eaton 3ph units,
	  using the "pw" MIB (reported by Yves Clauzel, from Eaton)

2016-06-05  Timothy Pearson <kb9vqf@pearsoncomputing.net>

	* drivers/powerp-txt.c: Add deep battery test for CyberPower
	  OL3000RMXL2U

2016-05-31  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c, drivers/snmp-ups.h: snmp-ups: support
	  daisychain commands and settings  Daisychain commands and settings
	  on subdevices are now supported. Since 95% of the code of these two
	  functions was similar, a new function called su_setOID() was
	  created, and is now called by su_setvar and su_instcmd. This new
	  function is also daisychain-aware
	* drivers/dstate.c: dstate: adapt daisychain devices functions  For
	  daisychain devices, we increase the counter when alarms are present
	  on a subdevice, but don't decrease the count when the buffer is
	  empty. Otherwise, we may not get the ALARM flag in ups.status,
	  while there are some alarms present on device.X
	* drivers/eaton-mib.c: snmp-ups: fix input.L2.voltage on Eaton G2/G3
	  PDU  This data entry was missing the daisychain formatting
	  directive, which resulted in this data not being published
	  (reported by Vyskocil Michal from Eaton)

2016-05-27  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: fix regression related to daisychain
	  Fix a few regression with unitary devices, related to the
	  daisychain changes of the SNMP core engine
	* drivers/dstate.c: dstate: enforce underflow to not generate false
	  alarm  The newly introduced daisychain mechanism, with alarm
	  counters (not just boolean) introduced a potential underflow on
	  alarm_commit, which resulted in false positive "ALARM" flag
	  publication in ups.status
	* drivers/snmp-ups.c: snmp-ups: update for daisychain  Update the
	  daisychain implementation, as per the latest specification,
	  including considerations on "device.0". Alarms are also handled for
	  the daisychain devices. Initial code for settings and commands is
	  also present, but will be completed in subsequent commits, along
	  with a final cleanup and potential composite settings and commands
	  on "device.0" (that are then applied to all daisychain devices)
	* drivers/eaton-mib.c: snmp-ups: fix some daisychain data for Eaton
	  PDU  Some data (outlet.%i.current, outlet.%i.power,
	  outlet.%i.load.{off,on,cycle} and
	  outlet.group.%i.load.{off,on,cycle}) were missing the daisychain
	  formatting string, and were hence not published
	* docs/daisychain.txt, drivers/dstate.c, drivers/dstate.h: dstate:
	  add functions to address daisychain alarms  Add 2 new functions,
	  device_alarm_init() and device_alarm_commit(), to address
	  daisychain devices: these acts as the standard alarm_{init,commit},
	  but only clearing / committing the alarm buffer, and not
	  reinitializing the main alarm counter. Hence, the "device.0" (whole
	  daisychain) knows if it has to publish the "ALARM" flag in
	  ups.status

2016-05-25  Jim Klimov <jim@jimklimov.com>

	* drivers/powerware-mib.c: powerware-mib - renamed "ietf_*" and
	  "eaton_*" lookups to have "pw_*" prefix
	* drivers/raritan-px2-mib.c: raritan-px2-mib - renamed lookups to
	  have "raritanpx2_*" prefix
	* drivers/raritan-pdu-mib.c: raritan-pdu-mib - renamed lookups to
	  have "raritan_pdu_*" prefix
	* drivers/powerware-mib.c: powerware-mib - renamed "ietf_*" and
	  "eaton_*" lookups to have "pw_*" prefix
	* drivers/baytech-mib.c: baytech-mib - renamed "outlet_status_info"
	  lookup to "baytech_outlet_status_info"
	* drivers/apc-ats-mib.c: apc-ats-mib.c- renamed "ats_*" lookups to
	  "apc_ats_*"
	* drivers/huawei-mib.c: huawei-mib - renamed lookups to have
	  "huawei_*" prefix  (cherry picked from commit
	  fd29f32b2837588518ec7bea07f414c2631d5c8f)

2016-05-25  Arnaud Quette <arnaud.quette@free.fr>

	* docs/new-drivers.txt: daisychain: add a reference for drivers and
	  alarms
	* docs/daisychain.txt: daisychain: update specification for alarms
	  handling
	* drivers/eaton-mib.c, drivers/snmp-ups.c, drivers/snmp-ups.h:
	  snmp-ups: daisychain update, fix and completion  Following the
	  specification update on "device.0" consideration, adapt the current
	  implementation. For now, the whole daisychain will only publish
	  device.{mfr,model,count}. Initial support for settings and commands
	  was also added, and will be expanded to "device.0"
	* docs/daisychain.txt: daisychain: update and fix specification
	* docs/daisychain.txt: daisychain: update specification as per
	  discussion

2016-05-23  Jim Klimov <jim@jimklimov.com>

	* drivers/mge-mib.c: mge-mib.c : rename rogue ietf_* lookups to mge_*

2016-05-23  Arnaud Quette <arnaud.quette@free.fr>

	* docs/Makefile.am, docs/daisychain.txt, docs/developer-guide.txt,
	  docs/user-manual.txt: daisychain documentation: fix documentation
	  building  The daisychain documentation was missing from the build
	  rules, and from the documentation integration, which resulted in
	  documentation build being broken (reported by Charles Lepple). As a
	  side note, the documentation (both user and developer) will need
	  some update and cleanup, now that there is more content  Closes:
	  https://github.com/networkupstools/nut/issues/291
	* drivers/eaton-mib.c: snmp-ups: Eaton Aphel Revelation updates
	  Update Eaton Aphel Revelation MIB mapping, by fixing outlets
	  switchability publication and adding "device.revision". This last
	  data still has to be submitted as an RFC for extending NUT
	  variables namespace

2016-05-19  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: fix daisychain regression  A bug was
	  discovered with the new daisychain code and non-daisychained
	  device, resulting in data not being published

2016-05-18  Jim Klimov <jim@jimklimov.com>

	* Makefile.am: root Makefile.am : clone "make distcheck-light" in a
	  new target "make distcheck-light-man" to specifically only want
	  docs=man

2016-05-18  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/compaq-mib.c, drivers/ietf-mib.c, drivers/mge-mib.c,
	  drivers/netvision-mib.c, drivers/powerware-mib.c,
	  drivers/snmp-ups.c, drivers/snmp-ups.h: snmp-ups: daisychain
	  handling of 1ph / 3ph phases  Per device phases management is now
	  available in daisychain mode, for input, output and bypass. The
	  overall mechanism for phase determination has also changed to
	  something more generic, and not requiring the SU_FLAG_SETINT flag
	* drivers/eaton-mib.c: snmp-ups: fix input.phases for Eaton G2 / G3
	  ePDU  The current implementation was using the number of input, not
	  the number of phase(s)

2016-05-17  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/eaton-mib.c: snmp-ups: initial daisychain support for Eaton
	  PDU  Following the base implementation for daisychain support in
	  the SNMP driver core (snmp-ups), add support for daisychain for
	  Eaton PDU.  Commands definitions are disabled for now, and will be
	  addressed in a subsequent commit
	* drivers/snmp-ups.c, drivers/snmp-ups.h: snmp-ups: base daisychain
	  support  This commit includes the initial support for daisychain.
	  There are however a number of limitations that still need to be
	  addressed, such as: * {input,output,bypass}.phase handling: for
	  now, mixed / hybrid daisychains are not supported * All devices
	  alarms are pushed to "ups.alarm" without discriminant (i.e. not
	  "device.X" appended to the alarm) * commands and settings are not
	  yet handled * non-regression testing on unitary devices have to be
	  done
	* README, docs/outlets.txt, docs/user-manual.txt: Documentation
	  adjustments
	* docs/daisychain.txt, docs/nut-names.txt: daisychain: initial
	  specification and documentation
	* drivers/mge-hid.c: mge-shut/usbhid-ups: list AEG PROTECT NAS vendor
	  06da  AEG PROTECT NAS were previously using VendorID / ProductID
	  0x2b2d / 0xffff, and are now using 0x06da / 0xffff. Also bump the
	  mge-hid subdriver version to 1.40

2016-05-13  Jim Klimov <jim@jimklimov.com>

	* drivers/Makefile.am: snmp and netxml UPSes should have SSL
	  flags/libs if configured?  Without the DMF part of original commit
	  e56b0b8bdf818fbf21805fe1cc67ec2c03719062
	* drivers/Makefile.am, drivers/apc-iem-mib.h, drivers/apc-mib.c,
	  drivers/apc-mib.h: drivers/apc-iem-mib.h: split some macro
	  definitions away from apc-mib.h and apc-mib.c and snmp-ups.c

2016-05-13  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/nutupsdrv.txt: Mention explicitly the default pollinterval
	  As in ups.conf manual page, mention the default poll interval, to
	  make it clear

2016-05-10  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut-qa.txt: NUT QA: add Coverity static code analysis
	  information  NUT is now a registered Coverity project, and can thus
	  get static code analysis from it. This is just a first step, and
	  actions are needed to address the actual defects and complete the
	  project configuration. Due thanks to Synopsys, Inc., mother firm of
	  Coverity, for providing this service to Opensource project

2016-05-09  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/apc-mib.c, drivers/snmp-ups.h: snmp-ups: remove the
	  redundant SU_TYPE_STRING define  SU_TYPE_STRING was originally
	  created to expose a required cast to string. However, it is
	  redundant with ST_FLAG_STRING, and not useful in the end. The only
	  subdriver that was using it is apc-mib (UPS support) and this was a
	  no-op
	* README: Fix wrong link reference  The "NUT outlets management and
	  PDU notes" were wrongly referred to as "Configuring automatic UPS
	  shutdowns

2016-05-04  Jim Klimov <jim@jimklimov.com>

	* .gitignore, docs/.gitignore: GitIgnore some built documents

2016-05-03  Jim Klimov <jim@jimklimov.com>

	* configure.ac: configure.ac : prefer "/usr/share/augeas/lenses/dist"
	  over "/usr/share/augeas/lenses" if present
	* docs/Makefile.am, docs/man/Makefile.am: Follow-up to NUT PR#281 -
	  notice for the future
	* docs/Makefile.am, docs/man/Makefile.am: Revert toxic commit: "a2x
	  says "--destination-dir" is only valid for HTML... so let us reduce
	  complaints reported in build"  This reverts commit
	  fe17861c4ea12679b3ebfefa8a6d692d79d99f2d because in fact asciidoc
	  (8.6.9) lies about not supporting the flag, and it is reqired for
	  `ASCIIDOC_VERBOSE=-v make distcheck-light` to pass. So let's keep
	  it complaining but working.
	* Makefile.am, configure.ac, scripts/augeas/Makefile.am: Allow "make
	  install" to deliver Augeas lenses into the path defined by
	  configure (defaults to /usr/share/augeas/lenses)

2016-05-03  Arnaud Quette <arnaud.quette@free.fr>

	* docs/configure.txt: Document Augeas lenses configure option  Add
	  documentation on the new configure option
	  --with-augeas-lenses-dir=PATH

2016-05-02  Jim Klimov <jim@jimklimov.com>

	* docs/Makefile.am, docs/man/Makefile.am: a2x says
	  "--destination-dir" is only valid for HTML... so let us reduce
	  complaints reported in build
	* configure.ac: configure.ac : by default, "--with-doc=man=yes" to
	  match legacy expectations, and permit "make dist" out of the box

2016-04-26  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c:
	  nut-scanner: Force numeric OIDs resolution  Force numeric OIDs
	  resolution (ie, do not resolve to textual names) and disable MIB
	  loading. This is mostly for the convenience of debug and results
	  output
	* scripts/subdriver/gen-snmp-subdriver.sh: SNMP subdriver generator:
	  add a FIXME

2016-04-16  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in, drivers/mge-hid.c,
	  scripts/upower/95-upower-hid.rules: usbhid-ups: add IBM USB VID
	  Reference:
	  http://article.gmane.org/gmane.comp.monitoring.nut.user/7721 and
	  http://news.gmane.org/find-root.php?message_id=5712AB29.6040001%40delphinidae.org.uk

2016-04-11  Michal Vyskocil <michalvyskocil@eaton.com>

	* drivers/netvision-mib.c: netvision-mib: uses 0 as dfl  Change to
	  NULL as other subdrivers does

2016-04-11  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-scanner/nutscan-init.c: nut-scanner: additional search
	  path  Prepend "/usr/" to the provided --libdir, in case this one
	  points at "/lib/..." or similar, and not to "/usr/lib/..."

2016-04-09  Émilien Kia <emilien.kia@gmail.com>

	* clients/nutclient.cpp: Correctly increment pointer in
	  stringset_to_strarr and stringvector_to_strarr.  Fix bug #232
	* tests/Makefile.am, tests/nutclienttest.cpp: Create unit test
	  (failing for now) to test bug #232 (nutclient:
	  stringset_to_strarr() and stringvector_to_strarr() only work for
	  one element).
	* clients/nutclient.cpp: Make string[set|vector]_to_strarr public to
	  be accessible to unit tests.
	* clients/nutclient.h: Make nut::Client::~Client virtual.  Prevent
	  compilation warning [-Wdelete-non-virtual-dtor].

2016-04-08  Jim Klimov <jim@jimklimov.com>

	* configure.ac, docs/configure.txt: configure.ac : do not inspect
	  systemdunitdir with pkg-info if we asked not to use it at all

2016-04-07  Jim Klimov <jim@jimklimov.com>

	* docs/configure.txt, m4/nut_check_libgd.m4,
	  m4/nut_check_libnetsnmp.m4: Allow to customize path to gdlib-config
	  and net-snmp-config programs

2016-04-07  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/raritan-px2-mib.c: snmp-ups: fix a missing field in
	  raritan_px2 mapping  The default value (dfl field) was missing, and
	  thus producing a compilation warning

2016-04-06  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, docs/man/snmp-ups.txt, drivers/Makefile.am,
	  drivers/raritan-px2-mib.c, drivers/raritan-px2-mib.h,
	  drivers/snmp-ups.c: snmp-ups: support Raritan Dominion PX2 PDU
	  Based on initial work and data from Opengear, using SNMP subdriver
	  creation script, add support for the more recent Raritan PDU, model
	  PX2.  This was tested with a PX2-1486 (Metered Input), but should
	  cover all PX2 models
	* scripts/subdriver/gen-snmp-subdriver.sh: SNMP subdriver creation
	  script: minor updates

2016-04-03  Alica <alicaccs@yahoo.com.tw>

	* conf/upsstats.html.sample: upsstats.html: Conform to HTML 4.01
	  Strict  Closes: https://github.com/networkupstools/nut/pull/278
	* conf/upsstats-single.html.sample: upsstats-single.html: Conform to
	  HTML 4.01 Strict

2016-03-24  Kirill Ovchinnikov <kirill@rednoize.su>

	* drivers/snmp-ups.c, drivers/snmp-ups.h: Added a feature of power on
	  and power off delay time writing to UPS configuration; Added
	  support of writing "timeticks" values to su_setvar() routine

2016-03-23  Michal Vyskocil <michalvyskocil@eaton.com>

	* drivers/eaton-mib.c: Bumb version of eaton-mib

2016-03-23  Jim Klimov <jim@jimklimov.com>

	* configure.ac, docs/configure.txt, docs/man/Makefile.am: Added
	  WITH_MANS support (to toggle generation of manpages) and revised
	  other documentation formats
	* configure.ac: Fix "--with-doc=auto" to use present doc-gens  *
	  configure.ac : when using "--with-doc" do actually proceed if some
	  supported methods are found and some are not... build what we can
	  on this platform * configure.ac : revised upon peer review :
	  yes==all, default(empty)==no as documented in --help, auto guesser
	  must be explicit

2016-03-23  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/snmp-ups.txt, docs/snmp.txt: Fix references to the SNMP
	  section of protocols

2016-03-22  Michal Vyskocil <michalvyskocil@eaton.com>

	* drivers/snmp-ups.h: snmp-ups: mark SU_FLAG_OK as internal to the
	  driver
	* drivers/eaton-mib.c: snmp-ups: add outlet type to Eaton Marlin MIB
	* drivers/snmp-ups.h: snmp-ups: enhance documentation of some flags
	  Mark SU_FLAG_OK as deprecated and SU_FLAG_STALE as internal to
	  driver. This helps new developers to write or extend snmp
	  subdrivers.
	* docs/nut-names.txt: Document outlet.n.type  Add and document
	  outlet.n.type variable, which provides information about physical
	  outlet type.

2016-03-22  Arnaud Quette <arnaud.quette@free.fr>

	* configure.ac: Remove the extraneous GNU in front of FreeIPMI
	  Messages are now more homogeneous
	* docs/configure.txt: Clarify multiple specifier for --with-doc
	* docs/configure.txt: Update FreeIPMI requirements  The documented
	  requirements were out of date, compared to the tests done at
	  configure time

2016-03-19  Charles Lepple <clepple+nut@gmail.com>

	* configure.ac: Version to 2.7.4.1 for snapshots

2016-03-18  Marty R <martin.p.rowe@gmail.com>

	* docs/download.txt: Update OpenWRT package information  The previous
	  link is over 5 years old, nut is now maintained in the packages
	  repository on GitHub.

2016-03-10  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-scanner/Makefile.am: Fix nut-scanner compilation in some
	  environments  Following the commits 5187dab (common: add some
	  string-related functions) and e767df5 (common: consolidate some
	  string-related functions), the build rules of nut-scanner were not
	  updated to also use str.c. Since the libcommon.la dependency was
	  still there, some environments managed to build cleanly, while
	  other are failing.  Update build dependencies to fix this situation
	* drivers/powerware-mib.c: snmp-ups: Eaton 3ph UPS improvements  Fix
	  the battery test status reporting, and start to simplify the
	  mapping layout by getting rid of some #define. Also add the
	  following: - battery test result "Unknown" - last battery
	  replacement date (battery.date) - output.voltage thresholds (high
	  and low) and nominal value
	* drivers/snmp-ups.c: snmp-ups: add a debug trace on
	  nut_snmp_get_int()

2016-03-09  Arnaud Quette <arnaud.quette@free.fr>

	* configure.ac: Fix autoreconf on Debian  For some reason, Automake
	  doesn't search the current directory correctly when searching for
	  helper scripts, when 'nut' is running as a git-submodule, as it is
	  the case with the website repository
	* configure.ac: update version to 2.7.4
	* drivers/apc-ats-mib.c: snmp-ups: add APC ATS input.source
	* drivers/snmp-ups.c: snmp-ups: fix the matching OID tests  For both
	  sysOID and classic methods, we used to test one of the two OIDs
	  provided in the mib2nut structures. However, these two OIDs
	  (oid_pwr_status and oid_auto_check) tend to be redundant and
	  confusing. Replace these matching by an extraction of
	  {ups,device}.model
	* drivers/nut-libfreeipmi.c: nut-ipmipsu: fix compilation warnings
	* NEWS, UPGRADING, docs/FAQ.txt, docs/net-protocol.txt,
	  docs/new-drivers.txt, docs/nut-names.txt,
	  docs/nutdrv_qx-subdrivers.txt, docs/packager-guide.txt,
	  docs/snmp-subdrivers.txt, lib/README, scripts/augeas/README: Fix
	  spelling and typo errors  Following the spell-checking scope
	  expansion, do a spell-checking pass
	* docs/documentation.txt: Update documentation as per the new devices
	  scope
	* docs/features.txt, docs/user-manual.txt: Update documentation as
	  per the new devices scope
	* docs/Makefile.am: Expand spell-checking scope  Add more documents,
	  outside of the docs/ directory Closes:
	  https://github.com/networkupstools/nut/issues/222

2016-03-08  Arnaud Quette <arnaud.quette@free.fr>

	* configure.ac, tools/Makefile.am, tools/driver-list-format.sh: Check
	  driver.list[.in] format at make dist time  Instead of checking
	  driver.list.in at configure time, move the checking and
	  modification into a script that is called at make dist time. The
	  script can also be called manually, and will try to fix both
	  driver.list.in and driver.list

2016-03-07  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/powerware-mib.c: Remove an erroneous test  This was made
	  test the enumerated values registration in snmp-ups, and should not
	  have been committed
	* data/driver.list.in: HCL: APC ATS AP7724 supported by snmp-ups
	  These Automatic Transfer Switch should be supported by snmp-ups,
	  however this was not tested at all Reference:
	  https://github.com/networkupstools/nut/issues/260
	* NEWS, UPGRADING: Update for release 2.7.4
	* drivers/Makefile.am, drivers/apc-ats-mib.c, drivers/apc-ats-mib.h,
	  drivers/snmp-ups.c: snmp-ups: support APC Automatic Transfer Switch
	  Following the recent extension of NUT scope and variable namespace,
	  to support Automatic Transfer Switch (ATS), implement SNMP support
	  for APC ATS (with help from "maaboo" through github) Reference:
	  https://github.com/networkupstools/nut/issues/260

2016-03-04  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/baytech-mib.c, drivers/bestpower-mib.c,
	  drivers/compaq-mib.c, drivers/cyberpower-mib.c,
	  drivers/eaton-mib.c, drivers/mge-mib.c, drivers/netvision-mib.c,
	  drivers/powerware-mib.c, drivers/raritan-pdu-mib.c: snmp-ups: fix
	  mib2nut structures  Non existent OIDs, for testing MIB selection,
	  must be expressed as NULL and not as empty string ("") for the
	  algorithm to work

2016-03-03  Daniele Pezzini <hyouko@gmail.com>

	* docs/download.txt: docs: update several download links

2016-03-03  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/upsrw.txt, docs/net-protocol.txt: Clarification on NUMBER
	  type float values  Clarify a bit more documentation on how to
	  express float values, when using upsrw.  That is to say, using
	  decimal (base 10) english-based representation, so using a dot, in
	  non-scientific notation.  So hexadecimal, exponents, and comma for
	  thousands separator are forbiden
	* clients/upsrw.c, docs/net-protocol.txt, server/netget.c: Prefer
	  NUMBER to NUMERIC for variable type  As per discussion on the
	  Github pull request, NUMBER would be more suitable than NUMERIC

2016-03-02  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: HCL: added Eaton Powerware 9125-5000g
	  Supported with the additional USB card, with the bcmxcp_usb driver
	* docs/man/upsrw.txt, docs/net-protocol.txt: Clarification on NUMERIC
	  type float values  Clarify documentation on how to express float
	  values, when using upsrw.  That is to say, using decimal
	  english-based representation, so using a dot
	* drivers/mge-xml.c: netxml-ups: fix Eaton XML published data  Some
	  raw protocol data were wrongly published, and are now commented.
	  Also add some R/W flags to ambient thresholds Closes:
	  https://github.com/networkupstools/nut/issues/201
	* tools/nut-scanner/nut-scanner.c: nut-scanner: fix thread attachment
	  Add a test to have the right thread waiting for the scan to be
	  complete (patch from Michal Hlavinka, Red Hat)
	* configure.ac, tools/nut-scanner/nutscan-init.c,
	  tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_ipmi.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c:
	  nut-scanner: don't depend on development libraries  nut-scanner was
	  previously trying to use directly libXXX.so (libusb-0.1,
	  libfreeipmi, libnetsnmp, libavahi-client, libneon, libupsclient}.
	  However, these files are generally provided by the development
	  packages. nut-scanner now tries to look at some known paths,
	  including the one provided through --libdir, to find the correct
	  libraries Closes: https://github.com/networkupstools/nut/issues/233

2016-03-01  Arnaud Quette <arnaud.quette@free.fr>

	* clients/upsrw.c, docs/net-protocol.txt, server/netget.c: Default to
	  type NUMERIC for variables  Any variable that is not STRING, RANGE
	  or ENUM is just a simple numeric value. The protocol documentation
	  (net-protocol.txt) was previously stating that "The default <type>,
	  when omitted, is integer." which was not fully true, since a
	  variable could also be a float.  Hence, the wording was changed to
	  advertise this, and that each driver is then responsible for
	  handling values as either integer or float.  Moreover, instead of
	  returning a TYPE "UNKNOWN", return "NUMERIC", which is more
	  suitable, and aligned with the NUT protocol specification
	* tools/nut-snmpinfo.py: SNMP subdriver generator: fix output
	  formatting
	* tools/nut-snmpinfo.py: SNMP subdriver generator: discard commented
	  lines  Discard any commented mib2nut_info_t declaration, which
	  should thus not be taken into account

2016-02-26  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, drivers/Makefile.am, drivers/eaton-ats-mib.c,
	  drivers/eaton-ats-mib.h, drivers/snmp-ups.c: snmp-ups: support
	  Eaton Automatic Transfer Switch  Following the recent extension of
	  NUT scope and variable namespace, to support Automatic Transfer
	  Switch (ATS), implement SNMP support for Eaton ATS.  Note that this
	  device can also be supported through Eaton XML/PDC (XML over HTTP)
	  protocol, supported by the NUT netxml-ups driver
	* data/cmdvartab, docs/nut-names.txt: Extend namespace for Automatic
	  Transfer Switch (ATS)  Extend NUT namespace to support a new type
	  of power device: ATS - Automatic Transfer Switch.  These devices
	  are used to setup 2 power systems, such as UPS, to power a single
	  power supply system, and be able to automatically transfer between
	  the input sources in case of failure of the primary one. The added
	  variable are for now limited to 'input.source' and
	  'input.source.preferred', but may be extended if needed

2016-02-25  C Fraire <cfraire@me.com>

	* docs/scheduling.txt: Fix docs location of upssched to sbin

2016-02-25  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/subdriver/gen-snmp-subdriver.sh: snmp-ups: add the last
	  missing element in the structure
	* drivers/apc-mib.c, drivers/bestpower-mib.c, drivers/compaq-mib.c,
	  drivers/cyberpower-mib.c, drivers/delta_ups-mib.c,
	  drivers/huawei-mib.c, drivers/ietf-mib.c, drivers/mge-mib.c,
	  drivers/netvision-mib.c, drivers/powerware-mib.c,
	  drivers/xppc-mib.c, scripts/subdriver/gen-snmp-subdriver.sh:
	  snmp-ups: fix values lookup terminating element  The terminating
	  element should really be NULL, and not the string "NULL", as it was
	  originally done, back in 2002
	* drivers/snmp-ups.c: snmp-ups: revert order of the NULL/"NULL" test
	  Fix a segfault when doing first the string comparison test
	* drivers/snmp-ups.c: snmp-ups: register values enumerations
	  Whenever there is a values lookup structure for read/write data,
	  push the values as enumerations for upsrw
	* drivers/snmp-ups.c: snmp-ups: try to lookup values for numeric
	  elements  Numeric elements can also use the value resolution
	  mechanism
	* drivers/snmp-ups.c: snmp-ups: counter test sysOID with a test OID
	  Some devices have buggy sysOID exposed. Allow to counter test
	  another OID, to be able to select between different mapping
	  structures

2016-02-24  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/subdriver/gen-snmp-subdriver.sh: SNMP subdriver creation
	  script: allow sysOID override  Allow to use -s to override buggy
	  sysOID in some device FW. In this case, the sysOID entry in the
	  mib2nut structure should be set to NULL

2016-02-11  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/raritan-pdu-mib.c: snmp-ups: fix macaddr support for
	  Raritan PDU  Raritan MIB was fixed to expose macaddr on
	  device.macaddr instead of ups.macaddr
	* drivers/baytech-mib.c: snmp-ups: fix macaddr support for Baytech
	  PDU  Baytech MIB was fixed to expose macaddr on device.macaddr
	  instead of ups.macaddr
	* drivers/eaton-mib.c: snmp-ups: fix and complete macaddr support for
	  Eaton  Eaton G2 and G3 can now expose the MAC address of the
	  device, using device.macaddr. Eaton G1 Aphel was fixed to expose
	  this data on device.macaddr instead of ups.macaddr
	* drivers/snmp-ups.c: snmp-ups: add support for hexadecimal octet
	  strings
	* drivers/snmp-ups.c: snmp-ups: fallback for classic MIB detection
	  If the sysOID matching has failed, then snmp-ups uses ups.model to
	  get an OID to test. In case ups.model is not available, fallback to
	  trying to use device.model instead
	* docs/images/nut_layering.png, docs/images/nut_layering.svg: Refresh
	  and complete NUT architecture diagram

2016-02-08  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/powerware-mib.c: snmp-ups: extend Eaton 3ph outputSource
	  values map  Add the new status values for xupsOutputSource
	  (.1.3.6.1.4.1.534.1.4.5.0), that maps to both ups.status and
	  ups.type

2016-02-03  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/powerware-mib.c: snmp-ups: improve support for Eaton 3ph
	  Improve support for temperature and humidity data, including: -
	  ups.temperature now available - fixing ambient.temperature
	  (previously pointing at a wrong OID) - ambient.humidity now
	  available - the following settings now available: *
	  ups.temperature.low * ups.temperature.high * ambient.humidity.high
	  * ambient.humidity.low * ambient.temperature.high *
	  ambient.temperature.low

2016-02-01  Daniele Pezzini <hyouko@gmail.com>

	* data/driver.list.in: HCL: various APCUPSD-controlled APC devices
	  via apcupsd-ups  Originally reported by GitHub user @Thermionix.
	  Reference: https://github.com/networkupstools/nut/pull/215

2016-01-31  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/nutdrv_atcl_usb.txt: man/nutdrv_atcl_usb: point to
	  nutdrv_qx (fuji) for 0001:0000  Also update best guess for the
	  USB-to-serial converter situation.
	* docs/FAQ.txt: FAQ: udevadm for fixing permissions

2016-01-30  Charles Lepple <clepple+nut@gmail.com>

	* drivers/nut-libfreeipmi.c: FreeIPMI: do not split function
	  arguments with a conditional  Alternate approach to suggestion by
	  Romero B. de S. Malaquias  Closes:
	  https://github.com/networkupstools/nut/pull/250

2016-01-24  Charles Lepple <clepple+nut@gmail.com>

	* docs/config-notes.txt: Documentation: fix formatting  Put syntax
	  examples in verbatim mode, and remove spaces from ends of lines.
	* drivers/apc-hid.c: usbhid-ups: handle missing USB strings in APC
	  code  Closes: https://github.com/networkupstools/nut/issues/258
	  Might fix:
	  https://bugs.launchpad.net/ubuntu/+source/nut/+bug/1483615

2016-01-23  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: added NHS Laser Senoidal 5000VA  Source:
	  http://article.gmane.org/gmane.comp.monitoring.nut.devel/7123
	  Closes: https://github.com/networkupstools/nut/issues/254

2016-01-14  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: fix staleness detection  With some
	  ePDUs or devices using template for outlet and outlet.group,
	  communication loss with the device were not detected, due to the
	  handling mechanism. Simply skipping commands for templates, after
	  the init time, is sufficient to avoid this issue

2016-01-05  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: improve stale communication recovery
	  Disable the 10 iterations to retry communicating with stale device.
	  This was leading up to 10 x 30 seconds, so 5mn, before being able
	  to get data again
	* docs/new-drivers.txt, docs/nut-names.txt: Document
	  battery.charger.status  This will in time replace the historic CHRG
	  and DISCHRG flags published in ups.status.  Closes
	  https://github.com/networkupstools/nut/issues/196

2016-01-04  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/ietf-mib.c, drivers/ietf-mib.h, drivers/snmp-ups.c:
	  snmp-ups: add support for Tripplite units on IETF mib  These
	  devices expose ".1.3.6.1.4.1.850.1", which could be supported
	  through this specific MIB.  For now, just link that to the IETF
	  MIB, to provide a first level of support  Reference:
	  https://github.com/networkupstools/nut/issues/171

2016-01-03  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Sweex model P220 via blazer_usb
	  Reference: https://github.com/networkupstools/nut/issues/251

2015-12-30  Arnaud Quette <arnaud.quette@free.fr>

	* configure.ac: First stab at checking driver.list.in format

2015-12-29  Charles Lepple <clepple+nut@gmail.com>

	* scripts/upower/95-upower-hid.rules: upower: update for AEG

2015-12-29  Arnaud Quette <arnaud.quette@free.fr>

	* docs/config-notes.txt: Add a complementary note on Windows and
	  serial ports
	* conf/ups.conf.sample, docs/man/ups.conf.txt: Document serial port
	  naming on Windows  Addressing serial port on Windows system
	  requires to express the port in ups.conf in a special way
	  Reference: https://github.com/networkupstools/nut/issues/198
	* drivers/powercom.c: Fix the processing of output voltage for KIN
	  units  The processing of output voltage requires to also take into
	  account the line voltage, as reported by Patrik Dufresne. This may
	  still need some further adjustments  Reference:
	  https://github.com/networkupstools/nut/issues/187
	* drivers/powercom.c: Fix the processing of input voltage for KIN
	  units  The processing of input voltage requires to also take into
	  account the line voltage, as reported by Patrik Dufresne. Also bump
	  the driver version to 0.16, since 0.15 was already used, but not
	  set  Reference: https://github.com/networkupstools/nut/issues/187
	* drivers/mge-hid.c: Fix letter case for AEG USB VendorID  The letter
	  case of this VendorID may be important for generated files, such as
	  the udev ones (reported by Charles Lepple)

2015-12-28  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, drivers/mge-hid.c: HCL: AEG PROTECT B / NAS
	  supported by usbhid-ups  Reference:
	  https://github.com/networkupstools/nut/issues/249

2015-12-17  Daniele Pezzini <hyouko@gmail.com>

	* data/driver.list.in: HCL: Legrand Keor Multiplug supported by
	  nutdrv_qx  Reference:
	  https://github.com/networkupstools/nut/issues/248

2015-12-09  Andrey Jr. Melnikov <temnota.am@gmail.com>

	* drivers/bcmxcp_usb.c: Don't call usb_close() after reset

2015-12-08  Andrey Jr. Melnikov <temnota.am@gmail.com>

	* drivers/bcmxcp_usb.c: Call usb_reset() when driver unable to claim
	  device
	* drivers/bcmxcp.h, drivers/bcmxcp_usb.c: Refactor get_answer()
	  routine, make it properly deal with multi-packets responses. Lower
	  stack usage.

2015-11-22  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: increase timeouts in 'sgs' USB
	  subdriver  Apparently the previously used timeouts in the 'sgs' USB
	  subdriver were not always enough, so increase them.

2015-11-11  Daniele Pezzini <hyouko@gmail.com>

	* data/driver.list.in: HCL: various TS Shara UPSes supported by
	  nutdrv_qx  Protocol: 'megatec' USB subdriver: 'sgs'
	* drivers/nutdrv_qx.c: nutdrv_qx: make sure 'sgs' USB subdriver uses
	  only what it reads  Since, in 'sgs' USB subdriver, we read only 8
	  bytes at a time and we expect the first byte to tell us the length
	  of the data that follows, make sure we don't use more than what we
	  read from the device in case the first byte is not what we expect
	  it to be.

2015-11-10  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Electrys UPS 2500 (nutdrv_qx and
	  blazer_ser)  Closes
	  https://github.com/networkupstools/nut/issues/241
	* data/driver.list.in: HCL: Eaton E Series DX UPS 1-20 kVA uses
	  blazer_ser  Closes
	  https://github.com/networkupstools/nut/issues/238

2015-11-09  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/eaton-mib.c: snmp-ups: add number of outlets in Eaton ePDU
	  groups
	* docs/nut-names.txt: Add a variable for the number of outlets in a
	  group  Added 'outlet.group.n.count' which provides the number of
	  outlets in the outlet group 'n'

2015-11-06  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx_voltronic-qs.c: nutdrv_qx: update 'voltronic-qs'
	  subdriver  Since, for devices supported by 'voltronic-qs'
	  subdriver, in reality: - invalid commands or queries are echoed
	  back, - accepted commands are followed by action without any
	  further reply, update the subdriver interface accordingly. Also: -
	  change slightly the way we publish protocol as ups.firmware.aux, -
	  update F's reply examples and some info_type (ratings;
	  output.frequency) in QX to NUT table to reflect reality, - increase
	  version number.

2015-10-19  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx_voltronic-qs-hex.c: nutdrv_qx: improve 'T'
	  protocol support in 'voltronic-qs-hex' subdriver  Since the last
	  byte of the reply to the QS query (before the trailing CR) of
	  devices that implement the 'T' protocol holds in reality ratings
	  informations (nominal output frequency/voltage and nominal battery
	  voltage) in its bits, change the 'voltronic-qs-hex' subdriver
	  accordingly. Also: - change slightly the way we publish protocol as
	  ups.firmware.aux, - increase version number.
	* drivers/nutdrv_qx_voltronic-qs-hex.c: nutdrv_qx: simplify
	  {in,out}put voltage conversion in 'voltronic-qs-hex'  In
	  'voltronic-qs-hex' subdriver, instead of calculating separately the
	  fractional and integer part of input and output voltage, do it at
	  once. Also, increase version number.
	* drivers/nutdrv_qx_voltronic-qs-hex.c: nutdrv_qx: improve protocol
	  identification in 'voltronic-qs-hex'  Since 'V' protocol, in
	  reality, never happens to use the encoded version of the reply to
	  the QS query, but it always uses the plain version already
	  implemented in 'voltronic-qs' subdriver, remove it from the
	  identification process of 'voltronic-qs-hex' subdriver. Also,
	  remove some non-significant entries from the testing table and
	  increase version number.
	* drivers/nutdrv_qx_voltronic-qs-hex.c: nutdrv_qx: harmonize
	  declarations/definitions in 'voltronic-qs-hex'  In
	  'voltronic-qs-hex' subdriver, the scope of support functions is
	  limited to the subdriver as rightly stated in forward declarations,
	  so correct their definitions to reflect that. Also, increase
	  version number.

2015-10-09  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut-qa.txt: Reference Black Duck OpenHUB in QA documentation
	  Closes networkupstools/nut#192

2015-10-08  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: also use __func__ for additional
	  traces
	* drivers/powerware-mib.c: powerware-mib: more comments for RFC
	  device.event  Add more comments on the need to RFC device.event for
	  some data that are currently published under ups.alarm
	* drivers/powerware-mib.c: snmp-ups: improve Eaton 3-phase UPS alarms
	  reporting  Eaton 3phase UPS, using the Powerware MIB, can expose
	  many new alarms. Also use the standard driver "X.YY" versioning,
	  and bump subdriver release to "0.85"
	* drivers/snmp-ups.c, drivers/snmp-ups.h: snmp-ups: fix and improve
	  the ups.alarms mechanism  This mechanism allows to walk a subtree
	  (array) of alarms, composed of OID references. The object
	  referenced should not be accessible, but rather when present, this
	  means that the alarm condition is TRUE. Both ups.status and/or
	  ups.alarm values can be provided
	* drivers/snmp-ups.c: snmp-ups: fix on some snprintf calls  Some
	  snprintf calls are using dynamically allocated variables, which
	  doesn't work with sizeof
	* drivers/snmp-ups.c: snmp-ups: use __func__ in debug messages
	* drivers/snmp-ups.c: snmp-ups: nut_snmp_get_oid() returns TRUE on
	  success
	* drivers/snmp-ups.c: snmp-ups: only use snprintf calls instead of
	  sprintf
	* drivers/eaton-mib.c, drivers/snmp-ups.c: snmp-ups: simplify
	  handling of other alarms  outlet, outlet groups and phase alarms
	  are now using a simplified approach that does not require specific
	  lookup structure to adapt alarm messages. This applies to Eaton
	  ePDU G2/G3

2015-10-06  Daniele Pezzini <hyouko@gmail.com>

	* data/driver.list.in: HCL: LYONN CTB-800V supported by nutdrv_qx
	  Protocol: 'voltronic-qs-hex'  Reference:
	  https://github.com/networkupstools/nut/pull/230

2015-10-06  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Asium P700, Micropower LCD 1000 and Eaton
	  5E1100iUSB

2015-09-28  Arnaud Quette <arnaud.quette@free.fr>

	* docs/new-drivers.txt: Fix spacing error

2015-09-22  Charles Lepple <clepple+nut@gmail.com>

	* drivers/solis.c, drivers/solis.h: solis: remove additional warnings
	  The "Waiting" flag is always zero, and several other variables were
	  not used.
	* drivers/solis.c, drivers/solis.h: solis: clean up warnings  Comment
	  out unused constants, and add 'static' and 'const' wherever
	  possible.

2015-09-22  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: fix a typo error in debug message
	  Unknown is spelled with an ending N (reported by Evgeny "Jim"
	  Klimov, from Eaton)
	* drivers/snmp-ups.c: snmp-ups: optimize phase number extraction
	  efficiency  Since we know that we are processing an alarm for a
	  phase "Lx", don't use strchr, but simply index (reported by Evgeny
	  "Jim" Klimov, from Eaton)
	* docs/nut-names.txt, drivers/eaton-mib.c: snmp-ups: use
	  dash-separator for out-of-range  For the sake of coherence with
	  other status relative to thresholds, "out of range" frequency
	  status now also use dash as separator, instead of space
	* drivers/eaton-mib.c: Fix a spelling error in comments
	* drivers/eaton-mib.c: snmp-ups: fix a typo error on Eaton ePDU G2/G3
	  MIB  Critical is really spelled critical, and not cricital, as used
	  in the various status thresholds value-lookup structures (reported
	  by Evgeny "Jim" Klimov, from Eaton)
	* data/cmdvartab: Mention the unit for ambient humidity information
	  Add an explicit mention that ambient information related to
	  humidity use the "(percent)" unit
	* data/cmdvartab, docs/nut-names.txt: Mention the unit for input
	  voltage information  Add an explicit mention that input information
	  related to voltage use the "Volts (V)" unit
	* data/cmdvartab: Mention the unit for ambient temperature
	  information  Add an explicit mention that ambient information
	  related to temperature use the "degrees C" unit

2015-09-20  Charles Lepple <clepple+nut@gmail.com>

	* drivers/Makefile.am, drivers/solis.c: solis: math fixes  As
	  mentioned here: https://github.com/networkupstools/nut/pull/235

2015-09-19  bsalvador <bruno.salvador@gmail.com>

	* drivers/solis.c, drivers/solis.h: solis: patch for Microsol
	  Back-Ups BZ1200-BR  patch for correct reading for Microsol Back-Ups
	  BZ1200-BR  (rebased onto solis_debug branch, and cleaned up
	  whitespace. -- CFL)  Closes
	  https://github.com/networkupstools/nut/pull/235 and Closes
	  https://github.com/networkupstools/nut/pull/236

2015-09-18  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/eaton-mib.c: snmp-ups: add outlet group identifier for
	  Eaton ePDU  Eaton ePDU can now publish the parent group of each
	  outlet
	* docs/nut-names.txt: Extend outlet collection namespace with group
	  ID  An outlet can now publish the group to which it belongs to
	* drivers/snmp-ups.c: snmp-ups: complete nut_snmp_get_{str,int}
	  These methods now allow to get the value of an OID returned by the
	  source OID (as for the sysOID). In case of failure (non existent
	  OID), the functions return the last part of the returned OID (ex:
	  1.2.3 => 3)
	* drivers/snmp-ups.c: snmp-ups: create a nut_snmp_get_oid() function
	  This method allows to get the value of an OID which is also an OID
	  (as for the sysOID), without trying to get the value of the pointed
	  OID. This will allow to use nut_snmp_get_{int,str}() the get the
	  value of the pointed OID

2015-09-17  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/eaton-mib.c: snmp-ups: outlet groups type handling for
	  Eaton ePDU  Eaton ePDU can now publish the type of outlet group
	* docs/nut-names.txt: Extend outlet group collection namespace with
	  type  The type of outlet group can now be published, part of the
	  new outlet.group data collection
	* drivers/eaton-mib.c: snmp-ups: outlet groups commands for Eaton
	  ePDU  Eaton ePDU can now handle commands outlet groups, including
	  on, off and reboot (cycle)
	* drivers/snmp-ups.c: snmp-ups: fix commands handling for outlet
	  groups  The su_instcmd() function of snmp-ups is now adapted to
	  support outlet groups
	* drivers/eaton-mib.c: Advanced outlets groups alarm handling for
	  Eaton ePDU  Eaton ePDU can now handle alarms on outlets groups, for
	  voltage and current, relative to the configured thresholds
	* drivers/snmp-ups.c: snmp-ups: improvements for outlet groups and
	  alarms  Improve the code for general template management, including
	  outlets and outlets groups for now, and add alarm management for
	  outlet groups, the same way as for outlets

2015-09-16  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: snmp-ups: fix set variable for outlet groups
	  The setvar() function of snmp-ups is now adapted to support outlet
	  groups
	* drivers/eaton-mib.c: snmp-ups: outlet groups handling for Eaton
	  ePDU  Eaton ePDU can now handle outlet groups, including voltage
	  and current (with thresholds and status relative to the configured
	  thresholds), along with power and realpower. A subsequent commit
	  will address the alarms, settings and commands. Bump subdriver
	  version to 0.30
	* drivers/snmp-ups.c: snmp-ups: update debug message  The template
	  guestimation function name was changed, but the debug message was
	  left with the old function name
	* data/driver.list.in, docs/man/snmp-ups.txt,
	  drivers/powerware-mib.c, drivers/powerware-mib.h,
	  drivers/snmp-ups.c: snmp-ups: add Eaton Power Xpert Gateway UPS
	  Card  This newer generation of SNMP card is used for BladeUPS or
	  other UPS, and is serving the same XUPS MIB, as in the "pw"
	  subdriver
	* scripts/subdriver/gen-snmp-subdriver.sh: Update SNMP subdriver
	  generation script  Complete the documentation, by adding some notes
	  and examples ; Fix the MIBs directories list and the "keep
	  temporary files" option

2015-09-15  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut-names.txt: Extend NUT namespace with outlet.group
	  collection  A new data collection, called "outlet.group", is now
	  available. It provides grouped management for a set of outlets. The
	  same principles and data than the outlet collection apply to
	  outlet.group
	* drivers/snmp-ups.c, drivers/snmp-ups.h: snmp-ups: adapt template
	  mechanisms for outlet groups  The template handling mechanisms,
	  originally created for outlets, is now adapted to also manage
	  outlet groups

2015-09-14  root <root@arno-zbook15.euro.ad.etn.com>

	* docs/nut-names.txt: Add a note on the outlet.count variable

2015-09-14  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/eaton-mib.c: snmp-ups: add nominal input current for Eaton
	  ePDU  snmp-ups now provides input.[Lx.]current.nominal for Eaton
	  ePDU G2/G3, both for 1phase and 3phase
	* drivers/eaton-mib.c: snmp-ups: better input.power handling for
	  Eaton ePDUs  Improve the way we declare and process input.power, as
	  previously done for input.realpower, in order to address the
	  variations between Eaton ePDUs G2 and G3

2015-09-11  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/eaton-mib.c: snmp-ups: publish part number for Eaton ePDU
	  device.part was standardized in NUT namespace, so enable the
	  declaration for Eaton ePDU
	* drivers/eaton-mib.c: snmp-ups: 3-phase alarm handling for Eaton
	  ePDU  Eaton ePDU can now handle alarms on 3-phase, currently
	  limited to voltage and current, relative to the configured
	  thresholds
	* drivers/snmp-ups.c: snmp-ups: implement 3-phase alarm handling
	  snmp-ups now allows to publish 3-phase alarms in ups.alarm, the
	  same way as with outlet.  Declaration of such alarms are done using
	  "Lx.alarm". info_lkp_t structures messages are shared templates
	  with outlets, and use the string formats to include the context
	  (outlet or phase) and the number (of the outlet or phase) in alarm
	  messages.  These alarms are then published in "ups.alarm", with the
	  standard mechanism for alarm publication
	* docs/nut-names.txt: Extend 3-phase collection namespace with alarms
	  3-phase data collection now allows to specify alarms, the same way
	  than with the outlet collection ("outlet.n.alarm"), but using
	  "Lx.alarm" (for example "L1.alarm").  These alarms are then
	  published in "ups.alarm", with the standard mechanism for alarm
	  publication
	* drivers/eaton-mib.c: Advanced threshold handling for Eaton 3-phase
	  ePDU  Eaton ePDU can now handle warning and critical thresholds
	  settings and status for input voltage and current on 3-phase units.
	  Alarms are however still to be implement
	* docs/nut-names.txt: Extend 3-phase collection namespace with
	  threshold  3-phase data collection now allows to specify low / high
	  warning and critical thresholds for voltage and current. Status
	  relative to the thresholds also exist for these data
	* drivers/snmp-ups.c: Improve log/debug output trace

2015-09-08  Charles Lepple <clepple+nut@gmail.com>

	* drivers/solis.c: solis: resync with end-of-packet character (0.64)
	  Suggested by @rpvelloso in
	  https://github.com/networkupstools/nut/issues/231#issuecomment-134795747
	  Note that the driver could possibly get out-of-sync after initial
	  detection.

2015-09-07  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/macosx-ups.txt, drivers/macosx-ups.c: macosx-ups:
	  gracefully handle disconnection of UPS  Tested on 10.9.5 and
	  10.10.5. Returns "data stale" when UPS disappears.

2015-09-07  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c, drivers/snmp-ups.h: snmp-ups: fix loss of
	  precision when setting values  su_setvar() was losing precision
	  when converting and casting the provided values to send to the SNMP
	  agent. As an example, with an OID in millivolt (multiplier set to
	  0.001), when providing 238 (V) using upsrw, the value sent to the
	  SNMP agent was 237999, so leaking 0.1 volt
	* drivers/powerware-mib.c: Bump Powerware SNMP subdriver version

2015-09-04  Charles Lepple <clepple+nut@gmail.com>

	* Makefile.am, docs/configure.txt, docs/new-clients.txt,
	  tools/nut-scanner/README: doc: correct remaining `--with-lib`
	  references  Credit: Paul Vermeer

2015-09-04  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/dstate.c: Extend ups.alarm internal buffer to 1024 chars
	  Currently, ups.alarm can hold up to 256 chars to expose alarms.
	  With the recent outlet alarms handling addition, the buffer may
	  quickly be to small.  Thus, increase to 1024, which may still not
	  be sufficient but already provides a bit more room
	* drivers/eaton-mib.c: snmp-ups: outlet alarm handling for Eaton ePDU
	  Eaton ePDU can now handle alarms on outlets, currently limited to
	  outlet voltage and current, relative to the configured thresholds
	* drivers/snmp-ups.c: snmp-ups: implement outlets / PDU alarm
	  handling  snmp-ups now allows to publish outlets and PDU alarms in
	  ups.alarm, the same way as with ups.status.  Declaration of such
	  alarms are done using the outlet template mechanism
	  ("outlet.%i.alarm"). info_lkp_t structures messages can also use
	  the string formats to include the outlet number in alarm messages.
	  These alarms are then published in "ups.alarm", with the standard
	  mechanism for alarm publication
	* docs/nut-names.txt: Extend outlet collection namespace with alarms
	  Outlet data collection now allows to specify alarms, using the
	  template definitions ("outlet.n.alarm").  These alarms are then
	  published in "ups.alarm", with the standard mechanism for alarm
	  publication

2015-09-02  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/eaton-mib.c: snmp-ups: outlet threshold handling for Eaton
	  ePDU  Eaton ePDU can now handle warning and critical thresholds
	  settings and status for outlet voltage and current
	* docs/nut-names.txt: Extend outlet collection namespace with
	  threshold  Outlet data collection now allows to specify low / high
	  warning and critical thresholds for voltage and current. Status
	  relative to the thresholds also exist for these data

2015-09-01  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/eaton-mib.c: snmp-ups: alarms handling for Eaton ePDU
	  Eaton ePDU can now publish alarms, related to input status
	  (voltage, frequency and current) and ambient status (temperature
	  and humidity). Note that alarms are still published under
	  ups.alarms, though these should belong to either pdu.alarms or
	  better device.alarms
	* drivers/eaton-mib.c: Advanced input threshold handling for Eaton
	  ePDU  Eaton ePDU can now handle warning and critical thresholds
	  settings and status for input voltage and current, along with the
	  frequency status
	* data/cmdvartab, docs/nut-names.txt: Extend input collection
	  namespace with threshold  Input data collection now allows to
	  specify low / high warning and critical thresholds for voltage and
	  current. Status relative to the thresholds also exist for these
	  data, and for the frequency
	* drivers/snmp-ups.h: Minor updates to TODO comments
	* drivers/snmp-ups.c: Implement ups.alarm for SNMP  snmp-ups now
	  allows to publish alarms in ups.alarm, the same way as with
	  ups.status

2015-08-31  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/eaton-mib.c: snmp-ups: ambient dry contacts support for
	  Eaton ePDU  Eaton ambient modules, connected on ePDU, now publish
	  the status of the connected dry contacts sensors
	* data/cmdvartab, docs/nut-names.txt: Extend ambient collection
	  namespace with dry contacts  Ambient data collection now allow to
	  specify dry contacts sensor status
	* drivers/eaton-mib.c: snmp-ups: fix Eaton Pulizzi Switched PDU
	  multiplier  As per the previous commit, to well handle integer RW
	  variables
	* drivers/eaton-mib.c: snmp-ups: ambient threshold handling for Eaton
	  ePDU  Eaton ePDU can now handle warning and critical thresholds and
	  status for both humidity and temperature
	* data/cmdvartab, docs/nut-names.txt: Extend ambient collection
	  namespace with threshold  Ambient data collection now allow to
	  specify warning and critical thresholds
	* drivers/eaton-mib.c: snmp-ups: publish presence of Eaton ambient
	  sensor  Publish the actual presence of ambient sensor for Eaton
	  ePDU G2 and G3
	* data/cmdvartab, docs/nut-names.txt: Publish the actual presence of
	  an ambient sensor  A new data was created (ambient.present) to
	  publish the actual presence of an ambient sensor
	* drivers/snmp-ups.c: Proper handling of integer RW variables  RW
	  variables were previously supposed to always be strings. Thus, the
	  multiplier (using the info_len field) was not applied. Also allow
	  setting float values, not only integer
	* drivers/snmp-ups.c, drivers/snmp-ups.h: Fix default SNMP retries
	  and timeout  The previous patch was using the default values from
	  Net-SNMP, which are set to -1. When the user was not providing
	  overriden values, this was causing the driver to not be able to
	  establish the communication with the device. The default values are
	  now fixed, as per documented (i.e. 5 retries and timeout of 1
	  second). Also bump the driver version to 0.74
	* docs/man/ups.conf.txt, drivers/dstate.c: Make more obvious the
	  socket write failure  Document the error that require the use of
	  the 'synchronous' flag. Also use debug level 1 instead of 2 for the
	  debug message

2015-08-25  Daniele Pezzini <hyouko@gmail.com>

	* README.adoc, docs/asciidoc.conf, docs/man/asciidoc.conf: docs: add
	  'linkman2' AsciiDoc macro  Add a new 'linkman2' AsciiDoc macro to
	  support different names for the manpage and the command shown. This
	  is also needed to properly display links to manpages in both GitHub
	  and generated docs without defining an attribute for each manpage.
	  Reference: https://github.com/networkupstools/nut/pull/226

2015-08-24  Daniele Pezzini <hyouko@gmail.com>

	* README.adoc, docs/asciidoc.conf: docs: add 'linksingledoc' AsciiDoc
	  macro  Add a new 'linksingledoc' AsciiDoc macro which guarantees
	  that, when chunked HTML is generated, the link always points to a
	  non-chunked file.
	* README.adoc: Update some URLs and make them clickable
	* docs/asciidoc.conf: Make AsciiDoc xref macros work properly in
	  DocBook-generated docs  AsciiDoc <= ~8.6.9 tests the wrong
	  attribute and, as a consequence of that, it produces both <link>
	  and <xref>. To workaround this issue, implement the xref macro by
	  ourselves.
	* README.adoc: Remove a couple of end-of-line spaces
	* README.adoc, docs/chunked.xsl, docs/download.txt, docs/support.txt:
	  Make cross references work in both GitHub and generated docs
	  Substitute the shorthand '<< >>' syntax with attributes that
	  conditionally expand to: - links on GitHub (references can point at
	  most to a section of level docs/common.xsl's
	  <chunk.section.depth>), - xref macros when generating docs.  In
	  order to achieve the result, 'chunked' docs get now their pages
	  named after IDs. So, update all the links that use the old
	  auto-generated names.  Reference:
	  https://github.com/networkupstools/nut/pull/226
	* README.adoc: Make links to docs/manpages work in both GitHub and
	  generated docs  Since GitHub doesn't allow custom macros, only use
	  ours when generating docs, replacing their occurrences with
	  attributes that produce links when on GitHub. This approach should
	  work properly as long as we use them in contexts where attributes
	  are evaluated and substituted before macros.  Also, use a common
	  attribute that points to the URL of the website.  Reference:
	  https://github.com/networkupstools/nut/pull/226
	* README.adoc: Make nutdrv_qx the 'generic device driver' for Q*
	  protocols  As the link was still pointing to the old -no longer
	  generated- 'blazer' manpage, take the chance to reword the
	  paragraph so that it points to the new nutdrv_qx driver.

2015-08-23  Charles Lepple <clepple+nut@gmail.com>

	* drivers/solis.c: solis: Add upsdebug*() and upslogx() calls for
	  diagnostics

2015-08-22  Mariano <marianojan@users.noreply.github.com>

	* drivers/nutdrv_qx_voltronic-qs-hex.c: nutdrv_qx: add support for
	  LYONN CTB-800V  Small protocol validation change in
	  'voltronic-qs-hex' subdriver to add support for the protocol used
	  by the LYONN CTB-800V UPS.

2015-08-18  Kenny Root <kenny@the-b.org>

	* drivers/powerware-mib.c: Add ups.start.auto for Powerware SNMP  Use
	  the IETF UPS MIB to indicate to Powerware devices that it should
	  restart when mains power is applied.
	* drivers/powerware-mib.c: Fix some indentation problems in PowerWare
	  SNMP
	* drivers/powerware-mib.c: Add shutdown.return for Powerware SNMP
	  The Powerware MIB supports the concept of shutting down with a
	  delay and then returning when line power is restored. The delay is
	  set to 0 seconds currently.
	* drivers/powerware-mib.c: Add load.{off,on}.delay for Powerware SNMP
	  The commands to shut down with delay have existed since the first
	  version of the Powerware MIB so add the newer commands
	  "load.off.delay" and "load.on.delay" to aid in shutdown scripts.

2015-08-07  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/dummy-ups.c, drivers/dummy-ups.h: Fix dummy-ups for
	  external value changes  dummy-ups allow to change the values of the
	  publicated variables through the standard upsrw tool. This method
	  is handy to script value changes, in a controlled way, compared to
	  the dynamic version (using the TIMER keyword in .dev files), which
	  changes the values in a non controlled way. Bump driver version to
	  0.14
	* m4/nut_check_libnss.m4: Fully check for a working Mozilla NSS
	  Rework the NSS tests so that just having runtime libraries
	  installed is not enough. Moreover, since GNU libc6 also provides a
	  nss.h header, the test now checks for both nss.h and ssl.h  Closes
	  networkupstools/nut#184
	* docs/download.txt: Fix Red Hat / Fedora packages repository URL

2015-08-06  Charles Lepple <clepple+nut@gmail.com>

	* README.adoc: Remove some old compatibility information from the
	  README
	* Makefile.am, README => README.adoc, configure.ac, docs/Makefile.am,
	  docs/user-manual.txt: Rename README with extension for AsciiDoc and
	  update references to it  Also: - add 'foreign' to AM_INIT_AUTOMAKE
	  macro so that automake doesn't fail as a consequence of the lack of
	  a 'README' file (since we now have 'README.adoc'); - make sure
	  README.adoc is distributed.
	* README.adoc: Remove some old compatibility information from the
	  README
	* README => README.adoc: Rename README with extension for AsciiDoc

2015-08-04  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-scanner/scan_snmp.c: Fix a crash on a 2nd call to
	  libnutscan  on behalf of Tomas Halman, from Eaton Opensource Team

2015-08-03  Tomas Halman <TomasHalman@eaton.com>

	* clients/nutclient.cpp: Problem: nutclient library sometimes reads
	  socket closed by server. Solution: proper read return value
	  evaluation

2015-07-27  Daniele Pezzini <hyouko@gmail.com>

	* common/common.c, common/str.c, drivers/bcmxcp.c, drivers/blazer.c,
	  drivers/blazer_ser.c, drivers/blazer_usb.c, drivers/libhid.c,
	  drivers/mge-xml.c, drivers/nutdrv_qx.c, drivers/powerp-bin.c,
	  drivers/powerp-txt.c, drivers/powerpanel.c, drivers/tripplitesu.c,
	  drivers/upscode2.c, include/common.h, include/str.h, server/upsd.c,
	  tools/nut-scanner/scan_usb.c: common: consolidate some
	  string-related functions  Move *trim*() functions from common to
	  str. Prepend the 'str_' common prefix. Bailout early if string is
	  NULL or empty. In *trim_m() functions, make sure the string
	  containing characters to be removed is not NULL and bailout early
	  if empty. Add new str_trim[_m]() functions to remove both leading
	  and trailing characters at the same time. Update all the tree
	  accordingly; versioning where appropriate.
	* common/Makefile.am, common/str.c, include/Makefile.am,
	  include/common.h, include/str.h: common: add some string-related
	  functions

2015-07-24  Tim Smith <tsmith84@gmail.com>

	* INSTALL.nut: Spelling fixes  Spelling fixes and capitalization of
	  SUSE

2015-07-24  Nash Kaminski <nashkaminski@gmail.com>

	* drivers/tripplitesu.c: tripplitesu: Fix initialization when
	  tripplite firmware is buggy  With some Tripplite SU1000RT2U (and
	  possibly more) UPS's, a firmware bug causes a malformed response to
	  the very first command that is sent after the serial port is opened
	  following a warm or cold boot of the system. My theory is that this
	  related to either the RS232 data lines or handshaking lines being
	  pulled high once the server's UART is powered however I have not
	  determined precisely if this is related to the data line being
	  pulled high or the handshaking lines being asserted. However, I
	  have been able to consistently reproduce the issue where the driver
	  fails to start on the first attempt after a cold/warm boot across 3
	  different machines and 2 SU1000RT2U UPS's. To workaround this, the
	  initial enumeration is repeated a 2nd time after 300ms(to allow all
	  garbage data to arrive) if the first attempt fails, which allows
	  the driver to consistently startup successfully on the 1st attempt.
	  Closes networkupstools/nut#220

2015-07-23  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/augeas/nutupsconf.aug.tpl: Update Augeas lens for ups.conf
	  Add the various missing global directives and ups fields

2015-07-20  Daniele Pezzini <hyouko@gmail.com>

	* data/driver.list.in: HCL: fix case and spacing

2015-07-18  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: when targeting 'UPS No Ack'
	  consider also the trailing CR  In 'fabula' and 'krauler' USB
	  subdrivers, take into account also the trailing CR in the reply
	  while looking for a 'UPS No Ack'.
	* drivers/nutdrv_qx.c: nutdrv_qx: stay true to return code in
	  'fabula' USB subdriver  In 'fabula' USB subdriver, when reading
	  'UPS No Ack' from device, since we already mimic a timeout, also
	  empty the reply.

2015-07-11  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Fideltronic INIGO Viper 1200 supported by
	  nutdrv_qx

2015-07-02  Charles Lepple <clepple+nut@gmail.com>

	* drivers/usbhid-ups.c: usbhid-ups: bump version to 0.41  Both the
	  eaton_dual_reportdesc and usbhid_ups_input_vs_feature branches
	  claimed version 0.40, so let's disambiguate the merged version.

2015-07-02  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/libhid.c: Add a debug trace for the number of HID objects
	  found
	* drivers/hidtypes.h: Fix testing typo  MAX_REPORT is really 500 (HID
	  objects), not 50!
	* drivers/hidparser.c: Report when there are further unprocessed HID
	  objects  Following the last commits, and especially the MAX_REPORT
	  one, warn whenever there are remaining HID objects that were not
	  processed. This may serve
	* drivers/hidtypes.h: Increase the maximum number of HID objects  The
	  previous value (300) was causing a trim of the remaining objects.
	  Increase the value to 500, which should give a bit of time
	* drivers/libshut.c, drivers/libshut.h, drivers/libusb.c,
	  drivers/usb-common.h, drivers/usbhid-ups.c: Add support for Eaton
	  dual HID report descriptor  All devices use HID descriptor at index
	  0. However, some newer Eaton units have a light HID descriptor at
	  index 0, and the full version is at index 1 (in which case,
	  bcdDevice == 0x0202). This dual report descriptor approach is due
	  to the fact that the main report descriptor is now too heavy, and
	  cause some BIOS to hang. A light version is thus provided at the
	  default index, solving this BIOS issues

2015-06-27  Charles Lepple <clepple+nut@gmail.com>

	* drivers/macosx-ups.c: macosx-ups: fix for 10.10 (Yosemite); v1.1
	  In OS X 10.9 and earlier, IOPSGetPowerSourcesInfo() returned a
	  CFDictionary. In 10.10 it returns a CFArray. Programmers are
	  supposed to use IOPSGetPowerSourceDescription() to gloss over this
	  distinction.  However, this does not make it easy to distinguish
	  between a laptop battery and an UPS. So the "port" driver option no
	  longer has any effect.
	  https://developer.apple.com/library/mac/documentation/IOKit/Reference/IOPowerSources_header_reference/#//apple_ref/c/func/IOPSGetPowerSourceDescription

2015-06-22  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/upower/95-upower-hid.rules, tools/nut-usbinfo.pl: Update
	  UPower HID rules and generator

2015-06-11  Charles Lepple <clepple+nut@gmail.com>

	* drivers/usbhid-ups.c: usbhid-ups.c: fall back to HID Input type if
	  not a Feature

2015-06-07  Charles Lepple <clepple+nut@gmail.com>

	* drivers/tripplite-hid.c: tripplite-hid.c: device.part is static
	  (version 0.82)

2015-06-04  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: make sure processed item's
	  boundaries are not wrong
	* docs/nutdrv_qx-subdrivers.txt, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx.h: nutdrv_qx: remove redundant comments and
	  update docs

2015-06-01  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/snmp-ups.txt, drivers/snmp-ups.c, drivers/snmp-ups.h:
	  Provide access to Net-SNMP timeout and retries  Two new extra
	  arguments are now available to allow overriding Net-SNMP number of
	  retries (snmp_retries) and timeout per retry (snmp_timeout). These
	  respectively maps to snmpcmd "-r retries" and "-t timeout"

2015-05-29  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/upower/95-upower-hid.rules: Update UPower HID rules
	* tools/nut-usbinfo.pl: Fix UPower device matching for recent kernels
	  As per the UPower patch below referenced, hiddev* devices now have
	  class "usbmisc", rather than "usb".  See
	  http://cgit.freedesktop.org/upower/commit/rules/95-upower-hid.rules?id=9f31068707fc79744961cea7258b0eb262effbf1

2015-05-28  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-display.c,
	  tools/nut-scanner/nutscan-init.c, tools/nut-scanner/nutscan-init.h,
	  tools/nut-scanner/nutscan-ip.c, tools/nut-scanner/nutscan-ip.h,
	  tools/nut-scanner/nutscan-serial.c,
	  tools/nut-scanner/nutscan-serial.h, tools/nut-scanner/scan_avahi.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-scanner/scan_xml_http.c: Fix legal information on
	  source-code headers  Copyright and author were not mentioned as it
	  should be. Most of the nut-scanner copyright belongs to EATON,
	  apart from few parts. Files descriptions are now also in Doxygen
	  format

2015-05-18  Daniele Pezzini <hyouko@gmail.com>

	* docs/nutdrv_qx-subdrivers.txt, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx.h, drivers/nutdrv_qx_bestups.c,
	  drivers/nutdrv_qx_mecer.c, drivers/nutdrv_qx_megatec-old.c,
	  drivers/nutdrv_qx_megatec.c, drivers/nutdrv_qx_mustek.c,
	  drivers/nutdrv_qx_q1.c, drivers/nutdrv_qx_voltronic-qs-hex.c,
	  drivers/nutdrv_qx_voltronic-qs.c, drivers/nutdrv_qx_voltronic.c,
	  drivers/nutdrv_qx_zinto.c: nutdrv_qx: give subdrivers a last chance
	  to process the command  Add (and document) a new function
	  ('preprocess_command()') to preprocess the command to be sent to
	  the device, just before the actual sending and, in case of instant
	  commands/setvars, after the 'preprocess()' function has been
	  triggered (if appropriate). As an example, this function can be
	  useful to add to all commands (both queries and instant
	  commands/setvars) a CRC or to fill the command of a query with some
	  data. Also, in qx_process(), address buf size vs item->answer size
	  earlier. Update all subdrivers accordingly, bump versions.
	* docs/nutdrv_qx-subdrivers.txt, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx.h, drivers/nutdrv_qx_bestups.c,
	  drivers/nutdrv_qx_blazer-common.c,
	  drivers/nutdrv_qx_blazer-common.h, drivers/nutdrv_qx_mecer.c,
	  drivers/nutdrv_qx_megatec-old.c, drivers/nutdrv_qx_megatec.c,
	  drivers/nutdrv_qx_mustek.c, drivers/nutdrv_qx_q1.c,
	  drivers/nutdrv_qx_voltronic-qs-hex.c,
	  drivers/nutdrv_qx_voltronic-qs.c, drivers/nutdrv_qx_voltronic.c,
	  drivers/nutdrv_qx_zinto.c: nutdrv_qx: make preprocessed value's
	  size_t a const  There's no need to intervene on the
	  passed-to-the-function value of a preprocessed value's size_t, so
	  clarify it is a const. Update all subdrivers accordingly, bump
	  versions.
	* drivers/nutdrv_qx.c: nutdrv_qx: make sure an answer is not reused
	  if preprocess_answer() fails  If an item's preprocess_answer()
	  function fails, the answer should not be considered valid and
	  inherited by the following items with the same command. Therefore,
	  on failure, clear the answer so that the following items are forced
	  to query the device and preprocess the answer anew, if appropriate.

2015-05-13  Arnaud Quette <arnaud.quette@free.fr>

	* docs/download.txt: Update NUT packages for Windows to 2.6.5-6

2015-05-07  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/systemd/nut-server.service.in: Restore systemd relationship
	  with nut-driver service  The Requires directive from nut-server to
	  nut-driver was previously removed, since it was preventing upsd
	  from starting whenever one or more drivers, among several, was
	  failing to start. Use the Wants directive, a weaker version of
	  Requires, which will start upsd even if the nut-driver unit fails
	  to start.  closes https://github.com/networkupstools/nut/issues/200

2015-04-28  Nick Mayerhofer <nick.mayerhofer@enchant.at>

	* drivers/nutdrv_qx_voltronic.c: nutdrv_qx: move var declaration in
	  'voltronic' subdriver  Move variable declaration to fulfill
	  condition '3.3. Portability' of the developer guide. Bump version.
	* drivers/libhid.c: libhid: replace "flush loop" with memset  Move to
	  the C way of setting memory (memset), replacing a for loop with a
	  few anti-patterns in it: - for (...; ; i++) - for (...; i <
	  MAGIC_NUMBER; ...) - for (...) array[i] = 0

2015-04-26  Nick Mayerhofer <nick.mayerhofer@enchant.at>

	* docs/nutdrv_qx-subdrivers.txt, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx.h: nutdrv_qx: improve documentation for some
	  methods

2015-04-23  Arnaud Quette <arnaud.quette@free.fr>

	* Makefile.am: Cleanup GPG signature before generation

2015-04-22  Arnaud Quette <arnaud.quette@free.fr>

	* configure.ac: bump version back to 2.7.3.1
	* configure.ac: Restore version 2.7.3 for release
	* docs/security.txt: Missing link reference update  The filename of
	  the previous GPG release key was not updated, leading to pointing
	  to the current release key

2015-04-16  Arnaud Quette <arnaud.quette@free.fr>

	* configure.ac: bump version to 2.7.3.1

2015-04-15  Arnaud Quette <arnaud.quette@free.fr>

	* configure.ac: update version to 2.7.3
	* docs/security.txt: Update release signature verification  The
	  release manager key has change. Update the documentation to reflect
	  it, along with keeping necessary for checking the previous releases
	* docs/download.txt: Fix formatting issue
	* NEWS, UPGRADING: Final update for release 2.7.3  Complete the
	  release information for NUT 2.7.3
	* docs/maintainer-guide.txt: Store some comments for latter
	  processing

2015-04-10  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/mge-hid.c: Improve Eaton ABM support for USB/HID units  As
	  per clarifications from David G. Miller (Eaton ABM expert) and
	  customers request, when ABM is enabled, we now both publish the
	  following as per the ABM information: - the 5 status bits
	  {charging, discharging, floating, resting, off} under
	  battery.charger.status - the 2 historical status bits {CHRG,
	  DISCHRG} under ups.status When ABM is disabled, we just publish the
	  2 historical status bits {CHRG, DISCHRG} under ups.status, as per
	  UPS.PowerSummary.PresentStatus.{Charging,Discharging}, as done
	  previously

2015-04-08  Nick Mayerhofer <nick.mayerhofer@enchant.at>

	* docs/nutdrv_qx-subdrivers.txt, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx.h: nutdrv_qx: clarify docs/inline comments

2015-04-07  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/systemd/nut-server.service.in: Do not Require systemd
	  nut-driver for nut-server  Put the Requires=nut-driver.service in
	  comment for nut-server systemd unit file. Thus we don't require
	  drivers to be successfully started! This was a change of behavior
	  compared to init SysV, and could prevent from accessing
	  successfully started drivers, or at least to audit a system
	  Closes: https://github.com/networkupstools/nut/issues/200

2015-04-04  Émilien Kia <emilien.kia@gmail.com>

	* server/upsd.c: Initialize SSL after deamonize and downgrade to
	  user.  Fix issue #190 - upsd: NSS SSL only working in debug mode
	  https://github.com/networkupstools/nut/issues/190

2015-04-04  Charles Lepple <clepple+nut@gmail.com>

	* UPGRADING: mention SSL permissions (#199)
	* docs/security.txt: NSS SSL documentation  Addresses new behavior as
	  part of the NSS forking fix (#199). Formatting and wording fixed as
	  well.

2015-04-02  Arnaud Quette <arnaud.quette@free.fr>

	* conf/ups.conf.sample, docs/man/ups.conf.txt, drivers/dstate.c,
	  drivers/dstate.h, drivers/main.c: Improve synchronous driver flag
	  implementation  The previous commit was suffering a number of
	  issues. The present commit fixes these, along with adding more
	  documentation and a better and more understandable implementation
	  code. Thanks to Daniele Pezzini for the thorough review  Closes:
	  https://github.com/networkupstools/nut/issues/197
	* drivers/eaton-mib.c: Better input.realpower handling for Eaton
	  ePDUs G2/G3  Improve the way we declare and process
	  input.realpower, in order to address the variations between Eaton
	  ePDUs G2 and G3

2015-04-01  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/ups.conf.txt, drivers/dstate.c, drivers/dstate.h,
	  drivers/main.c: Implement synchronous driver flag  As per issue
	  #197, NUT drivers work by default in asynchronous mode. This means
	  that all data are pushed by the driver on the communication socket
	  to upsd (Unix socket on Unix, Named pipe on Windows) without
	  waiting for these data to be actually consumed.  With some HW, such
	  as ePDUs, that can produce a lot of data, asynchronous mode may
	  cause some congestion, resulting in the socket to be full, and the
	  driver to appear as not connected.  By enabling the 'synchronous'
	  flag, the driver will wait for data to be consumed by upsd, prior
	  to publishing more.  This can be enabled either globally or per
	  driver.
	* drivers/eaton-mib.c: Workaround input.{power,realpower} for Eaton
	  ePDUs  Add variable declarations to handle missing
	  input.{power,realpower} on Eaton ePDUs G2 and G3 1phase. On 3phase,
	  these variables point at SNMP OIDs that sum up the 3 phases
	  information. These OIDs should also be present on 1phase, however
	  it's actually not the case. So simply duplicate the L1 declaration

2015-03-31  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/powerware-mib.c: Implement battery.charger.status for Eaton
	  SNMP  This new official variable now replaces the historic
	  'vendor.specific.abmstatus', as per other similar implementations
	  (in usbhid-ups and bcmxcp drivers)

2015-03-27  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/mge-hid.c: Implement Eaton ABM support for USB/HID units
	  Add support for Eaton Advanced Battery Monitoring, for USB/HID
	  units. Information are provided through the new
	  battery.charger.status. For now, at least, when ABM is enabled, the
	  historic CHRG and DISCHRG flags are not published anymore in
	  ups.status

2015-03-26  Stuart Henderson <stu@spacehopper.org>

	* data/driver.list.in, docs/man/snmp-ups.txt,
	  docs/snmp-subdrivers.txt, drivers/Makefile.am,
	  drivers/huawei-mib.c, drivers/huawei-mib.h, drivers/snmp-ups.c:
	  snmp-ups: new subdriver for Huawei  "Hi, the [commit] below adds a
	  new subdriver for snmp-ups to support Huawei UPS, based on an
	  observed walk from a UPS5000-E with a few bits filled in from the
	  MIBs (copy at http://junkpile.org/HUAWEI_UPS_MIB/)."
	  http://news.gmane.org/find-root.php?message_id=slrnmh6npf.tg7.stu%40naiad.spacehopper.org

2015-03-25  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx_voltronic.c: nutdrv_qx: add support in
	  'voltronic' subdriver for P13 protocol

2015-03-24  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/mge-hid.c: Complementary Energy Saving data for Eaton USB
	  devices  Add a 2nd HID path for battery.energysave.delay. Depending
	  on the exact device model, different implementations may be used

2015-03-22  Daniele Pezzini <hyouko@gmail.com>

	* NEWS: nutdrv_qx: update NEWS about new 'fuji' USB subdriver

2015-03-21  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c, drivers/nutdrv_qx.h: nutdrv_qx: typedef
	  testing_t only if TESTING is #defined  First reported by GitHub
	  user @nickma82
	* docs/man/nutdrv_qx.txt, docs/nutdrv_qx-subdrivers.txt: nutdrv_qx:
	  document 'voltronic-qs-hex' subdriver in man pages
	* docs/man/nutdrv_qx.txt, drivers/nutdrv_qx_bestups.c,
	  drivers/nutdrv_qx_blazer-common.c,
	  drivers/nutdrv_qx_blazer-common.h, drivers/nutdrv_qx_mecer.c,
	  drivers/nutdrv_qx_megatec-old.c, drivers/nutdrv_qx_megatec.c,
	  drivers/nutdrv_qx_mustek.c, drivers/nutdrv_qx_q1.c,
	  drivers/nutdrv_qx_voltronic-qs-hex.c,
	  drivers/nutdrv_qx_voltronic-qs.c, drivers/nutdrv_qx_zinto.c:
	  nutdrv_qx: add 'ignoresab' flag to support bogus devices  Some
	  UPSes incorrectly report the 'Shutdown Active' bit (7th bit of the
	  'status byte') as always on (=1), consequently making the driver
	  believe the UPS is nearing a shutdown (and, as a result, ups.status
	  always contains FSD). To workaround this issue, add a new
	  'ignoresab' flag that makes the driver do just what its name tells
	  (IGNORE Status Active Bit) skipping the relative item in qx2nut
	  tables.  References: -
	  http://lists.alioth.debian.org/pipermail/nut-upsdev/2015-March/006896.html
	  - https://github.com/networkupstools/nut/issues/195

2015-03-19  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut-names.txt: Document new variables and commands addition
	  The variables and commands that were added were not described in
	  the NUT namespace document. These are: input.transfer.delay -
	  battery.energysave.load - battery.energysave.delay -
	  battery.charger.status - outlet.1.shutdown.return -
	  outlet.2.shutdown.return
	* drivers/bcmxcp.c: Fix the letter case of ABM and outlets status
	  For more coherence with NUT status publication, these status are
	  now lower case
	* drivers/bcmxcp.c: Add missing Author
	* data/cmdvartab, docs/nut-names.txt, drivers/mge-hid.c: Add more
	  Energy Saving features for Eaton USB devices  Add two new Energy
	  Saving features: - battery.energysave.delay: to configure the delay
	  before switching off the UPS if running on battery and load level
	  low (in minutes) - battery.energysave.realpower: to switch off the
	  UPS if running on battery and power consumption on UPS output is
	  lower than this value (expressed in Watts). Note that documentation
	  in nut-names.txt and cmdvartab was limited to difference with an
	  upcoming branch merge, that will add the others
	* drivers/mge-hid.c: Align Energy Saving variable names  Change
	  ups.load.energysave to battery.energysave.load, to be coherent with
	  the latest commit made in the bcmxcp driver
	* tools/Makefile.am: Also distribute nut-ddl-dump.sh helper script

2015-03-18  Daniele Pezzini <hyouko@gmail.com>

	* data/driver.list.in: HCL: EUROCASE EA200N 2000VA supported by
	  nutdrv_qx  Protocol: 'megatec' USB subdriver: 'fuji'  Reference:
	  http://thread.gmane.org/gmane.comp.monitoring.nut.user/8808/focus=9081
	* drivers/nutdrv_qx_bestups.c, drivers/nutdrv_qx_blazer-common.c,
	  drivers/nutdrv_qx_mecer.c, drivers/nutdrv_qx_megatec-old.c,
	  drivers/nutdrv_qx_megatec.c, drivers/nutdrv_qx_mustek.c,
	  drivers/nutdrv_qx_q1.c, drivers/nutdrv_qx_voltronic-qs-hex.c,
	  drivers/nutdrv_qx_voltronic-qs.c, drivers/nutdrv_qx_zinto.c:
	  nutdrv_qx: remove redundancy in blazer-common-dependent subdrivers
	  Since main nutdrv_qx driver already sets an alarm when FSD arises
	  (see nutdrv_qx.c>ups_alarm_set()), there is no need to do so in the
	  various subdrivers. So, in order to prevent a duplicated alarm
	  message, remove all unneeded code from the affected subdrivers (all
	  the ones that depend on nutdrv_qx_blazer-common).

2015-03-17  Daniele Pezzini <hyouko@gmail.com>

	* data/driver.list.in: HCL: update Mecer ME-1000-WTU (supported by
	  nutdrv_qx)  Tested by @sliverc (Oliver Sauder) on NUT 2.7.1
	  Reference: https://github.com/networkupstools/nut/issues/148

2015-03-16  Daniele Pezzini <hyouko@gmail.com>

	* docs/man/nutdrv_qx.txt: nutdrv_qx: document USB subdrivers'
	  glitches
	* drivers/nutdrv_qx.c: nutdrv_qx: add workaround in 'fuji' subdriver
	  to support all shutdown.returns  As 'fuji' subdriver discards all
	  the commands of more than 3 characters, in order to support 'SnRm'
	  shutdown.returns (and hence the standard 'S.5R0003' shutdown.return
	  with DEFAULT_{ON,OFF}DELAYs) map 'SnRm' shutdown.returns to the
	  corresponding 'Sn' commands, meanwhile ignoring ups.delay.start and
	  making the UPS turn on the load as soon as power is back.
	* drivers/nutdrv_qx.c: nutdrv_qx: fix command handling in 'fuji'
	  subdriver  'fuji' subdriver supported devices only allow one 8
	  bytes interrupt as a command/query: make the subdriver discard (and
	  echo back) all the too long commands.

2015-03-15  Charles Lepple <clepple+nut@gmail.com>

	* docs/developers.txt, docs/new-drivers.txt: doc: document build
	  dependencies, etc.  Closes:
	  https://github.com/networkupstools/nut/issues/189
	* docs/nutdrv_qx-subdrivers.txt: doc: fold a few long preformatted
	  lines in nutdrv_qx developer guide
	* docs/FAQ.txt: docs: FAQ update  This addresses several issues: *
	  https://github.com/networkupstools/nut/issues/19 *
	  https://github.com/networkupstools/nut/issues/191  and  Closes:
	  https://github.com/networkupstools/nut/issues/161
	* docs/man/Makefile.am: docs/man: provide additional detail for
	  missing asciidoc/a2x error
	* configure.ac: configure: indicate required version of
	  Asciidoc/A2X/dblatex  Still doesn't address data-only packages like
	  docbook-xsl, so leaving this issue open.  Reference:
	  https://github.com/networkupstools/nut/issues/162
	* docs/Makefile.am, docs/man/Makefile.am: Pass --nonet to xsltproc
	  This prevents xsltproc from downloading DocBook XSL files for each
	  step in the documentation build process.  Reference:
	  https://github.com/networkupstools/nut/issues/172  Still need to
	  document what to do if the build fails.

2015-03-11  Arnaud Quette <arnaud.quette@free.fr>

	* data/cmdvartab, docs/nut-names.txt: Add some new variable names,
	  related to ePDUs  Add new variables names, related to ePDUs, such
	  as input.*.load, input.*.realpower and input.*.power
	* drivers/eaton-mib.c: Minor update to comments

2015-03-10  Arnaud Quette <arnaud.quette@free.fr>

	* data/cmdvartab, drivers/mge-hid.c: Add a new EnergySaving threshold
	  for Eaton UPSs  Add 'ups.load.energysave' parameter, to enable
	  energy saving when the power consumption on the UPS output drops
	  below this value (in percent). This new variable however requires
	  to go through the NUT RFC process to get approved
	* docs/documentation.txt: Reference DDL on the Documentation page
	  Add a reference to the NUT Devices Dumps Library (DDL) on the
	  Documentation page, both for the website and the distributed
	  documentation. There are separate references, to distinguish the
	  DDL interest from a user and a developer point of view

2015-03-06  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-ddl-dump.sh: First stab at a helper script to generate
	  device dumps  This preliminary version only generates .dev (static)
	  dump files. However, a merge with nut-recorder.sh, which generates
	  .seq files (dynamic simulation) is to be considered, along with an
	  improved version for the newer .nds format

2015-03-04  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: increase verbosity of 'sgs' USB
	  subdriver  In 'sgs' USB subdriver: - be more verbose when
	  debugging, - always print the return code when dealing with an
	  error.

2015-02-24  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: CPS Value 1500ELCD-RU @ 2.6.3  Source:
	  http://news.gmane.org/find-root.php?message_id=1423241134.6830.8.camel%40ignatev
	* data/driver.list.in: HCL: JAWAN JW-UPSLC02 with blazer_usb @ 2.7.2
	  Source:
	  http://news.gmane.org/find-root.php?message_id=SNT404%2dEAS8312A94DDAF0FAD4B7702BA52A0%40phx.gbl

2015-02-22  Charles Lepple <clepple+nut@gmail.com>

	* scripts/python/app/NUT-Monitor, scripts/python/app/gui-1.3.glade:
	  NUT-Monitor: updated version to 1.3.1

2015-02-14  Michal Soltys <soltys@ziu.info>

	* drivers/apcsmart.c: apcsmart: fix SEGV in apc_getcaps()  ups ...

2015-02-14  Michael Fincham <michael.fincham@catalyst.net.nz>

	* scripts/python/app/NUT-Monitor: Correct unsafe permissions on
	  ~/.nut-monitor (Debian #777706)  fix-permissions-on-start.debdiff
	  from https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=777706#24
	  Closes: https://github.com/networkupstools/nut/issues/185

2015-02-14  Daniele Pezzini <hyouko@gmail.com>

	* docs/man/nutdrv_qx.txt: nutdrv_qx: specify 'bestups' ranges in man
	  pages

2015-02-14  Charles Lepple <clepple+nut@gmail.com>

	* NEWS, UPGRADING: NEWS/UPGRADING for 2.7.3

2015-02-13  Michal Soltys <soltys@ziu.info>

	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: fix command set
	  parsing for protocol version 4  The issue was discovered with
	  Smart-UPS RT 10000 XL by surr, see
	  https://github.com/networkupstools/nut/issues/180  When protocol
	  version is 4, command set query returns string with additional
	  section after another '.' .  This patch updates the code to handle
	  such string as well.

2015-02-10  Charles Lepple <clepple+nut@gmail.com>

	* configure.ac: bump version to 2.7.2.6 for snapshots
	* scripts/upower/95-upower-hid.rules: upower: regenerate for Powercom
	  PID 0001 (PR #121)
	* configure.ac: add bug report URL  Should be compatible with
	  Autoconf 2.59 and newer.

2015-02-04  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/eaton-mib.c: Fix outlet.{power,realpower} data mapping
	  According to the new mapping using the input collection, these two
	  data mapping were targeting at the wrong OIDs.
	* drivers/netvision-mib.c: Improve support for on-battery detection
	  Add support for upsAlarmOnBattery OID, to better detect on-battery
	  events (reported by Henning Fehrmann)
	* drivers/libhid.c, drivers/libhid.h: Fix compilation warning related
	  to sign comparison

2015-02-03  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/eaton-mib.c: Fix and complete a bit Eaton ePDUs support
	  Add some new data mapping to improve support for Eaton ePDUs. This
	  commit includes some new NUT data names that requires approval
	  before being merged

2015-01-31  Ryan Underwood <nemesis@icequake.net>

	* drivers/apc-hid.c, scripts/upower/95-upower-hid.rules: Add a
	  product ID for APC AP9584 USB kit.  Resolves
	  networkupstools/nut#181

2015-01-12  Charles Lepple <clepple+nut@gmail.com>

	* scripts/upower/95-upower-hid.rules: upower: regenerate rules file
	  for OpenUPS PID 0xd005
	* Makefile.am: Add systemd unit dir fix for 'make distcheck'

2015-01-11  Sergey Kvachonok <ravenexp@gmail.com>

	* configure.ac: Undo ${systemdsystemunitdir} mangling.  Running sed
	  's/\/lib/\${libdir}/' destroys any ${systemdsystemunitdir} values
	  that don't start with '/lib' e.g. '/usr/lib64/systemd/system'
	  becomes '/usr/usr/lib6464/systemd/system'.  If a local installation
	  prefix is needed use appropriately prefixed
	  --with-systemdsystemunitdir='' parameter instead.

2015-01-03  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx_bestups.c: nutdrv_qx: bestups - add support for
	  'M' query

2015-01-02  Charles Lepple <clepple+nut@gmail.com>

	* docs/cables.txt, docs/config-notes.txt, docs/configure.txt,
	  docs/features.txt, docs/history.txt, docs/man/nutdrv_qx.txt,
	  docs/nut-names.txt, docs/scheduling.txt, docs/security.txt: docs:
	  typo fixes

2015-01-01  Charles Lepple <clepple+nut@gmail.com>

	* docs/cables.txt: docs: MGE NMC pinout  Closes
	  https://github.com/networkupstools/nut/issues/141
	* docs/cables.txt: docs: Best Power cable pinout  Closes
	  https://github.com/networkupstools/nut/issues/164
	* INSTALL.nut: docs: clarify group ownership of directory in
	  INSTALL.nut  Closes
	  https://github.com/networkupstools/nut/issues/151
	* docs/man/dummy-ups.txt: docs: dummy-ups repeater mode requires `@`
	  in port name  Also reworded parts of the man page.

2014-12-17  bsalvador <bruno.salvador@gmail.com>

	* drivers/solis.c: Update solis.c to force ScanReceivePack()

2014-12-12  Andy Juniper <ajuniper@freeuk.com>

	* clients/upslog.c, docs/man/upslog.txt: upslog: break out of sleep
	  on SIGUSR1 and log immediately  Reference:
	  http://news.gmane.org/find-root.php?message_id=54863D44.3000902%40freeuk.com

2014-11-25  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: additional NHS models

2014-11-17  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: NHS Sistemas de Energia: Expert C
	  Isolador series  Source:
	  http://news.gmane.org/find-root.php?message_id=CADe06rfE5MA%3dyWDZzofPsC7TOgGOU4TRSoi67uMXedymA9L7ow%40mail.gmail.com

2014-11-08  Daniele Pezzini <hyouko@gmail.com>

	* docs/man/nutdrv_qx.txt: nutdrv_qx: update man for the new 'fabula'
	  and 'fuji' USB subdrivers

2014-11-07  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/subdriver/gen-snmp-subdriver.sh: Various minor fixes to the
	  SNMP subdriver generator

2014-11-06  Charles Lepple <clepple+nut@gmail.com>

	* drivers/openups-hid.c: openups-hid: Fix scale factors for 0xd005
	  (0.4)  Previous commit had extra scale factors applied.
	* drivers/openups-hid.c, drivers/openups-hid.h: openups-hid: voltage
	  scale factors based on product IDs
	* drivers/openups-hid.c: openups-hid: remove a const; this will
	  require more thought  The USB matching routines should have their
	  parameters marked as "const" to indicate that they do not modify
	  the matching tables, but that will require more invasive changes.
	  Roll this back for now.

2014-11-05  Charles Lepple <clepple+nut@gmail.com>

	* drivers/openups-hid.c: openups-hid: const and float/double fixups
	  (0.2)
	* drivers/openups-hid.c: openups-hid: add USB ProductID d005 for
	  OpenUPS2

2014-11-05  Arnaud Quette <arnaud.quette@free.fr>

	* Makefile.am: Store the git start point as a variable  For
	  ChangeLog, we now store the git start point (older reference) in a
	  separate variable, to make the process more clear

2014-11-02  Daniele Pezzini <hyouko@gmail.com>

	* docs/man/nutdrv_qx.txt, docs/nutdrv_qx-subdrivers.txt: nutdrv_qx:
	  update man pages for new 'bestups' subdriver
	* drivers/Makefile.am, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_bestups.c, drivers/nutdrv_qx_bestups.h:
	  nutdrv_qx: add BestUPS subdriver (protocol=bestups)  A subdriver
	  using Best Power/Sola Australia protocol as described in
	  http://www.networkupstools.org/protocols/sola.html Based also on
	  bestups.c and meant to eventually replace it.

2014-10-31  Charles Lepple <clepple+nut@gmail.com>

	* docs/download.txt: Update VMware ESXi package link (from René
	  Garcia)

2014-10-29  Charles Lepple <clepple+nut@gmail.com>

	* scripts/upower/95-upower-hid.rules: upower: Update Belkin and
	  Liebert rules  Follow-up to issue #159.
	* drivers/belkin-hid.c, drivers/liebert-hid.c: usbhid-ups: comments
	  describing Belkin/Liebert/Phoenixtec situation  Follow-up to issue
	  #159.
	* data/driver.list.in: HCL: Rucelf UPOII-3000-96-EL supported by
	  blazer_ser  Manufacturer:
	  http://www.rucelf.ua/en/catalog/upoii-3000-96-el/  Closes:
	  https://github.com/networkupstools/nut/issues/165

2014-10-28  Elio Parisi <E.Parisi@riello-ups.com>

	* drivers/riello_usb.c: riello_usb: explicitly claim USB interface
	  Reference:
	  http://news.gmane.org/find-root.php?message_id=7731ed2f98014b8a90e695a06d077970%40AM3PR07MB289.eurprd07.prod.outlook.com
	  and https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=738122

2014-10-20  Nik Soggia <nut@niksoggia.it>

	* drivers/Makefile.am: missing -lm in drivers/Makefile.am  Both
	  bcmxcp and bcmxcp_usb use ldexp(), so both need `-lm`.
	  http://news.gmane.org/find-root.php?message_id=544515BA.4060804%40niksoggia.it

2014-10-20  Elio Parisi <E.Parisi@riello-ups.com>

	* drivers/riello_usb.c: riello_usb: timeouts and error handling
	  (0.03)  Small changes in riello_usb.c that solved some problem with
	  managing transmission errors between the Raspberry Pi and Riello
	  ups (thanks to Fredrik Öberg): introducing timeout in reading ups
	  data in cypress_command; enhanced handling error codes
	  http://news.gmane.org/find-root.php?message_id=f5294e5579574bcbaf5cdd95523e0b68%40AM3PR07MB289.eurprd07.prod.outlook.com
	* drivers/riello_ser.c: riello_ser: enhanced handling error codes
	  (0.03)

2014-10-20  Charles Lepple <clepple+nut@gmail.com>

	* docs/.gitignore: docs: docinfo.xml is now auto-generated

2014-10-10  gavrilov-i <gavrilov-i@users.noreply.github.com>

	* data/cmdvartab, drivers/bcmxcp.c, drivers/bcmxcp.h: drivers/bcmxcp:
	  advanced features  Closes: #158  Added setvar function exec result
	  parsing  Add command to turn load on after shutdown.stayoff and
	  shutdown.return.  Outlet control changed. Outlet control via
	  commands "outlet.n.load.on/off" like in other drivers. Variable
	  outlet.n.staus now only for reading.  Some code changes in
	  outlet.n.shutdown.return command -  now supporting more than 3
	  outlets (up to 9).  Add descriptions to new and some old variables
	  and commands.  Add "bypass.start" command, for enabling bypass. For
	  returning in On-Line mode exec "load.on" command.  Additional
	  checks of UPS vars. Now add zero var only if it could be changed.

2014-10-10  Paul Chavent <paul.chavent@onera.fr>

	* drivers/belkin-hid.c: drivers : add Liebert GXT3 device.
	* drivers/main.c: drivers : fix possible memory leak.  In arguments
	  parsing, if user option is passed.

2014-09-30  Michal Soltys <soltys@ziu.info>

	* drivers/apcsmart.c: apcsmart: increase passes in setvar_enum()
	  Current 6 is not enough for bigger units - especially if we swap to
	  the value directly preceeding the current setting.

2014-09-28  Arnaud Quette <arnaud.quette@free.fr>

	* docs/configure.txt: Clarify a bit more Avahi build requirements
	* tools/nut-scanner/Makefile.am: Don't reference subdir-object with
	  $(top_srcdir)  Replace references to objects in separate
	  directories that were using $(top_srcdir) by the expanded version
	  '../../'. The variable was otherwise part of the path, resulting in
	  build failures. This completes commit f8abb9b  Closes
	  networkupstools/nut#155
	* configure.ac: Explicitly use subdir-objects in automake init
	  Closes networkupstools/nut#155

2014-09-27  Daniele Pezzini <hyouko@gmail.com>

	* configure.ac, docs/Makefile.am, docs/docinfo.xml,
	  docs/docinfo.xml.in: docs: add NUT version number/date in PDF
	  documents  Reference:
	  https://github.com/networkupstools/nut/issues/150
	* docs/chunked.xsl, docs/common.xsl, docs/xhtml.xsl: docs: move
	  DocBook options common to html stylesheets to common.xsl
	* docs/Makefile.am, docs/common.xsl: docs: add NUT version
	  number/date into footer of HTML pages  Reference:
	  https://github.com/networkupstools/nut/issues/150

2014-09-27  Arnaud Quette <arno@arno-zbook15.euro.ad.etn.com>

	* docs/man/Makefile.am, docs/man/asciidoc.conf: Add NUT version
	  number into footer of HTML man pages  Override AsciiDoc default for
	  footer-txt to include NUT version number into footer of HTML man
	  pages. This commit addresses the 2nd point of
	  networkupstools/nut#150

2014-09-27  Arnaud Quette <arnaud.quette@free.fr>

	* configure.ac, m4/nut_check_asciidoc.m4: Also check for
	  source-highlight at configure time  source-highlight is used for
	  documentation generation. It's however optional, so we just check
	  for the sake of completion

2014-09-26  Charles Lepple <clepple+nut@gmail.com>

	* drivers/tripplite_usb.c: tripplite_usb: set input.voltage.nominal
	  back to 230V (0.30)  Keeps the input.voltage and output.voltage
	  scaling from 0.28  Discussion:
	  http://article.gmane.org/gmane.comp.monitoring.nut.user/8719

2014-09-26  Arnaud Quette <arnaud.quette@free.fr>

	* conf/upsmon.conf.sample.in, docs/man/nut.conf.txt,
	  docs/man/upsmon.conf.txt, docs/packager-guide.txt: Replace outdated
	  references to shutdown.txt  shutdown.txt was merged into
	  config-notes.txt during the AsciiDoc conversion of the whole
	  documentation and website. This content is now available in the
	  docs/config-notes.txt file, section [[UPS_shutdown]] "Configuring
	  automatic shutdowns for low battery events"
	* conf/upsmon.conf.sample.in: Fix default value of POWERDOWNFLAG
	  POWERDOWNFLAG path changed from the hard-coded value /etc/killpower
	  to the build-time generated @CONFPATH@/killpower. This resulted in
	  an unexpected value '/etc/nut/killpower', at least on Debian.
	  (reported by Laurent Bigonville)  Closes networkupstools/nut#74

2014-09-25  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: move to ltrim_m()/rtrim_m()
	  functions
	* common/common.c, include/common.h: Add ltrim_m()/rtrim_m()
	  functions to trim several chars at the same time  Also, make
	  ltrim() / rtrim() wrappers around ltrim_m() / rtrim_m().
	* common/common.c: Make ltrim() modify the input string  Also, always
	  check string length in both ltrim() and rtrim().  Reference:
	  https://github.com/networkupstools/nut/issues/154

2014-09-25  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: sort Tripp Lite models by name, then
	  increasing power  I know this doesn't allow the cell merging code
	  to do as much, but this should make it easier to find models.
	* data/driver.list.in: HCL: add Tripp Lite OMNIVSINT800
	  (tripplite_usb)  Source:
	  http://article.gmane.org/gmane.comp.monitoring.nut.user/8713
	* drivers/tripplite_usb.c: tripplite_usb: scale min/max voltages for
	  SMART protocol (0.29)  Observed in a dump file from driver version
	  0.11. Scale input.voltage.minimum and input.voltage.maximum the
	  same way as other voltages.
	* drivers/tripplite_usb.c: tripplite_usb: fix voltage scaling for
	  240V/1001 (0.28)  Reported by Dave Williams:
	  http://article.gmane.org/gmane.comp.monitoring.nut.user/8713  The
	  input.voltage and output.voltage scaling for Protocol 1001 did not
	  factor in the input_voltage_scaled value.

2014-09-24  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/python/app/nut-monitor.appdata.xml: Fix compliance of
	  NUT-Monitor FreeDesktop AppData file  Following the upstream update
	  (by David Goncalves), update the screenshots width and height to
	  conform to AppData specification:
	  http://people.freedesktop.org/~hughsient/appdata/  Closes
	  networkupstools/nut#127

2014-09-17  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut-qa.txt: Minor update and completion  Use the new Debian
	  package tracker URL and add Redhat / Fedora bug tracker

2014-09-15  Daniele Pezzini <hyouko@gmail.com>

	* data/driver.list.in: HCL: add devices supported by nutdrv_qx  -
	  Fideltronik LUPUS 500 USB Protocol: 'megatec' USB subdriver:
	  'fabula' Reference:
	  http://lists.alioth.debian.org/pipermail/nut-upsuser/2014-June/009059.html
	  - FTUPS FT-1000BS(T) / Voltronic Power Apex 1KVA Protocol:
	  'voltronic-qs-hex' USB devices -> USB subdriver: 'cypress'  - FTUPS
	  FT-1000BS / Voltronic Power Imperial 1KVA Protocol: 'voltronic-qs'
	  USB devices -> USB subdriver: 'cypress'

2014-09-08  Charles Lepple <clepple+nut@gmail.com>

	* docs/documentation.txt: docs: Add link to Roger Price's openSUSE
	  writeup

2014-09-04  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: prevent a vicious loop when
	  unexpected answers happen  If a 'QX_FLAG_QUICK_POLL' item gets an
	  unexpected (non-empty) answer and, after returning from
	  'qx_ups_walk()', it is not followed by at least one item using a
	  different 'command', the driver will loop endlessly using the same
	  'broken' answer instead of trying to get a new one from the UPS. To
	  solve this issue, make sure to have an empty 'previous_item' when
	  starting 'qx_ups_walk()'. Also, bail out of 'qx_ups_walk()' when a
	  'QX_FLAG_QUICK_POLL' item can't be preprocessed properly through
	  'ups_infoval_set()'.

2014-09-04  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/asem.txt: docs: recommend I2C bus name for asem driver

2014-09-03  Daniele Pezzini <hyouko@gmail.com>

	* drivers/Makefile.am, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_voltronic-qs-hex.c,
	  drivers/nutdrv_qx_voltronic-qs-hex.h: nutdrv_qx: add
	  Voltronic-QS-Hex subdriver (protocol=voltronic-qs-hex)  A subdriver
	  using a protocol, specific to UPSes manufactured by Voltronic
	  Power, partially Hex-encoded (e.g. 'QS' reply) and supporting some
	  megatec commands.
	* docs/nutdrv_qx-subdrivers.txt: nutdrv_qx: update docs about added
	  support for more complex UPS answers
	* drivers/nutdrv_qx.c, drivers/nutdrv_qx.h,
	  drivers/nutdrv_qx_mecer.c, drivers/nutdrv_qx_megatec-old.c,
	  drivers/nutdrv_qx_megatec.c, drivers/nutdrv_qx_mustek.c,
	  drivers/nutdrv_qx_q1.c, drivers/nutdrv_qx_voltronic-qs.c,
	  drivers/nutdrv_qx_voltronic.c, drivers/nutdrv_qx_zinto.c:
	  nutdrv_qx: add basic support for more complex UPS answers  Add
	  support (also in 'TESTING' mode) for '\0' chars in raw UPS answers
	  and the ability to preprocess answers before anything else (e.g.:
	  for CRC, decoding, ...). Increase verbosity of USB subdrivers and
	  serial communication. Always print also the return code when
	  dealing with an error. Update all subdrivers accordingly, bump
	  versions.

2014-09-03  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/nut-scanner.txt: Fix typo error in nut-scanner doc  The
	  example network range scanned when using 192.168.0.0/25 is actually
	  192.168.0.0 to 192.168.0.12*7* not (i.e. not .128) as previously
	  stated (reported by Evgeny 'Jim' Klimov)  Closes
	  networkupstools/nut#144

2014-09-02  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in, drivers/belkin-hid.c: HCL: Belkin Regulator
	  PRO-USB 050d:0f51 (0.17)
	  https://github.com/networkupstools/nut/issues/149

2014-08-22  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Mecer ME-100-WTU with blazer_usb  USB
	  VID:PID = 0665:5161  Tested by @silvec (Oliver Sauder) on NUT 2.6.3
	  Reference: https://github.com/networkupstools/nut/issues/148

2014-08-19  Charles Lepple <clepple+nut@gmail.com>

	* docs/documentation.txt: docs: update links for two articles

2014-08-17  Yann E. MORIN <yann.morin.1998@free.fr>

	* conf/Makefile.am: conf/: fix parallel install  Do not reference the
	  upsmon.conf.sample twice, otherwise install, with a high number of
	  make jobs, may fail, like so:
	  http://autobuild.buildroot.net/results/256/2567e13cd5bc702bc3a38a1d6fc8e34022cc7db5/build-end.log
	  --- This is not a rare occurence, as my testing managed to trigger
	  the issue in about 1 test out of 10 on average, on a not-so-fast
	  machine.

2014-08-17  Charles Lepple <clepple+nut@gmail.com>

	* tools/nut-usbinfo.pl: nut-usbinfo: fix FreeBSD devd.conf to use
	  $cdev
	* scripts/upower/95-upower-hid.rules: 95-upower-hid.rules: updated by
	  nut-usbinfo.pl  URL updated in previous commit.
	* tools/nut-usbinfo.pl: nut-usbinfo: change link from Alioth SVN to
	  GitHub
	* scripts/udev/.gitignore: udev: ignore 62-nut-usbups.rules
	  Follow-up commit to networkupstools/nut#140

2014-08-16  Charles Lepple <clepple+nut@gmail.com>

	* tools/nut-usbinfo.pl: nut-usbinfo: ignore *.orig files

2014-08-14  Émilien Kia <emilien.kia@gmail.com>

	* configure.ac, docs/man/Makefile.am, m4/nut_check_asciidoc.m4: Test
	  presence of xmllint for manpages doc generation.
	* configure.ac, docs/man/Makefile.am, m4/nut_check_asciidoc.m4: Test
	  presence of xsltproc for manpages doc generation.

2014-08-09  Charles Lepple <clepple+nut@gmail.com>

	* drivers/blazer_usb.c, drivers/libusb.c, drivers/nutdrv_qx.c,
	  drivers/tripplite_usb.c, drivers/usb-common.h,
	  drivers/usbhid-ups.c: libusb.c: consolidate USB-related addvar()
	  calls
	* drivers/cps-hid.c: usbhid-ups (CPS): determine battery.voltage
	  scale factor at runtime  If the battery.voltage reading is greater
	  than 1.4x battery.voltage.nominal, apply a scale factor of 2/3 to
	  bring the voltage back in line.  Closes networkupstools/nut#142

2014-08-08  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/nut-scanner.txt: Fix typo error  Fix a typo error on "-B"
	  option (reported by Evgeny 'Jim' Klimov)

2014-08-05  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/python/Makefile.am: Distribute FreeDesktop AppData file for
	  NUT Monitor  FreeDesktop AppData file for NUT Monitor was not
	  distributed, waiting for some approval

2014-08-04  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/ups.conf.txt, drivers/libusb.c: Remove redundant
	  usb_set_altinterface(), unless user requests it  Adds flag/value to
	  USB driver options.  Closes networkupstools/nut#138

2014-08-01  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/udev/Makefile.am, scripts/udev/README: Fix USB permission
	  issues related to Linux / udev  Rename udev rules file to
	  62-nut-usbups.rules, to prevent NUT USB privileges from being
	  overwritten  Closes #140
	* docs/cables.txt: Fix typo error on Eaton / MGE USB-RJ45 cable

2014-07-14  Giuseppe Corbelli <giuseppe.corbelli@copanitalia.com>

	* AUTHORS, docs/man/asem.txt: asem: additional documentation
	  http://article.gmane.org/gmane.comp.monitoring.nut.devel/6741

2014-07-14  Charles Lepple <clepple+nut@gmail.com>

	* scripts/Aix/.gitignore: Ignore generated AIX spec file

2014-07-13  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/upscli_get.txt: upscli_get(): mention SIGPIPE handling
	  Closes: #132
	* data/driver.list.in: HCL: distinguish between Tripp Lite old and
	  new protocol 3005

2014-07-13  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/python/app/nut-monitor.appdata.xml: Complete FreeDesktop
	  AppData file for NUT Monitor  As per Richard Hughes comments, in
	  #127, complete the description field

2014-07-12  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/Aix/nut-aix.spec.in: Minor adjustments as per Github
	  comments
	* docs/configure.txt: Add missing documentation for configure option
	  The new asem driver introduced --with-linux_i2c, for which
	  documentation was missing in configure documentation

2014-07-11  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: improve the USB matching procedure
	  Consider also the iManufacturer/iProduct strings when checking
	  devices (if subdriver is not specified) to assign the right
	  subdriver in case the VID:PID couple is not specific enough.

2014-07-11  Charles Lepple <clepple+nut@gmail.com>

	* NEWS, data/driver.list.in, docs/man/Makefile.am, docs/man/asem.txt,
	  docs/man/index.txt: asem: documentation

2014-07-07  Giuseppe Corbelli <giuseppe.corbelli@copanitalia.com>

	* configure.ac, data/driver.list.in, drivers/Makefile.am,
	  drivers/asem.c: Support for ASEM UPS on Linux/i2c  Patch from
	  http://article.gmane.org/gmane.comp.monitoring.nut.devel/6723
	  Thread:
	  http://news.gmane.org/find-root.php?message_id=53A83FCB.1080808%40copanitalia.com
	  Builds on Ubuntu 12.10 and 14.04; requires libi2c-dev

2014-07-05  Charles Lepple <clepple+nut@gmail.com>

	* drivers/tripplite_usb.c: tripplite_usb: fix typos in bin2d() and
	  control_outlet() (0.27)
	* drivers/tripplite_usb.c: tripplite_usb: control_outlet() for
	  protocol 3005 (0.26)
	* drivers/tripplite_usb.c: tripplite_usb: Additional 3005 protocol
	  support (0.25)
	  http://news.gmane.org/find-root.php?message_id=CAFeiwyG8HCfg%2dQqxcwhnm1Yo0z0F0BLyOPCYX%2d4yMMFg8sB4QQ%40mail.gmail.com
	* drivers/tripplite_usb.c: tripplite_usb: basic support for 3005
	  binary protocol (0.24)  Based on logs from SMART500RT1U

2014-07-04  vesnn <metanoite@rambler.ru>

	* drivers/powercom.c: Update powercom.c  Fix Powercom Imperial
	  initialization for models since 2009 with USB interface.

2014-06-30  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: add new 'fabula' USB subdriver  Add
	  a new USB subdriver ('fabula') to support models
	  manufactured/rebranded by Fideltronik and accompained by
	  UPSilon2000 software.  Reference:
	  http://lists.alioth.debian.org/pipermail/nut-upsuser/2014-June/009059.html

2014-06-26  Daniele Pezzini <hyouko@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: add new 'fuji' USB subdriver  Add a
	  new USB subdriver ('fuji') to support models manufactured by Fuji
	  (and others) and accompained by UPSmart2000I software.

2014-06-23  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/python/app/nut-monitor.appdata.xml: Create a FreeDesktop
	  AppData file for NUT Monitor  appData files provide to users long
	  descriptions, screenshots and other useful information on
	  application. This will mainly serve for Software Center like
	  applications

2014-06-19  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Lacerda New Orion 800VA with blazer_usb
	  http://news.gmane.org/find-root.php?message_id=CANDysWwqgTUMYU03QbPT8JxEtLd38mvwfTMMhZqS%3d%2diGpdvJDA%40mail.gmail.com

2014-06-17  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: add APC-Microsol entry for solis
	* drivers/solis.c: solis: silence clang warnings about extra
	  parentheses  Since we're in the neighborhood (#133)...  Typically,
	  the idiom is either:  if ( a == b )  for equality checking, or:  if
	  ( ( a = b ) )  for assignment with a comparison.
	* drivers/solis.c, drivers/solis.h: solis: eliminate fixed-length
	  string buffer for model name  The new APC model name overflows the
	  buffer. (#133)

2014-06-16  bsalvador <bruno.salvador@gmail.com>

	* drivers/solis.c: Update on solis.c to add more support  to Back-UPS
	  1200BR
	* drivers/solis.c: Update solis.c to support Microsol-APC Unit.
	  Added support to Back-UPS 1200BR (Microsol-APC) unit.

2014-06-15  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/upscli_get.txt, docs/man/upscli_list_next.txt,
	  docs/man/upscli_list_start.txt: docs: synchronize upscli_*
	  numq/numa with header  There were a few leftover signed int
	  parameters in the man pages, but the headers and implementation use
	  'unsigned int'.  Closes:
	  https://github.com/networkupstools/nut/issues/131
	* docs/man/solis.txt: docs: mention APC in Microsol driver man page
	* docs/man/apcsmart.txt: docs: point APC Microsol users from apcsmart
	  to solis  Also make some of the formatting and grammar
	  self-consistent.
	* drivers/solis.c: solis: recognize APC BZ1200-BR and BZ2200BI-BR
	  (0.62)  Patch suggested by Bruno Salvador for BZ1200-BR, and also
	  tested by Douglas A. Augusto on BZ2200BI-BR.  Reference: *
	  http://forums.freenas.org/index.php?threads/nobreak-bz1200-br-back-ups-rs-1200va-600w-bivolt-115-nt.20247/
	  *
	  http://news.gmane.org/find-root.php?message_id=CACu22%2d3Nn2R%3dQQe9uy%5fPXHRduaPaFgCp2Sw4ra57Ow2qDQcOJQ%40mail.gmail.com

2014-06-08  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/subdriver/gen-snmp-subdriver.sh: Inline documentation fixes

2014-06-03  george <rpubaddr0@gmail.com>

	* scripts/python/module/PyNUT.py: Fixed version description.
	* scripts/python/module/PyNUT.py: Added author information, bumped
	  version.  According to the semantic versioning scheme
	  (http://semver.org/), adding features that do not break backwards
	  compatibility with previous releases means that the minor version
	  number should be incremented.
	* scripts/python/module/PyNUT.py: Change format of raise keyword.
	  Fixes PyNUT Python 3 compatibility.
	* scripts/python/module/PyNUT.py: PyNUT: Create a custom exception
	  class.  This maintains backwards compatibility, and allows calling
	  programs to use "except PyNUTError" instead of "except Exception"
	  when using PyNUT methods.  See
	  https://wiki.python.org/moin/HandlingExceptions for more
	  information.
	* scripts/python/module/PyNUT.py: Fix error when raising without an
	  Exception.  Raising without a valid exception is invalid:  >>>
	  raise Traceback (most recent call last): File "<stdin>", line 1, in
	  <module> TypeError: exceptions must be old-style classes or derived
	  from BaseException, not NoneType >>> raise Exception Traceback
	  (most recent call last): File "<stdin>", line 1, in <module>
	  Exception  Changing this to "raise Exception" fixes this problem.

2014-06-01  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/tripplite_usb.txt, drivers/tripplite_usb.c: tripplite_usb:
	  last tweaks, for now.  Initialize bv_12V to a dummy value, since
	  gcc can't see that it is used in the union of both conditionals
	  where it is set.  Also, align the documentation with the strange
	  definition of empty used by the Tripp Lite state-of-charge
	  approximation.
	* drivers/tripplite_usb.c: tripplite_usb: silence warning (0.23)
	  Pedantic, to be sure, but someone might try the driver with a
	  protocol not listed, and sure enough, bv_12V won't be initialized.
	* docs/man/tripplite_usb.txt, drivers/tripplite_usb.c: tripplite_usb:
	  expose battery_min/_max as variables (0.22)
	  http://news.gmane.org/find-root.php?message_id=21370.36829.817425.464627%40godel.bruda.ca

2014-05-27  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: GRAFENTHAL PR-3000-HS supported by
	  snmp-ups  Tested with 2.6.5-3 (0.68) on Windows (IETF MIB 1.4).
	  Some NUT variables are zero - further testing may be needed.
	  Reference:
	  http://news.gmane.org/find-root.php?message_id=75FC7A5479BA4A4E8ADF76BC3AD3E568581EC753%40MS03.MACLE.DE

2014-05-23  Charles Lepple <clepple+nut@gmail.com>

	* drivers/tripplite_usb.c: tripplite_usb: use dv/dq charge
	  calculation for all models (0.21)

2014-05-20  Andrew Burdo <zeezooz@gmail.com>

	* drivers/powercom-hid.c: Add comments for some values.
	* drivers/usbhid-ups.c: Reuse variable.
	* drivers/usbhid-ups.c: Add default case.

2014-05-18  Charles Lepple <clepple+nut@gmail.com>

	* drivers/genericups.c: genericups: log cable type overrides as they
	  are parsed  Fixes networkupstools/nut#28  Better than nothing, but
	  without a unit to test against, I don't want to make any more
	  intrusive changes.
	* scripts/upower/95-upower-hid.rules: upower: regenerate rules file
	  USB VID:PID = 10af:0004  This dependency graph makes my head spin.
	* configure.ac: version to 2.7.2.5 for snapshots

2014-05-13  Daniele Pezzini <hyouko@gmail.com>

	* drivers/compaq-mib.c: compaq-mib: comment out no longer used items
	  As per 31827d5faa86377efb7a92b7aec322cc4c7a275f

2014-05-03  Daniele Pezzini <hyouko@gmail.com>

	* docs/download.txt: docs: add Void Linux in download/Binary packages
	  Reference: https://github.com/networkupstools/nut/issues/125

2014-05-03  Charles Lepple <clepple+nut@gmail.com>

	* docs/Makefile.am: docs: add mge-usb-rj45.jpg to distribution

2014-05-02  Arnaud Quette <arnaud.quette@free.fr>

	* docs/images/cables/mge-usb-rj45.jpg: Add MGE information on
	  USB-RJ45 cable  The illustration matching the previous commit was
	  still needed on the nut repository, and not on the nut-website on
	* docs/cables.txt: Add MGE information on USB-RJ45 cable  These
	  information were provided by MGE years ago, and were waiting for
	  counter testing. Martin De Graaf - Loyer has now fixed this. Note
	  that the matching illustration will be committed on the new
	  nut-website repository

2014-04-29  Andrew Burdo <zeezooz@gmail.com>

	* drivers/powercom-hid.c, drivers/usbhid-ups.c: Bump versions.
	* data/driver.list.in, docs/man/usbhid-ups.txt: Update documentation.
	* drivers/usbhid-ups.c: Reconnect on interrupt read error.
	* drivers/libhid.c, drivers/libhid.h, drivers/powercom-hid.c,
	  drivers/usbhid-ups.c: Reading from the interrupt pipe implies that
	  you use INPUT flagged objects.
	* drivers/powercom-hid.c: Remove erroneous status.
	* drivers/powercom-hid.c: Comment non-compliant variables.

2014-04-17  Stephen J. Butler <stephen.butler@gmail.com>

	* drivers/tripplite-hid.c: Scale for SMART1500LCDT

2014-04-17  Arnaud Quette <arnaud.quette@free.fr>

	* NEWS, UPGRADING, configure.ac: Update for release 2.7.2  Complete
	  the release information for NUT 2.7.2

2014-04-17  Andrew Burdo <zeezooz@gmail.com>

	* drivers/libhid.c, drivers/libhid.h, drivers/powercom-hid.c,
	  drivers/usbhid-ups.c: Add support for 0d9f:0001 (USB HID,
	  Powercom).

2014-04-07  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/compaq-mib.c: Fix erroneous status in HP/Compaq SNMP MIB
	  Using the most recent HP firmware (1.76), erroneous on-battery
	  status were reported. Also disable an erroneous low-battery
	  definition (pointing nowhere), while waiting for actual
	  improvements (report and patch from Philippe Andersson ; Closes
	  networkupstools/nut#117)

2014-04-06  Daniele Pezzini <hyouko@gmail.com>

	* drivers/mge-xml.c: mge-xml: fix compile-time warnings, versioning

2014-04-05  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Numeric Digital 800 plus  USB VID:PID =
	  0665:5161  Reference: networkupstools/nut#115 (blazer_usb @ 2.6.4;
	  waiting for confirmation with nutdrv_qx)
	* data/driver.list.in: HCL: Eaton Powerware 3105 supported by
	  bcmxcp_usb  Closes networkupstools/nut#117
	* data/driver.list.in, drivers/belkin-hid.c: usbhid-ups/belkin-hid:
	  add support for Emerson Network Power Liebert PSI 1440  USB VID:PID
	  = 10af:0004
	  http://article.gmane.org/gmane.comp.monitoring.nut.user/8479

2014-04-05  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/al175.c: Fix data format warnings on all architectures
	  Complete commit 7daa0feb6ed4f1c29bfe14c8e491ba198a4ba643, and
	  actually fix some of the warnings related data format. Also bump
	  al175 driver revision
	* clients/Makefile.am: Update libupsclient library version
	  information  Following the recent export of libcommon functions in
	  libupsclient, update the library version information to 4:0:0

2014-04-04  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/al175.c: Fix data format warnings  Fix a few warnings
	  related data format, in debug code
	* clients/Makefile.am: Add libnutclient library version information
	  Add the missing LDFLAGS for adding version information

2014-03-21  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: [HCL] CABAC UPS-1700DV2 supported by
	  blazer_usb  Reported by jammin84  Closes #113
	* clients/Makefile.am, common/Makefile.am: Link libupsclient with
	  libcommon  Fix undefined references related to functions of
	  libcommon. This issue was reported on Debian:
	  https://bugs.debian.org/731156 (patch from Matthias Klose ; Closes
	  Github issue #73)

2014-03-18  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: [HCL] Digitus DN-170014 supported by
	  richcomm_usb  Reference:
	  http://lists.alioth.debian.org/pipermail/nut-upsdev/2014-March/006695.html
	  -or-
	  http://news.gmane.org/find-root.php?message_id=CADq9dvWMx0xBz9XXkVKXCre4ox%2d2kSeHtD7LW39eEDH1RCY8sQ%40mail.gmail.com

2014-03-05  Émilien Kia <emilien.kia@gmail.com>

	* scripts/Aix/nut-aix.spec.in: Make web source path independant from
	  specific version.
	* scripts/Aix/nut-aix.spec.in: Use configure-dependant variables
	  instead of statically defined ones for user and group.
	* configure.ac: Use $target_cpu instead of calling uname to know cpu
	  type. Fix crosscompilation.

2014-03-05  Emilien Kia <EmilienKia@Eaton.com>

	* scripts/Windows/Installer/NUT-Installer.xml: Modify version in
	  Windows installer description file.

2014-03-05  Charles Lepple <clepple+nut@gmail.com>

	* UPGRADING: Added note about --enable-option-checking=fatal  Closes
	  #99 (really)

2014-03-04  Emilien Kia <EmilienKia@Eaton.com>

	* clients/upsmon.h: Define a NOTIFY_DEFAULT flag, use it to
	  initialize upsmon.  (Part of change for Windows branch, to minimize
	  differences with master)  Also fixes NOTIFY_CAL to have same
	  settings as everyone else.
	* clients/upsmon.h: Define a NOTIFY_DEFAULT flag, use it to
	  initialize upsmon.  (Part of change for Windows branch, to minimize
	  differences with master)  Also fixes NOTIFY_CAL to have same
	  settings as everyone else.
	* scripts/Windows/Installer/NUT-Installer.xml: Add Windows registry
	  entry for NUT installation path.
	* docs/man/upsmon.conf.txt, docs/man/upsmon.txt: Add upsmon default
	  flag for Windows notice in documentation.
	* conf/upsmon.conf.sample.in: Update upsmon config to note that
	  Windows only writes to syslog on Windows by default.
	* clients/upsmon.h: Use only NOTIFY_SYSLOG as default notify flag in
	  upsmon for Windows.  Define a NOTIFY_DEFAULT flag. Set it
	  accordingly to platform. Use it to initialize upsmon.

2014-03-03  Émilien Kia <emilien.kia@gmail.com>

	* drivers/nutdrv_qx.h: Detect if TRUE (and FALSE) are already defined
	  and define bool_t accordingly.

2014-03-03  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: various updates  * Closes
	  https://github.com/networkupstools/nut/issues/107
	  * http://lists.alioth.debian.org/pipermail/nut-upsdev/2013-November/006564.html
	  * http://news.gmane.org/find-root.php?message_id=50D9D460.1080408%40gmail.com
	  * http://news.gmane.org/find-root.php?message_id=CA%2b4duQ%3dppW%2bPz%2bRVPVXJyFLj0HErh1ZOtm5tk8b6n5Nd5kSk0g%40mail.gmail.com
	  *
	  http://news.gmane.org/find-root.php?message_id=528EC53C.9000801%40me.com
	* docs/nut-qa.txt: NUT QA document: updated and reworded
	* docs/nut-qa.txt: NUT QA document: CR->LF
	* docs/FAQ.txt: FAQ: minor updates  Update the bestfortress entry,
	  fix the mythicbeasts URL, and reword a few entries.

2014-02-28  Emilien Kia <EmilienKia@Eaton.com>

	* scripts/Windows/Installer/NUT-Installer.xml: Fix Windows Installer
	  file list.  Use splitted Blazer driver html man pages (ser & usb).

2014-02-27  Arnaud Quette <arnaud.quette@free.fr>

	* UPGRADING: Add a note on Hardware Abstraction Layer removal
	* INSTALL.nut, autogen.sh, configure.ac, docs/Makefile.am,
	  docs/configure.txt, docs/developers.txt, docs/features.txt,
	  docs/macros.txt, docs/new-drivers.txt, docs/nut-hal.txt,
	  docs/packager-guide.txt, drivers/Makefile.am, drivers/dstate-hal.c,
	  drivers/dstate-hal.h, drivers/main-hal.c, drivers/main-hal.h,
	  m4/nut_check_libhal.m4, m4/nut_config_libhal.m4: Remove the
	  remaining HAL files and references  Remove the remaining build
	  rules, source code and documentation related to the FreeDesktop
	  Hardware Abstraction Layer (HAL) support. For the record, with this
	  HAL implementation, NUT drivers were sending data over DBus
	  (Closes: #99)

2014-02-26  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/Makefile.am, scripts/README, scripts/hal/.gitignore,
	  scripts/hal/Makefile.am, tools/nut-usbinfo.pl: Remove the
	  generation of HAL support files  Remove the code supporting the
	  generation of HAL FDI file. This is the first commit of a set to
	  address Github issue #99
	* drivers/snmp-ups.c: Fix snmp-ups segmentation fault  A basic sanity
	  check was missing in the core code of snmp-ups, causing a driver
	  crash under some specific circumstances, at driver initialisation
	  time. Hence, this does not affect production systems
	* README, UPGRADING, docs/FAQ.txt, docs/config-notes.txt,
	  drivers/Makefile.am, scripts/Solaris/nut.in,
	  scripts/Solaris/postinstall.in, scripts/Solaris/preremove.in,
	  scripts/systemd/nut-driver.service.in,
	  scripts/systemd/nutshutdown.in: Closes #96: Install upsdrvctl to
	  $prefix/sbin  Install upsdrvctl to $prefix/sbin rather than
	  $driverexec. upsdrvctl has been historically standing beside the
	  drivers. It now resides in the system binaries ($prefix/sbin)
	  directory

2014-02-25  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/mge-hid.c: Add improved support for Eaton 5P  Add the
	  necessary hooks to improve support for Eaton 5P range. This
	  includes post-processing of the model name, along with handling
	  rules for battery voltage (actual and nominal)

2014-02-24  Charles Lepple <clepple+nut@gmail.com>

	* drivers/blazer_usb.c, drivers/libusb.c, drivers/nutdrv_qx.c,
	  drivers/riello_usb.c, drivers/usbhid-ups.c: OpenBSD ports tree
	  patches for EPROTO  Closes networkupstools/nut#44

2014-02-20  Arnaud Quette <ArnaudQuette@Eaton.com>

	* drivers/mge-hid.c: Fix "no OFF status in "ups.status" although UPS
	  is switched off" and "OB status in "ups.status" although power
	  supply is present" in mge-hid driver.  Fix problem up from
	  Schleicher.
	* drivers/mge-hid.c: Fix "no OFF status in "ups.status" although UPS
	  is switched off" and "OB status in "ups.status" although power
	  supply is present" in mge-hid driver.  Fix problem up from
	  Schleicher.

2014-02-19  Daniele Pezzini <hyouko@gmail.com>

	* docs/Makefile.am, docs/chunked.xsl, docs/common.xsl,
	  docs/xhtml.xsl: docs: prevent smartphones from being too smart
	  (docbook)  Add HTML <meta> tag to not auto-create telephone number
	  links on mobile browsers also in docbook processed documents.
	  Reference: https://github.com/networkupstools/nut/issues/78  XSL
	  files source: -
	  https://github.com/asciidoc/asciidoc/blob/master/docbook-xsl/common.xsl
	  -
	  https://github.com/asciidoc/asciidoc/blob/master/docbook-xsl/xhtml.xsl
	  -
	  https://github.com/asciidoc/asciidoc/blob/master/docbook-xsl/chunked.xsl
	* docs/man/asciidoc.conf: docs: prevent smartphones from being too
	  smart  Add HTML <meta> tag to not auto-create telephone number
	  links on mobile browsers.  Reference:
	  https://github.com/networkupstools/nut/issues/78

2014-02-15  Arnaud Quette <arnaud.quette@free.fr>

	* docs/acknowledgements.txt: Update NUT team membership for Daniele
	  Pezzini  Daniele Pezzini is a now a NUT senior developer

2014-02-14  Charles Lepple <clepple+nut@gmail.com>

	* Makefile.am: devd: use staging directory for distcheck
	* drivers/Makefile.am, drivers/snmp-ups.c, drivers/xppc-mib.c,
	  drivers/xppc-mib.h: snmp-ups: add XPPC-MIB for Tripp Lite
	  SU10KRT3/1X
	* scripts/subdriver/gen-snmp-subdriver.sh: gen-snmp-subdriver.sh:
	  documentation updates

2014-02-14  Arnaud Quette <arnaud.quette@free.fr>

	* docs/acknowledgements.txt, docs/website/news.txt: Formalizing the
	  end of the relationship with Eaton  The situation of the
	  relationship with Eaton has evolved, and since 2011 Eaton does not
	  support NUT anymore. This may still evolve in the future. But for
	  now, please do not consider anymore that buying Eaton products will
	  provide you with official support from Eaton, or a better level of
	  device support in NUT.
	* docs/acknowledgements.txt: Update NUT team membership for Frédéric
	  Bohe  Frederic Bohe, NUT senior developer and Eaton contractor from
	  2009 to 2013, is now a retired member. Thanks for all the hard work
	  on the Windows port, nut-scanner, Unix packaging, support, ... Also
	  update the developers membership page, from Alioth to GitHub

2014-02-13  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/upsimage.cgi.txt: upsimage.cgi(8): update GD homepage

2014-02-13  Arnaud Quette <arnaud.quette@free.fr>

	* .gitignore, server/.gitignore: Minor completion to gitignore files
	  Add a few more exotic targets, related to debug or official
	  distribution

2014-02-11  Daniele Pezzini <hyouko@gmail.com>

	* .gitignore, clients/.gitignore, common/.gitignore, conf/.gitignore,
	  data/.gitignore, data/html/.gitignore, docs/.gitignore,
	  docs/man/.gitignore, docs/website/.gitignore,
	  docs/website/scripts/.gitignore, drivers/.gitignore,
	  include/.gitignore, lib/.gitignore, m4/.gitignore,
	  scripts/.gitignore, scripts/HP-UX/.gitignore,
	  scripts/Solaris/.gitignore, scripts/augeas/.gitignore,
	  scripts/avahi/.gitignore, scripts/hal/.gitignore,
	  scripts/hotplug/.gitignore, scripts/python/.gitignore,
	  scripts/systemd/.gitignore, scripts/udev/.gitignore,
	  scripts/ufw/.gitignore, server/.gitignore, tests/.gitignore,
	  tools/.gitignore, tools/nut-scanner/.gitignore: Simplify gitignore
	  files  Remove redundancies and old/svn things. Limit the scope
	  wherever it makes sense. Ignore all cscope files and test logs.
	  Make ignoring generated files easier to maintain.

2014-02-11  Charles Lepple <clepple+nut@gmail.com>

	* drivers/libshut.c: libshut: partially revert PnP/RTS change
	  Reported by Baruch Even. It is unclear how this will work after
	  running nut-scanner, but it is more important to keep the drivers
	  working.  Reference: 65db105 /
	  2013-09-24T08:18:00Z!fredericbohe@eaton.com  Closes:
	  networkupstools/nut#91

2014-02-10  Charles Lepple <clepple+nut@gmail.com>

	* scripts/subdriver/gen-snmp-subdriver.sh: gen-snmp-subdriver.sh: fix
	  option typos  * Use '-M' for MIB directories, to match snmpwalk and
	  the help text. * Add space before '-c' in snmpwalk (not sure how
	  this worked before)
	* scripts/Makefile.am: cosmetic: Indent scripts/Makefile.am
	  EXTRA_DIST continuation lines
	* scripts/Makefile.am: Add gen-snmp-subdriver.sh to distribution
	  tarball

2014-02-09  Daniele Pezzini <hyouko@gmail.com>

	* docs/man/nutdrv_qx.txt: nutdrv_qx: update manpage for the newly
	  supported Voltronic Power P98 units
	* drivers/nutdrv_qx.c, drivers/nutdrv_qx_mecer.c,
	  drivers/nutdrv_qx_mecer.h: nutdrv_qx: improve support for
	  '(ACK/(NAK' and Voltronic Power P98 UPSes  In 'mecer' subdriver's
	  claim function try to get protocol (QPI, for Voltronic Power
	  devices) used by the UPS: - supported devices are Voltronic Power's
	  P98 units - if the UPS doesn't support the QPI command, use its
	  reply to identify whether it uses '(ACK\r'/'(NAK\r' replies  This
	  way we can catch '(ACK/(NAK' devices, while previously the 'mecer'
	  subdriver was 'hidden' by the 'megatec' (echo back/'ACK/NAK') one.
	  Plus Q1 units with 'ACK'/'NAK' replies or echoing back not
	  supported and rejected commands are no longer wrongly 'claimed' by
	  the 'mecer' subdriver.

2014-02-03  Daniele Pezzini <hyouko@gmail.com>

	* docs/.gitignore, docs/Makefile.am, docs/documentation.txt: docs:
	  build PDF also for cables.txt

2014-02-02  Daniele Pezzini <hyouko@gmail.com>

	* Makefile.am, configure.ac, docs/.gitignore, docs/Makefile.am,
	  docs/man/.gitignore, docs/man/Makefile.am, docs/stable-hcl.txt,
	  docs/user-manual.txt, docs/website/.gitignore,
	  docs/website/Makefile.am, docs/website/css/ie-overrides.css,
	  docs/website/css/web-layout.css,
	  docs/website/css/xhtml11-quirks.css, docs/website/css/xhtml11.css,
	  docs/website/faviconut.ico, docs/website/faviconut.png,
	  docs/website/news.txt, docs/website/old-news.txt,
	  docs/website/projects.txt, docs/website/scripts/.gitignore,
	  docs/website/scripts/filter_png.js, docs/website/scripts/jquery.js,
	  docs/website/scripts/nut_jquery.js, docs/website/scripts/toc.js,
	  docs/website/ups-protocols.txt, docs/website/web-layout.conf,
	  docs/website/website.txt, tools/Makefile.am, tools/nut-hclinfo.py:
	  website: move to a standalone website

2014-01-31  Ronaldo Yamada <rhyamada@gmail.com>

	* drivers/nutdrv_qx.c: nutdrv_qx: add new 'sgs' USB subdriver to
	  support TS Shara units

2014-01-31  Daniele Pezzini <hyouko@gmail.com>

	* docs/man/nutdrv_qx.txt: nutdrv_qx: update man page for new 'sgs'
	  USB subdriver

2014-01-18  Daniele Pezzini <hyouko@gmail.com>

	* docs/net-protocol.txt: docs: fix a couple of asciidoc errors in
	  net-protocols.txt
	* server/netlist.c: net-protocol: fix closing line of LIST RANGE

2014-01-16  Charles Lepple <clepple+nut@gmail.com>

	* drivers/nutdrv_atcl_usb.c: nutdrv_atcl_usb: fix permissions-based
	  crash, and enable vendor variable (1.1)

2014-01-13  Emilien Kia <EmilienKia@Eaton.com>

	* drivers/upsdrvctl.c: Fix Windows driver starting model and add
	  comments.
	* drivers/upsdrvctl.c: Add basic Windows wait for launch process.
	  Wait for process return or timeout Look at returned code.

2014-01-13  Charles Lepple <clepple+nut@gmail.com>

	* .gitignore: Ignore cscope.out
	* docs/man/.gitignore, docs/man/nutdrv_atcl_usb.txt,
	  drivers/nutdrv_atcl_usb.c: nutdrv_atcl_usb: documentation and
	  logging (v1.0)

2014-01-11  Daniele Pezzini <hyouko@gmail.com>

	* drivers/blazer_ser.c, drivers/blazer_usb.c: blazer: fix man page
	  references
	* data/driver.list.in: HCL: add Atlantis Land/Voltronic Power units
	  supported by nutdrv_qx
	* drivers/nutdrv_qx_blazer-common.c,
	  drivers/nutdrv_qx_blazer-common.h: nutdrv_qx: fix
	  nutdrv_qx_blazer-common.{c,h} header comments
	* docs/man/nutdrv_qx.txt, docs/nutdrv_qx-subdrivers.txt: nutdrv_qx:
	  update manuals for new 'voltronic-qs' subdriver

2014-01-11  Charles Lepple <clepple+nut@gmail.com>

	* drivers/apc-mib.c: snmp-ups: APC SmartBoost and SmartTrim are OL
	  SmartBoost and SmartTrim are voltage regulation functions that
	  prevent the UPS from using the battery during brownouts and
	  overvoltages, so the BOOST and TRIM states are also mapped to OL.
	  Reference:
	  http://article.gmane.org/gmane.comp.monitoring.nut.devel/6583
	* data/driver.list.in: [HCL] MicroDowell B.Box LP 500: genericups
	  type 7  Closes networkupstools/nut#83  From @lxp:  UPS shutdown
	  only works when on-battery and has a delay of about 1min until
	  execution (something between 50sec to 1min 30sec on mine).
	  References: http://www.ezdirect.it/pdf/lp500.pdf
	  https://forums.gentoo.org/viewtopic-t-730172-start-0.html
	* docs/man/nutdrv_atcl_usb.txt, drivers/nutdrv_atcl_usb.c:
	  nutdrv_atcl: match iManufacturer (vendor) string
	* docs/man/snmp-ups.txt: snmp-ups: update and edit documentation

2014-01-01  Charles Lepple <clepple+nut@gmail.com>

	* drivers/nutdrv_atcl_usb.c: nutdrv_atcl_usb: adjusted logging and
	  retries (v0.02)
	* data/driver.list.in, docs/man/Makefile.am, docs/man/index.txt,
	  docs/man/nutdrv_atcl_usb.txt: nutdrv_atcl_usb: man page and HCL
	  entries

2013-12-31  Laurent Bigonville <bigon@bigon.be>

	* .gitignore, INSTALL => INSTALL.nut, Makefile.am, docs/FAQ.txt,
	  docs/Makefile.am, docs/configure.txt, docs/packager-guide.txt,
	  docs/user-manual.txt: Rename INSTALL to INSTALL.nut  Rename it to
	  INSTALL.nut so autoreconf will not try to overwrite it.  In Debian
	  tools like dh_autoreconf calls autoreconf with -f which overwrite
	  the INSTALL file.

2013-12-31  Charles Lepple <clepple+nut@gmail.com>

	* drivers/.gitignore, drivers/Makefile.am, drivers/nutdrv_atcl_usb.c,
	  tools/nut-usbinfo.pl: nutdrv_atcl_usb: 'ATCL FOR UPS' new driver
	  Reference:
	  http://news.gmane.org/find-root.php?message_id=%3c52B4C54E.1050106%40ariwainer.com.ar%3e
	* drivers/libusb.c, drivers/usb-common.h: Move USB_TIMEOUT to
	  usb-common.h

2013-12-27  Charles Lepple <clepple+nut@gmail.com>

	* scripts/subdriver/gen-usbhid-subdriver.sh: usbhid-ups: fix call to
	  is_usb_device_supported()  The is_usb_device_supported() function
	  now takes a USBDevice_t* instead of a pair of USB ID values.

2013-12-22  Florian Bruhin <nut@the-compiler.org>

	* data/driver.list.in, docs/man/powercom.txt, drivers/powercom.c: Add
	  OptiUPS VS 575C support to PowerCom  Reference:
	  http://news.gmane.org/find-root.php?message_id=%3c20131126085646.GM28832%40lupin%3e

2013-12-11  Denis Yantarev <denis.yantarev@gmail.com>

	* drivers/blazer_usb.c, drivers/nutdrv_qx.c: Fixed incorrectly
	  reported Ippon response length

2013-12-05  Daniele Pezzini <hyouko@gmail.com>

	* drivers/Makefile.am, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_voltronic-qs.c, drivers/nutdrv_qx_voltronic-qs.h:
	  nutdrv_qx: add Voltronic-QS subdriver (nutdrv_qx
	  protocol=voltronic-qs)  A subdriver using a protocol, specific to
	  UPSes manufactured by Voltronic Power, based on the 'mustek' one
	  (i.e. 'QS').

2013-11-30  Daniele Pezzini <hyouko@gmail.com>

	* docs/man/nutdrv_qx.txt, drivers/nutdrv_qx.c,
	  drivers/nutdrv_qx_blazer-common.c,
	  drivers/nutdrv_qx_blazer-common.h, drivers/nutdrv_qx_megatec-old.c,
	  drivers/nutdrv_qx_mustek.c, drivers/nutdrv_qx_q1.c: nutdrv_qx: fix
	  'megatec/old' and 'mustek' subdrivers' claim functions  Address,
	  for 'megatec/old' and 'mustek' subdrivers, the same problem fixed
	  in commit 720975f4de910b270ba705a7f2981c2ee33ca2eb for Q1-based
	  ones: - Make the claim function of 'megatec/old' and 'mustek'
	  subdrivers not poll the UPS for 'vendor' informations as they are
	  not really needed to set these protocols apart from the other ones
	  (i.e. the 'status' poll is specific enough, at the time of
	  writing). - Move common 'light' claim function to
	  nutdrv_qx_blazer-common.{c,h}. - Update manual. - Versioning.

2013-11-24  Daniele Pezzini <hyouko@gmail.com>

	* docs/nutdrv_qx-subdrivers.txt: nutdrv_qx: improve developer manual
	  Get rid of useless tables. Fix minor errors/typos.
	* drivers/nutdrv_qx.c: nutdrv_qx: versioning
	* docs/man/nutdrv_qx.txt, docs/nutdrv_qx-subdrivers.txt: nutdrv_qx:
	  update manuals for new Q1 subdriver and improve readability

2013-11-23  Daniele Pezzini <hyouko@gmail.com>

	* drivers/Makefile.am, drivers/nutdrv_qx.c, drivers/nutdrv_qx_q1.c,
	  drivers/nutdrv_qx_q1.h: nutdrv_qx: add new 'fallback' Q1 subdriver
	  Add new 'Q1' subdriver. This subdriver implements the same protocol
	  as the one used by the 'megatec' subdriver minus the vendor (I) and
	  ratings (F) queries. In the claim function: - it doesn't even try
	  to get 'vendor' informations (I) - it checks only status (Q1),
	  through 'input.voltage' variable Therefore it should be able to
	  work even if the UPS doesn't support vendor/ratings *and* the user
	  doesn't use the 'novendor'/'norating' flags, as long as: - the UPS
	  replies a Q1-compliant answer (i.e. not necessary filled with all
	  of the Q1-required data, but at least of the right length and with
	  not available data filled with some replacement character) - the
	  UPS reports a valid input.voltage (used in the claim function) -
	  the UPS reports valid status bits (1st, 2nd, 3rd, 6th, 7th are the
	  mandatory ones)  This commit reintroduces a functionality of the
	  blazer subdrivers that was lost because now, in order to tell
	  whether a device is supported by a subdriver or not, if the user
	  doesn't call the driver with the 'novendor' flag, both the status
	  (Q1) and the vendor (I/FW?) queries are needed (that's to better
	  discern the subdrivers).  Reference:
	  http://lists.alioth.debian.org/pipermail/nut-upsuser/2013-November/008692.html

2013-11-23  Charles Lepple <clepple+nut@gmail.com>

	* configure.in => configure.ac: Rename configure.in to configure.ac
	  autoconf has been warning about this for a while - let's fix it
	  before too many branches get created with the old name.
	* configure.in: bump version to 2.7.1.5  Some packaging systems don't
	  like the -pre# system.

2013-11-21  Laurent Bigonville <bigon@bigon.be>

	* docs/man/ups.conf.txt, docs/man/upsdrvctl.txt, drivers/upsdrvctl.c:
	  Provide retry options for upsdrvctl and driver(s)  As recently seen
	  in Debian (bugs #694717 and #677143), it may be required to have
	  upsdrvctl retrying to start the driver in case of failure.  More
	  specifically, a mix of init system (V and systemd), udev and USB
	  device(s) can result in the /dev entry not being available at
	  driver startup, thus resulting in a general failure to start NUT.
	  This commit provides at least a way to overcome this issue. A more
	  suitable  solution will require more work on NUT design.  This
	  patch if based on Arnaud Quette proposal

2013-11-20  Arnaud Quette <arnaud.quette@free.fr>

	* Makefile.am: Maintainers targets: distribution signature / hashes
	  Create some handy targets to ease and automate release publication

2013-11-19  Charles Lepple <clepple+nut@gmail.com>

	* configure.in: configure: update version to 2.7.1
	* docs/website/news.txt: news: add 2.7.1 release
	* Makefile.am: ChangeLog: use full path to generator script
	* docs/website/projects.txt: website: update related project links

2013-11-18  Kirill Smelkov <kirr@mns.spb.ru>

	* MAINTAINERS, docs/man/.gitignore, docs/man/Makefile.am,
	  docs/man/al175.txt, docs/man/index.txt, docs/man/nutupsdrv.txt,
	  docs/new-drivers.txt, drivers/Makefile.am, drivers/al175.c: al175:
	  updated driver, please restore it  Back in 2005 I was young and
	  idealistic, that's why you finally marked al175 as 'broken', but
	  now I understand your points (some) and that in NUT you need good
	  portability.  So this time I've checked that al175 compiles with
	  CC="gcc -std=c89 -pedantic", and CC="gcc -std=c99 -pedantic"  Also,
	  I've tried to clean-up the driver based on feedback from 2009, but
	  unfortunately I no longer have hardware to test and will not have
	  any in foreseable future, so the driver was reworked to meet the
	  project code quality criteria, without testing on real hardware.
	  Some bugs may have crept in.  Changes since last posting in 2009:
	  - patch rebased on top of current master (v2.6.5-400-g214c442); -
	  added reference to COMLI communication protocol document; - status
	  decode errors go to log, instead of setting non-conformant status
	  like "?T", "?OOST", etc.  For such errors new loglevel is
	  allocated; - "High Battery" status is back; - converted tracing
	  macros to direct use of upsdebugx and numbers 1,2,3,4 for loglevels
	  as requested (but now lines got longer because of explicit __func__
	  usage); - lowered usage of other macros (e.g. REVERSE_BITS
	  inlined); - alarm(3) is not used anymore - instead whole I/O
	  transaction time budget is maintained manually; - man page
	  converted to asciidoc and supported variables list is merged into
	  it;  - upsdebug_ascii moved to common.c and to separate patch.
	  ~~~~  Changes since al175 was removed from NUT tree in 2008:  -
	  alloca was eliminated through the help of automatic variables -
	  debugging/tracing were reworked to (almost always) use NUT builtins
	  - al175 now uses 3 debug levels for (1=user-level info, 2=protocol
	  debugging, 3=I/O tracing)  - rechecked
	  http://eu1.networkupstools.org/doc/2.2.0/developers.html and
	  applied where apporpiate  Also  > This driver does not support
	  upsdrv_shutdown(), which makes > it not very useful in a real world
	  application. This alone > warrants 'experimental' status, but for
	  the below mentioned > reasons (to name a few), it's flagged
	  'broken' instead.  Yes, at present shutdown is not supported, and
	  unfortunately now I don't have AL175 hardware at hand, so that I
	  can't write it and verify the implementation.  I've marked the
	  driver as DRV_EXPERIMENTAL, although it was tested by us as part of
	  our systems to work OK for more than three years in production
	  environment on ships (and we don't need shutdown there -- in
	  critical situations the system has to operate as long as possible,
	  untill the battery is empty)  Also, all of the previous issues
	  listed below are now fixed in this al175 version:  - ‘return’ with
	  a value, in function returning void (2x) - anonymous variadic
	  macros were introduced in C99 - C++ style comments are not allowed
	  in ISO C90 - ISO C forbids braced-groups within expressions (5x) -
	  ISO C90 forbids specifying subobject to initialize (16x) - ISO C99
	  requires rest arguments to be used (18x)  Yes, "All the world is
	  not an x86 Linux box," and I've tried to make all the world happy.
	  Please apply.  Thanks, Kirill.
	* common/common.c, docs/developers.txt, include/common.h: common:
	  upsdebug_ascii() - to dump a message in ascii  For debugging
	  ASCII-based protocols with control characters (e.g. COMLI) it is
	  handy to dump messages not in hex, but in ascii with human readable
	  codes.  Add utility function to do it.

2013-11-18  Arnaud Quette <arnaud.quette@free.fr>

	* NEWS: Minor reordering of the news

2013-11-17  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/.gitignore, drivers/.gitignore: apcupsd-ups: ignore
	  generated files
	* drivers/apcupsd-ups.c: apcupsd-ups: fix cut-n-paste error
	* drivers/apcupsd-ups.c: apcupsd-ups 0.04: use O_NONBLOCK instead of
	  FIONBIO
	* NEWS, docs/man/index.txt: apcupsd-ups: add NEWS and man page link
	* UPGRADING: Mention upsrw output change.
	* docs/man/nut-recorder.txt: Reword nut-recorder man page
	* UPGRADING: link to man pages for changed drivers
	* configure.in: Bump version to 2.7.1-pre2
	* NEWS, UPGRADING: Update NEWS and UPGRADING for 2.7.1  Closes:
	  networkupstools#37
	* data/driver.list.in: HCL: StarPower PCF-800VA  Reported by Don.
	  Reference:
	  http://news.gmane.org/find-root.php?message_id=%3cCAPO%2bLDnApF3ALNfp%5fwaVpHqSuJ9sajKCKXPXLLsAWUWww7Of%3dw%40mail.gmail.com%3e
	* data/driver.list.in: HCL: Atlantis Land A03-P551(V1.2) supported by
	  blazer_usb  Reported by Giovanni Panozzo.  Reference:
	  http://news.gmane.org/find-root.php?message_id=%3c51B76B0C.1080109%40panozzo.it%3e
	  Note that blazer_usb will eventually be replaced by nutdrv_qx.
	* clients/nutclient.h, clients/upsclient.c,
	  conf/upsmon.conf.sample.in, configure.in, docs/FAQ.txt,
	  docs/man/libnutclient.txt, docs/man/libnutclient_general.txt,
	  docs/man/upsmon.conf.txt, docs/security.txt,
	  drivers/powerman-pdu.c, server/netssl.c: Replace 'connexion' with
	  'connection' in English contexts  Also reworded a few phrases
	  surrounding the replacements.
	* docs/man/.gitignore: asciidoc: ignore all generated blazer*.html
	  files
	* data/driver.list.in: HCL: update CyberPower entries, including
	  CP900AVR  Reported by Craig Duttweiler  Reference:
	  http://news.gmane.org/find-root.php?message_id=%3c51295F86.4080601%40twistedsanity.net%3e
	* docs/stable-hcl.txt: GitHub issues can also be used to report HCL
	  updates
	* docs/website/projects.txt: Update links to related projects
	* docs/download.txt: Update download page  * Re-added link to
	  Buildbot snapshot generator * Updated a few links

2013-11-13  Daniele Pezzini <hyouko@gmail.com>

	* docs/man/.gitignore, drivers/.gitignore: Add nutdrv_qx to
	  .gitignore files and remove voltronic from them

2013-11-13  Charles Lepple <clepple+nut@gmail.com>

	* drivers/blazer_ser.c: windows_port: remove conflict markers from
	  blazer_ser.c

2013-11-12  Daniele Pezzini <hyouko@gmail.com>

	* docs/man/nutdrv_qx.txt: nutdrv_qx: fix cross links in manpage
	  Remove links to voltronic manuals. Fix links to blazer manuals.

2013-11-12  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/Makefile.am: a2x: use --destination-dir  This option seems
	  to work now. Previously, Asciidoc source files were copied to the
	  destination directory, but this did not account for included files.
	* .gitignore: git: ignore test-driver, and sort ignores list
	  test-driver is apparently part of automake, generated for libcpp
	  unit tests.

2013-11-10  Daniele Pezzini <hyouko@gmail.com>

	* clients/upsrw.c: upsrw: publish also the maximum length of STRING
	  rw variables

2013-11-10  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/Makefile.am: Include blazer-common.txt in built tarball

2013-11-09  Daniele Pezzini <hyouko@gmail.com>

	* docs/website/scripts/nut_jquery.js: HCL: Improve readability of
	  nut_jquery.js
	* docs/website/scripts/nut_jquery.js: HCL: make support-level filter
	  show items with a 'higher or equal' level  Reference:
	  https://github.com/networkupstools/nut/issues/48#issuecomment-28134135
	* data/driver.list.in: nutdrv_qx: readd HCL's items lost with the
	  revert of the voltronic merge
	* data/driver.list.in: nutdrv_qx: remove superfluous indications from
	  the HCL
	* data/driver.list.in, docs/Makefile.am, docs/man/Makefile.am,
	  docs/man/index.txt, docs/man/{blzr.txt => nutdrv_qx.txt},
	  docs/man/nutupsdrv.txt, docs/new-drivers.txt, ...lzr-subdrivers.txt
	  => nutdrv_qx-subdrivers.txt}, drivers/Makefile.am, drivers/{blzr.c
	  => nutdrv_qx.c}, drivers/{blzr.h => nutdrv_qx.h},
	  ...r_blazer-common.c => nutdrv_qx_blazer-common.c},
	  ...r_blazer-common.h => nutdrv_qx_blazer-common.h},
	  drivers/{blzr_mecer.c => nutdrv_qx_mecer.c}, drivers/{blzr_mecer.h
	  => nutdrv_qx_mecer.h}, ...{blzr_megatec-old.c =>
	  nutdrv_qx_megatec-old.c}, ...{blzr_megatec-old.h =>
	  nutdrv_qx_megatec-old.h}, drivers/{blzr_megatec.c =>
	  nutdrv_qx_megatec.c}, drivers/{blzr_megatec.h =>
	  nutdrv_qx_megatec.h}, drivers/{blzr_mustek.c =>
	  nutdrv_qx_mustek.c}, drivers/{blzr_mustek.h => nutdrv_qx_mustek.h},
	  .../{blzr_voltronic.c => nutdrv_qx_voltronic.c},
	  .../{blzr_voltronic.h => nutdrv_qx_voltronic.h},
	  drivers/{blzr_zinto.c => nutdrv_qx_zinto.c}, drivers/{blzr_zinto.h
	  => nutdrv_qx_zinto.h}, tools/nut-usbinfo.pl: nutdrv_qx: rename
	  'blzr' driver to 'nutdrv_qx'  Reference:
	  http://lists.alioth.debian.org/pipermail/nut-upsdev/2013-November/006555.html
	* docs/stable-hcl.txt, docs/website/css/web-layout.css: Address Issue
	  #48 (text-based browsers)  Reference:
	  https://github.com/networkupstools/nut/issues/48#issuecomment-28107101

2013-11-08  Arnaud Quette <arnaud.quette@free.fr>

	* docs/website/projects.txt: Cleanup NUT related projects

2013-11-04  Daniele Pezzini <hyouko@gmail.com>

	* drivers/blzr_voltronic.c: blzr: Fix log message
	* drivers/blzr_voltronic.c: blzr: Fix compile-time error  Reference:
	  http://lists.alioth.debian.org/pipermail/nut-upsdev/2013-November/006549.html
	* drivers/blzr_blazer-common.c, drivers/blzr_blazer-common.h: blzr:
	  Fix blzr_blazer-common.{c,h} header comments

2013-11-04  Charles Lepple <clepple+nut@gmail.com>

	* include/Makefile.am: nut_include.h: fail gracefully if git fails
	  Fix proposed by Jim Klimov.

2013-11-03  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in, docs/man/.gitignore, docs/man/Makefile.am,
	  docs/man/index.txt, docs/man/voltronic_ser.txt,
	  docs/man/voltronic_usb.txt, drivers/Makefile.am,
	  drivers/voltronic.c, drivers/voltronic.h, drivers/voltronic_ser.c,
	  drivers/voltronic_usb.c, tools/nut-usbinfo.pl: Revert "Merge branch
	  'voltronic-driver'"  This reverts commit
	  de07fc7f5e7f68b91507b2bf3d4d3b92b774c3ed, reversing changes made to
	  a074844f88ca352780dd881b5fa3c435832d165e.  The voltronic
	  funtionality will be a subdriver of the new blazer driver.
	* docs/stable-hcl.txt: HCL: typos
	* data/driver.list.in, docs/stable-hcl.txt: HCL: minor cleanup
	  Remove a duplicate Tripp Lite entry, and add a missing "a".
	* docs/stable-hcl.txt: HCL documentation: reword
	* data/driver.list.in, docs/acknowledgements.txt: HCL: incorporate
	  Tripp Lite test results  Source:
	  http://article.gmane.org/gmane.comp.monitoring.nut.user/8173
	* docs/Makefile.am, docs/website/Makefile.am: HCL: additional
	  dependencies  Apparently still not complete, though.
	* docs/website/scripts/nut_jquery.js: HCL JavaScript: make key
	  case-insensitive  Also special-case the spelling change for Tripp
	  Lite.  TODO: make the value matching case-insensitive as well.
	* docs/website/scripts/nut_jquery.js: HCL JavaScript: update the
	  USB-matching code  Slightly more accurate, but later on we should
	  really track the connection type as a first-class attribute for
	  each entry in the HCL. Matching the driver name is brittle.
	* docs/website/scripts/nut_jquery.js, tools/nut-hclinfo.py: HCL
	  generation: don't combine driver names  The Python and JavaScript
	  code for generating the HCL was combining adjacent drivers even
	  when the support level was different. This clutters up the driver
	  list a bit, but presents a more accurate picture of support levels.

2013-10-28  Michal Soltys <soltys@ziu.info>

	* docs/man/apcsmart.txt: apcsmart: minor man update  A short note
	  about availabilty of apcsmart-old.
	* docs/man/apcsmart.txt, drivers/apcsmart.c, drivers/apcsmart.h:
	  apcsmart: string/comment/text trivial changes

2013-10-27  Charles Lepple <clepple+nut@gmail.com>

	* tools/nut-scanner/nutscan-device.c: [nut-scanner] Remove unused
	  variable

2013-10-26  Charles Lepple <clepple+nut@gmail.com>

	* configure.in: Define _REENTRANT for all Solaris and AIX platforms.
	  This is essentially the final commit in pull request #39.

2013-10-25  Daniele Pezzini <hyouko@gmail.com>

	* drivers/blazer.c: blazer: Support UPSes that reply '(ACK' when an
	  instant command succeeds
	* drivers/blazer.c: blazer: Fix a discrepancy in the handling of
	  instant commands  Check if the reply we got back from the UPS is
	  'ACK' also for the commands stored in the array.
	* drivers/blzr.c: blzr: Cosmetic changes
	* drivers/blzr_megatec-old.c, drivers/blzr_megatec.c,
	  drivers/blzr_mustek.c, drivers/blzr_zinto.c: blzr: Remove
	  duplicates in the testing struct
	* docs/blzr-subdrivers.txt, docs/man/blzr.txt, drivers/Makefile.am,
	  drivers/blzr.c, drivers/blzr_mecer.c, drivers/blzr_mecer.h: blzr:
	  Add Mecer subdiver (blzr protocol=mecer)  A subdriver covering an
	  idiom similar to the one used by the megatec subdriver, but with
	  these peculiarities: - if a command/query is rejected or invalid,
	  the UPS will reply '(NAK\r' - if a command succeeds, the UPS will
	  reply '(ACK\r'

2013-10-24  Frédéric BOHE <fredericbohe@eaton.com>

	* drivers/mge-hid.c: Fix wrong OFF status reported when on battery.
	  UPS.BatterySystem.Charger.PresentStatus.Used is not related to UPS
	  outputs being on or off but rather to the charger being on or off.

2013-10-18  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-display.c, tools/nut-scanner/scan_nut.c:
	  Nutscan fix and enhancement  Closes #60 (GitHub Pull Request via
	  fbohe)
	* docs/man/netxml-ups.txt, drivers/mge-xml.c, drivers/mge-xml.h,
	  drivers/netxml-ups.c: netxml: added RW access, fixed FSD/shutdown
	  duration bugs, etc.  * Fixed bugs in resolution of FSD condition
	  and computation of shutdown duration. * Added System.* UPS
	  variables. * Enabled RW access to appropriate UPS variables. *
	  Added UPS veriables value convertors. * Added support for XML
	  protocol v3 {GET|SET}_OBJECT query implementing getvar and setvar
	  routines. * netxml driver man page updated to include info about
	  the driver-specific configuration parameters.  Closes #59 (GitHub
	  pull request: "Enhancement for netxml driver")  Pull request by:
	  Frédéric BOHE <fredericbohe@eaton.com>
	* clients/upsc.c, clients/upscmd.c, clients/upslog.c,
	  clients/upsrw.c: Fix AIX linkage of do_upsconf_args()  Closes #58
	  (GitHub pull request "Fix AIX build")  (cherry picked from commit
	  5fc7518f97d2738d791c3c77f2257d05e3a9da3b)

2013-10-17  Daniele Pezzini <hyouko@gmail.com>

	* docs/man/blazer-common.txt: blazer: Cosmetic changes
	* drivers/blazer_ser.c, drivers/blazer_usb.c: blazer: Fix
	  blazer_{ser,usb} + TESTING  Those things are useless when TESTING
	  is defined
	* docs/man/blazer-common.txt: blazer: Fix user manuals
	  {Serial,USB}-specific sections belong to 'Extra arguments' section
	* drivers/blazer_ser.c, drivers/blazer_usb.c: blazer: Versioning
	* drivers/blazer.c: blazer: Add more log infos in instcmd
	* docs/blzr-subdrivers.txt: blzr: Improve developer manual  Add note
	  on how to group items in blzr2nut array.
	* drivers/blzr_voltronic.c: blzr: Fix switch/case  Forgot to break at
	  the end of the case
	* docs/man/blzr.txt, drivers/blzr.c, drivers/blzr_voltronic.c: blzr:
	  Cosmetic changes

2013-10-16  Frédéric BOHE <fredericbohe@eaton.com>

	* drivers/powerware-mib.c, drivers/snmp-ups.c, drivers/snmp-ups.h:
	  Fix Low Battery detection with ConnectUPS cards  The low battery
	  OID itself cannot be read directly. Low battery alarms OID appears
	  in an alarm array.

2013-10-16  Daniele Pezzini <hyouko@gmail.com>

	* docs/man/Makefile.am, docs/man/{blazer.txt => blazer-common.txt},
	  docs/man/blazer_ser.txt, docs/man/blazer_usb.txt,
	  docs/man/index.txt, docs/man/nutupsdrv.txt: blazer: Fix {usb,ser}
	  manual  Split the old blazer manual in two manuals named after
	  their executables with a common source.
	* docs/man/blazer.txt: blazer: Fix user manual  Fix minor errors Add
	  ranges Fix test.battery.start (i.e. minutes instead of seconds)
	* drivers/blazer.c: blazer: Fix shutdown sequence  Split stop pending
	  shutdown and shutdown itself so that if we have problems stopping
	  the shutdown (e.g. there's no shutdown pending and the UPS, because
	  of that, echoes back the command) we can still shutdown the UPS.
	* drivers/blazer.c: blazer: Fix minor error in battery guesstimation
	  We need both battery.voltage.low and battery.voltage.high to
	  'guesstimate' the battery charge
	* drivers/blazer.c: blazer: Fix test.battery.start  T00 doesn't make
	  any sense: the range should be 01-99 minutes
	* drivers/blazer.c: blazer: Fix shutdown.return  'SnR0000' is meant
	  to put the UPS down and not return 'Sn' should be used instead when
	  ondelay is 0
	* drivers/blazer.c: blazer: Fix shutdown delay  'offdelay' as used by
	  this driver is meant to be in the .2-.9 (12..54 seconds) and 01-10
	  (60..600 seconds) range.
	* data/driver.list.in, docs/Makefile.am, docs/blzr-subdrivers.txt,
	  docs/man/Makefile.am, docs/man/blzr.txt, docs/man/index.txt,
	  docs/man/nutupsdrv.txt, docs/new-drivers.txt, drivers/Makefile.am,
	  drivers/blzr.c, drivers/blzr.h, drivers/blzr_blazer-common.c,
	  drivers/blzr_blazer-common.h, drivers/blzr_megatec-old.c,
	  drivers/blzr_megatec-old.h, drivers/blzr_megatec.c,
	  drivers/blzr_megatec.h, drivers/blzr_mustek.c,
	  drivers/blzr_mustek.h, drivers/blzr_voltronic.c,
	  drivers/blzr_voltronic.h, drivers/blzr_zinto.c,
	  drivers/blzr_zinto.h, drivers/dstate-hal.c, drivers/dstate-hal.h,
	  tools/nut-usbinfo.pl: blzr: New driver 'blzr'  New driver for Q*
	  UPSes. Based on blazer, usbhid-ups and voltronic driver.  This
	  might address Issue #25
	* scripts/python/Makefile.am, scripts/python/app/gui-1.3.glade,
	  .../app/locale/it/LC_MESSAGES/NUT-Monitor.mo,
	  scripts/python/app/locale/it/it.po,
	  scripts/python/app/nut-monitor.desktop: Add italian translation
	* scripts/python/app/locale/fr/fr.po: Add source of french
	  translation
	* scripts/python/app/gui-1.3.glade.h,
	  scripts/python/app/locale/NUT-Monitor.pot: Add translation sources

2013-10-04  Frédéric BOHE <fredericbohe@eaton.com>

	* clients/upssched.c: Fix Linux compilation

2013-10-04  Frederic BOHE <fredericbohe@eaton.com>

	* include/common.h, server/sstate.c, server/upsd.c: Fix weird
	  difftime behavior

2013-10-03  Frederic BOHE <fredericbohe@eaton.com>

	* INSTALL.nut, clients/Makefile.am, clients/message.c,
	  clients/nutclient.cpp, clients/upsclient.c, clients/upslog.c,
	  clients/upsmon.c, clients/upssched.c, common/snprintf.c,
	  drivers/clone.c, drivers/libhid.h, drivers/libshut.h,
	  drivers/serial.c, drivers/serial.h, drivers/snmp-ups.h,
	  drivers/usbhid-ups.c, drivers/usbhid-ups.h, include/common.h,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  Try to get rid of warnings
	* .gitignore, scripts/Windows/.gitignore,
	  scripts/Windows/Installer/.gitignore,
	  scripts/Windows/Installer/ImageFiles/Others/.gitignore: Update
	  gitignore for Windows
	* drivers/Makefile.am: Remove useless link to intl which break
	  compilation on Linux
	* clients/Makefile.am, common/Makefile.am, common/wincompat.c,
	  drivers/Makefile.am, drivers/apcsmart.c, drivers/dstate.c,
	  drivers/netxml-ups.c, drivers/riello_usb.c, drivers/serial.c,
	  drivers/serial.h, drivers/upsdrvctl.c,
	  scripts/Windows/Installer/NUT-Installer.xml,
	  scripts/Windows/wininit.c, server/sstate.c, server/upsd.c,
	  tools/nut-scanner/Makefile.am, tools/nut-scanner/nutscan-serial.c,
	  tools/nut-scanner/scan_eaton_serial.c: Fix compilation on Windows

2013-10-02  Frédéric BOHE <fredericbohe@eaton.com>

	* data/driver.list.in: [HCL] update Eaton UPS

2013-10-02  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: [HCL] Add support for Eaton 5S  Add Eaton 5S
	  (USB ID 0x0463:0xffff) to the list of usbhid-ups supported models
	  (reported by Matt Ivie)

2013-09-30  Frédéric BOHE <fredericbohe@eaton.com>

	* drivers/libshut.c: Increment driver revision

2013-09-28  Alf Høgemark <alf@i100.no>

	* drivers/bcmxcp.c: bcmxcp: Fix handling of date and time format  The
	  date and time bytes are packed BCD, so it must be properly decoded.
	  The check for the Julian or Month:Day format was wrong Info on
	  format taken from
	  http://old.networkupstools.org/protocols/eaton/XCP_Rev_C1_Public_021309.pdf
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Add mapping for some
	  more meters and one more command  Add mapping for
	  PW_SET_TIME_AND_DATE command. Add mapping for input.bypass.voltage,
	  input.bypass.L1-N.voltage, input.bypass.L2-N.voltage,
	  input.bypass.L3-N.voltage. Add mapping for input.bypass.frequency.
	  Add mapping for ups.power.nominal if provided as meter, it was
	  previously only set on init. Change mapping for ups.realpower for
	  single phase. Tested on Eaton PW9130.
	* drivers/bcmxcp.c: bcmxcp: Remove newline on debug output for
	  outlets

2013-09-27  unknown <C9983617@GREFRWHP6009826.euro.ad.etn.com>

	* clients/Makefile.am: Fix upsclient link after rebase

2013-09-26  Frédéric BOHE <fredericbohe@eaton.com>

	* Makefile.am, clients/upsclient.c, clients/upsmon.c,
	  clients/upsmon.h, clients/upssched.c, common/Makefile.am,
	  common/common.c, common/wincompat.c, docs/Makefile.am,
	  docs/configure.txt, drivers/apc-mib.c, drivers/apcsmart.c,
	  drivers/bcmxcp_usb.c, drivers/belkinunv.c, drivers/bestuferrups.c,
	  drivers/clone-outlet.c, drivers/clone.c, drivers/dstate.c,
	  drivers/genericups.c, drivers/isbmex.c, drivers/main.c,
	  drivers/nut-libfreeipmi.c, drivers/serial.c, drivers/serial.h,
	  drivers/upsdrvctl.c, include/common.h, include/wincompat.h,
	  scripts/Windows/README, scripts/Windows/wininit.c, server/conf.c,
	  server/netssl.c, server/sstate.c, server/upsd.c,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/nutscan-init.c,
	  tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_ipmi.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c:
	  More changes after rebase
	* scripts/Windows/DriverInstaller/nutscan-usb.h: Some fixes after
	  rebase

2013-09-24  Frédéric BOHE <fredericbohe@eaton.com>

	* drivers/libshut.c, tools/nut-scanner/scan_eaton_serial.c: Change
	  RTS init level for PnP devices  Setting RTS line to 1 disturbs
	  communication with some devices using serial plug and play feature.
	  So we need to initialize it to 0.

2013-09-07  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Add support for Forza FX-1500LCD  Add Forza
	  FX-1500LCD (USB ID 0x0665:0x5161) to the list of blazer_usb
	  supported models (reported by Gabor Tjong A Hung)
	* data/driver.list.in: Add Schneider APC AP9630 SNMP management card
	  Add Schneider APC AP9630 SNMP management card to the list of
	  snmp-ups supported models. Note that it requires the option
	  "privProtocol=AES" to work (reported by Tim Rice)
	* drivers/.gitignore: Git ignore drivers/voltronic_{ser,usb}  Add
	  drivers/voltronic_{ser,usb} to the list of Git ignored files

2013-08-28  Daniele Pezzini <hyouko@gmail.com>

	* docs/website/css/web-layout.css: Improve CSS readability
	* docs/stable-hcl.txt, docs/website/css/web-layout.css: Address Issue
	  #48  Move legend out of filters' block. (HTML+CSS)

2013-08-28  Charles Lepple <clepple+nut@gmail.com>

	* packaging/RedHat/.gitignore, packaging/debian/.gitignore,
	  packaging/mandriva/.gitignore, packaging/opensuse/.gitignore:
	  Remove .gitignore files from long-gone packaging directory.

2013-08-10  Alf Høgemark <alf@i100.no>

	* drivers/bcmxcp.c: bcmxcp: Add instcmd for system test capabilities
	  based on what UPS support

2013-08-09  Alf Høgemark <alf@i100.no>

	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Code restructure,
	  declare variables at top of method  After re-reading code style,
	  compiled with -pedantic, and got some warnings, so moved variable
	  declarations to the top of methods
	* drivers/bcmxcp.c, drivers/bcmxcp_io.h, drivers/bcmxcp_ser.c,
	  drivers/bcmxcp_usb.c: bcmxcp: Reformat code, remove tabs in the
	  middle of lines. No code changes  After re-reading the developer
	  code style guide, use spaces and not tabs in the middle of lines to
	  align text
	* drivers/bcmxcp.h: bcmxcp: Reformat code, remove tabs in the middle
	  of lines. No code changes  After re-reading the developer code
	  style guide, use spaces and not tabs in the middle of lines to
	  align text
	* drivers/bcmxcp.c: bcmxcp: Refactor code, use if-else if rather than
	  4 if statements

2013-08-08  Alf Høgemark <alf@i100.no>

	* drivers/bcmxcp.c: bcmxcp: Add parameter to nut_find_infoval to
	  control debug output  We do not want debug output if
	  nut_find_infoval does not find a mapped value in all cases. For
	  example, when a command byte is not mapped to a instcmd, we do not
	  want debug output.
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Remove
	  PW_UPDATE_POWER_SOURCE_STATUS_COMMAND, it seems very unlikely to be
	  used
	* drivers/bcmxcp.h: bcmxcp: Cosmetic changes constant definitions. No
	  code changes.
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Use command map to
	  control which instcmd are supported  Use the command map info
	  retrieved from UPS to list all commands supported by the UPS at
	  debug level 2. Use the info from command map to set up which
	  instcmd the UPS supports.
	* drivers/bcmxcp.c: bcmxcp: Use info_lkp_t structure for mapping
	  topology info  Make code simpler by using the info_lkp_t structure
	  for mapping value from topology block to text presented to user as
	  ups.description
	* drivers/bcmxcp.c: bcmxcp: Cosmetic commentary fixes and remove some
	  empty lines. No code changes
	* drivers/bcmxcp.c: bcmxcp: Output unsupported alarms on debug level
	  3, not level 2  The supported alarms in alarm map is outputted at
	  debug level 2. The unsupported alarms should be outputted at debug
	  level 3, it is not that interesting. Also remove debug outputted
	  empty line after table heading line for meter map and alarm map.
	* drivers/bcmxcp.c: bcmxcp: Refactor code for setting which alarms
	  are supported, to avoid code duplication  Refactor the code which
	  checks the alarm map for supported alarms, by making a new method
	  which checks the alarm bit to see if the alarm is supported.
	* drivers/bcmxcp.c: bcmxcp: Only include ups.serial and device.part
	  if they have a value  Only set info about ups.serial and
	  device.part if the UPS actually report useful info for these.
	  Remove the handling of space characters as meaning string
	  termination for ups.serial, this is not done for part number, and
	  according to bcmxcp spec are these both 16 byte ascii text
	  messages. Move Nominal output frequence handling up, placing it
	  just below Nominal output voltage

2013-08-04  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/index.txt, docs/man/voltronic_ser.txt,
	  docs/man/voltronic_usb.txt: voltronic* documentation updates  - Add
	  to man page index - Reword a few sections - Fix typos - Comment out
	  USB section in voltronic_ser.txt  Long-term, we should probably
	  figure out a better way to maintain two parallel driver pages like
	  this. The blazer man page is the same for both, with .so links for
	  the man pages, but then you have USB info in a serial driver page.
	  For now, voltronic_usb.txt is just a copy of voltronic_ser.txt with
	  a few _ser-to-_usb replacements.

2013-08-01  Daniele Pezzini <hyouko@gmail.com>

	* drivers/voltronic.c: Get rid of 'god.knows' variables

2013-07-26  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/powercom-hid.c: Forgotten subdriver version bump

2013-07-25  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/upsc.txt, docs/man/upscmd.txt, docs/man/upsrw.txt:
	  Complete upsclient commands usage note  Add a note for scripting
	  usage, for upsc, upscmd and upsrw, to state the obvious: only
	  consider the output from stdout for data requested. stderr may
	  contain error messages, which can disrupt your script execution.
	  Address the second task and closes Github issue #30
	* clients/upsclient.c: Fix a minor regression in upsclient output
	  NSS support has introduced a minor regression in upsclient output.
	  Clients such as upsc, upscmd and upsrw were particularly affected.
	  This patch restores a default behavior similar to prior versions.
	  However, "-v" option remains to be implemented.  Address the first
	  task of Github issue #30

2013-07-24  Frédéric BOHE <fredericbohe@eaton.com>

	* configure.in: Fix wrong errno reported by connect on Solaris
	  Closes issue #43
	* clients/upsclient.c: Fix connect in multi-threaded environnement on
	  AIX  Closes issue #42

2013-07-24  Charles Lepple <clepple+nut@gmail.com>

	* docs/website/web-layout.conf: Add GitHub link to website sidebar

2013-07-23  Frédéric BOHE <fredericbohe@eaton.com>

	* clients/upsclient.c: Fix nut-scanner crash on nut server scan,
	  upscli_sslinit calls upscli_readline which might calls
	  upscli_disconnect in case of error. upscli_disconnect frees
	  ups->host and set it to NULL, so it is illegal to use ups->host
	  after a call to upscli_sslinit.
	* clients/Makefile.am: Fix connect in multi-thread environnement on
	  Solaris
	* tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-device.h, tools/nut-scanner/scan_avahi.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-scanner/scan_xml_http.c: [nut-scanner] Make sure to
	  return the first device of the list.

2013-07-23  Charles Lepple <clepple+nut@gmail.com>

	* clients/Makefile.am: Revert "Fix connect in multi-thread
	  environnement on Solaris"  This reverts the previous commit. It
	  overwrites the CFLAGS which specifies one of the key include
	  directories.

2013-07-22  Charles Lepple <clepple+nut@gmail.com>

	* docs/download.txt: Download information: reference Git
	* configure.in: Bump NUT version to 2.7.1-pre1

2013-07-21  Charles Lepple <clepple+nut@gmail.com>

	* include/Makefile.am: nut_version.h: trim tag characters through
	  first slash

2013-07-16  Sven Putteneers <sven.putteneers@gmail.com>

	* scripts/python/app/NUT-Monitor: NUT-Monitor: parse battery.runtime
	  as float  Without this patch, I get a flood of "Invalid literal for
	  int with base 10: '28500.00" errors.
	  http://news.gmane.org/find-root.php?message_id=%3c51E54B99.9030908%40gmail.com%3e

2013-07-10  Arnaud Quette <arnaud.quette@free.fr>

	* docs/website/news.txt, docs/website/projects.txt: Reference walNUT
	  Gnome Shell extension

2013-07-09  Elio Parisi <E.Parisi@riello-ups.com>

	* drivers/riello.h, drivers/riello_ser.c, drivers/riello_usb.c:
	  riello: whitespace fixes, and read nominal values only once  Bumped
	  driver versions to 0.02

2013-07-09  Charles Lepple <clepple+nut@gmail.com>

	* drivers/riello_ser.c, drivers/riello_usb.c: riello: suppress some
	  warnings about %lu versus %u

2013-07-07  Alf Høgemark <alf@i100.no>

	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Add support for reading
	  topology map and setting ups.description based on it
	* drivers/bcmxcp.c: bcmxcp: Initialize variables in
	  calculate_ups_load method
	* drivers/bcmxcp.c: bcmxcp: Output more info hardware capabilities in
	  debug mode  Add some more debug output on driver init, to let us
	  know what the hardware support. Outputs length of alarm history
	  log, topology block length and maximum supported command length.
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Add mapping for
	  input.quality to meters
	* drivers/bcmxcp.c: bcmxcp: Add Alf Høgemark as one of the authors
	  for the driver
	* drivers/bcmxcp.c: bcmxcp: Only calculate ups.load if the UPS does
	  not report it directly  If the UPS does not report a meter mapped
	  to ups.load, we try to calculate the ups.load, but we do not
	  calculate it if the UPS can report the ups.load directly
	* drivers/bcmxcp.c: bcmxcp: Use defined constants in setvar, and
	  handle BCMXCP_RETURN_ACCEPTED_PARAMETER_ADJUST  Use the defined
	  constants from header file, instead of magic numbers in setvar
	  method. Add handling of BCMXCP_RETURN_ACCEPTED_PARAMETER_ADJUST.
	  Report upsdrv_comm_good on successful execution of setvar to UPS.
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Add handling of
	  BCMXCP_RETURN_ACCEPTED_PARAMETER_ADJUST and others in ACK block
	  Add support for handling more return statuses when exeucting
	  commands, the most important being
	  BCMXCP_RETURN_ACCEPTED_PARAMETER_ADJUST, which means the command
	  was executed. The others added all handles cases where command was
	  not executed, but you now get a more detailed entry in log as to
	  why it was not executed.
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Add mapping for
	  output.L<phase>.power to meters  Not tested on hardware, due to
	  lack of hardware supporting it
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Add mapping for
	  battery.current.total to meters  Not tested on hardware, due to
	  lack of hardware supporting it

2013-07-06  Alf Høgemark <alf@i100.no>

	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Add mapping for
	  input.realpower to meters  input.realpower is not listed in
	  http://www.networkupstools.org/docs/developer-guide.chunked/apas01.html,
	  but other drivers use it. Not tested on hardware, due to lack of
	  hardware supporting it
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Add mapping for
	  ambient.1.temperature to meters  Not tested on hardware, due to
	  lack of hardware supporting it
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Add mapping for
	  input.power to meters  input.power is not listed in
	  http://www.networkupstools.org/docs/developer-guide.chunked/apas01.html,
	  but other drivers use it. Not tested on hardware, due to lack of
	  hardware supporting it
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Add mapping for
	  output.powerfactor and input.powerfactor to meters
	  input.powerfactor is not listed in
	  http://www.networkupstools.org/docs/developer-guide.chunked/apas01.html,
	  so a bit unsure if this should be added. Not tested on hardware,
	  due to lack of hardware supporting it
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Add mapping for
	  output.L<phase>.power.percent to meters  Not tested on hardware,
	  due to lack of hardware supporting it
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: map ups.date and
	  ups.time to meters.  Not testes on hardware, due to lack of
	  hardware supporting it
	* drivers/bcmxcp.h: bcmxcp: Comment which meter map constants are
	  mapped to nut variables

2013-07-05  Alf Høgemark <alf@i100.no>

	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Add constants for all
	  bcmxmp meter map, and replace magic numbers with constants  Take
	  all the bcmxcp meter map defined in
	  http://old.networkupstools.org/protocols/eaton/XCP_Meter_Map_021309.pdf
	  and put them into the bcmxcp.h file. Update the bcmxcp.c file,
	  replacing magic numbers for meter map by using the corresponding
	  defined constant.

2013-07-04  Alf Høgemark <alf@i100.no>

	* drivers/bcmxcp.c: bcmxcp: Let decode_instcmd_exec also handle short
	  read from UPS
	* drivers/bcmxcp.c: bcmxcp: Add test.panel.start instcmd support
	* drivers/bcmxcp.c: bcmxcp: Use one fuction to decode command
	  execution status in all places  To avoid duplicating the logic
	  which checks the status of command execution at UPS, add a new
	  function which contains the check, and use that function whenever
	  we send a command to UPS and get status back from UPS.
	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: Define byte for
	  choosing which system test to run in header file
	* drivers/bcmxcp.c: bcmxcp: Fix outlet number for
	  outlet.x.shutdown.return if more than 2 outlets
	* drivers/bcmxcp.c: bcmxcp: Let upsdrv_shutdown call instcmd for
	  shutting down  To avoid code duplication between upsdrv_shutdown
	  and instcmd, let the upsdrv_shutdown method first try to issue a
	  shutdown.return instcmd, and then proceed with shutdown.stayoff if
	  the shutdown.return failed. This seems to be in line with what the
	  usbhid driver does.
	* drivers/bcmxcp.c: bcmxcp: report upsdrv_comm_good at successful
	  execution of instcmd
	* drivers/bcmxcp.c: bcmxcp: Return more specific error codes from
	  instcmd  Use the available STAT_INSTCMD_FAILED and
	  STAT_INSTCMD_INVALID as return value from the instcmd method when
	  applicable, instead of always returning STAT_INSTCMD_UNKNOWN or -1.

2013-07-03  Charles Lepple <clepple+nut@gmail.com>

	* drivers/bcmxcp.c: bcmxcp: indentation fixes (no code changes)

2013-07-03  Alf Høgemark <alf@i100.no>

	* drivers/bcmxcp.c, drivers/bcmxcp.h: bcmxcp: use command map if
	  supplied.  If UPS supplies command map, use it to control what
	  commands we register with dstate_addcmd. If UPS does not supply
	  command map, we register default commands with dstate_addcmd
	* data/cmdvartab, drivers/bcmxcp.c: bcmxcp: cosmetic: make changes by
	  Prachi Gandhi more coherent with rest of driver
	* drivers/bcmxcp.c: bcmxcp: Fix method name outputted in debug
	  message  Reference:
	  http://article.gmane.org/gmane.comp.monitoring.nut.devel/6458
	  Whitespace was addressed in previous commit (clepple)
	* drivers/bcmxcp.c: bcmxcp: add ups.load and battery.voltage.low
	  Adapted slightly for bcmxcp branch (original patch was against
	  master). Bump driver version to 0.28 as well. (clepple)  Reference:
	  http://article.gmane.org/gmane.comp.monitoring.nut.devel/6460

2013-06-18  Daniele Pezzini <hyouko@gmail.com>

	* drivers/voltronic.c: Add unknown/unused and commented capability
	  entries  Might be useful for future versions.
	* data/driver.list.in: Add devices to HCL
	* drivers/voltronic.c, drivers/voltronic_ser.c,
	  drivers/voltronic_usb.c: Fix warning flag + versioning  Some UPSes
	  seem to reply with a \0 just before the end of the warning flag
	  (obtained with QWS), as a consequence of that, the string in C is 1
	  char shorter than expected (the \r is not within the string). ->
	  Fix voltronic_warning function. Increase driver versions.
	* drivers/voltronic.c, drivers/voltronic_ser.c,
	  drivers/voltronic_usb.c: Fix shutdown.return + versioning  Fix
	  shutdown.return when ondelay = 0 -> split between offdelay < 60 and
	  offdelay > 60. Increase driver versions.

2013-06-17  Daniele Pezzini <hyouko@gmail.com>

	* docs/man/voltronic_ser.txt, docs/man/voltronic_usb.txt: Correct
	  typos @shutdown.{return,stayoff}
	* drivers/voltronic.c, drivers/voltronic_ser.c,
	  drivers/voltronic_usb.c: Imrove shutdown sequence + versioning
	  Split shutdown and stopping of pending shutdowns so that if there's
	  no shutdown pending and the UPS doesn't accept a shutdown.stop in
	  this situation (i.e. it replies '(NAK') the shutdown procedure
	  doesn't get halted. Increase version number of drivers.
	* data/driver.list.in: Correct typos & add software reference in HCL
	* docs/man/voltronic_ser.txt, docs/man/voltronic_usb.txt: Improve
	  docs layout
	* drivers/voltronic_usb.c: Add USBDevice_t structure
	* drivers/voltronic_usb.c: Add comment so that autogen rules have the
	  right comment
	* drivers/voltronic_ser.c, drivers/voltronic_usb.c: Correct manpage
	  references

2013-06-14  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* scripts/Aix/nut-aix.spec.in, scripts/Aix/nut.init: AIX: packaging &
	  init script improvements  (cherry picked from commit
	  ce195e3a2eff1abbd8e192f4d3e278017d7ffb21)

2013-06-12  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* scripts/Aix/nut.init: Fixed client startup detection  (cherry
	  picked from commit 23df5e811cc9008bfa0a37bd174b59890a3760a6)
	* scripts/Aix/nut-aix.spec.in: Fixed AIX RPM specfile  (cherry picked
	  from commit 11ba37bf36dcda0398c8c62fab838dd00e54c5db)

2013-06-11  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* scripts/Aix/nut-aix.spec.in: Allow libneon-based XML driver &
	  scanning for AIX  (cherry picked from commit
	  4c2e89ec584b2015b22f4599d1571c26f2f94e3d)

2013-06-10  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* clients/Makefile.am: Fix of AIX-specific parseconf linking bug
	  Added dummy do_upsconf_args to binaries that use libcommon to
	  satisfy the linker. libcommon links libparseconf, which calls
	  do_upsconf_args supplied from above as an implementation-specific
	  routine.  (cherry picked from commit
	  0078f9383d3a7af4f3edfed6c78de387a12c6b2b)

2013-05-14  Bo Kersey <bo@vircio.com>

	* drivers/bestfcom.c: bestfcom: Use fc.idealbvolts for calculating
	  percent charge  'I have a Best Ferrups 3.1KVA and I noticed that
	  the percent battery voltage reported from upsc never gets above
	  69.9%.  I believe there is a mistake in the driver.  The battery
	  percentage is calculated based on the High Battery Alarm Setpoint
	  (59.6V) instead of the Ideal Voltage which is about 54V (4
	  batteries x 13.6V).  I examined the source code and found that the
	  variable fc.fullvolts is the result of querying parameter 67 from
	  the UPS.  This parameter is defined per Ferrups Tip 503 as: "The
	  battery voltage at which the UPS sound a High Battery alarm"  A
	  better value to use in determining the percent battery voltage
	  would be fc.idealbvolts which is calculated in the driver source...
	  I propose the following patch to fix the battery.charge (% battery
	  full) reading.'  Ref:
	  http://article.gmane.org/gmane.comp.monitoring.nut.user/7891

2013-05-13  Michal Soltys <soltys@ziu.info>

	* docs/nut-names.txt: Add device.uptime to nut-names.txt  Also fix
	  one typo.
	* docs/man/apcsmart.txt, drivers/apcsmart.c: apcsmart: allow users to
	  select non-canonical tty mode  The main reason behind this addition
	  is windows compatibility, see
	  http://article.gmane.org/gmane.comp.monitoring.nut.user/7762  IGNCR
	  has been readded earlier in commit
	  20c52bee77fa0b3ea3c7f8bec25afd103b7ff4a2 - this might be enough to
	  handle windows behavior, but if it's not the case - using non
	  canonical processing (same as is present in apcsmart-old) should
	  solve any pressing issues.
	* drivers/apcsmart_tabs.c: apcsmart: add device.uptime to vartab

2013-05-03  Andrew Avdeev <andrew.avdeev@gmail.com>

	* drivers/powercom-hid.c: PowerCOM BNT-1000AP HID instant commands
	  Adds a few vendor-specific HID mappings for PowerCOM.  Instant
	  commands supported on UPS [pcm]:  beeper.disable - Disable the UPS
	  beeper beeper.enable - Enable the UPS beeper beeper.toggle - Toggle
	  the UPS beeper load.off - Turn off the load immediately load.on -
	  Turn on the load immediately shutdown.return - Turn off the load
	  and return when power is back shutdown.stayoff - Turn off the load
	  and remain off test.battery.start.quick - Start a quick battery
	  test  http://article.gmane.org/gmane.comp.monitoring.nut.devel/6435

2013-04-27  Charles Lepple <clepple+nut@gmail.com>

	* include/Makefile.am: nut_version.h: remove SVN plumbing  This
	  should eliminate the "Unversioned directory" message. The source of
	  the version information is also listed in nut_version.h  Closes
	  Github issue #15

2013-04-26  Michal Soltys <soltys@ziu.info>

	* drivers/apcsmart.c, drivers/apcsmart_tabs.h: apcsmart: remove
	  APC_DEPR flag  APC_{MULTI, PRESENT} are both sufficient for
	  handling 1:n and n:1 relations

2013-04-25  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* clients/Makefile.am, clients/upsclient.c, configure.ac:
	  linupsclient: NUT scanning on AIX bugfix  1/ A simmilar bug like in
	  Solaris is in AIX itself---non-blocking connect may return -1 while
	  errno == 0.  Shall be treated as EINPROGRESS. 2/ Linking of
	  libupsclent.so on AIX requires libcommon, otherwise scanning for
	  NUT crashes with SIGSEGV on unresolved usplogx  (cherry picked from
	  commit 16177f99bc995852bb86d2183958f24f11993632)

2013-04-25  Christian Wiese <christian.wiese@securepoint.de>

	* tools/nut-scanner/Makefile.am, tools/nut-scanner/scan_usb.c:
	  nut-scanner: fix scan_usb to remove trailing spaces from output
	  strings  This patch uses rtrim() from libcommon to remove trailing
	  spaces from serialnumber, device_name and vendor_name.  see:
	  https://github.com/networkupstools/nut/issues/26

2013-04-22  Michal Soltys <soltys@ziu.info>

	* drivers/apcsmart.c: apcsmart: expand APC_MULTI to apc:nut 1:n cases

2013-04-18  Arnaud Quette <arnaud.quette@free.fr>

	* docs/new-drivers.txt: Add a reference to the SNMP subdrivers
	  chapter

2013-04-16  Michal Soltys <soltys@ziu.info>

	* drivers/apcsmart.c: apcsmart: remove strchr() check from
	  legacy_verify()  As vartab doesn't contain characters from
	  APC_UNR_CMDS.

2013-04-15  Michal Soltys <soltys@ziu.info>

	* drivers/apcsmart.c, drivers/apcsmart_tabs.c: apcsmart: change
	  approach to 2 digit compatibility entries  As reported in
	  http://article.gmane.org/gmane.comp.monitoring.nut.user/7762 - 2
	  digit values reported through 'b' are really >255V voltage values.
	  So we match whole 00 - FF set as single (fake) compat entry.
	* drivers/apcsmart.h: apcsmart: re-add CR to ignore sets  Despite
	  icanon mode, windows (supposedly) is uncapable of ignoring CR in
	  fashion analogous to IGNCR flag.  See
	  http://article.gmane.org/gmane.comp.monitoring.nut.user/7762 for
	  rationale.
	* drivers/apcsmart_tabs.c: apcsmart: add regex format to
	  ambient.0.temperature  'T' might (on older units) also mean "ups
	  uptime", so we want to distinguish that case gracefully. The
	  formats are:  uptime: 000.0 temp: 00.00
	* drivers/apcsmart.c, drivers/apcsmart.h, drivers/apcsmart_tabs.c,
	  drivers/apcsmart_tabs.h: apcsmart: move variable regex matching
	  into vartab  This also allows us to properly validate (in near
	  future) cases when single apc variable can match multiple nut
	  variables.  Other changes:  - adjust rexhlp() to follow 0 for false
	  and non-0 for true, like in the rest of the functions - remove
	  valid_cmd() as rexhlp() can be used directly with formats in the
	  table; furthermore the warning (in case of failure) could be
	  confusing when we add nut:apc n:1 case

2013-04-12  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* docs/man/nutconf.txt: nutconf man page update

2013-04-11  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/libusb.c: Set USB timeout to 5 seconds  Set the low level
	  USB timeout back to the standard 5 seconds. This was set to 4
	  seconds, for performance reasons, but is now causing issues with
	  some devices (reported by Stefan "stevenbg", GitHub issue #23)

2013-04-10  Elio Parisi <E.Parisi@riello-ups.com>

	* drivers/riello.c, drivers/riello.h, drivers/riello_ser.c,
	  drivers/riello_usb.c: Riello drivers: fix memset() arguments, and
	  use stdint.h  Reference:
	  http://article.gmane.org/gmane.comp.monitoring.nut.devel/6417

2013-04-10  Daniele Pezzini <hyouko@gmail.com>

	* data/driver.list.in, docs/man/Makefile.am,
	  docs/man/voltronic_ser.txt, docs/man/voltronic_usb.txt,
	  drivers/Makefile.am, drivers/voltronic.c, drivers/voltronic.h,
	  drivers/voltronic_ser.c, drivers/voltronic_usb.c: New drivers:
	  voltronic_ser/voltronic_usb  Reference:
	  http://article.gmane.org/gmane.comp.monitoring.nut.devel/6418

2013-04-10  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/.gitignore: Ignore voltronic_* generated documentation
	* drivers/voltronic_usb.c: voltronic_usb: switch to new
	  is_usb_device_supported() syntax
	* tools/nut-usbinfo.pl: Add voltronic_usb driver to USB info
	  extractor tool

2013-04-04  Émilien Kia <emilien.kia@gmail.com>

	* configure.in, docs/new-clients.txt, scripts/Makefile.am,
	  scripts/README, scripts/java/.gitignore, scripts/java/Makefile.am,
	  scripts/java/README, scripts/java/jNut/.gitignore,
	  scripts/java/jNut/README, scripts/java/jNut/pom.xml,
	  .../main/java/org/networkupstools/jnut/Client.java,
	  .../java/org/networkupstools/jnut/Command.java,
	  .../main/java/org/networkupstools/jnut/Device.java,
	  .../org/networkupstools/jnut/NutException.java,
	  .../java/org/networkupstools/jnut/Scanner.java,
	  .../org/networkupstools/jnut/StringLineSocket.java,
	  .../java/org/networkupstools/jnut/Variable.java,
	  .../java/org/networkupstools/jnut/ClientTest.java,
	  .../java/org/networkupstools/jnut/ScannerTest.java,
	  scripts/java/jNutList/README, scripts/java/jNutList/pom.xml,
	  .../java/org/networkupstools/jnutlist/AppList.java,
	  scripts/java/jNutWebAPI/README, scripts/java/jNutWebAPI/pom.xml,
	  .../jnutwebapi/NutRestProvider.java,
	  .../jnutwebapi/RestWSApplication.java,
	  .../jnutwebapi/ScannerProvider.java,
	  .../jNutWebAPI/src/main/webapp/WEB-INF/web.xml: Remove java related
	  files (jNut) which will be moved to a separated repository.  See
	  issues: - https://github.com/networkupstools/nut/issues/2 -
	  https://github.com/networkupstools/nut/issues/22

2013-03-29  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* include/nutconf.h, tools/nutconf/nutconf.cpp: nutconf:
	  --{add|set}-device: <key>=<value> support  Added support for
	  setting virtually any <key>=<value> pairs for devices by the above
	  options. Now, the synopsis of the options argument lists is: <id>
	  <driver> <port> [<key}=<value>]* (i.e. description is set as
	  desc="blah blah blah")

2013-03-26  Alex Lov <alex@alexlov.com>

	* drivers/ietf-mib.c: Fix OID for input.bypass.voltage in ietf-mib.c
	  Ooops, forgot fix one
	* drivers/ietf-mib.c: Fix OIDs for bypass group in ietf-mib.c
	  Reference http://tools.ietf.org/html/rfc1628#page-12 For bypass
	  voltage, current and power

2013-03-18  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* tools/nutconf/nutconf.cpp: nutconf: reintroduction of funcs lost in
	  trans.  --set-notifycmd, --set-minsupplies & --set-powerdownflag
	  options reintroduced after being lost in recent multi-step
	  transition to git

2013-03-13  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* Makefile.am: AIX packages: make package does the trick  (cherry
	  picked from commit 1d25bd2868339decace5b3028c834746f2824670)

2013-03-13  Arnaud Quette <arnaud.quette@free.fr>

	* docs/FAQ.txt: Add a FAQ entry for supported but not working USB UPS

2013-03-12  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* scripts/Aix/nut-aix.spec.in, scripts/Aix/nut.init: AIX packaging:
	  nut-client uninstal bugfix  Packages clean uninstallation
	  (lost/forgotten commit)  (cherry picked from commit
	  f6dd1aec5d2157a3ba3654621fa8e2ac88b060f9)

2013-03-10  Charles Lepple <clepple+nut@gmail.com>

	* tests/Makefile.am: tests: Fix build without libcppunit
	* scripts/upower/95-upower-hid.rules: upower: update generated rules
	  file

2013-03-09  Charles Lepple <clepple+nut@gmail.com>

	* docs/download.txt: Update VMware ESXi package link (from René
	  Garcia)

2013-03-08  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* clients/upsclient.c, configure.ac: Solaris/i386: non-blocking
	  connect WA  (cherry picked from commit
	  d2b466b9ee5402074ccbf7f2967433350affdbcc)

2013-03-04  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* Makefile.am, configure.ac, scripts/Aix/nut-aix.spec.in,
	  scripts/Aix/nut.init: AIX packaging  AIX init script and RPM spec.
	  file added  (cherry picked from commit
	  3851525edcb417f96a5d1c12fb786b85095b54d4)

2013-02-28  Charles Lepple <clepple+nut@gmail.com>

	* Makefile.am, tools/gitlog2changelog.py: Issue #4: Specify starting
	  commit to gitlog2changelog.py

2013-02-27  Michal Soltys <soltys@ziu.info>

	* drivers/apcsmart_tabs.c: apcsmart: add old APC 600I compatibility
	  entry  Though without 'T' - until we handle situations when single
	  nut variable is able to correspond to more than one apc var.
	  Testet-by: Markus Pruehs <apc@markus.pruehs.com>

2013-02-26  Charles Lepple <clepple+nut@gmail.com>

	* tools/gitlog2changelog.py: git-changelog: really fixes #4 (missing
	  entries)  The script was discarding any commits which happened to
	  include the word 'commit'.
	* tools/gitlog2changelog.py: git-changelog: remove re.* calls for
	  simple string matching

2013-02-25  Émilien Kia <emilien.kia@gmail.com>

	* clients/nutclient.cpp, clients/nutclient.h: Add comparison operator
	  for nut::Device class.  Make std::set<nut::Device> work and not
	  dropping devices anymore.

2013-02-25  Charles Lepple <clepple+nut@gmail.com>

	* Makefile.am, tools/Makefile.am: git-changelog: Fix list of
	  distributed files
	* tools/gitlog2changelog.py: Fixes issue #4: ChangeLog now includes
	  single-file commits.
	* Makefile.am, tools/gitlog2changelog.py: Issue #4: generate
	  ChangeLog from git logs  This seems to generate long ChangeLog
	  entries in the format we had with svn2cl, but some commits appear
	  to be missing.
	* tools/gitlog2changelog.py: Import gitlog2changelog.py (2008-12-27)
	  https://github.com/cryos/avogadro/commit/8be9957e5b3b5675701ef2ed002aa9e718d4146e#scripts/gitlog2changelog.py

2013-02-24  Charles Lepple <clepple+nut@gmail.com>

	* autogen.sh, configure.ac, scripts/Makefile.am,
	  scripts/devd/.gitignore, scripts/devd/Makefile.am,
	  scripts/devd/README, tools/nut-usbinfo.pl: FreeBSD: generate
	  devd.conf files for USB UPSes  This adds a --with-devd-dir=PATH
	  option to ./configure, which defaults to /usr/local/etc/devd (or
	  /etc/devd, whichever is found first).  Unlike udev, there does not
	  seem to be a way to re-trigger rules at runtime. This means you
	  will likely need to unplug and replug your UPS after installing the
	  new nut-usb.conf file.

2013-02-23  Charles Lepple <clepple+nut@gmail.com>

	* drivers/bcmxcp.c: bcmxcp: remove unused variable

2013-02-21  Michal Soltys <soltys@ziu.info>

	* drivers/apcsmart_tabs.c: apcsmart: minor fixups to compat. tables
	* drivers/apcsmart.c: apcsmart: verify/setup fixups  legacy_verify()
	  - check against commands we always ignore oldapcsetup() - extra
	  comments, minor flow change

2013-02-21  Arnaud Quette <arnaud.quette@free.fr>

	* .gitignore, scripts/HP-UX/.gitignore: Git ignored files completion

2013-02-17  Charles Lepple <clepple+nut@gmail.com>

	* tools/git-svn.authors, tools/svn2cl.authors: Remove obsolete
	  authors files.

2013-02-16  Charles Lepple <clepple+nut@gmail.com>

	* docs/website/news.txt: News: Git conversion
	* docs/developers.txt: Update developer documentation for Git
	  repository

2013-02-16  Arnaud Quette <arnaud.quette@free.fr>

	* .gitignore: Git ignored files completion

2013-02-08  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* tools/nutconf/nutconf.cpp: nutconf: --scan-serial port list bugfix
	  Piggybacking: added device type check to skip invalid devices
	  returned from libnutscan
	* tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-device.h: libnutscan: dev. type strings
	  array size fixed

2013-02-07  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* tools/nut-scanner/nutscan-device.c: libnutscan: serial device type
	  string undefined

2013-02-06  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Solaris/nut.in, scripts/Solaris/postinstall.in: [Solaris]
	  Fix postinstall user/group, and service start  * Fix postinstall
	  user/group detection/creation. * Fix service start depending on the
	  mode, and add poweroff command.

2013-02-05  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutconf.cpp, common/nutwriter.cpp, docs/man/nutconf.txt,
	  include/nutconf.h, tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-display.c,
	  tools/nut-scanner/scan_avahi.c,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-scanner/scan_xml_http.c, tools/nutconf/nutconf.cpp:
	  nutconf: another round of bugfixes  --{get|set}-mode options have
	  replaced --mode option --set-mode option actually sets the mode in
	  nut.conf libnutscan provides devices list rewinded (i.e. handled by
	  the head) libnutscan options fixed (so that the 1st is dynamic,
	  too)
	* tools/nutconf/nutconf.cpp: nutconf: proper device config dump
	* tools/nutconf/nutconf.cpp: nutconf: device with no options bugfix
	* docs/man/Makefile.am, tools/nutconf/nutconf.cpp: nutconf: bugfixes
	  + HTML manpage

2013-02-04  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/Makefile.am, docs/man/nutconf.txt, include/Makefile.am,
	  tests/Makefile.am, tests/nutconf_ut.cpp, tools/nutconf/Makefile.am,
	  tools/nutconf/nutconf.cpp: nutconf: compilation & finishing touches

2013-02-04  Emilien Kia <kiae.dev@gmail.com>

	* include/proto.h: Move __cplusplus/extern "C" begin block before to
	  fix a problem of ifdef when included in real C++ code.

2013-02-01  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* docs/man/Makefile.am, docs/man/nutconf.txt: nutconf: manpage added
	* tests/nutconf_ut.cpp, tools/nutconf/nutconf.cpp: nutconf: added
	  --scan-serial option  Piggybacking: IPMI devices scanning updated
	  Fixed nutconf UT

2013-02-01  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* configure.in, scripts/HP-UX/makedepot.sh, scripts/HP-UX/nut.psf.in,
	  scripts/HP-UX/postinstall.in: [HP-UX] : add postinstal script for
	  installing services files.

2013-02-01  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/snmp-ups.txt: Update SNMP driver documentation  Mentioning
	  'mib' is not needed anymore since NUT 2.6.2. Also mention 'v3' as
	  an allowed value for 'snmp_version' (reported by Tim Rice)

2013-01-31  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* tools/nutconf/nutconf.cpp: nutconf: --scan-snmp option added

2013-01-30  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/Makefile.am, configure.in, tools/Makefile.am,
	  tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-device.h, tools/nutconf/Makefile.am,
	  common/nutconfbin.cpp => tools/nutconf/nutconf.cpp: nutconf:
	  --scan-* options added  --scan-snmp is still not implemented, TODO
	  --scan-serial is missing, too All other device protocols should
	  work as long as libnutscan works.

2013-01-29  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutconfbin.cpp: nutconf: --{set|add}-user options added
	  NOTE: The options ONLY manipulate upsd.users configuration file. It
	  shall have to be discussed how upsmon.conf shall be kept in sync
	  with the upsmon user settings (TODO).

2013-01-29  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* drivers/apcsmart.c, drivers/apcsmart.h, drivers/apcsmart_tabs.c,
	  drivers/apcsmart_tabs.h: apcsmart: implement #311678 (multiple
	  values per variable)  This is a bit more general than the original
	  request.  All variables that return multiple comma-separated
	  values, are added as *.N.* where 1 <= N <= APC_PACK_MAX; the
	  variables are stored with temporary name *.0.* in apcsmart_tabs.c,
	  but only at least 1 and at most 4 are added per update run
	  (superfluous - if any - are removed), with *.0.* placeholder being
	  ignored.  We assume that the particular variables cannot belong to
	  the capability set at the same time (as reported by user) -
	  otherwise we will need a bit more complex handling, including
	  updates to all setvar functions.
	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: update logging
	  logic / apc_read()  - logging  This mostly adds few macros that
	  implicitly use or pass caller's name (and in case of hard errors,
	  line number). This allows removal of a few "failed" / "succeeded"
	  lines (which in practice don't really happen), for example there is
	  no need for:  upslogx(LOG_ERR, "preread_data: apc_write failed");
	  as any hard error will be reported by apc_write() internally,
	  providing the place and line number it was called at.  Similarly,
	  some upslogx / upsdebugx calls were wrapped in analogous macros to
	  provide caller's name automatically.  Debug levels (-D) were
	  adjusted to require only one letter.  - apc_read()  It's been a bit
	  more scrutinized:  - filling up full caller's buffer is considered
	  an error; shouldn't happen unless the ups is somehow damaged or
	  some model is capable of returning more than 512 bytes in one read
	  (current max I witnessed is around 270 bytes during capability
	  read) - timeout reads (whether it's allowed or not) cannot really
	  have any non-0 count, though sanity check could theoretically be
	  useful in non-canonical mode; commented out code was added for
	  reference
	* drivers/apcsmart.c: apcsmart: enhance prtchr()  So it can handle 4
	  returns with static pointers.
	* drivers/apcsmart.c: apcsmart: allow timeout on read in smartmode()
	  As this function is used to "nudge" ups, we should expect it to
	  timeout.  Also avoids extra log spam.

2013-01-29  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Solaris/postinstall.in: Use variables to generate Solaris
	  postinstall script.
	* scripts/Solaris/postinstall.in: Enhance the Solaris post install
	  script.

2013-01-28  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutconfbin.cpp: nutconf: --set-shutdowncmd option added
	* common/nutconfbin.cpp: nutconf: --set-notifymsg option added
	* common/nutconf.cpp, common/nutconfbin.cpp: nutconf:
	  --{set|add}-notifyflags options added

2013-01-25  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutconfbin.cpp: nutconf: --{set|add}-device options added
	* common/nutconf.cpp, common/nutconfbin.cpp: nutconf: daily commit
	  Changes: Merged with changes/bugfixes suggested by Arnaud
	  --set-monitor option discards existing entries --add-monitor option
	  added --set-listen and --add-listen options added

2013-01-24  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutconf.cpp, common/nutconfbin.cpp: nutconf: daily commit
	  Changes: --is-configured option added (checks existence of nut.conf
	  and the MODE) --local and --system options added to set config.
	  directory --mode option added (so far it only stores the required
	  mode, TODO) --set-monitor multi-option added, allows to set (add
	  actually) MONITORs

2013-01-23  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutconfbin.cpp, common/nutstream.cpp, include/nutstream.hpp:
	  nutconf: --is-configured option introduced  The option causes
	  nut.conf::MODE being checked; if not "none" (and if the file exists
	  at all), it pronounces NUT as configured.

2013-01-22  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutconfbin.cpp: The very 1st nutconf tool stub  For now,
	  only cmd. options parsing and usage works.

2013-01-22  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/.gitignore, docs/man/Makefile.am, docs/man/index.txt,
	  docs/man/nut-scanner.txt,
	  docs/man/nutscan_get_serial_ports_list.txt,
	  docs/man/nutscan_scan_avahi.txt,
	  docs/man/nutscan_scan_eaton_serial.txt,
	  docs/man/nutscan_scan_ipmi.txt, docs/man/nutscan_scan_nut.txt,
	  docs/man/nutscan_scan_snmp.txt, docs/man/nutscan_scan_usb.txt,
	  docs/man/nutscan_scan_xml_http.txt, include/nut_platform.h,
	  tools/nut-scanner/Makefile.am, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-display.c,
	  tools/nut-scanner/nutscan-serial.c,
	  tools/nut-scanner/nutscan-serial.h,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c: Add nut-scanner support for Eaton
	  serial units  nut-scanner and libnutscan now provides respectively
	  an option and functions to detect Eaton serial devices. The
	  following protocols are supported: SHUT, XCP and Q1 (patch from
	  Frederic Bohe, with parts from Arnaud Quette, both for Eaton)
	* docs/man/Makefile.am: Remove duplicate entries for Eaton serial
	  scan
	* include/Makefile.am, tools/nut-scanner/Makefile.am: List missing
	  header files to be distributed  nutscan-serial.h and nut_platform.h
	  were missing from the distribution
	* scripts/Solaris/.gitignore: Subversion ignored files completion
	  Mark Solaris generated packaging files as Subversion ignored (no
	  functional changes)
	* docs/man/.gitignore, docs/man/Makefile.am, docs/man/index.txt,
	  docs/man/nut-scanner.txt,
	  docs/man/nutscan_get_serial_ports_list.txt,
	  docs/man/nutscan_scan_avahi.txt,
	  docs/man/nutscan_scan_eaton_serial.txt,
	  docs/man/nutscan_scan_ipmi.txt, docs/man/nutscan_scan_nut.txt,
	  docs/man/nutscan_scan_snmp.txt, docs/man/nutscan_scan_usb.txt,
	  docs/man/nutscan_scan_xml_http.txt, include/nut_platform.h,
	  tools/nut-scanner/Makefile.am, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-display.c,
	  tools/nut-scanner/nutscan-serial.c,
	  tools/nut-scanner/nutscan-serial.h,
	  tools/nut-scanner/scan_eaton_serial.c,
	  tools/nut-scanner/scan_nut.c: Add nut-scanner support for Eaton
	  serial units  nut-scanner and libnutscan now provides respectively
	  an option and functions to detect Eaton serial devices. The
	  following protocols are supported: SHUT, XCP and Q1 (patch from
	  Frederic Bohe, with parts from Arnaud Quette, both for Eaton)
	* configure.in: Fix for pthread on HP-UX  pthread is compiled on a
	  stub when -lpthread is not explicitly added. This commit is a
	  duplicate of [[SVN:3801]], from Frederic Bohe (for Eaton)
	* drivers/bcmxcp_ser.c: Change baud-rates ordering for auto-detection
	* docs/new-drivers.txt, drivers/serial.c, drivers/serial.h: Add
	  non-fatal versions of ser_open / ser_set_speed

2013-01-21  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutwriter.cpp: C++11 code removed due platform compatibility

2013-01-21  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Solaris/nut.in, scripts/Solaris/postinstall.in: Allow
	  start/stop of NUT from Solaris packages

2013-01-13  Emilien Kia <kiae.dev@gmail.com>

	* clients/cgilib.h, clients/status.h, clients/upsimagearg.h,
	  clients/upslog.h, clients/upsmon.h, clients/upssched.h,
	  clients/upsstats.h, include/common.h, include/extstate.h,
	  include/proto.h, include/state.h, include/upsconf.h, server/conf.h,
	  server/desc.h, server/netcmds.h, server/netget.h,
	  server/netinstcmd.h, server/netlist.h, server/netmisc.h,
	  server/netset.h, server/netssl.h, server/netuser.h,
	  server/sstate.h, server/stype.h, server/upsd.h, server/upstype.h,
	  server/user-data.h, server/user.h, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-init.h, tools/nut-scanner/nutscan-ip.h:
	  Protect header files for C++ inclusion.
	* clients/cgilib.h, clients/status.h, clients/upsimagearg.h,
	  clients/upslog.h, clients/upsmon.h, clients/upssched.h,
	  clients/upsstats.h, include/common.h, include/extstate.h,
	  include/proto.h, include/state.h, include/upsconf.h, server/conf.h,
	  server/desc.h, server/netcmds.h, server/netget.h,
	  server/netinstcmd.h, server/netlist.h, server/netmisc.h,
	  server/netset.h, server/netssl.h, server/netuser.h,
	  server/sstate.h, server/stype.h, server/upsd.h, server/upstype.h,
	  server/user-data.h, server/user.h, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-init.h, tools/nut-scanner/nutscan-ip.h:
	  Protect header files for C++ inclusion.

2013-01-09  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutipc.cpp, include/nutipc.hpp, tests/nutipc_ut.cpp: nutipc:
	  signal handling UT added

2013-01-08  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutconf.cpp, common/nutwriter.cpp, include/nutconf.h,
	  tests/nutconf_ut.cpp: nutconf: fix of misplaced value quoting
	  Value quoting/escaping is now done generically in nutwriter.
	* common/nutconf.cpp, common/nutconfbin.cpp, common/nutipc.cpp,
	  common/nutstream.cpp, common/nutwriter.cpp, include/Makefile.am,
	  include/nutconf.h, include/nutipc.hpp, include/{nutstream.h =>
	  nutstream.hpp}, include/{nutwriter.h => nutwriter.hpp},
	  tests/nutconf_ut.cpp, tests/nutipc_ut.cpp, tests/nutstream_ut.cpp:
	  nutipc: signal sending UTs  nut::Signal::send via PIDfile and
	  nut::NutSignal::send via process name added, too. Minor
	  backwards-compatible changes in nutstream (file removal methods).

2013-01-07  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutipc.cpp, include/nutipc.hpp, tests/nutipc_ut.cpp: nutipc:
	  ext. command execution improvements  The command line segmentation
	  is finally implemented. nut::Process::execute static functions
	  added for simplicity of usage.
	* common/nutipc.cpp, include/nutipc.hpp, tests/Makefile.am,
	  tests/nutipc_ut.cpp: nutipc: linking cleanup & exec UT

2012-12-20  Émilien Kia <emilien.kia@gmail.com>

	* common/Makefile.am, common/nutconfbin.cpp: Add a little sample to
	  use libconf. Special dedicace to Fred.

2012-12-19  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/HP-UX/makedepot.sh, scripts/HP-UX/nut.psf.in: Use installed
	  binaries to create package

2012-12-19  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: HCL: Add support for Lyonn CTB-1200  Add Lyonn
	  CTB-1200 (USB ID 0x0665:0x5161) to the list of blazer_usb supported
	  models (reported by Martin Sarsale)
	* docs/stable-hcl.txt: Clarify expected report for shutdown testing
	  State explicitly that, for now, a statement that the user has
	  actually tested the shutdown procedure successfully is enough
	  (report from Martin Sarsale)

2012-12-18  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* drivers/apcsmart.c: apcsmart: add update_info()  No need for almost
	  identical update_info_normal() and update_info_all()
	* drivers/apcsmart.c: apcsmart: two fixups  In poll_data(): we are
	  not supposed to set variable after its (formally impossible)
	  removal  In upsdrv_shutdown(): wrong comparison

2012-12-18  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/delta_ups-mib.c: Fix a typo error and current multiplier
	  factor
	* data/driver.list.in, drivers/Makefile.am, drivers/delta_ups-mib.c,
	  drivers/delta_ups-mib.h, drivers/snmp-ups.c: Support for DeltaUPS
	  MIB and Socomec Netys RT 1/1  Add preliminary SNMP support for a
	  new MIB: DeltaUPS MIB, with sysOID ".1.3.6.1.4.1.2254.2.4". The
	  first known supported devices are Socomec Netys RT 1/1, equiped
	  with Netvision SNMP card

2012-12-14  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/Makefile.am, common/nutipc.cpp, include/Makefile.am,
	  include/nutipc.hpp: NUT IPC module introduction  A non-complete
	  implementation of NUT IPC support module. Certain functions are
	  just outlined, for now. Deals with signal handling and execution of
	  external commands. I commit this partial implementation because
	  I'll be on holiday for certain amount of time and it's IMO better
	  to have the code comitted.

2012-12-14  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, drivers/powerp-txt.c, drivers/powerpanel.c:
	  Add support for CyberPower OL3000RMXL2U  Add CyberPower
	  OL3000RMXL2U serial support to the powerpanel driver, text protocol
	  version (Alioth patch #313910, from Timothy Pearson)

2012-12-13  Arnaud Quette <arnaud.quette@free.fr>

	* docs/Makefile.am, docs/new-drivers.txt, docs/snmp-subdrivers.txt,
	  scripts/subdriver/gen-snmp-subdriver.sh: Helper script to create
	  SNMP subdrivers stubs  Created a new shell script
	  (scripts/subdriver/gen-snmp-subdriver.sh) to automatically create a
	  "stub" subdriver. This will make it a lot easier and quicker to
	  create subdrivers for snmp-ups. A new documentation chapter has
	  also been added ("How to make a new subdriver to support another
	  SNMP device")
	* drivers/tripplite-hid.c: Add support for newer TrippLite
	  Smart1500LCD  Add newer TrippLite Smart1500LCD (USB ID
	  0x09ae:0x3016) to the list of usbhid-ups supported models (reported
	  by Steve Salier)

2012-12-12  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/mge-hid.c: Fix crash with debug level greater or equal to 2

2012-12-11  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutconf.cpp, include/nutconf.h, tests/Makefile.am,
	  tests/nutconf_ut.cpp: Basic unit tests for libnutconf  UTs with
	  focus on basic configuration settings and serialisation were added
	  for nut.conf, upsmon.conf, upsd.conf ups.conf and upsd.users. Note
	  that the tests are not exhaustive; they only parse configuration
	  files samples, change a few randomly selected parameters, serialise
	  the result back and check it.

2012-12-10  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* drivers/apcsmart.c: apcsmart: add prtchr() helper  Add prtchr()
	  helper and simplify reporting when we check whether some APC
	  cmd/var character is or isn't printable.
	* drivers/apcsmart_tabs.c: apcsmart: apc_cmdtab[] fixup  Earlier
	  commit that adjusted regex checks, also changed cmd fields for all
	  instant commands handled by custom functions. We cannot do that, as
	  they are not detected as supported this way.

2012-12-09  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/Windows/Makefile.am: Forgotten build and distribution rules
	* include/common.h, include/wincompat.h: Fix MingGW-w64 compilation
	* scripts/Windows/README, scripts/Windows/build-mingw-nut.sh:
	  Automated Windows cross compilation  Preliminary support for
	  automated Windows cross compilation, using MingGW-w64. A script is
	  provided, with 32 and 64 bits compilation options, along with a
	  documentation file

2012-12-08  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* drivers/apcsmart.c: apcsmart: serial related stuff a bit more
	  strict  Also:  - apc_flush() now loops with >0 condition (otherwise
	  errored apc_read() might cause inf loop) - ser_comm_good/fail()
	  were kind of missing in write wrappers
	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart:
	  sdlist/sdtype/advorder changes  - verify 'advorder' with regex -
	  remove unused defines - as the user is directed towards man page
	  either way (and without it numbers are kind of meaningless), drop
	  SDMAX
	* drivers/apcsmart.c: apcsmart: setup port after variable
	  sanitization in upsdrv_initups()
	* drivers/apcsmart.c: apcsmart: cleanup dstate ok/stale calls
	* drivers/apcsmart.c: apcsmart: getbaseinfo() fixup  In extremely
	  unlikely case of failing write, report it up and act accordingly.
	* drivers/apcsmart.c, drivers/apcsmart.h, drivers/apcsmart_tabs.c,
	  drivers/apcsmart_tabs.h: apcsmart: adjust regex logic  A bit
	  simpler / tighter now.
	* drivers/apcsmart.c: apcsmart: add var_string_setup()  In theory
	  deprecate_vars() should also consider APC_STRING variables. In
	  practice - we don't have any variables that are both APC_MULTI and
	  APC_STRING - but it's more correct this way, so let's do it.
	* drivers/apcsmart.c: apcsmart: cosmetics  - code shuffling,
	  comments, flow - rename query_ups() -> legacy_verify() - add few
	  lines of help directing to man page
	* drivers/apcsmart.c: apcsmart: simplify query_ups() /
	  proto_verification()  Both functions rely now on common variable
	  verificaion function.
	* drivers/apcsmart.c: apcsmart: add var_verify()  The function will
	  be used in subsequent commit for common verification.
	* drivers/apcsmart.c: apcsmart: shuffle two functions  query_ups()
	  and oldapcsetup()
	* drivers/apcsmart.c: apcsmart: simplify query_ups()  This commit
	  changes query_ups() function and makes it rely on the same
	  deprecate_vars() logic that protocol_verify() requires.  We can
	  shorten the code a bit now, and it allows us to do more
	  simplifications in subsequent commits.
	* drivers/apcsmart.c: apcsmart: add functions informing about
	  [un]supported cmds/vars  In unified fashion, instead of each
	  protocol-verification related function doing it on its own.
	* drivers/apcsmart.c, drivers/apcsmart.h, drivers/apcsmart_tabs.c,
	  drivers/apcsmart_tabs.h: apcsmart: minor tidying up  comments,
	  trivial changes, code shuffling ...
	* drivers/apcsmart.c: apcsmart: remove unused field 'def' from cchar
	  In apc_ser_diff() reporting differences between
	  tcgetattr/tcsetattr, 'def' field was unused (along with related
	  defines).

2012-12-08  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/mge-utalk.c, drivers/mge-utalk.h: Change Martin Loyer's
	  mail address  As per Martin's request.
	* drivers/mge-utalk.c: Improve mge-utalk general behavior  Make two
	  adjustments to improve the general behavior: first, send the double
	  "Z" prior to "Si" command. Second, inter-commands delay has been
	  increased to comply with the specification

2012-12-07  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutconf.cpp, common/nutstream.cpp, common/nutwriter.cpp,
	  include/nutconf.h, include/nutstream.h, include/nutwriter.h:
	  (De)serialisation methods added to config. classes  All existing
	  NUT configuration classes now implement Serialisable interface
	  (parseFrom and writeTo methods). Note that the parseFrom
	  implementations are very naive (they simply read whole source
	  stream to memory and call existing parseFromString method).  That's
	  enough for now, however, in future the parsres should directly use
	  NutStream interface.

2012-12-06  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutconf.cpp, include/nutconf.h: Support for upsd.users
	  config. file added
	* common/nutstream.cpp, common/nutwriter.cpp, include/nutstream.h,
	  include/nutwriter.h: Bugfix: out. std::stringstream constr. arg
	  ignored
	* common/nutwriter.cpp, include/nutwriter.h: Special serialiser for
	  upsd.users config file  The special serialiser is needed because of
	  the [upsmon]::upsmon directive (which doesn't use the standard =
	  key/ value separator). Also, serialisation of section entry value
	  list was fixed (so that multiple entries are produced rather than a
	  list of values).

2012-12-06  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nut-scanner.c: Fix nut-scanner compilation
	  without pthread

2012-12-05  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutconf.cpp, common/nutwriter.cpp, include/nutconf.h:
	  UpsConfiguration class added to libnutconf  Getters/setters for all
	  UPS config. attributes added The getters/setters need further
	  checking for type correctness Generic support for the above
	  implemented in GenericConfiguration class

2012-12-02  Charles Lepple <clepple+nut@gmail.com>

	* drivers/riello_usb.c: riello_usb.c: eliminate uninitialized
	  variable

2012-11-30  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutwriter.cpp, include/nutconf.h: NutWriter: ups.conf
	  upsmon.conf upsd.conf support

2012-11-29  Arnaud Quette <arnaud.quette@free.fr>

	* conf/.gitignore: Subversion ignored files completion  Mark
	  upsmon.conf.sample as Subversion ignored, since it is now generated
	  from a .in template file (no functional changes)
	* conf/Makefile.am, conf/{upsmon.conf.sample =>
	  upsmon.conf.sample.in}, configure.in: Adapt upsmon.conf sample to
	  use configured values  The sample upsmon.conf provided now adapts
	  RUN_AS_USER value, and NOTIFYCMD / POWERDOWNFLAG base path to the
	  user configured values

2012-11-28  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/Makefile.am, common/nutstream.cpp, common/nutwriter.cpp,
	  include/Makefile.am, include/nutconf.h, include/nutstream.h,
	  include/nutwriter.h: Partial implementation on NutWriter subtree
	  General serialisers implemented Several TBDs and TODOs left for
	  review tbc...

2012-11-28  Charles Lepple <clepple+nut@gmail.com>

	* conf/upsmon.conf.sample, docs/man/upsmon.conf.txt: Update
	  references to pager.txt

2012-11-28  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/riello.c, drivers/riello_ser.c, drivers/riello_usb.c: Minor
	  improvements to Riello drivers  Fix ups.power.nominal name in
	  Riello drivers, and its value for GPSER protocol(riello_ser).
	  device.mfr was also changed in both drivers, and revisions were
	  bumped to 0.02 (patch from Elio Parisi, Riello)
	* data/driver.list.in, drivers/Makefile.am, drivers/openups-hid.c,
	  drivers/openups-hid.h, drivers/usbhid-ups.c,
	  scripts/upower/95-upower-hid.rules: Official support for Minibox
	  openUPS Intelligent UPS  Add a new usbhid-ups subdriver to handle
	  Minibox openUPS Intelligent UPS (USB ID 0x04d8:0xd004) (patch from
	  Nicu Pavel, Mini-Box.Com)

2012-11-27  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* data/driver.list.in, docs/man/genericups.txt: Add information about
	  Eaton Management Card Contact

2012-11-25  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/riello.c, drivers/riello.h, drivers/riello_ser.c,
	  drivers/riello_usb.c: Minor improvements to Riello drivers  Fix
	  functions and variables names to use English language. Also fix
	  warnings reported by Mac OS X Buildbot and Charles Lepple (patch
	  from Elio Parisi, Riello)

2012-11-22  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* tests/nutstream_ut.cpp: Forgotten UT source from prev. commit
	* common/Makefile.am, common/nutstream.cpp, include/Makefile.am,
	  include/nutstream.h, tests/Makefile.am: Unit tests for
	  nut::NutStream subtree  Basic unit tests plus a few minor changes
	  and updates to the code

2012-11-21  Arnaud Quette <arnaud.quette@free.fr>

	* docs/acknowledgements.txt: Complete Acknowledgements with a Riello
	  entry  Riello deserves a dedicated entry in the Supporting UPS
	  manufacturers, for having provided protocols information and
	  drivers implementations
	* docs/man/.gitignore: Subversion ignored files completion  Mark
	  riello_ser and riello_usb HTML manpages as Subversion ignored (no
	  functional changes)
	* data/driver.list.in, docs/man/.gitignore, docs/man/Makefile.am,
	  docs/man/riello_ser.txt, docs/man/riello_usb.txt,
	  drivers/.gitignore, drivers/Makefile.am, drivers/riello.c,
	  drivers/riello.h, drivers/riello_ser.c, drivers/riello_usb.c,
	  tools/nut-usbinfo.pl: Official support for Riello serial and USB
	  devices  Add two new drivers, riello_ser and riello_usb, to support
	  the whole ranges of Riello devices: IDG, IPG, WPG, NPW, NDG, DVT,
	  DVR, DVD, VST, VSD, SEP, SDH, SDL, SPW, SPT, MCT, MST, MCM, MCT,
	  MHT, MPT and MPM. This completes the official Riello protocols
	  publication, that happened in May 2012 (developed by Elio Parisi,
	  from Riello)

2012-11-20  Arnaud Quette <arnaud.quette@free.fr>

	* clients/upsclient.h, server/nut_ctype.h: Fix NSS include directives
	  The current NSS include directives (nss/nss.h) were incorrect.
	  These were failing on Redhat systems, and working on some others
	  because of the default include path (reported by Michal Hlavinka,
	  from Redhat)

2012-11-19  Emilien Kia <kiae.dev@gmail.com>

	* tools/nut-scanner/nutscan-device.c: Fix a memory leak in scanner.

2012-11-19  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: HCL: Add support for Aviem Power RT
	  1000-3000VA  Add Aviem Systems - Aviem Power RT 1000-3000VA to the
	  list of blazer_ser supported models (reported by Michael
	  Dobrovitsky)

2012-11-16  Vaclav Krpec <VaclavKrpec@Eaton.com>

	* common/nutstream.cpp, include/nutstream.h: Initial implementation
	  of nut::NutStream sub-tree  nut::NutMemory (memory-based stream)
	  nut::NutFile (file-stream) nut::NutSocket with
	  nut::NutSocket::Address (UNIX domain, IPv4, IPv6)

2012-11-13  Emilien Kia <kiae.dev@gmail.com>

	* clients/Makefile.am, clients/nutclient.cpp, clients/nutclient.h,
	  configure.in, docs/man/Makefile.am, docs/man/index.txt,
	  docs/man/libnutclient.txt, docs/man/libnutclient_commands.txt,
	  docs/man/libnutclient_devices.txt,
	  docs/man/libnutclient_general.txt, docs/man/libnutclient_misc.txt,
	  docs/man/libnutclient_tcp.txt, docs/man/libnutclient_variables.txt,
	  docs/new-clients.txt, lib/Makefile.am, lib/README,
	  lib/libnutclient.pc.in: Merge libnutclient (libcpp) branch   Pull
	  Request #2: "High level C and C++ libnutclient" from
	  https://github.com/clepple/nut/pull/2 . Hand-merged into SVN trunk
	  from commit: 701cc571f4f8578e9c82b13c1e9eab509a41cd7f

2012-11-13  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/.gitignore: Complete the list of Subversion ignored files
	  Commit r3778 was missing generated HTML files (no functional
	  changes)
	* docs/man/Makefile.am: Fix installation of libnutclient manual pages
	  Commit r3777 fixed the test target, but libnutclient manual pages
	  were not actually installed
	* docs/man/.gitignore, lib/.gitignore: Complete the list of
	  Subversion ignored files  The merge of NSS and libnutclient
	  branches have left some new generated files (no functional changes)
	* docs/man/libnutclient_commands.txt,
	  docs/man/libnutclient_devices.txt,
	  docs/man/libnutclient_general.txt, docs/man/libnutclient_misc.txt,
	  docs/man/libnutclient_tcp.txt, docs/man/libnutclient_variables.txt:
	  Fix Buildbot failures on previous commit (man pages)  The merge of
	  the libnutclient branch caused a failure of the 'distcheck-light'
	  test target. Manual pages documentation in this branch uses a
	  mechanism to generate multiple manpages from one source file. This
	  was however conflicting with a Makefile rule, that requires the
	  generated file to have the same name as the source file. Applies
	  the same principle by adding the content of the Header section to
	  the NAME commands list. Also fix a typo error in the Header section
	  of libnutclient_devices

2012-11-08  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* docs/man/usbhid-ups.txt, drivers/usbhid-ups.c: Add a command line
	  to usbhid-ups to activate the max_report tweak.
	* drivers/apc-hid.c, drivers/libhid.c: Fix tweak for APC Back-UPS
	  since it seems to break Back-UPS 700 connectivity (reported by
	  Denis Serov).  Adding some more comments on UPS which need and
	  which do not need the tweak. Refactored the detection code.

2012-11-07  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/subdriver/gen-usbhid-subdriver.sh: Fix USB HID subdriver
	  generation tool  This tool has not been updated since timestamps
	  were added to driver debug traces. It was thus producing erroneous
	  results (reported by Nicu Pavel)

2012-11-02  Charles Lepple <clepple+nut@gmail.com>

	* README, scripts/upower/95-upower-hid.rules: apcupsd-ups: link to
	  man page from README  Patch by Arnaud:
	  https://alioth.debian.org/tracker/index.php?func=detail&aid=313846&group_id=30602&atid=411544

2012-11-01  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: Fix a crash on outlets management  snmp-ups was
	  crashing when the number of outlets was equal to zero

2012-10-31  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/.gitignore, docs/man/blazer.txt: Fix blazer manual pages
	  generation  to generate blazer, blazer_ser and blazer_usb manual
	  pages. The same manual page is now distributed and available under
	  these 3 names (warning to packagers)
	* docs/man/Makefile.am, docs/man/asciidoc.conf: Fix manpage
	  refmiscinfo attributes and multiple NAME  refmiscinfo attributes
	  were previously specified through asciidoc.conf. This approach
	  prevented from specifying and generating multiple manual pages from
	  a single source. Moreover, manversion (pointing NUT version) was
	  mistyped, and thus omitted. Makefile rules now directly define
	  refmiscinfo through attributes, and allow to solve the long
	  standing blazer / blazer_ser / blazer_usb related issue, and the
	  upcoming libnutclient one

2012-10-30  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/apcupsd-ups.txt: apcupsd-ups: Update man page with
	  variables and units

2012-10-24  Émilien Kia <emilien.kia@gmail.com>

	* common/nutconf.cpp, include/nutconf.h, tests/nutconf.cpp: Add
	  parsing options and allow ':' to be interpreted as normal
	  character.  Add parsing option to NutParser. Add a first option
	  OPTION_IGNORE_COLON to parse ':' as a normal character and not as
	  token. Use it to allow parsing "::1" IPv6-like as string without
	  having to quote them (upsd.conf).
	* tests/nutconf.cpp: Add test for UpsdConfiguration parsing.
	* include/nutconf.h: Add equality test operators for Settable<T> and
	  UpsdConfiguration::Listen.

2012-10-23  Émilien Kia <emilien.kia@gmail.com>

	* common/nutconf.cpp, include/nutconf.h: Implement upsd.conf
	  UpsdConfigParser.  Test pending. A bug is pending: IPv6 format must
	  be in quoted string because of ':'.
	* common/nutconf.cpp, include/nutconf.h, tests/nutconf.cpp: Implement
	  nut.conf NutConfiguration parser.
	* common/nutconf.cpp, include/nutconf.h, tests/nutconf.cpp: Implement
	  UpsmonConfigParser and related.
	* include/nutconf.h: Create and use a Settable helper which indicate
	  if a parameter is set or not.
	* include/nutconf.h: Add notify messages array in UpsmonConfiguration
	  (oups !).

2012-10-22  Émilien Kia <emilien.kia@gmail.com>

	* common/nutconf.cpp, include/nutconf.h: Add stubs for upsmon.conf
	  parser and config structure.
	* common/nutconf.cpp, include/nutconf.h, tests/nutconf.cpp: Add unit
	  test for GenericConfiguration parsing.  Add UT for
	  GenericConfiguration (validate GenericConfigParser and all the
	  stack). Fix some errors found with UT.

2012-10-19  Émilien Kia <emilien.kia@gmail.com>

	* common/nutconf.cpp, include/nutconf.h: Add GenericConfiguration
	  function to parse from string (use GenericConfigParser).
	* common/nutconf.cpp, include/nutconf.h: Virtualize
	  GenericConfiguration with BaseConfiguration to really allow
	  specialized versions of config class.
	* common/nutconf.cpp, include/nutconf.h: Implement
	  GenericConfigParser and related.
	* common/nutconf.cpp, include/nutconf.h: Implement abstract class
	  DefaultConfigParser
	* common/nutconf.cpp, include/nutconf.h: Define a typedef type to
	  make function easier to understand.

2012-10-19  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/cps-hid.c, drivers/idowell-hid.c,
	  scripts/subdriver/gen-usbhid-subdriver.sh: Replace missing
	  occurrences in previous commit
	* docs/hid-subdrivers.txt, drivers/libhid.c, scripts/Makefile.am,
	  scripts/subdriver/{path-to-subdriver.sh =>
	  gen-usbhid-subdriver.sh}: Rename usbhid subdriver generation script
	  This script was previously named path-to-subdriver.sh, which was
	  not enough meaningful. The renaming to gen-usbhid-subdriver.sh also
	  makes sense with a potential gen-snmp-subdriver.sh
	* data/driver.list.in: HCL: Add support for Apollo 850VA  Add Apollo
	  850VA (USB ID 0x0665:0x5161) to the list of blazer_usb supported
	  models (reported by Mike Raath)

2012-10-15  Émilien Kia <emilien.kia@gmail.com>

	* common/nutconf.cpp, include/nutconf.h: Add stubs for
	  DefaultConfigParser  Add stubs for the default configuration file
	  parser. Basic implementation will follow.
	* common/nutconf.cpp, include/nutconf.h, tests/nutconf.cpp: Implement
	  abstract configuration parser.  Rename NutConfParser in NutParser.
	  Implement the abstract class NutConfParser based on NutParser for
	  configuration file parsing. Remove old C sample code.

2012-10-15  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* data/driver.list.in: HCL: add info about new APC models  Info about
	  new SMT, SMX and SURTD models which require additional card for
	  "legacy" smart protocol.

2012-10-15  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/wincompat.c: Fix invalid memory allocation (fix a crash at
	  exit time in upsmon)

2012-10-15  Arnaud Quette <arnaud.quette@free.fr>

	* configure.in, scripts/systemd/nut-driver.service.in: Fix driver
	  path in systemd driver unit  The driver path, in
	  nut-driver.service, was not expanded correctly (reported by Marc
	  Rechté)
	* configure.in: Only fail if SSL was explicitly requested
	  Configuration should not abort if neither OpenSSL nor Mozilla NSS
	  has been found, and if SSL was not explicitly requested by the
	  user. This fixes the Buildbot compilation failure on Aix (build
	  #206)

2012-10-12  Charles Lepple <clepple+nut@gmail.com>

	* tools/git-svn.authors, tools/svn2cl.authors: Update Emilien Kia's
	  email address

2012-10-11  Arnaud Quette <arnaud.quette@free.fr>

	* docs/Makefile.am: Fix Solaris compilation failure

2012-10-10  Émilien Kia <emilien.kia@gmail.com>

	* common/Makefile.am, common/nutconf.cpp, include/nutconf.h,
	  tests/Makefile.am, tests/nutconf.cpp: Initial conf library.  Just
	  parse tokens.

2012-10-10  Arnaud Quette <arnaud.quette@free.fr>

	* README: Spell check fix (test)
	* .gitignore, configure.in, docs/.gitignore, docs/Makefile.am,
	  docs/nut-qa.txt, docs/nut.dict: Spell checking framework
	  implementation  Implement a framework to spell check documentation
	  source files, using Aspell. This includes an interactive build
	  target (make spellcheck-interactive), and an automated one (make
	  spellcheck), mainly for QA / Buildbot purpose. Note that a base NUT
	  dictionnary is also available (docs/nut.dict), providing a glossary
	  of terms related to power devices and management
	* drivers/tripplite_usb.c: Remove POD ("Plain Old Documentation")
	  With the approval of the author (Charles Lepple), remove POD
	  ("Plain Old Documentation"). This embedded documentation was
	  redundant, and is probably out of date, with respect to the
	  AsciiDoc version
	* drivers/powercom.c, drivers/powercom.h, drivers/upscode2.c: Remove
	  unnecessary RCS $Id lines

2012-10-05  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-scanner/nut-scan.h: Fix compilation error  Define
	  IPMI_PRIVILEGE_LEVEL_ADMIN value, in case FreeIPMI is not available

2012-10-04  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/nut-scanner.txt, drivers/nut-ipmipsu.c,
	  tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_ipmi.c: Support power supplies scan over the
	  network  nut-scanner can now scan for power supplies with IPMI over
	  LAN. This is currently limited to IPMI 1.5 only
	* docs/man/nut-scanner.txt, drivers/nut-ipmipsu.c,
	  tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_ipmi.c: Support power supplies scan over the
	  network  nut-scanner can now scan for power supplies with IPMI over
	  LAN. This is currently limited to IPMI 1.5 only

2012-10-03  Arnaud Quette <arnaud.quette@free.fr>

	* docs/acknowledgements.txt: Update acknowledgements

2012-09-28  Charles Lepple <clepple+nut@gmail.com>

	* drivers/apcupsd-ups.c, drivers/apcupsd-ups.h: apcupsd-ups:
	  Additional variables
	* drivers/apcupsd-ups.c, drivers/apcupsd-ups.h: apcupsd-ups: Remove
	  multiplier from ups.load
	* drivers/.gitignore: Cleanup of svn:ignore list in drivers/ (no code
	  change)

2012-09-27  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/apcupsd-ups.txt, drivers/apcupsd-ups.c: apcupsd-ups:
	  miscellaneous cleanup
	* tools/git-svn.authors, tools/svn2cl.authors: Welcome, Václav! (SVN
	  username mappings)

2012-09-27  Andreas Steinmetz

	* docs/man/Makefile.am, docs/man/apcupsd-ups.txt,
	  drivers/Makefile.am, drivers/apcupsd-ups.c, drivers/apcupsd-ups.h:
	  apcupsd client driver
	  https://alioth.debian.org/tracker/?func=detail&atid=411544&aid=313846&group_id=30602

2012-09-21  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut-qa.txt: Update the link to the Ubuntu QRT script

2012-09-19  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/nut-libfreeipmi.c, m4/nut_check_libfreeipmi.m4,
	  tools/nut-scanner/scan_ipmi.c: Support for FreeIPMI 1.1.x and 1.2.x
	  (#2)  Prepare for supporting API changes in FreeIPMI 1.1.x and
	  1.2.x. This 2nd patch, which completes [[SVN:3675]], addresses FRU
	  API changes, and removes code redundancy. This code has been tested
	  with FreeIPMI 0.8.12 and the latest [[FreeIPMI SVN]] trunk r9505
	  (reported as 1.2.0.beta2 by pkgconfig)
	* drivers/nut-libfreeipmi.c, m4/nut_check_libfreeipmi.m4,
	  tools/nut-scanner/scan_ipmi.c: Support for FreeIPMI 1.1.x and 1.2.x
	  (#2)  Prepare for supporting API changes in FreeIPMI 1.1.x and
	  1.2.x. This 2nd patch, which completes [[SVN:3675]], addresses FRU
	  API changes, and removes code redundancy. This code has been tested
	  with FreeIPMI 0.8.12 and the latest [[FreeIPMI SVN]] trunk r9505
	  (reported as 1.2.0.beta2 by pkgconfig)
	* docs/download.txt, docs/website/news.txt: Update Windows package
	  publications for 2.6.5-3

2012-09-18  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/wininit.c: update error logs
	* scripts/Windows/Installer/NUT-Installer.xml: Typo in installer
	  dialog box
	* common/wincompat.c: Fix communication with named pipe

2012-09-17  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upssched.c: Fix upssched regression due to CVE-2012-2944
	* common/common.c, common/wincompat.c: Fix Event Viewer regression
	  Also, more consistent named pipe management

2012-09-17  Arnaud Quette <arnaud.quette@free.fr>

	* docs/download.txt, docs/website/news.txt: Update Windows package
	  publications for 2.6.5-2

2012-09-12  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/bcmxcp_usb.c: Fix data reception loop  The new data
	  reception algorithm was trying to get more data than it should
	  (patch from Rich Wrenn)

2012-09-10  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/apc-hid.c, drivers/apc-hid.h, drivers/libhid.c: Add a tweak
	  for APC Back UPS ES  APC Back UPS ES have a buggy firmware which
	  overflows on ReportID 0x0c, i.e.
	  UPS.PowerSummary.RemainingCapacity. This results in battery.charge
	  not being exposed and endless reconnections on systems with libusb
	  reporting EOVERFLOW. And it results on a failure to init the driver
	  for  systems with libusb not reporting EOVERFLOW but EIO (i.e. on
	  Windows).
	* tools/nut-scanner/nut-scanner.c: [nut-scanner] Fix a crash when no
	  start IP is provided.
	* drivers/apc-hid.c, drivers/bcmxcp_usb.c, drivers/belkin-hid.c,
	  drivers/blazer_usb.c, drivers/cps-hid.c, drivers/idowell-hid.c,
	  drivers/liebert-hid.c, drivers/mge-hid.c, drivers/powercom-hid.c,
	  drivers/richcomm_usb.c, drivers/tripplite-hid.c,
	  drivers/tripplite_usb.c, drivers/usb-common.c,
	  drivers/usb-common.h: Extend USB device support check (from Arnaud
	  Quette)  Use USBDevice_t structure in is_usb_device_supported(),
	  instead of direct VendorID and ProductID. This allows to pass it to
	  the specific processing handler for broader check

2012-09-07  Leo Arias <elopio-guest@alioth.debian.org>

	* conf/nut.conf.sample: Update nut.conf.sample (grammar and
	  documentation)
	  https://alioth.debian.org/tracker/?func=detail&atid=411544&aid=313762&group_id=30602

2012-08-14  Arnaud Quette <arnaud.quette@free.fr>

	* NEWS, UPGRADING, configure.in, data/driver.list.in,
	  docs/Makefile.am, docs/configure.txt, docs/documentation.txt,
	  docs/download.txt, docs/images/eaton-logo.png,
	  docs/images/hostedby.png, docs/images/simple.png,
	  docs/man/.gitignore, docs/man/Makefile.am, docs/man/index.txt,
	  docs/man/macosx-ups.txt, docs/man/mge-shut.txt,
	  docs/man/nutscan.txt, docs/man/nutscan_scan_avahi.txt,
	  docs/man/powercom.txt, docs/man/skel.txt, docs/nut-names.txt,
	  docs/website/.gitignore, docs/website/Makefile.am,
	  docs/website/css/web-layout.css, docs/website/news.txt,
	  docs/website/old-news.txt, docs/website/projects.txt,
	  docs/website/web-layout.conf, drivers/.gitignore,
	  drivers/Makefile.am, drivers/macosx-ups.c, drivers/mge-hid.c,
	  drivers/powercom-hid.c, drivers/skel.c, drivers/usbhid-ups.c,
	  drivers/usbhid-ups.h, m4/nut_check_libltdl.m4: Merge from trunk
	  [[SVN:3679]] to [[SVN:3718]] to ssl-nss-port

2012-08-09  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* INSTALL.nut, docs/images/eaton-logo.png,
	  scripts/Windows/Installer/NUT-Installer.xml: Merge from trunk
	  [[SVN:3692]] to [[SVN:3713]] (upgrade to 2.6.5)

2012-08-09  Arnaud Quette <arnaud.quette@free.fr>

	* docs/website/.gitignore, docs/website/Makefile.am,
	  docs/website/news.txt, docs/website/old-news.txt: Integrate
	  archived news
	* docs/nut-names.txt, drivers/mge-hid.c: Add shutdown ability switch
	  to Eaton units  Eaton HID units (using usbhid-ups or
	  [new,old]mge-shut) were missing a data mapping to allow the change
	  of the shutdown ability switch. The result was that the UPS was not
	  powered off, even if all the protocol commands were sent (reported
	  by Daniel O'Connor)
	* docs/download.txt, docs/website/news.txt: Update Windows package
	  publications for 2.6.5-1
	* docs/man/.gitignore, docs/man/index.txt: Added macosx-ups manual
	  page to the index  Also add generated groff and HTML contents to
	  the list of Subversion ignored files

2012-08-08  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upsmon.c, common/common.c, common/wincompat.c,
	  drivers/dstate.c, drivers/main.c, drivers/upsdrvctl.c,
	  include/common.h, scripts/Windows/Installer/NUT-Installer.xml,
	  scripts/Windows/wininit.c, server/upsd.c: Get rid of console event
	  and PID management  Processes can now be stopped via named pipe.
	  Processes can now check previous instances via named mutex.

2012-08-08  Arnaud Quette <arnaud.quette@free.fr>

	* NEWS, UPGRADING, configure.in, docs/website/news.txt: Final update
	  for 2.6.5 release
	* drivers/.gitignore: Subversion ignored files completion  Mark
	  oldmge-shut binary as Subversion ignored (no functional changes)
	* docs/configure.txt, m4/nut_check_libltdl.m4: Complete libltdl
	  configuration options  Add configure options to add specific cflags
	  (--with-libltdl-includes) and libs (--with-libltdl-libs) for
	  libltdl. This serves at least to point at non standard location, as
	  on FreeBSD (reported by David Durieux)

2012-08-06  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/wininit.c: typo in comments
	* clients/upsmon.c, common/common.c, scripts/Windows/wininit.c: Fix
	  UPS shutdown  Now upsmon stop NUT service before shuting down the
	  OS. When the service stops (with PD flag), it calls "upsdrvctl
	  shutdown".

2012-08-06  Charles Lepple <clepple+nut@gmail.com>

	* configure.in, docs/man/Makefile.am, docs/man/macosx-ups.txt,
	  drivers/Makefile.am, drivers/macosx-ups.c: macosx-ups: new OS X
	  Power Sources meta-driver  Mac OS X provides UPS status information
	  in a format similar to what is shown for laptop batteries. This
	  driver will convert that information into a format compatible with
	  NUT.

2012-08-06  Arnaud Quette <arnaud.quette@free.fr>

	* docs/documentation.txt: Add a Wikipedia reference on Solar
	  controller
	* docs/Makefile.am, docs/images/eaton-logo.png,
	  docs/images/hostedby.png, docs/website/Makefile.am,
	  docs/website/css/web-layout.css, docs/website/web-layout.conf: Free
	  NUT from Eaton website hosting  NUT is no more hosted by Eaton.
	  Arnaud Quette (NUT project leader) has taken over NUT hosting on
	  his own, to give NUT back some independance. This effort is also
	  part of a logic to stop crediting Eaton for contributions from
	  others (especially Arnaud Quette, as an individual). The new
	  hosting service is located, as for Arnaud's blog
	  (http://arnaud.quette.fr) on Gandi servers, using PaaS. This will
	  allow more flexibility and automation of the release process

2012-08-05  Charles Lepple <clepple+nut@gmail.com>

	* drivers/skel.c: Update comments in skel.c  Fixed a typo, and added
	  fatalx() as an alternative to fatal_with_errno()
	* docs/man/skel.txt: Update skeleton driver man page.

2012-08-03  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/nutscan.txt, docs/man/nutscan_scan_avahi.txt: nutscan
	  documentation: editing

2012-08-02  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/wincompat.c: Disconnect named pipe correctly

2012-07-31  Arnaud Quette <arnaud.quette@free.fr>

	* docs/images/simple.png: Remove extraneous text
	* data/driver.list.in: HCL: Add support for UNITEK Alpha650ipF and
	  Alpha650ipE  Add UNITEK Alpha650ipF and Alpha650ipE (USB ID
	  0x0f03:0x0001) to the list of blazer_usb supported models (reported
	  by Pascal MIRALLES)
	* docs/website/projects.txt: Reference Buffalo NAS in Related
	  projects  Add a reference in the Related projects, on Buffalo
	  TerraStation (Business-class) NAS range, which uses NUT for power
	  protection

2012-07-30  Arnaud Quette <arnaud.quette@free.fr>

	* docs/download.txt, docs/website/news.txt: First NUT virtualization
	  package (VMware ESXI 5.0)  Add the reference to the first NUT
	  virtualization package. This one is currently an external effort to
	  add VMware NUT client for ESXI 5.0. But this support will be part
	  of NUT in the long run

2012-07-27  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/wincompat.c, drivers/genericups.c, include/wincompat.h: Fix
	  w32_setcomm and w32_getcomm for genericups
	* clients/upsclient.c, include/common.h, server/upsd.c,
	  tools/nut-scanner/nutscan-ip.c: Adding Windows 2000 and older
	  support

2012-07-25  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Installer/NUT-Installer.xml: Update installer
	  script with oldmge-shut instead of newmge-shut

2012-07-24  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in, docs/man/powercom.txt, drivers/powercom-hid.c:
	  Synchronize Powercom USB documentation and code comments.
	  Apparently, there are at least two different models with the USB
	  VID:PID of 0d9f:0004. This update is based on the following report
	  by Gordon Longland:
	  http://lists.alioth.debian.org/pipermail/nut-upsuser/2012-July/007748.html

2012-07-23  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/apc-mib.c, drivers/apcsmart.c, drivers/netxml-ups.c,
	  drivers/nut-ipmipsu.c, drivers/nut-libfreeipmi.c,
	  server/Makefile.am, server/ssl.c: Merge from trunk [[SVN:3645]] to
	  [[SVN:3690]]
	* common/wincompat.c, drivers/genericups.c, drivers/genericups.h,
	  drivers/serial.c, include/wincompat.h: Porting genericups driver
	  Not tested on real hardware

2012-07-23  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/powercom.txt: powercom: Mention this driver is serial only

2012-07-20  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* data/driver.list.in, drivers/Makefile.am: Switch mge-shut to
	  oldmge-shut and newmge-shut to mge-shut
	* docs/man/mge-shut.txt: Update mge-shut man page for notification
	  argument.
	* drivers/usbhid-ups.c: Add a "notification" parameter to newmge-shut
	  driver.  It is only here for compatibility with mge-shut driver. It
	  is ignored since we are always using SHUT_SYNC_OFF in libshut.c.

2012-07-20  Emilien Kia <kiae.dev@gmail.com>

	* README, docs/Makefile.am, docs/config-notes.txt,
	  docs/contact-closure.txt, docs/macros.txt, docs/man/mge-shut.txt,
	  docs/man/upscli_connect.txt, docs/man/upscli_disconnect.txt,
	  docs/man/upscli_fd.txt, docs/man/upscli_get.txt,
	  docs/man/upscli_list_next.txt, docs/man/upscli_list_start.txt,
	  docs/man/upscli_readline.txt, docs/man/upscli_sendline.txt,
	  docs/man/upscli_ssl.txt, docs/man/upscli_strerror.txt,
	  docs/man/upscli_upserror.txt, docs/man/upsclient.txt,
	  docs/scheduling.txt, docs/security.txt: Fix trunk merge (pass 2).
	  Apply changes to doc to prepare merge to trunk.

2012-07-19  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* docs/man/mge-shut.txt: Document ondelay parameter unit discrepency
	  for SHUT drivers  mge-shut uses a ten seconds unit for ondelay
	  whereas newmge-shut uses seconds.
	* drivers/usbhid-ups.c, drivers/usbhid-ups.h: Add a lowbatt setting
	  to newmge-shut in order to mimic mge-shut setting

2012-07-19  Emilien Kia <kiae.dev@gmail.com>

	* clients/upsclient.c, server/netssl.c, server/netssl.h: Fix trunk
	  merge. Refactor and clean to prepare merge to trunk.
	* server/Makefile.am, server/conf.c, server/netcmds.h, server/{ssl.c
	  => netssl.c}, server/{ssl.h => netssl.h}, server/upsd.c: Replace
	  server/ssl.[h|c] by server/netssl.[h|c] in order to prepare nss
	  branch merging.

2012-07-18  Emilien Kia <kiae.dev@gmail.com>

	* .gitignore, INSTALL, MAINTAINERS, Makefile.am, NEWS, UPGRADING,
	  autogen.sh, clients/Makefile.am, clients/upsc.c,
	  clients/upsclient.c, clients/upsclient.h, clients/upsmon.c,
	  clients/upsmon.h, clients/upsrw.c, clients/upssched.c,
	  common/Makefile.am, common/common.c, common/parseconf.c,
	  common/state.c, common/upsconf.c, compile, conf/nut.conf.sample,
	  conf/upsd.conf.sample, configure.in, data/cmdvartab,
	  data/driver.list.in, docs/.gitignore, docs/FAQ.txt,
	  docs/Makefile.am, docs/acknowledgements.txt, docs/cables.txt,
	  docs/cables/apc.txt, docs/config-notes.txt, docs/configure.txt,
	  docs/design.txt, docs/developer-guide.txt, docs/developers.txt,
	  docs/documentation.txt, docs/download.txt, docs/features.txt,
	  docs/images/advanced.png, docs/images/bigbox.png,
	  docs/images/bizarre.png, docs/images/nut-logo.png,
	  docs/images/nut.svg, docs/images/simple.png, docs/macros.txt,
	  docs/maintainer-guide.txt, docs/man/.gitignore,
	  docs/man/Makefile.am, docs/man/apcsmart-old.txt,
	  docs/man/apcsmart.txt, docs/man/bcmxcp.txt, docs/man/belkinunv.txt,
	  docs/man/blazer.txt, docs/man/dummy-ups.txt, docs/man/index.txt,
	  docs/man/metasys.txt, docs/man/nut-ipmipsu.txt,
	  docs/man/nut-recorder.txt, docs/man/nut-scanner.txt,
	  docs/man/nut.conf.txt, docs/man/nutscan.txt,
	  docs/man/nutscan_add_device_to_device.txt,
	  docs/man/nutscan_add_option_to_device.txt,
	  docs/man/nutscan_cidr_to_ip.txt,
	  docs/man/nutscan_display_parsable.txt,
	  docs/man/nutscan_display_ups_conf.txt,
	  docs/man/nutscan_free_device.txt, docs/man/nutscan_init.txt,
	  docs/man/nutscan_new_device.txt, docs/man/nutscan_scan_avahi.txt,
	  docs/man/nutscan_scan_ipmi.txt, docs/man/nutscan_scan_nut.txt,
	  docs/man/nutscan_scan_snmp.txt, docs/man/nutscan_scan_usb.txt,
	  docs/man/nutscan_scan_xml_http.txt, docs/man/nutupsdrv.txt,
	  docs/man/oneac.txt, docs/man/powercom.txt, docs/man/snmp-ups.txt,
	  docs/man/ups.conf.txt, docs/man/upsc.txt,
	  docs/man/upscli_list_start.txt, docs/man/upsd.users.txt,
	  docs/man/upsmon.txt, docs/man/upsrw.txt, docs/net-protocol.txt,
	  docs/new-clients.txt, docs/new-drivers.txt, docs/nut-names.txt,
	  docs/security.txt, docs/sock-protocol.txt, docs/stable-hcl.txt,
	  docs/support.txt, docs/website/Makefile.am,
	  docs/website/css/web-layout.css, docs/website/faviconut.ico,
	  docs/website/faviconut.png, docs/website/news.txt,
	  docs/website/projects.txt, docs/website/ups-protocols.txt,
	  docs/website/web-layout.conf, drivers/.gitignore,
	  drivers/Makefile.am, drivers/apc-hid.c, drivers/apc-mib.c,
	  drivers/apcsmart-old.c, drivers/apcsmart-old.h, drivers/apcsmart.c,
	  drivers/apcsmart.h, drivers/apcsmart_tabs.c,
	  drivers/apcsmart_tabs.h, drivers/bcmxcp.c, drivers/bcmxcp.h,
	  drivers/bcmxcp_ser.c, drivers/bcmxcp_usb.c, drivers/belkin-hid.c,
	  drivers/belkinunv.c, drivers/bestfcom.c, drivers/bestfortress.c,
	  drivers/bestpower-mib.c, drivers/bestups.c, drivers/blazer.c,
	  drivers/blazer_ser.c, drivers/blazer_usb.c, drivers/compaq-mib.c,
	  drivers/cps-hid.c, drivers/cyberpower-mib.c,
	  drivers/cyberpower-mib.h, drivers/dstate.c, drivers/dstate.h,
	  drivers/dummy-ups.c, drivers/dummy-ups.h, drivers/eaton-mib.c,
	  drivers/eaton-mib.h, drivers/etapro.c, drivers/gamatronic.c,
	  drivers/genericups.c, drivers/ietf-mib.c, drivers/isbmex.c,
	  drivers/libhid.c, drivers/libshut.c, drivers/liebert-esp2.c,
	  drivers/liebert-hid.c, drivers/main.c, drivers/masterguard.c,
	  drivers/metasys.c, drivers/mge-hid.c, drivers/mge-mib.c,
	  drivers/mge-shut.c, drivers/mge-utalk.c, drivers/microdowell.c,
	  drivers/netvision-mib.c, drivers/netxml-ups.c, drivers/nut-ipmi.h,
	  drivers/nut-ipmipsu.c, drivers/nut-libfreeipmi.c, drivers/oneac.c,
	  drivers/oneac.h, drivers/powercom-hid.c, drivers/powercom.c,
	  drivers/powercom.h, drivers/powerware-mib.c,
	  drivers/raritan-pdu-mib.c, drivers/rhino.c, drivers/safenet.c,
	  drivers/snmp-ups.c, drivers/snmp-ups.h, drivers/solis.c,
	  drivers/tripplite-hid.c, drivers/tripplite_usb.c,
	  drivers/tripplitesu.c, drivers/upscode2.c, drivers/upshandler.h,
	  drivers/usb-common.c, drivers/usbhid-ups.c, include/.gitignore,
	  include/Makefile.am, include/common.h, include/extstate.h,
	  include/nut_stdint.h, include/parseconf.h, include/state.h,
	  lib/.gitignore, lib/Makefile.am, lib/README, lib/libnutscan.pc.in,
	  lib/libupsclient-config.in, lib/libupsclient.pc.in,
	  m4/ax_create_stdint_h.m4, m4/nut_check_libavahi.m4,
	  m4/nut_check_libfreeipmi.m4, m4/nut_check_libltdl.m4,
	  m4/nut_check_libwrap.m4, m4/nut_check_os.m4,
	  m4/nut_report_feature.m4, scripts/HP-UX/.gitignore,
	  scripts/HP-UX/makedepot.sh, scripts/HP-UX/nut.psf.in,
	  scripts/Makefile.am, scripts/README, scripts/augeas/Makefile.am,
	  scripts/augeas/README, scripts/avahi/nut.service.in,
	  scripts/java/Makefile.am, scripts/java/README,
	  scripts/java/jNut/README, scripts/java/jNut/pom.xml,
	  .../main/java/org/networkupstools/jnut/Client.java,
	  .../java/org/networkupstools/jnut/Command.java,
	  .../main/java/org/networkupstools/jnut/Device.java,
	  .../org/networkupstools/jnut/NutException.java,
	  .../java/org/networkupstools/jnut/Scanner.java,
	  .../org/networkupstools/jnut/StringLineSocket.java,
	  .../java/org/networkupstools/jnut/Variable.java,
	  .../java/org/networkupstools/jnut/ClientTest.java,
	  .../java/org/networkupstools/jnut/ScannerTest.java,
	  scripts/java/jNutList/README, scripts/java/jNutList/pom.xml,
	  .../java/org/networkupstools/jnutlist/AppList.java,
	  scripts/java/jNutWebAPI/README, scripts/java/jNutWebAPI/pom.xml,
	  .../jnutwebapi/NutRestProvider.java,
	  .../jnutwebapi/RestWSApplication.java,
	  .../jnutwebapi/ScannerProvider.java,
	  .../jNutWebAPI/src/main/webapp/WEB-INF/web.xml,
	  scripts/logrotate/nutlogd, scripts/python/module/PyNUT.py,
	  scripts/systemd/Makefile.am, scripts/systemd/README,
	  scripts/systemd/nut-driver.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in,
	  scripts/systemd/nutshutdown.in, scripts/udev/.gitignore,
	  scripts/udev/Makefile.am, scripts/udev/README,
	  scripts/udev/nut-ipmipsu.rules.in, scripts/ufw/README,
	  scripts/ufw/nut.ufw.profile.in, scripts/upower/95-upower-hid.rules,
	  server/Makefile.am, server/netcmds.h, server/netget.c,
	  server/netget.h, server/netinstcmd.c, server/netinstcmd.h,
	  server/netlist.c, server/netlist.h, server/netmisc.c,
	  server/netmisc.h, server/netset.c, server/netset.h,
	  server/netssl.c, server/netssl.h, server/netuser.c,
	  server/netuser.h, server/{ctype.h => nut_ctype.h}, server/sstate.c,
	  server/sstate.h, server/upsd.c, server/upsd.h, server/user.c,
	  tests/Makefile.am, tests/cpputest.cpp, tests/example.cpp,
	  tools/Makefile.am, tools/git-svn.authors, tools/nut-hclinfo.py,
	  tools/{device-recorder.sh => nut-recorder.sh},
	  tools/nut-scanner/Makefile.am, tools/nut-scanner/README,
	  tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-device.c,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-display.c,
	  tools/nut-scanner/nutscan-init.c, tools/nut-scanner/nutscan-init.h,
	  tools/nut-scanner/nutscan-ip.c, tools/nut-scanner/nutscan-ip.h,
	  tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_ipmi.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c,
	  tools/nut-snmpinfo.py, tools/nut-usbinfo.pl, tools/svn2cl.authors:
	  Merge from trunk [[SVN:2848]] to [[SVN:3679]] to ssl-nss-port.
	  Note: a problem is occurring for server/ssl.[h|c]: they have been
	  moved to server/netssl.[h|c] but consider them as removed.  For the
	  branch merging to trunk, consider paying attention to the case of
	  these files (removing them by hand).

2012-07-17  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/apc-mib.c: APC SNMP MIB update and completion  Add
	  available high precision values, new variables
	  (input.transfer.reason, battery.current.total and ups.test.date),
	  and move ambient.{temperature,humidity}.{high,low} to ambient.1.*,
	  since they relate to alarm threshold of external probe 1 (patch
	  from Hong-Gunn Chew)
	* docs/nut-names.txt: Clarify the use of multiple ambient sensors
	  Multiple sensors can be exposed using the indexed notation.
	  'ambient.*', without index or using '0', relates to the embedded
	  sensor. For example: 'ambient.temperature' represent the embedded
	  sensor temperature. Other sensors (external, communication card,
	  ...) can use indexes from '1' to 'n'. For example:
	  'ambient.1.temperature' for the first external sensor temperature.
	* docs/nut-names.txt: NUT namespace completion  Add two new variables
	  'ups.test.date' and 'battery.current.total'. Also add a note on the
	  'ambient' collection for supporting multiple sensors

2012-07-16  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/nut-ipmipsu.c, drivers/nut-libfreeipmi.c,
	  m4/nut_check_libfreeipmi.m4, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_ipmi.c: Support for FreeIPMI 1.1.x and 1.2.x
	  Prepare for supporting API changes in FreeIPMI 1.1.x and 1.2.x.
	  This is mostly related to SDR API simplifications. A 2nd iteration
	  will probably address code redundancy, whenever possible

2012-07-10  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, drivers/eaton-mib.c, drivers/eaton-mib.h,
	  drivers/snmp-ups.c, drivers/snmp-ups.h: Add support for Eaton ePDU
	  Switched (Pulizzi)  Implement support for older Eaton / Powerware
	  ePDU Switched. These were once sold as Pulizzi, and have now been
	  replaced by newer model (Eaton Marlin implementation and others)

2012-07-09  Emilien Kia <kiae.dev@gmail.com>

	* configure.in: Fix CppUnit detection.  Fix inconsistent test for
	  CppUnit install (using pkg-config) to really enable unit tests.

2012-07-05  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/nut-ipmipsu.txt: Fix an error on possible power supplies
	  status

2012-07-04  Arnaud Quette <arnaud.quette@free.fr>

	* clients/upssched.c: Fix upssched regression  Coverity branch merge
	  [[SVN:3555]] introduced a regression: any upssched.conf command
	  that takes a second argument resulted in a defective frame sent to
	  the parent process. Thus, the command was not executed (patch from
	  Oliver Schonefeld)
	* Makefile.am, configure.in, tests/.gitignore, tests/Makefile.am,
	  tests/cpputest.cpp, tests/example.cpp: Add basic infrastructure for
	  unit tests  Merge eki-unittests branch, with some adjustments, to
	  add a basic initial infrastructure for unit tests, using CppUnit
	  (v1.9.6+) (from Emilien Kia, from Eaton)

2012-07-03  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/systemd/nut-driver.service.in,
	  scripts/systemd/nutshutdown.in: Fix upsdrvctl call path  upsdrvctl
	  is located in @driverexecdir@, not @SBINDIR@ (reported by Michal
	  Hlavinka, from Redhat)

2012-06-15  Arnaud Quette <arnaud.quette@free.fr>

	* configure.in: Adapt systemd installation directory #2  Complete
	  previous commit by also adapting paths for service files

2012-06-14  Arnaud Quette <arnaud.quette@free.fr>

	* configure.in: Adapt systemd installation directory  Adapt systemd
	  installation directory for the shutdown script, so that it does not
	  try to install it in the actual system directory, but to the
	  pointed build directory, including a sub directory prefix
	* docs/new-clients.txt: Fix broken link to upscli_*(3) HTML manual
	  pages

2012-06-12  Arnaud Quette <arnaud.quette@free.fr>

	* configure.in: Fix WITH_SSL and WITH_NSS AM_CONDITIONAL definitions
	  nut_with_nss / nut_with_openssl must be set to "yes", otherwise
	  AM_CONDITIONAL counterpart WITH_NSS / WITH_SSL is not defined
	* docs/new-drivers.txt: Forgotten mention  upsdrv_info_t->name is
	  also published as "driver.name" variable
	* docs/man/belkinunv.txt, drivers/belkinunv.c, drivers/main.c,
	  drivers/masterguard.c, drivers/metasys.c, drivers/mge-utalk.c,
	  drivers/microdowell.c, drivers/nut-ipmipsu.c, drivers/safenet.c,
	  drivers/tripplitesu.c, drivers/usbhid-ups.c: Remove redundant
	  driver.version.internal publication
	* configure.in, docs/configure.txt, docs/man/nut-scanner.txt: Add
	  missing references to libltdl for nut-scanner  nut-scanner requires
	  libltdl (Libtool dlopen abstraction) since NUT 2.6.3.
	  Documentations have been completed, and nut-scanner build status is
	  now exposed in the build configuration summary
	* drivers/snmp-ups.c: Fix publication of driver.version.data  Publish
	  the MIB name and version in driver.version.data, rather than merged
	  into driver.version.internal
	* drivers/netxml-ups.c: Fix publication of driver.version.data
	  netxml-ups subdriver version is to be tracked in
	  driver.version.data, not in driver.version.internal
	* docs/nut-names.txt: Add missing variable driver.version.data  Add
	  variable driver.version.data, to track version of the internal data
	  mapping, for generic drivers (reported by Luiz Angelo Daros de
	  Luca)
	* docs/nut-names.txt: Fix comment for driver.version.internal
	  Drivers internal version are always tracked separately, and stored
	  in driver.version.internal

2012-06-11  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* drivers/apcsmart.c: apcsmart: tcsetattr/tcgetattr addendum  This
	  small patch moves the comparison sequence into separate function.
	  No functional changes.  Also minor retab! run on defines.

2012-06-11  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: HCL: Add support for REDi Blazer  Add REDi
	  Blazer 400VA / 600VA / 800VA to the list of blazer_ser supported
	  models (reported by Marius Gavrilescu)
	* docs/nut-names.txt: Fix a typo error on power.minimum description
	  power.minimum is really the minimum seen apparent power in VA
	  (reported by Luiz Angelo Daros de Luca)

2012-06-07  Charles Lepple <clepple+nut@gmail.com>

	* drivers/oneac.h: Remove unused constants to fix LLVM compilation
	  error.

2012-06-07  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, drivers/blazer_usb.c: HCL:  Add support for
	  Online Zinto A to blazer_usb  Add Online Zinto A (USB ID
	  0x06da:0x0601) to the list of blazer_usb supported models (reported
	  by Carsten Burkhardt)

2012-06-05  Arnaud Quette <arnaud.quette@free.fr>

	* docs/website/news.txt, docs/website/projects.txt: WMNut updates
	  Update WMNut release (0.64) and hosting URL

2012-06-04  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/wincompat.c, docs/man/upsd.users.txt, drivers/apc-mib.c,
	  drivers/apcsmart.c, drivers/dummy-ups.h, drivers/netvision-mib.c,
	  include/wincompat.h: Merge from trunk [[SVN:3541]] to [[SVN:3644]]
	  (upgrade to 2.6.4)

2012-06-04  Arnaud Quette <arnaud.quette@free.fr>

	* docs/download.txt, docs/website/news.txt: Update Windows package
	  publications for 2.6.4-1

2012-05-31  Arnaud Quette <arnaud.quette@free.fr>

	* NEWS, UPGRADING, configure.in, docs/website/news.txt: Final update
	  for 2.6.4 release

2012-05-30  Prachi Gandhi <prachi-guest@alioth.debian.org>

	* scripts/Solaris/preinstall: Updated preinstall script for 'nut'
	  group, user checking
	* Makefile.am, scripts/Solaris/Makefile.am,
	  scripts/Solaris/preinstall: Added checking for existing 'nut'
	  group, user and updated package name

2012-05-30  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: HCL: Add support for Cyber Power Systems
	  CP1000PFCLCD  Add CyberPower Systems CP1000PFCLCD (USB ID
	  0x0764:0x0501) to the list of usbhid-ups supported models (reported
	  by David Owen)
	* drivers/apc-mib.c: Track more APC SNMP sysOID values, as comments
	* drivers/upshandler.h: Fix code spacing (no functional change)
	* drivers/bcmxcp_ser.c, drivers/bcmxcp_usb.c: Add some debug traces
	  on incoming / outgoing data
	* INSTALL: Add missing reference to nut.conf manual page
	* drivers/bestfortress.c: Improve Best Fortress LI675VA support
	  Apply an old missed patch: all responses are preceded and
	  terminated by "CR LF". But bestfortress driver discards anything
	  after the first "CR LF". This patch trims everything up to the
	  first LF. (patch from Jørgen Thomsen)
	* drivers/metasys.c: Remove extraneous spaces (no functional changes)

2012-05-29  Prachi Gandhi <prachi-guest@alioth.debian.org>

	* Makefile.am, configure.in, tools/nut-scanner/Makefile.am,
	  tools/nut-scanner/nut-scan.h, tools/nut-scanner/nutscan-init.c,
	  tools/nut-scanner/nutscan-init.h, tools/nut-scanner/scan_snmp.c:
	  Changes in nut-scanner to remove Sparc 'usmAESPrivProtocol' error
	  while creating package

2012-05-29  Arnaud Quette <arnaud.quette@free.fr>

	* common/parseconf.c: Fix CVE-2012-2944: upsd can be remotely crashed
	  NUT server (upsd), from versions 2.4.0 to 2.6.3,  are exposed to
	  crashes when receiving random data from the network.  This issue is
	  related to the way NUT parses characters, especially from the
	  network. Non printable characters were missed from strings
	  operation (such as strlen), but still copied to the buffer, causing
	  an overflow.  Thus, fix NUT parser, to only allow the subset Ascii
	  charset from Space to ~  (Reported by Sebastian Pohle, Alioth bug
	  #313636, CVE-2012-2944)
	* data/driver.list.in: HCL: Add support for Lexis X-power Tigra 1kVA
	  Add Lexis X-power Tigra 1kVA to the list of blazer_ser or bestups
	  supported models (reported by Tmima Pliroforikis Perifereiakis
	  Enotitas Pierias)
	* data/driver.list.in: HCL: Encourage the use of blazer_ser instead
	  of bestups  Mention blazer_ser as prefered compared to bestups.
	  Recent changes to blazer_ser have made it possible to use it
	  instead of bestups. In the end, bestups will be replaced by
	  blazer_ser, as for other Megatec/Q1 drivers
	* drivers/blazer.c, drivers/blazer_ser.c: Improve Best UPS support in
	  blazer  Best UPS units, which use a subset of the Megatec/Q1
	  protocol, supported by the blazer drivers, can now work with
	  blazer_ser. This support is still limited, but already offers a
	  decent set of features

2012-05-25  Arnaud Quette <arnaud.quette@free.fr>

	* server/user.c: Add debug traces for instcmds and actions  Whenever
	  upsd adds an instant command or an action, from upsd.users, display
	  a debug trace
	* docs/man/upsd.users.txt: Clarify multiple actions specification
	  Add more details and an example, to illustrate multiple actions
	  specification (reported by Emilien Kia, from Eaton)

2012-05-24  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: HCL: Add support for Eaton Management Card
	  Contact  Add Eaton Management Card Contact (ref 66104) to the list
	  of mge-shut or mge-utalk supported models
	* drivers/compaq-mib.c: HP SNMP completion  Complete HP SNMP mapping
	  table, with thresholds, nominal values and more commands

2012-05-23  Arnaud Quette <arnaud.quette@free.fr>

	* docs/website/projects.txt: Reference Thecus NAS in Related projects
	  Add a reference in the Related projects, on Thecus NAS range, which
	  uses NUT for power protection

2012-05-22  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/apcsmart.c, drivers/apcsmart.h: Complete previous commit
	  for HP-UX  HP-UX does not support VREPRINT, so make it conditional
	* drivers/apcsmart.c, drivers/apcsmart.h: Fix commit [[SVN:3603]]
	  Commit [[SVN:3603]] (fix tcsetattr() / tcgetattr() issue) has
	  introduced some incompatibility with older Unix systems, such as
	  Solaris, Aix and HP-UX. The present commit should address it.
	*
	  scripts/java/jNut/src/main/java/org/networkupstools/jnut/Variable.java:
	  Adjust comment (no functional change)
	* configure.in, docs/net-protocol.txt, server/netcmds.h,
	  server/netmisc.c, server/netmisc.h: Add versioning to the network
	  protocol  Due to the number of recent evolutions to the network
	  protocol, along with other possible future changes, NUT network
	  protocol is now versioned. The chapter "Network protocol
	  information", of the developer guide, stores the revision history,
	  while a new "NETVER" command serves this information through the
	  protocol

2012-05-21  Prachi Gandhi <prachi-guest@alioth.debian.org>

	* Makefile.am, scripts/HP-UX/Makefile, scripts/HP-UX/nut.psf.in,
	  scripts/Makefile.am: generalized 'make package' call for Solaris,
	  HPUX package; updated nut.psf.in for HPUX

2012-05-21  Charles Lepple <clepple+nut@gmail.com>

	* drivers/belkin-hid.c: Fix Liebert firmware (incorrect exponents)
	  There are at least two Liebert firmware types which both report a
	  VID:PID of 10af:0001. The newer ones tend not to have the Belkin
	  broken Usage Pages (and therefore use standard HID PDC paths) but
	  they have incorrect exponents for some fields. This patch fixes the
	  values for the latter implementation

2012-05-21  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: HCL: Complete the supported PowerWalker ranges
	  Add PowerWalker Online VFI LCD, Line-Interactive VI LCD and
	  Line-Interactive VI models to the list of blazer_usb supported
	  models
	* data/driver.list.in: HCL: Add support for Microline C-Lion Innova
	  ranges  Add Microline C-Lion Innova models to the list of
	  blazer_usb supported models
	* data/driver.list.in: HCL: Add support for KOLFF ranges  Add KOLFF
	  BLACK NOVA models to the list of blazer_usb supported models
	* data/driver.list.in: HCL: Add support Ippon INNOVA RT range  Add
	  Ippon INNOVA RT models to the list of blazer_usb supported models
	* data/driver.list.in: HCL: Add support for Gtec ranges  Add Gtec
	  models to the list of blazer_ser or blazer_usb supported models
	* data/driver.list.in: HCL: Complete the supported EVER ranges  Add
	  EVER POWERLINE RT / 11 / 31 and DUO II Pro models to the list of
	  blazer_ser or blazer_usb supported models
	* data/driver.list.in: HCL: Add support for COVER ENERGY SA ranges
	  Add COVER ENERGY SA models to the list of blazer_usb supported
	  models
	* data/driver.list.in: HCL: Add support for Borri ranges  Add Borri
	  models to the list of blazer_usb supported models
	* data/driver.list.in: HCL: Add support for ARTronic ranges  Add
	  ARTronic models, both serial and USB, to the list of blazer_ser and
	  blazer_usb supported models
	* data/driver.list.in, drivers/netvision-mib.c: Add 3-phases support
	  to Socomec Netvision MIB  Improve Socomec Netvision MIB, by adding
	  support for 3-phases UPS (patch from Manuel Bouyer)
	* data/driver.list.in: HCL: Add support for PowerShield Defender
	  1200VA  Add PowerShield Defender 1200VA (USB ID 0665:5161) to the
	  list of blazer_usb supported models (reported by Tom Clarkson)
	* drivers/blazer.c, drivers/blazer_ser.c, drivers/blazer_usb.c:
	  beeper.status belongs to the "ups" data collection

2012-05-16  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/apcsmart.c, drivers/apcsmart.h: Final fix to the
	  tcsetattr() / tcgetattr() issue  The most likely cause of all
	  spurious differences between what was set on the port with
	  tcsetattr() and what tcgetattr() shows are likely to do with the
	  c_local PENDIN flag, which is a status bit, not a control bit. It
	  will change when there's unread pending input, which can be quite
	  often on an APC UPS.  The right way to compare struct termios
	  values is to clear the status flags _after_ the tcsetattr() and of
	  course after the tcgetattr() call and then compare the result with
	  what was set.  Also set NOKERNINFO, if available, as we don't want
	  the UPS or noise on the line to accidentally trigger status output
	  back to the UPS, and finally make sure IEXTEN is also cleared along
	  with ISIG since it too can cause weird things to happen.  This
	  change also adds some debug code to show any differences in the
	  structures in a logical manner in debug output (and squashes one
	  tiny compiler warning) (patch from Greg A. Woods)
	* docs/config-notes.txt, docs/man/upsmon.txt: Whitespace fixes
	  Remove some extraneous spaces, suggested by "git diff --check", and
	  improve a bit formatting (patch #36 from Greg A. Woods)

2012-05-15  Prachi Gandhi <prachi-guest@alioth.debian.org>

	* scripts/Solaris/Makefile.am: Updated scripts/Solaris/Makefile.am to
	  remove prototype, checkinstall
	* scripts/Solaris/checkinstall, scripts/Solaris/precheck.py,
	  scripts/Solaris/prototype: Deleted checkinstall, prototype files
	* Makefile.am, scripts/Solaris/Makefile.am,
	  scripts/Solaris/pkginfo.in, scripts/Solaris/prepackage.py,
	  scripts/Solaris/preproto.pl: Added perl script to create prototype
	  file onsolaris platform, updated Makefile.am
	* m4/nut_check_os.m4: Added perl script to create prototype file
	  onsolaris platform, updated Makefile.am

2012-05-15  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c, drivers/snmp-ups.h: Remove dead code  Remove
	  dead code, related to shutdown handling (no functional changes)
	  (based on patch #29 from Greg A. Woods)
	* docs/nut-names.txt: Fix formating issue
	* docs/nut-names.txt: Add missing battery.voltage data to the
	  namespace  Add missing battery.voltage.{low,high} to the standard
	  NUT namespace
	* docs/nut-names.txt, drivers/upscode2.c: Rename peakcurrent to
	  current.peak (as per RFC)  Rename peakcurrent to current.peak,
	  since it is more coherent and suitable
	* drivers/dummy-ups.c, drivers/dummy-ups.h: Update and cleanup
	  Convert flags defitions to bitwise left shift, convert some
	  comments about variables to actual values, and do a bit of cleanup
	  (patch #27 from Greg A. Woods)
	* drivers/blazer.c: Add comment on shutdown.return ondelay value  Add
	  a comment reinforcing the need for ondelay=3 (partial patch #26
	  from Greg A. Woods)
	* docs/man/snmp-ups.txt: Complete APC SNMP compatibility information
	  Mention more varieties of APC SNMP cards, and mention the POWERNET
	  MIB (patch #25 from Greg A. Woods)
	* drivers/netvision-mib.c: Fix status processing for "ECO mode"  When
	  running in "ECO mode", the driver should report an ups.status set
	  to "OL", or it otherwise ends up with an empty string that confuses
	  upsmon (patch from Ivan Kuznetsov)

2012-05-14  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* server/Makefile.am: Keep same sockdebug's binary name for all OS.
	* configure.ac: Add general Windows conditional (by Arnaud Quette)

2012-05-14  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/blazer.txt: Mention General Electric in blazer manual page
	  Mention General Electric as a user of the Megatec/Q1 protocol
	  (patch #24 from Greg A. Woods)
	* clients/upsmon.h: Use bitwise left shift for flags definitions  Use
	  (1 << N) to define a bit flag at bit N, which is more coherent with
	  other similar implementations in NUT (patch #23 from Greg A. Woods)
	* clients/upsmon.c: Cosmetic changes  Remove dead / redundant
	  #defines, and enable interesting debug traces that were commented
	  out (based on patch #22 from Greg A. Woods)
	* drivers/apcsmart.h: Use bitwise left shift for status flags
	  definitions  Use (1 << N) to define a bit flag at bit N, which is
	  more coherent with other similar implementations in NUT (patch #21
	  from Greg A. Woods)
	* drivers/apcsmart.c, drivers/apcsmart.h: Don't be too strict about
	  terminal settings  Don't log an error when tcgetattr() reports
	  different settings on the port (patch #20 from Greg A. Woods)
	* tools/nut-usbinfo.pl: Better filtering on USB related files  The
	  current USB information extraction script is not optimal at
	  filtering files that need to be inspected. While waiting for a
	  proper rewrite, improve a bit more filenames filtering (patch #18
	  from Greg A. Woods)
	* drivers/blazer_ser.c: Quote the debug output for space visibility
	  Quote the debug output so one can see how many spaces there are
	  (patch #16 from Greg A. Woods)
	* docs/cables/apc.txt: Update APC cabling information  Update
	  information about APC cable model numbering and revisions (patch
	  #16 from Greg A. Woods)
	* data/driver.list.in: HCL: GE Digital Energy updates  Rename "GE" to
	  "GE Digital Energy", which is more appropriate in this context.
	  Also add GT Series 1000-3000 VA to the list of blazer_ser supported
	  models (patch #15 from Greg A. Woods)
	* docs/developers.txt: Complete notes on spaces for alignements  Add
	  complementary note on the use of spaces for alignements (patch #14
	  from Greg A. Woods)
	* docs/design.txt: Use more suitable examples  Use an example driver
	  name matching the unified NUT drivers generic manual page name
	  (patch #13 from Greg A. Woods)
	* drivers/mge-hid.c: Complete and update Eaton HID usages table

2012-05-11  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* server/Makefile.am, server/pipedebug.c: Add pipedebug program
	  pipedebug has the same goal as socketdebug for the WIN32 side.

2012-05-11  Arnaud Quette <arnaud.quette@free.fr>

	* tools/Makefile.am: Fix typo in comment  Fix a typo error in comment
	  (reported by Fred Bohé, from Eaton)
	* scripts/upower/95-upower-hid.rules: Update upower script  Update
	  upower script with recent changes and updates (redundant with patch
	  #6 from Greg A. Woods)
	* tools/Makefile.am: Explicit mention of Makefiles brokenness
	  Document that, at least, this Makefile.am is broken by design
	  (patch #5 from Greg A. Woods)
	* docs/man/apcsmart.txt: Fix documentation wording  "there're" is not
	  a valid contraction, especially not in a technical document (patch
	  #4 from Greg A. Woods)
	* docs/man/apcsmart.txt: Always use upper case for the acronym "UPS"
	  Be consistent in using all upper case for the acronym "UPS" (Ie
	  Uninterruptible Power Supply) (patch #3 from Greg A. Woods)
	* docs/man/apcsmart.txt: Fix SmartUPS cabling nomenclature  Correct
	  the nomenclature of the SmartUPS cabling part numbers (patch #2
	  from Greg A. Woods)
	* configure.in: Fix a configure error message  Asciidoc might
	  actually be installed but documentation might still not be
	  build-able (earlier messages should hint at exactly what was
	  missing) (patch #1 from Greg A. Woods)
	* data/driver.list.in: HCL: Add support for ATEK Defensor range  Add
	  ATEK Defensor range (Innova series) to the list of blazer_usb
	  supported models
	* data/driver.list.in: HCL: Fix EVER brand name  The correct name is
	  "EVER", not "EVER UPS", as per a request from the manufacturer

2012-05-10  Arnaud Quette <arnaud.quette@free.fr>

	* docs/website/news.txt: Update for WMNut 0.63 publication
	* docs/website/ups-protocols.txt: Official Riello protocols
	  publication

2012-05-09  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/Makefile.am, clients/message.c, clients/upsmon.c,
	  scripts/Windows/Installer/NUT-Installer.xml: Add an external
	  wall-like application.  In order to avoid weird behavior of
	  MessageBox with MB_SERVICE_NOTIFICATION flag at exit time; I added
	  an external application in charge of displaying the message boxes
	  (much like the wall command).

2012-05-08  Prachi Gandhi <prachi-guest@alioth.debian.org>

	* Makefile.am, scripts/Solaris/Makefile.am,
	  scripts/Solaris/prepackage.py: Added python script to create
	  pkginfo.in and checkinstall scripts depending upon the solaris
	  platform

2012-05-03  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/wincompat.c: Fix journal event truncation.

2012-05-03  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/libshut.c, drivers/mge-shut.c: Forgotten driver version
	  bump
	* clients/upsmon.c: Coverity fix on upsmon  Remove an unneeded null
	  check, that cause a Coverity error (reported by Michal Hlavinka
	  from RedHat)
	* drivers/libshut.c, drivers/mge-shut.c: Coverity fix on Eaton SHUT
	  Fix some tests that are always false, regardless of the values of
	  operands (reported by Michal Hlavinka from RedHat)

2012-05-02  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Installer/NUT-Installer.xml: Add more DLLs in bin
	  directory  These are used by netxml-ups driver and nut-scanner
	  tool.
	* scripts/Windows/Installer/BuildInstaller.bat: Make sure
	  upssched.conf is DOS compatible
	* conf/upsd.conf.sample: Update comments for IPv6 on Windows
	  platforms
	* scripts/Windows/Installer/NUT-Installer.xml: Add libneon-27.dll and
	  libnetsnmp-30.dll in bin directory  These are used respectively by
	  netxml and snmp-ups drivers.

2012-05-02  Arnaud Quette <arnaud.quette@free.fr>

	* docs/download.txt, docs/website/news.txt: Update Windows package
	  publications
	* common/Makefile.am, include/Makefile.am: Better handling of
	  nut_version.h  nut_version.h should not be distributed, since it is
	  automatically built. Moreover, hard dependency in common/ is not
	  needed since BUILT_SOURCES reference ensure generation before any
	  other target:
	  http://www.gnu.org/software/automake/manual/automake.html#Sources
	  (Reported by Regid Ichira, Debian bug #613643)

2012-04-27  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, drivers/cps-hid.c: Add support for CyberPower
	  Systems PR6000LCDRTXL5U  Add CyberPower Systems PR6000LCDRTXL5U
	  (USB ID 0x0764:0x0601) to the list of usbhid-ups supported models
	  (reported by Dax Kelson)
	* data/driver.list.in: HCL: Complete HP supported devices list  Add
	  HP UPS Management Module to the list of snmp-ups supported models.
	  Also complete serial compatibility for some models, using mge-shut

2012-04-26  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Installer/NUT-Installer.xml: libupsclient-1.dll is
	  needed in "bin" too
	* scripts/Windows/Installer/NUT-Installer.xml: Add nut-scanner files
	  and libupsclient-1.dll to the MSI installer
	* scripts/Windows/Installer/BuildInstaller.bat: echo a comment

2012-04-25  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/nut-scanner.txt: Clarify nut-scanner compilation and
	  distribution  Document explicitely how nut-scanner is compiled, and
	  how its features are made available, according to its dependencies
	  (both compile time and runtime)

2012-04-24  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_nut.c: Merge from trunk [[SVN:3511]] to
	  [[SVN:3539]]
	* tools/nut-scanner/nut-scanner.c, tools/nut-scanner/nutscan-init.c,
	  tools/nut-scanner/nutscan-init.h, tools/nut-scanner/scan_avahi.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-scanner/scan_xml_http.c: Cleaner exit for nut-scanner

2012-04-23  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/serial.h: Completely skip termios.h with WIN32  The latest
	  MinGW raise errors on termios.h, so we skip it for now.
	* tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_ipmi.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c: Be
	  more verbose when failing to dynamically load a library

2012-04-17  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upsmon.c: Make the message box of notify non-blocking

2012-04-14  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/.gitignore, docs/man/Makefile.am, docs/man/index.txt,
	  docs/man/nut-recorder.txt, tools/nut-recorder.sh: Create
	  nut-recorder manual page
	* drivers/tripplite-hid.c: HP USB UPS completion #3  Remove R/T3000
	  USB ID (0x03f0:0x1fe5) from the TrippLite HID mapping, since it is
	  supported by the Eaton HID mapping. This completes commit
	* drivers/usbhid-ups.c: Correct Celsius temperatures that should be
	  in Kelvin  Check if raw value is in the Kelvin range, to detect
	  buggy values that are already expressed in Celsius degrees, as
	  found on some HP devices
	* docs/developer-guide.txt, tools/Makefile.am,
	  tools/{device-recorder.sh => nut-recorder.sh}: Rename
	  device-recorder to nut-recorder
	* data/driver.list.in: HCL: Reorder Dell devices by connection type

2012-04-10  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/systemd/nut-driver.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in,
	  scripts/systemd/nutshutdown.in: Fix broken systemd integration in
	  the build system  Step 2: add the theoretical path templates to the
	  systemd scripts. This however requires adjustments to the RPM
	  package. Namely, upsd and upsmon will have to be installed in
	  /sbin, instead of the current /usr/sbin
	* configure.in, scripts/systemd/Makefile.am: Fix broken systemd
	  integration in the build system  Step 1: remove Makefile rules that
	  were both useless, and causing warning. Generate nut-*.service
	  files from .in templates in configure, as it should be, which is
	  currently void since there is no target to substitute. This has
	  however required to export SBINDIR and PIDPATH through AC_SUBST, in
	  configure
	* clients/upsrw.c, common/state.c, docs/man/upscli_list_start.txt,
	  docs/man/upsrw.txt, docs/net-protocol.txt, docs/new-drivers.txt,
	  docs/sock-protocol.txt, drivers/dstate.c, drivers/dstate.h,
	  include/extstate.h, include/state.h, server/netget.c,
	  server/netlist.c, server/netset.c, server/sstate.c,
	  server/sstate.h: Support of ranges of values for writable variables
	  It is now possible to specify one or more ranges of values for
	  writable variables, using dstate_addrange() in drivers. upsd also
	  supports the new type 'RANGE' for 'GET TYPE', along with the 'LIST
	  RANGE' command. Finally, users can interact through upsrw, which
	  displays the supported ranges, and enforces new value checking
	  against the provided boundaries
	* drivers/mge-hid.c: HP USB UPS completion #2  Address HP USB/HID
	  devices, that use the Eaton HID definitions. This includes the
	  latest products range (USB IDs 0x1fe5, 0x1fe6, 0x1fe7 and 0x1fe8),
	  and few more variables and commands
	* drivers/mge-hid.c: Fix Eaton / MGE outlet.2.switchable flags
	  outlet.2.switchable should only be writable to enable ECO mode on
	  Ellipse ECO, Protection Station and some 3S. Other models should
	  only expose it as read only (reported by Prachi Gandhi from Eaton,
	  Alioth bug #313587)

2012-04-06  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/Makefile.am, m4/nut_check_socketlib.m4: Fix conditional
	  Makefile for WIN32
	* clients/Makefile.am: Conditional Makefile for WIN32

2012-04-04  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/Makefile.am, scripts/logrotate/nutlogd: Provide log
	  rotation configuration for NUT  Provide a basic configuration file
	  for managing rotation (logrotate) of NUT log files, generated by
	  upslog

2012-04-03  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* configure.ac: This doesn't make it through past merges.

2012-04-02  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut-names.txt: Update the namespace  Complete the namespace
	  with missing variables and commands, that are either known or have
	  had an RFC
	* docs/man/.gitignore: Subversion ignored files completion  Mark
	  nutscan_init.html as Subversion ignored (no functional changes)

2012-03-31  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: HCL: Add support for AEG Power Solutions
	  PROTECT HOME  Add AEG Power Solutions PROTECT HOME (USB ID
	  0x0665:0x5161) to the list of blazer_ser and blazer_usb supported
	  models (reported by Joachim Schiele)

2012-03-30  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nutscan-init.c: This is needed for non WIN32 too.
	* common/common.c: Special case when sending signal 0

2012-03-30  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/bcmxcp_usb.c: Add debug traces for read / write commands
	* common/common.c, include/common.h: Improve support functions for
	  trimming strings  Enforce verifications in rtrim, and add an ltrim
	  function

2012-03-29  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, drivers/blazer_usb.c: Add support Innova
	  online UPS family  Add Innova T (0x06da:0x0201), Innova RT
	  (0x06da:0x0005) and Innova 3/1 T (0x06da:0x0004) to the list of of
	  blazer_usb and blazer_ser supported models. Innova series are
	  online UPS supporting Q1 for compatibility, and many more commands.
	  Better support, either through blazer_* rewrite or through a new
	  driver, is considered as a future possibility

2012-03-26  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/wincompat.c: Small correction to error messages.

2012-03-24  Arnaud Quette <arnaud.quette@free.fr>

	* configure.in, docs/Makefile.am, docs/security.txt,
	  scripts/Makefile.am, scripts/ufw/.gitignore, scripts/ufw/README,
	  scripts/ufw/nut.ufw.profile.in: Uncomplicated Firewall (UFW)
	  support  Provide an Uncomplicated Firewall (UFW) profile
	  (nut.ufw.profile) to tightly integrate NUT, along with some
	  documentation completion for the Security chapter of the user
	  manual

2012-03-23  Arnaud Quette <arnaud.quette@free.fr>

	* conf/nut.conf.sample, docs/man/nut.conf.txt: Fix nut.conf
	  documentation and sample file  Since nut.conf is intended to be
	  sourced by shell scripts, spaces must not be added around the equal
	  sign. Fix documentation and sample file to conform to this purpose,
	  and add bold warning (reported by Tim Rice, Alioth bug #312452)
	* clients/upsmon.c, server/upsd.c: Detect duplicate instances of upsd
	  / upsmon  Fix a long standing issue, that is the lack of detection
	  of duplicate upsd / upsmon instances when starting another one of
	  these daemons. This previously resulted in inconsistencies, such as
	  being unable to stop the daemon, due to its .pid file being removed
	  by the newly started instance (last reported by Andrew Min Chang)

2012-03-21  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/libshut.c: Avoid stack corruption on invalid frame  In the
	  protocol, the frame size can be 8 bytes max. That is why the frame
	  buffer is only 8 bytes long. If the frame is corrupted, the size
	  read may be up to 15, which may corrupt the stack while writing
	  into the frame buffer. This patch add a simple sanity check on the
	  size to avoid a crash and enforce protocol limitation.
	* drivers/libshut.c: Fix SHUT variables read (from Arnaud Quette)
	* drivers/bcmxcp.c, drivers/bcmxcp.h, drivers/bcmxcp_usb.c: Change
	  timeout for PW9120  Current timeout (1 sec) is too short for
	  PW9120: numerous frames are lost. Setting this to 2 seconds fix
	  this.
	* drivers/libshut.c: Deactivate UPS notification  Currently this
	  driver is ignoring notification by automatically sending NACK when
	  they are received. Nevertheless,this behavior creates communication
	  errors with some UPS (M2200). So this patch completly disable the
	  sending of notification from the UPS. Ideally we should correclty
	  implement notifications managment for optimal performance, but with
	  this patch, at least, communiaton works.
	* drivers/libshut.c: Fix shut notification mask

2012-03-16  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_nut.c: Fix indentation
	* tools/nut-scanner/nutscan-init.c: Add #ifdef WIN32 for
	  do_upsconf_args definition

2012-03-09  Arnaud Quette <arnaud.quette@free.fr>

	* docs/config-notes.txt: Emphasize special characters
	* data/driver.list.in, drivers/tripplite-hid.c: HP USB UPS completion
	  #1  Address HP USB/HID devices, that use the TrippLite HID
	  definitions. This includes new ProductIDs, and few more variables
	  and commands
	* drivers/oneac.h: Remove extraneous comment start

2012-03-08  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upsclient.c, common/common.c, drivers/safenet.c,
	  include/wincompat.h, server/conf.c: Clean up
	* drivers/blazer_usb.c, drivers/libusb0.c, drivers/usbhid-ups.c: Add
	  comments about EPROTO and EOVERFLOW
	* server/upsd.c: typo in comments
	* drivers/blazer_usb.c, drivers/libusb0.c, drivers/usbhid-ups.c,
	  include/wincompat.h: Better handling of ETIMEDOUT
	* common/parseconf.c, common/upsconf.c, docs/config-notes.txt: More
	  flexible '=' character managment in conf files  This allow to
	  support the following forms : 'foo = bar', 'foo=bar', 'foo =bar'
	  and 'foo= bar'

2012-03-06  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/oneac.txt, drivers/oneac.c, drivers/oneac.h: Improve
	  general OneAC support (oneac 0.80)  Improve support for all
	  families of Oneac (EG, ON, OZ and OB), including support for more
	  data and instant commands (patch from Bill Elliot)

2012-03-05  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/blazer.c, drivers/blazer_ser.c, drivers/blazer_usb.c:
	  Guesstimate battery high and low voltages  Add an automatic
	  estimation for high and low voltages, to be able to determine
	  battery charge. This should cover most cases, but a bold mention
	  has been added at driver startup, to inform the user. Driver
	  version (USB and serial) have been bumped to reflect this change
	* drivers/blazer.c: Set 'FSD' status flag upon need  As per the
	  recent decision to allow driver to set 'FSD' status flag, set 'FSD'
	  upon "Shutdown imminent" detection

2012-03-02  Arnaud Quette <arnaud.quette@free.fr>

	* autogen.sh, scripts/augeas/Makefile.am: Sanity check before python
	  script execution  Only generate Augeas ups.conf lens if we can
	  import required Python modules (re,glob,codecs)
	* docs/man/blazer.txt: Fix typo error in runtimecal example values
	* docs/stable-hcl.txt: Improve formating
	* docs/new-drivers.txt: Formalize the use of the FSD status flag  As
	  an exception, drivers are now allowed to set the "FSD" (Forced
	  ShutDown) status flag when an imminent shutdown has been detected

2012-02-29  Charles Lepple <clepple+nut@gmail.com>

	* scripts/python/module/PyNUT.py: Add support for LIST CLIENTS, etc.
	  to PyNUT.  Patch by Rene Martín Rodríguez <rmrodri@ull.edu.es>.
	  Merged with typo fixes in repository.  Covers LIST CLIENTS, FSD,
	  HELP and VER. Module version bumped to 1.2.2.  Discussion:
	  http://article.gmane.org/gmane.comp.monitoring.nut.devel/5871
	* server/netlist.c, server/upsd.c, server/upsd.h: Add new "LIST
	  CLIENTS" command to NUT protocol.  Patch by Rene Martín Rodríguez
	  <rmrodri@ull.edu.es>, with indentation changed to tabs.
	  Discussion:
	  http://article.gmane.org/gmane.comp.monitoring.nut.devel/5870
	* drivers/blazer.c: Update URL to Megatec protocol description.

2012-02-29  Arnaud Quette <arnaud.quette@free.fr>

	* clients/upsc.c, docs/man/upsc.txt: Client side implementation of
	  "LIST CLIENT"  Implement "LIST CLIENT" in upsc, using "-c <device
	  name>"
	* docs/net-protocol.txt, server/netlist.c: Adjust server side
	  implementation of "LIST CLIENT"  Commands of the "LIST" family have
	  to be coherent with the command name. Ie, "LIST CLIENT" should use
	  the same "CLIENT" prefix, or it will otherwise break client side
	  verification mechanism
	* server/netlist.c: Adjust "LIST CLIENTS" implementation  Adjust
	  "LIST CLIENTS" implementation to be more coherent with other
	  network protocol commands
	* docs/net-protocol.txt: Document new "LIST CLIENTS" command
	* server/upsd.c, server/upsd.h: Remove upsd "info" command  Adjust
	  initial "LIST CLIENTS" commit, by removing the upsd "info" command,
	  which is not suitable, and redundant with the "LIST CLIENT" command
	  of the network protocol  [Fixed compilation error]

2012-02-28  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/liebert-hid.c: UPower optimization  Always spell
	  manufacturer names the same way across the various USB drivers.
	  This avoids duplication of manufacturer entries in
	  scripts/upower/95-upower-hid.rules, during automatic generation

2012-02-27  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, drivers/cps-hid.c: Add support for CyberPower
	  OR700LCDRM1U  Add CyberPower OR700LCDRM1U (0x0764:0x0601) to the
	  list of usbhid-ups supported models (reported by Brian McCann)

2012-02-22  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* drivers/apcsmart.c: setvar_string() and apc_write_long() bugfixes
	  setvar_string() couldn't function properly, due to the use of wrong
	  variable.  Not associated with any bugreport (reported directly to
	  email).
	* drivers/apcsmart.c: make tcsetattr()/tcgetattr() difference not
	  fatal  This is follow up from earlier bug report (#313395). Earlier
	  commit should have fixed the issue, but the original submitter
	  never commented on it.  Just in case - instead of making it fatal,
	  we only log the issue.

2012-02-20  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c, tools/nut-scanner/scan_snmp.c: Better handling
	  of Net-SNMP AES PrivProtocol  Handle smartly issues related to
	  Net-SNMP support and declaration of AES PrivProtocol

2012-02-19  Charles Lepple <clepple+nut@gmail.com>

	* drivers/snmp-ups.c, drivers/snmp-ups.h: Don't allocate storage for
	  variables in snmp-ups.h  The header files should declare variables
	  as extern, and they should be allocated in only one .c file (not
	  all of the files which include the .h file). While this is not an
	  immediate problem when only one .c file includes the .h file, it
	  still should be fixed in case that changes in the future.  Patch by
	  Daniel Macks:
	  http://fink.cvs.sourceforge.net/viewvc/fink/experimental/dmacks/finkinfo/nut.patch?revision=1.1&view=markup
	* drivers/bcmxcp.c, drivers/bcmxcp.h: Don't allocate storage for
	  variables in bcmxcp.h  The header files should declare variables as
	  extern, and they should be allocated in only one .c file (not all
	  of the files which include the .h file). This was causing multiple
	  symbol definitions on Mac OS X.  Patch by Daniel Macks:
	  http://fink.cvs.sourceforge.net/viewvc/fink/experimental/dmacks/finkinfo/nut.patch?revision=1.1&view=markup

2012-02-16  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* configure.ac: Cleaner regex addtion por apcsmart driver (by Arnaud
	  Quette)

2012-02-16  Charles Lepple <clepple+nut@gmail.com>

	* tools/git-svn.authors, tools/svn2cl.authors: Update SVN username
	  mappings

2012-02-16  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, drivers/blazer_usb.c: Add support for Online
	  Yunto YQ450  Add Online Yunto YQ450 (0x06da:0x0002) to the list of
	  blazer_usb supported models (reported by Thomas Maisl)

2012-02-14  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Add support for Tripp-Lite OMNISMART500  Add
	  Tripp-Lite OMNISMART500 (productID 0001) to the list of
	  tripplite_usb supported models (reported by Matt Schulte)

2012-02-10  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Support for Dell UPS Network Management Card
	  Add Dell UPS Network Management Card to the list of snmp-ups and
	  netxml-ups supported models. SNMP support currently relies on IETF
	  (RFC-1628) MIB, and not on Dell UPS MIB

2012-02-09  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/blazer_usb.c, drivers/mge-mib.c, drivers/richcomm_usb.c,
	  drivers/usb-common.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-scanner/scan_xml_http.c: Merge from trunk: [[SVN:3320]]
	  to [[SVN:3435]]
	* tools/nut-scanner/scan_snmp.c: Remove useless lib_mutex and buggy
	  dev_mutex

2012-02-03  Arnaud Quette <arnaud.quette@free.fr>

	* Makefile.am: Update ChangeLog generation and fix text wrapping
	  Adapt the ChangeLog file generation process to correctly wrap text,
	  even with the new 'git style' format, used for Subversion commit
	  messages

2012-02-02  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/bcmxcp.c, drivers/bcmxcp.h: Improve XCP support for battery
	  status  Add support for battery test publication in
	  ups.test.result, and RB (replace battery) in ups.status

2012-01-31  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/bestfortress.c: Add more debug traces  Add more debug
	  traces, again, to work on the checksum corruption issue

2012-01-23  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/mge-mib.c: Clean and complete MGE MIB  Complete MGE MIB for
	  status, variables and commands, using IETF MIB OIDs when needed.
	  Macro have also been replaced by actual numeric OID paths for
	  better clarity.
	* drivers/snmp-ups.c, drivers/snmp-ups.h: snmp-ups shutdown support
	  snmp-ups now provides support for UPS shutdown, based on usbhid-ups
	  mechanisms (composite commands and fallback). Composite commands
	  are also supported. This means, for example, that if
	  'shutdown.return' is not supported, a combination of 'load.off' +
	  'load.on' may be used.
	* drivers/ietf-mib.c: Fix invalid variable name  Beeper status
	  belongs to the 'ups' data collection
	* drivers/snmp-ups.c: Check validity of instant commands before
	  addition  Prior to adding new instant commands, referenced OIDs are
	  now checked for existance. This avoid adding commands that are not
	  supported
	* docs/man/upsmon.txt: Fix upsmon synopsis  Add the missing '-K'
	  (Test for the shutdown flag) to upsmon synopsis (reported by Regid
	  Ichira)

2012-01-20  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upscmd.c, clients/upsrw.c, common/wincompat.c,
	  drivers/dstate.c, include/wincompat.h: Add getpwuid and getpass
	  functions.

2012-01-20  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Support for Riello Netman Plus 102 SNMP Card
	  Add Riello Netman Plus 102 SNMP Card, and attached Sentinel SDL
	  6000-7 and Sentinel Dual SDH 1000-7 UPS, to the list of snmp-ups
	  supported models (reported by Rainer Stumbaum)

2012-01-19  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upslog.c, clients/upsmon.c, clients/upssched.c,
	  common/wincompat.c, include/wincompat.h: Add filter_path function
	  This allows blank characters both in data files name and command
	  path
	* scripts/Windows/wininit.c: Cleaner initialization of variables

2012-01-19  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/bestfortress.c: Add more debug traces, to work on the
	  checksum corruption issue

2012-01-18  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut-names.txt, drivers/usbhid-ups.c: Adjust ups.start.auto
	  value for shutdown commands  When present, ups.start.auto value
	  needs to be adjusted for shutdown.{return,stayoff} to behave as
	  expected. This is limited to Eaton devices (reported by Rich Wrenn)

2012-01-16  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/wincompat.c, include/wincompat.h: Fix commands with blank in
	  their path
	* clients/upssched.c, clients/upssched.h: Fix porting of upssched
	* drivers/dstate.c: Remove useless code

2012-01-11  Arnaud Quette <arnaud.quette@free.fr>

	* UPGRADING: Cleanup garbage line  Remove garbage line that was added
	  by accident during the AsciiDoc branch merge or work
	* tools/nut-scanner/Makefile.am, tools/nut-scanner/nutscan-init.c,
	  tools/nut-scanner/scan_nut.c: Move libupsclient to weak runtime
	  dependencies  libupsclient, as other libraries used by nut-scanner,
	  is now a weak runtime dependency, through the use of lt_dl*()
	  functions. This means that libupsclient is not anymore required,
	  but only suggested. This should also solve the distcheck-light
	  compilation on Aix (on behalf of Frédéric Bohe, from Eaton)

2012-01-10  Michal Hlavinka <mhlavink@redhat.com>

	* drivers/dstate.c: do not forget to check send_to_one return value
	  send_to_one free()s connection, we can't use it after failure.
	* drivers/bcmxcp.c: do not call getinfo twice, use returned value for
	  parsing  result was stored, but never used. Another dstate_getinfo
	  call was used instead of stored value. Probably result of
	  copy-paste.
	* tools/nut-scanner/scan_xml_http.c: do not use unterminated string
	  in strlen  recvfrom returns raw data without null termination, this
	  string can't be used in strlen. Use number of recieved bytes
	  returned by recvfrom instead of strlen.
	* clients/upssched.c: do not send garbage on retry  because write and
	  read commands shared one buffer, on retry we did not send command
	  again, but last read data
	* drivers/tripplite_usb.c: prevent buffer overflow in hexascdump
	  haxascdump uses fixed size static buffer, but it had no checks to
	  assure result can fit into that buffer.
	* tools/nut-scanner/scan_nut.c: ups variable was allocated, but not
	  free()d
	* drivers/rhino.c, drivers/solis.c: use automatic time_t variable
	  instead of allocated one  time_t value is small enough to be
	  automatic variable instead of allocated one. It eliminates risk we
	  forget to free it again.
	* drivers/bcmxcp.c: do not forget to free pTmp  even if len is zero,
	  pTmp should be freed
	* drivers/mge-utalk.c: prevent null pointer dereference in strchr  in
	  some cases p can be null causing null pointer dereference of v
	  (initialized to 0) in strchr command
	* drivers/bcmxcp_usb.c: Fix condition in re-try loop making error
	  checking unreachable  for loop with condition retry <= MAX_TRIES
	  ends with retry = MAX_TRIES+1. This breaks following error check
	  with retry == MAX_TRIES condition, because it's true only in case
	  when last retry actualy succeeded.

2012-01-09  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/bestups.c: Add the missing driver variable "battvoltmult"
	  (patch from Sadara Kael)

2012-01-06  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/snmp-ups.c: Reword the message when sysOID detection fails
	* drivers/compaq-mib.c: Add the sysOID value, and bump the MIB
	  version to 1.1 (reported by Jack Challen)
	* docs/download.txt: Remove inline SHA-256 sum, and provide links to
	  MD5 and SHA-256 sums

2012-01-05  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* include/Makefile.am: Fix "make distcheck-light" (by Arnaud Quette)

2012-01-05  Arnaud Quette <arnaud.quette@free.fr>

	* server/netget.c: GET UPSDESC does not need device sanity checks
	  (i.e. connected, with fresh data) to answer  (reported by Emilien
	  Kia, Alioth bug #313323)
	* data/driver.list.in: Add Dynamix 1000VA USB to the list of
	  blazer_usb supported models  (requires "langid_fix=0x0409" in
	  ups.conf; reported by Glen Ogilvie)

2012-01-04  Arnaud Quette <arnaud.quette@free.fr>

	* docs/download.txt: Add the missing SHA-256 sum on the Download page
	  / section  (needs to be generated after the distribution package)
	* docs/website/news.txt: Update 2.6.3 release date

2012-01-03  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* docs/config-notes.txt: Add a note about file names with space
	  characters in the documentation.
	* tools/nut-scanner/nut-scanner.c: Fix nut scanner SNMP v3 help
	  message.
	* docs/man/nut-scanner.txt: Fix nut scanner SNMP v3 documentation.

2012-01-03  Arnaud Quette <arnaud.quette@free.fr>

	* NEWS, UPGRADING, configure.in, docs/website/news.txt: Final update
	  for 2.6.3 release
	* drivers/dummy-ups.c: Add a comment for further processing

2011-12-30  Prachi Gandhi <prachi-guest@alioth.debian.org>

	* configure.in, scripts/Solaris/Makefile.am,
	  scripts/Solaris/checkinstall, scripts/Solaris/nut.in,
	  scripts/Solaris/pkginfo.in, scripts/Solaris/postinstall.in,
	  scripts/Solaris/postremove, scripts/Solaris/preinstall,
	  scripts/Solaris/preremove.in, scripts/Solaris/prototype: Added
	  Solaris Packaging scripts

2011-12-17  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/blazer_usb.c: Actually apply the langid_fix value, ...
	  ...when calling usb_get_string (reported by Charles Lepple)
	* data/driver.list.in, docs/man/blazer.txt, drivers/blazer_usb.c: Try
	  to fix language ID support for USB units from LDLC, Dynamix ...
	  ...and no names in blazer_usb (reworked patch, from Brian R. Smith
	  and Aurélien Grenotton)

2011-12-16  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/HP-UX/.gitignore: Add the generated HP-UX packaging script
	  (.psf) to the list of ignored files
	* drivers/eaton-mib.c, drivers/snmp-ups.c: Fix newer Eaton ePDU OIDs
	  declaration ordering, ...  ...so that it better supports the
	  various models (switched or advanced monitored)

2011-12-15  Arnaud Quette <arnaud.quette@free.fr>

	* clients/upsclient.c, drivers/belkinunv.c, drivers/etapro.c,
	  drivers/gamatronic.c, drivers/isbmex.c, drivers/libshut.c,
	  drivers/metasys.c, drivers/mge-shut.c, drivers/microdowell.c,
	  drivers/nut-libfreeipmi.c, drivers/rhino.c, drivers/solis.c: Fix
	  set but not used variables [-Wunused-but-set-variable]  (including
	  patch from Regid Ichira)

2011-12-13  Arnaud Quette <arnaud.quette@free.fr>

	* compile: Update compile script, as per the latest version available
	  in Automake (1.11)
	* docs/man/.gitignore: Add the generated nutscan_init.3 Groff manual
	  page...  ...to the list of ignored files
	* tools/nut-scanner/Makefile.am, tools/nut-scanner/scan_ipmi.c: Add
	  IPMI power supplies discovery to nut-scanner
	* drivers/nut-libfreeipmi.c, m4/nut_check_libfreeipmi.m4: Separate
	  IPMI requirements, between FRU lookup and monitoring.  This way, we
	  can at least compile nut-scanner with IPMI support and a limited
	  (no monitoring) version of nut-ipmipsu, using older (pre 1.0.1)
	  FreeIPMI versions

2011-12-12  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/Makefile.am: Unconditional compile of scan_*
	  source code...  ...since now they contains the relevant stub
	  function.
	* tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c:
	  Clean call to nutscan include files
	* tools/nut-scanner/nutscan-init.c: Fix wrong variable name
	* tools/nut-scanner/nut-scanner.c: Fix wrong call to
	  nutscan_scan_avahi
	* tools/nut-scanner/Makefile.am: Forgot to include nutscan-init.h in
	  Makefile
	* docs/man/Makefile.am, docs/man/nutscan_init.txt,
	  docs/man/nutscan_scan_avahi.txt, docs/man/nutscan_scan_ipmi.txt,
	  docs/man/nutscan_scan_nut.txt, docs/man/nutscan_scan_snmp.txt,
	  docs/man/nutscan_scan_usb.txt, docs/man/nutscan_scan_xml_http.txt:
	  Update documentation
	* tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_ipmi.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c:
	  Make sure not to call any non-initialized function pointers.
	* tools/nut-scanner/Makefile.am, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/nutscan-init.c,
	  tools/nut-scanner/nutscan-init.h, tools/nut-scanner/scan_avahi.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_snmp.c,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c:
	  Keep the same API whatever the library are at compile time...
	  ...(so some scan functions may be stub only) Add an init function +
	  variable to know the available scan method at run time.  Update
	  nut-scanner accordingly.

2011-12-09  Charles Lepple <clepple+nut@gmail.com>

	* autogen.sh: Force files to be overwritten (especially for libtool)

2011-12-09  Arnaud Quette <arnaud.quette@free.fr>

	* Makefile.am, configure.in, libltdl/COPYING.LIB,
	  libltdl/Makefile.am, libltdl/Makefile.in, libltdl/Makefile.inc,
	  libltdl/README, libltdl/aclocal.m4, libltdl/argz.c,
	  libltdl/argz_.h, libltdl/config-h.in, libltdl/config/compile,
	  libltdl/config/config.guess, libltdl/config/config.sub,
	  libltdl/config/depcomp, libltdl/config/edit-readme-alpha,
	  libltdl/config/general.m4sh, libltdl/config/getopt.m4sh,
	  libltdl/config/install-sh, libltdl/config/ltmain.m4sh,
	  libltdl/config/ltmain.sh, libltdl/config/mdate-sh,
	  libltdl/config/missing, libltdl/config/mkstamp,
	  libltdl/config/texinfo.tex, libltdl/configure,
	  libltdl/configure.ac, libltdl/libltdl/lt__alloc.h,
	  libltdl/libltdl/lt__dirent.h, libltdl/libltdl/lt__glibc.h,
	  libltdl/libltdl/lt__private.h, libltdl/libltdl/lt__strl.h,
	  libltdl/libltdl/lt_dlloader.h, libltdl/libltdl/lt_error.h,
	  libltdl/libltdl/lt_system.h, libltdl/libltdl/slist.h,
	  libltdl/loaders/dld_link.c, libltdl/loaders/dlopen.c,
	  libltdl/loaders/dyld.c, libltdl/loaders/load_add_on.c,
	  libltdl/loaders/loadlibrary.c, libltdl/loaders/preopen.c,
	  libltdl/loaders/shl_load.c, libltdl/lt__alloc.c,
	  libltdl/lt__dirent.c, libltdl/lt__strl.c, libltdl/lt_dlloader.c,
	  libltdl/lt_error.c, libltdl/ltdl.c, libltdl/ltdl.h,
	  libltdl/m4/argz.m4, libltdl/m4/autobuild.m4, libltdl/m4/libtool.m4,
	  libltdl/m4/ltdl.m4, libltdl/m4/ltoptions.m4, libltdl/m4/ltsugar.m4,
	  libltdl/m4/ltversion.in, libltdl/m4/ltversion.m4,
	  libltdl/m4/lt~obsolete.m4, libltdl/slist.c, libltdl/stamp-mk,
	  m4/nut_check_libltdl.m4, tools/nut-scanner/Makefile.am: Delete the
	  bundled version of libltdl, ...  and add detection and integration
	  for the system provided version. nut-scanner build now depends on
	  the existence of libltdl on the system
	* autogen.sh: Revert commit [[SVN:3344]],  ...since it causes
	  problems with documentation build, due to INSTALL being overwritten

2011-12-07  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* Makefile.am, configure.in, libltdl/COPYING.LIB,
	  libltdl/Makefile.am, libltdl/Makefile.in, libltdl/Makefile.inc,
	  libltdl/README, libltdl/aclocal.m4, libltdl/argz.c,
	  libltdl/argz_.h, libltdl/config-h.in, libltdl/config/compile,
	  libltdl/config/config.guess, libltdl/config/config.sub,
	  libltdl/config/depcomp, libltdl/config/edit-readme-alpha,
	  libltdl/config/general.m4sh, libltdl/config/getopt.m4sh,
	  libltdl/config/install-sh, libltdl/config/ltmain.m4sh,
	  libltdl/config/ltmain.sh, libltdl/config/mdate-sh,
	  libltdl/config/missing, libltdl/config/mkstamp,
	  libltdl/config/texinfo.tex, libltdl/configure,
	  libltdl/configure.ac, libltdl/libltdl/lt__alloc.h,
	  libltdl/libltdl/lt__dirent.h, libltdl/libltdl/lt__glibc.h,
	  libltdl/libltdl/lt__private.h, libltdl/libltdl/lt__strl.h,
	  libltdl/libltdl/lt_dlloader.h, libltdl/libltdl/lt_error.h,
	  libltdl/libltdl/lt_system.h, libltdl/libltdl/slist.h,
	  libltdl/loaders/dld_link.c, libltdl/loaders/dlopen.c,
	  libltdl/loaders/dyld.c, libltdl/loaders/load_add_on.c,
	  libltdl/loaders/loadlibrary.c, libltdl/loaders/preopen.c,
	  libltdl/loaders/shl_load.c, libltdl/lt__alloc.c,
	  libltdl/lt__dirent.c, libltdl/lt__strl.c, libltdl/lt_dlloader.c,
	  libltdl/lt_error.c, libltdl/ltdl.c, libltdl/ltdl.h,
	  libltdl/m4/argz.m4, libltdl/m4/autobuild.m4, libltdl/m4/libtool.m4,
	  libltdl/m4/ltdl.m4, libltdl/m4/ltoptions.m4, libltdl/m4/ltsugar.m4,
	  libltdl/m4/ltversion.in, libltdl/m4/ltversion.m4,
	  libltdl/m4/lt~obsolete.m4, libltdl/slist.c, libltdl/stamp-mk,
	  tools/nut-scanner/Makefile.am, tools/nut-scanner/scan_avahi.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-scanner/scan_xml_http.c: First set of modification to
	  include libltdl

2011-12-05  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, docs/man/snmp-ups.txt, drivers/Makefile.am,
	  drivers/cyberpower-mib.c, drivers/cyberpower-mib.h,
	  drivers/snmp-ups.c: Add Cyber Power Systems with SNMP RMCARD (100,
	  201, 202 and 301) ...  ...to the list of snmp-ups supported models
	  (patch from Eric Schultz)
	* drivers/snmp-ups.c: Remove the Eaton Marlin hook, for base outlet
	  index ...  ...since it has been fixed by a new firmware revision

2011-11-29  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/wincompat.c: Fix blazer_ser driver (from Paul Fertser)
	* common/wincompat.c: Don't leave one liner alone after if.

2011-11-29  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-snmpinfo.py: Fix indentation and use open() instead of
	  file(), to better support Python 3  (Alioth bug #313446, patch from
	  Bohdan Popovych)

2011-11-25  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/nut-ipmi.h: Fix wrong prototype declaration, that was
	  causing a compilation warning  (implicit declaration of function
	  ‘nut_ipmi_get_sensors_status’)

2011-11-24  Prachi Gandhi <prachi-guest@alioth.debian.org>

	* Makefile.am, configure.in, scripts/Makefile.am,
	  scripts/Solaris/Makefile.am, scripts/Solaris/makelocal.sh,
	  scripts/Solaris/pkginfo.in, scripts/Solaris/prototype: Reverted
	  changes made for Solaris packaging files in [[SVN:3326]] ...  added
	  files in NUT_packaging branch
	* Makefile.am, configure.in, scripts/Makefile.am,
	  scripts/Solaris/Makefile.am, scripts/Solaris/makelocal.sh,
	  scripts/Solaris/pkginfo.in, scripts/Solaris/prototype: Solaris NUT
	  package files added
	* Makefile.am, configure.in, scripts/Makefile.am,
	  scripts/Solaris/Makefile.am, scripts/Solaris/makelocal.sh,
	  scripts/Solaris/pkginfo.in, scripts/Solaris/prototype: Solaris NUT
	  package files added

2011-11-24  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/Solaris/pkginfo.in: BASEDIR must also be adapted from
	  configure settings
	* scripts/Solaris/Makefile.am: Add missing dependencies, and
	  distribution rules
	* scripts/Makefile.am: There is no need to list Solaris/pkginfo.in
	  there, ...  ...since 'Solaris' is listed in SUBDIRS, and
	  'pkginfo.in' is listed in configure.in
	* scripts/Solaris/Makefile.am: Remove makelocal.sh from
	  check_SCRIPTS, ...  ...since it is not meant to be run at "make
	  check" time

2011-11-15  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/Makefile.am, clients/upsclient.c, common/Makefile.am,
	  common/wincompat.c, conf/upsmon.conf.sample.in, docs/Makefile.am,
	  drivers/apc-mib.c, drivers/apcsmart-old.h, drivers/apcsmart.c,
	  drivers/mge-mib.c, drivers/netvision-mib.c, drivers/nut-ipmipsu.c,
	  drivers/snmp-ups.c, server/Makefile.am, server/ssl.c,
	  server/upsd.c, tools/nut-scanner/nutscan-ip.c,
	  tools/nut-scanner/nutscan-ip.h, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  Merge from trunk [[SVN:3060]] to [[SVN:3318]]

2011-11-15  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/blazer_usb.c, drivers/usb-common.h: Revert commit
	  [[SVN:2993]] and [[SVN:2994]].  This enables again inclusion of
	  buggy USB Device and Vendor IDs, supported by blazer_usb, in udev
	  rules file (Reported by Stanislav Brabec, from Suse)
	* tools/Makefile.am: Add missing comment

2011-11-12  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/mge-mib.c: Add upsmgBatteryLowCondition OID to the status
	  mapping  (reported by Kiss Gabor (Bitman))

2011-11-11  Praveen Kumar <praveenkumar-guest@alioth.debian.org>

	* scripts/HP-UX/makedepot.sh: script file to create package (depot)
	  for HP-UX

2011-11-08  Arnaud Quette <arnaud.quette@free.fr>

	* docs/website/web-layout.conf: Complete search keywords
	* docs/website/web-layout.conf: Final fix for the displaying of the
	  legend, to work on all browsers, ...  ...while still being
	  conforming to W3C validation

2011-11-07  Arnaud Quette <arnaud.quette@free.fr>

	* docs/website/web-layout.conf: Fix displaying of the legend

2011-11-05  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* docs/cables.txt, docs/man/apcsmart.txt: apcsmart.txt: minor
	  documentation update  Broken diagram link and 940-0024E cable
	  mention (reported by Jonathan Laventhol).

2011-11-05  Arnaud Quette <arnaud.quette@free.fr>

	* conf/upsd.conf.sample, server/upsd.c: Don't fail to start if at
	  least one of the listening interface is available.  This is needed
	  on systems where either IPv4 or IPv6 is disabled, and no explicit
	  LISTEN directive has been specified (Reported by Pavel Zubkou,
	  Debian bug #598741)

2011-11-02  Praveen Kumar <praveenkumar-guest@alioth.debian.org>

	* configure.in, scripts/HP-UX/nut.psf.in: Adding packaging script for
	  HPUX

2011-10-31  Arnaud Quette <arnaud.quette@free.fr>

	* docs/download.txt, docs/website/news.txt: Publish update jNut 0.2,
	  along with the new jNutWebAPI  (contributed by Emilien Kia, from
	  Eaton)

2011-10-28  Emilien Kia <kiae.dev@gmail.com>

	* scripts/java/README, scripts/java/jNutWebAPI/README,
	  scripts/java/jNutWebAPI/pom.xml,
	  .../jnutwebapi/NutRestProvider.java,
	  .../jnutwebapi/RestWSApplication.java,
	  .../jnutwebapi/ScannerProvider.java,
	  .../jNutWebAPI/src/main/webapp/WEB-INF/web.xml: Initial commit of
	  jNutWebAPI.
	* scripts/java/jNut/.gitignore,
	  scripts/java/jNut/src/main/java/org/networkupstools/jnut/Scanner.java:
	  Fix a little bug with function namming (get instead of set).

2011-10-27  Arnaud Quette <arnaud.quette@free.fr>

	* docs/maintainer-guide.txt: Create a basic NUT maintainer guide, ...
	  to start tracking and improving maintenance workflow
	* drivers/bcmxcp_usb.c: Handle disconnection issues and reconnection
	  mechanism  (bug reported by Rich Wrenn)

2011-10-25  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* drivers/apcsmart.c: minor correction  Assigning 0 directly was
	  wrong (actually, a leftover from earlier version of the code that
	  was removed) - ser_set_speed() prepares the port initially, we only
	  adjust certain options.

2011-10-25  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_snmp.c: Add sanity checks
	* tools/nut-scanner/scan_avahi.c: Remove unused variable

2011-10-25  Emilien Kia <kiae.dev@gmail.com>

	* .../test/java/org/networkupstools/jnut/ClientTest.java: Add licence
	  information.
	* scripts/java/jNut/README, scripts/java/jNut/pom.xml,
	  .../java/org/networkupstools/jnut/Scanner.java,
	  .../java/org/networkupstools/jnut/ScannerTest.java: Add
	  nut-scanner.

2011-10-24  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* docs/man/nut-scanner.txt, tools/nut-scanner/nut-scanner.c: Forgot
	  to document "-q" option (thanks to Emilien Kia for reporting this)

2011-10-21  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nut-scanner.c: Trivial layout consistency
	* docs/man/nut-scanner.txt: Update man page with -V and -a option
	* tools/nut-scanner/nut-scanner.c: Add an option to display available
	  bus (usefull for wrapper).
	* tools/nut-scanner/nut-scanner.c: return -1 on bad command line
	  option

2011-10-19  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nutscan-ip.c: Fix crash on 32bits systems
	* tools/nut-scanner/nut-scanner.c: Add a switch to display NUT
	  version.

2011-10-19  Charles Lepple <clepple+nut@gmail.com>

	* docs/FAQ.txt: Add FAQ entry for LISTEN directive

2011-10-18  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/eaton-mib.c: Fix outlets reported current, ...  ...which
	  were off by 100 in aphel_genesisII MIB, and bump MIB version to
	  0.46 (patch from Sven Nilsson)

2011-10-14  Charles Lepple <clepple+nut@gmail.com>

	* include/Makefile.am: nut_version.h: grab Git revision, if any

2011-10-14  Arnaud Quette <arnaud.quette@free.fr>

	* docs/Makefile.am, docs/images/nut-logo.png, docs/images/nut.svg,
	  docs/website/Makefile.am, docs/website/css/web-layout.css,
	  docs/website/faviconut.ico, docs/website/faviconut.png,
	  docs/website/web-layout.conf: Add the new NUT logo (contributed by
	  Luc Descotils, from Eaton)
	* docs/website/web-layout.conf: Fix another W3C validator error
	  (there is no attribute "language" anymore for <script> in XHTML
	  1.1)
	* data/driver.list.in: Remove redundant entry, that probably causes a
	  W3C validator error (end tag for "tr" which is not finished)
	* tools/Makefile.am: Only generate static and JSON HCL if we can
	  import json, ...  ...simplejson and lxml Python modules
	* docs/Makefile.am: Remove the user manual dependency on static HCL,
	  which broke Buildbot
	* configure.in, docs/Makefile.am, docs/download.txt,
	  docs/website/Makefile.am: Automate generation of the version
	  release information, in the Download section.  This is a rewritten
	  version of [[SVN:3272]], this time using Asciidoc mechanism instead
	  of Autoconf
	* Makefile.am, docs/Makefile.am, tools/Makefile.am,
	  tools/nut-hclinfo.py: Add static HCL as a user manual dependency,
	  along with the needed build rules

2011-10-13  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* docs/man/nut-scanner.txt: Add examples to nut-scanner man page

2011-10-13  Charles Lepple <clepple+nut@gmail.com>

	* docs/man/nut-scanner.txt: nut-scanner.txt: spelling and style edits

2011-10-13  Arnaud Quette <arnaud.quette@free.fr>

	* docs/configure.txt: Add missing --with-avahi documentation
	* docs/Makefile.am, docs/developer-guide.txt,
	  tools/nut-scanner/.gitignore, tools/nut-scanner/README,
	  tools/nut-scanner/nut-scan.h: Add a 'NUT device discovery' chapter
	  to the developer guide, ...  ...to document libnutscan
	* configure.in: Enable Avahi automatic support, upon detection
	* docs/man/.gitignore, docs/man/Makefile.am, docs/man/index.txt,
	  docs/man/nutscan.txt: Add an overview manpage for libnutscan
	* configure.in, docs/Makefile.am, docs/{download.txt.in =>
	  download.txt}: Revert [[SVN:3272]], which breaks distribution
	  check, ...  ...while waiting for a suitable solution

2011-10-12  Arnaud Quette <arnaud.quette@free.fr>

	* docs/.gitignore: Mark download.txt as ignored, ...  ...since it is
	  now generated automatically (no functional changes)

2011-10-11  Arnaud Quette <arnaud.quette@free.fr>

	* configure.in, docs/Makefile.am, docs/{download.txt =>
	  download.txt.in}: Automate generation of the stable release
	  information, in the Download section

2011-10-10  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* docs/man/nut-scanner.txt, tools/nut-scanner/nut-scanner.c: Add CIDR
	  option manual

2011-10-10  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/nut-libfreeipmi.c, tools/nut-scanner/scan_avahi.c: Replace
	  <time.h> inclusion by "timehead.h", as per NUT coding standard
	  (Reported by Prachi Gandhi, from Eaton)
	* scripts/upower/95-upower-hid.rules: Update upower script with
	  Powercom entry
	* docs/website/projects.txt: Advertise more the official Windows
	  port, with regard to WinNUT
	* Makefile.am: Force ChangeLog regeneration upon make dist, ...
	  ...in case it has already been generated previously

2011-10-06  Charles Lepple <clepple+nut@gmail.com>

	* docs/support.txt: Reduce recommended debug level from 5 to 2 in
	  Support page.

2011-10-05  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, drivers/powercom-hid.c: Add Powercom BNT-xxxAP
	  (productID 0004)...  ...to the list of usbhid-ups supported models
	  (reported by Virus, on Ubuntu Launchpad)

2011-09-30  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Add Belkin F6S600auUSB to the list of
	  blazer_usb supported models  (reported by Simon Dwyer)

2011-09-26  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nutscan-ip.c: Remove AI_NUMERICSERV...  ...since
	  it's useless and produces compile error on some systems.
	* tools/nut-scanner/nutscan-ip.h: Try to fix FreeBSD build

2011-09-26  Arnaud Quette <arnaud.quette@free.fr>

	* conf/upsd.conf.sample: Complete LISTEN information, with regard to
	  IP v4 or v6 disabled kernel  (reported by Pavel Zubkou, Debian bug
	  #598741)
	* clients/Makefile.am: Fix forgotten update of libupsclient version
	  information  (bump from 1:0:0 to 2:0:1)
	* docs/man/bcmxcp.txt, docs/man/blazer.txt, docs/man/dummy-ups.txt:
	  Fix spelling and typo errors (patch from Laurent Bigonville,
	  Debian)
	* tools/nut-scanner/scan_xml_http.c: Fix remaining compilation errors
	  on FreeBSD, ...  ...due to missing <netinet/in.h> header inclusion

2011-09-23  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nutscan-ip.c, tools/nut-scanner/nutscan-ip.h,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  Replace calls to inet_* functions by equivalent getaddrinfo and
	  getnameinfo...  ...for portability

2011-09-23  Arnaud Quette <arnaud.quette@free.fr>

	* docs/config-notes.txt: Add a note on nut-scanner availability
	* docs/.gitignore: Mark some forgotten generated HTML files as
	  ignored files  (no functional changes)
	* docs/Makefile.am, docs/developer-guide.txt, docs/new-clients.txt,
	  lib/README: Complete lib/README and convert it to Asciidoc, ...
	  ...as 'Appendix B: NUT libraries complementary information'
	* configure.in, docs/macros.txt, docs/man/Makefile.am,
	  docs/website/Makefile.am, drivers/Makefile.am,
	  m4/nut_check_libfreeipmi.m4, m4/nut_check_libwrap.m4,
	  m4/nut_report_feature.m4, tools/nut-scanner/Makefile.am,
	  tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_ipmi.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_usb.c: Rework
	  the whole HAVE_<FEATURE> versus WITH_<FEATURE> logic, ...  ...which
	  is not suitable anymore since nut-scanner. Previously, we only
	  defined an automake variable (AM_CONDITIONAL) that allowed to
	  compile coherent set of features (a specific driver, for example).
	  With nut-scanner, we also need a pre-processor macro (AC_DEFINE) to
	  manage code activation inside of a feature. The NUT_REPORT_FEATURE
	  macro has been modified to handle all this logic

2011-09-22  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nut-scanner.c: Move a pthread variable to a
	  #ifdef HAVE_PTHREAD section.

2011-09-20  Arnaud Quette <arnaud.quette@free.fr>

	* server/Makefile.am, server/netcmds.h, server/netget.c,
	  server/netget.h, server/netinstcmd.c, server/netinstcmd.h,
	  server/netlist.c, server/netlist.h, server/netmisc.c,
	  server/netmisc.h, server/netset.c, server/netset.h,
	  server/netuser.c, server/netuser.h, server/{ctype.h =>
	  nut_ctype.h}, server/ssl.c, server/ssl.h, server/upsd.c,
	  server/upsd.h: Rename upsd internal client structure and header
	  from ctype_t to nut_ctype_t.  This avoids namespace conflict on
	  AIX, and is more suitable in general

2011-09-18  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/nutupsdrv.txt: Add the missing '-q' option (closes Alitoth
	  patch #301145)
	* tools/nut-scanner/Makefile.am: Distribute the needed headers for
	  libnutscan
	* configure.in, lib/.gitignore, lib/Makefile.am,
	  lib/libnutscan.pc.in: Add pkg-config support for libnutscan
	* common/Makefile.am: Remove extraneous space

2011-09-17  Arnaud Quette <arnaud.quette@free.fr>

	* docs/developer-guide.txt, docs/man/dummy-ups.txt: Complete device
	  simulation and recording information
	* docs/man/index.txt: Add nut-scanner and libnutscan entries to the
	  manual pages index
	* docs/man/.gitignore: Mark some more generated HTML files as ignored
	  files  (no functional changes)

2011-09-15  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_nut.c: Conditional inclusion of pthread.h
	* tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-display.c,
	  tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_ipmi.c,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-scanner/scan_xml_http.c: config.h is included in
	  common.h, so only include common.h
	* include/parseconf.h: We need stdio.h because we use FILE type.

2011-09-15  Arnaud Quette <arnaud.quette@free.fr>

	* docs/download.txt: Add the missing SHA-256 sum on the Download page
	  / section  (need to be generated after the distribution package)
	* drivers/nut-ipmipsu.c, drivers/nut-libfreeipmi.c: Don't override
	  PSU absence with the power failure flag
	* NEWS, UPGRADING, configure.in, docs/download.txt,
	  docs/website/news.txt: Final update for 2.6.2 release
	* docs/configure.txt: Complete the minimum FreeIPMI version required
	* tools/nut-scanner/.gitignore: Mark remaining generated files as
	  ignored files  (no functional changes)
	* docs/man/.gitignore: Mark remaining generated manual pages as
	  ignored files  (no functional changes)
	* docs/man/nut-ipmipsu.txt, drivers/nut-ipmi.h,
	  drivers/nut-ipmipsu.c, drivers/nut-libfreeipmi.c,
	  m4/nut_check_libfreeipmi.m4: Complete nut-ipmipsu, by adding
	  sensors discovery and monitoring

2011-09-14  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_snmp.c: Remove use of strndup. This is not
	  supported on Solaris.
	* tools/nut-scanner/nutscan-ip.c: Get rid of s6_addr32 in IPv6 code
	  since it is implementation specific.  Replaced by s6_addr. (thanks
	  to Charles Lepple)

2011-09-14  Emilien Kia <kiae.dev@gmail.com>

	*
	  scripts/java/jNut/src/main/java/org/networkupstools/jnut/Client.java,
	  scripts/java/jNut/src/main/java/org/networkupstools/jnut/Command.java,
	  scripts/java/jNut/src/main/java/org/networkupstools/jnut/Device.java,
	  .../java/jNut/src/main/java/org/networkupstools/jnut/NutException.java,
	  .../jNut/src/main/java/org/networkupstools/jnut/StringLineSocket.java,
	  scripts/java/jNut/src/main/java/org/networkupstools/jnut/Variable.java:
	  Fix mail address typo for javadoc.

2011-09-14  Charles Lepple <clepple+nut@gmail.com>

	* tools/nut-scanner/scan_snmp.c: Remove unbalanced #endif
	* tools/nut-scanner/scan_snmp.c: nut-scanner: use "common.h", which
	  includes "config.h"
	* tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_usb.c:
	  Include <string.h> for nut-scanner
	* tools/nut-scanner/scan_snmp.c: Silence redefined PACKAGE_ macro
	  warnings  This should be fixed properly upstream, but in the mean
	  time, the SNMP-based tools can't use these macros properly (since
	  they will have the values for Net-SNMP, not NUT).

2011-09-14  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/.gitignore: Mark apcsmart-old binary as ignored file (no
	  functional changes)

2011-09-13  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/Makefile.am: Fix make distcheck-light
	* tools/nut-scanner/nutscan-ip.c: Do not use long long variable
	  anymore
	* tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_nut.c:
	  Remove all calls to asprintf

2011-09-13  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/bcmxcp.c: Fix compilation warning on values comparison
	  being always false
	* configure.in, tools/nut-scanner/nut-scanner.c: Complete commit
	  [[SVN:3218]], to address getopt_long too
	* configure.in: Do a second check to ensure inclusion of getopt.h, in
	  case optind is known
	* drivers/bcmxcp.c, drivers/bcmxcp.h, drivers/bcmxcp_ser.c: Add
	  support for outlet.n.delay.{start,shutdown}, ...  ...and use
	  outlet.n.delay.shutdown for outlet.n.shutdown.return instead of the
	  default 3 seconds (patch from Rich Wrenn)

2011-09-12  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* drivers/Makefile.am: apcsmart: minor Makefile.am change  Add
	  missing apcsmart_tabs.h
	* drivers/apcsmart.c: apcsmart: limit comm-lost spam  In
	  upsdrv_updateinfo(), additional comm-lost messages were logged,
	  potentially causing unnecessary spam in logs. As ser_comm_fail()
	  and ser_comm_good() functions do so themselves (including rate
	  limiting), we changed the superfluous info to debug level and also
	  switched to upsdebugx().
	* drivers/apcsmart.h: apcsmart: add '+' to APC_UNR_CMDS  Only '-' is
	  used, and only internally by the driver - no need to inform in logs
	  about unrecognized command.
	* docs/man/apcsmart.txt: apcsmart: minor updates to apcsmart man page

2011-09-12  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* docs/FAQ.txt, docs/config-notes.txt, docs/download.txt,
	  docs/man/Makefile.am, docs/man/apcsmart-old.txt,
	  docs/man/apcsmart.txt, docs/stable-hcl.txt,
	  docs/website/web-layout.conf, drivers/Makefile.am,
	  drivers/apcsmart-old.c, drivers/apcsmart-old.h, drivers/apcsmart.c,
	  drivers/apcsmart.h, drivers/apcsmart_tabs.c,
	  drivers/apcsmart_tabs.h, drivers/eaton-mib.c, drivers/eaton-mib.h,
	  drivers/snmp-ups.c: Merge with trunk from [[SVN:3196]]
	* docs/man/Makefile.am, docs/man/nut-scanner.txt,
	  docs/man/nutscan_add_device_to_device.txt,
	  docs/man/nutscan_add_option_to_device.txt,
	  docs/man/nutscan_cidr_to_ip.txt,
	  docs/man/nutscan_display_parsable.txt,
	  docs/man/nutscan_display_ups_conf.txt,
	  docs/man/nutscan_free_device.txt, docs/man/nutscan_new_device.txt,
	  docs/man/nutscan_scan_avahi.txt, docs/man/nutscan_scan_ipmi.txt,
	  docs/man/nutscan_scan_nut.txt, docs/man/nutscan_scan_snmp.txt,
	  docs/man/nutscan_scan_usb.txt, docs/man/nutscan_scan_xml_http.txt:
	  Add man pages

2011-09-12  Charles Lepple <clepple+nut@gmail.com>

	* docs/FAQ.txt: Reword rewording in FAQ

2011-09-09  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_snmp.c, tools/nut-snmpinfo.py: Use the
	  SysOID registered in drivers's sources...  ...to detect the
	  favorite MIB for SNMP devices. Fall back to old method if no
	  matching SysOID is found.

2011-09-09  Arnaud Quette <arnaud.quette@free.fr>

	* docs/FAQ.txt: Fix wording, that is not appropriate anymore
	* docs/config-notes.txt: Complete shutdown information on the
	  "critical UPS" notion
	* docs/download.txt: Add missing comma for OpenWrt
	* docs/stable-hcl.txt: Complete information for reporting new device
	* drivers/eaton-mib.c, drivers/eaton-mib.h, drivers/snmp-ups.c: Add a
	  missing Eaton MIB for PDU

2011-09-08  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_avahi.c: Add a timeout to scan-avahi
	  function

2011-09-08  Arnaud Quette <arnaud.quette@free.fr>

	* docs/download.txt: Forgotten commit for the new updated Windows
	  package
	* docs/website/web-layout.conf: Fix XHTML 1.1 compliance (reported by
	  W3C validators)
	* .gitignore, configure.in, m4/nut_check_os.m4, scripts/Makefile.am,
	  scripts/README, scripts/systemd/.gitignore,
	  scripts/systemd/Makefile.am, scripts/systemd/README,
	  scripts/systemd/nut-driver.service.in,
	  scripts/systemd/nut-monitor.service.in,
	  scripts/systemd/nut-server.service.in,
	  scripts/systemd/nutshutdown.in: Add initial support for systemd
	  (patch from Michal Hlavinka)

2011-09-06  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* configure.in, docs/download.txt, docs/new-clients.txt,
	  docs/website/news.txt, docs/website/projects.txt,
	  drivers/apc-mib.c, drivers/bestpower-mib.c, drivers/eaton-mib.c,
	  drivers/ietf-mib.c, drivers/mge-hid.c, drivers/mge-mib.c,
	  drivers/netvision-mib.c, drivers/powerware-mib.c,
	  drivers/raritan-pdu-mib.c, drivers/snmp-ups.c, drivers/snmp-ups.h,
	  scripts/Makefile.am, scripts/README, scripts/java/Makefile.am,
	  scripts/java/README, scripts/java/jNut/README,
	  scripts/java/jNut/pom.xml,
	  .../main/java/org/networkupstools/jnut/Client.java,
	  .../java/org/networkupstools/jnut/Command.java,
	  .../main/java/org/networkupstools/jnut/Device.java,
	  .../org/networkupstools/jnut/NutException.java,
	  .../org/networkupstools/jnut/StringLineSocket.java,
	  .../java/org/networkupstools/jnut/Variable.java,
	  .../java/org/networkupstools/jnut/ClientTest.java,
	  scripts/java/jNutList/README, scripts/java/jNutList/pom.xml,
	  .../java/org/networkupstools/jnutlist/AppList.java: Merge from
	  trunk [[SVN:3177]]

2011-09-06  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/apc-mib.c, drivers/bestpower-mib.c, drivers/eaton-mib.c,
	  drivers/ietf-mib.c, drivers/mge-mib.c, drivers/netvision-mib.c,
	  drivers/powerware-mib.c, drivers/raritan-pdu-mib.c,
	  drivers/snmp-ups.c, drivers/snmp-ups.h: Add a new initialization
	  method, that uses sysObjectID  (indirection to the main MIB of the
	  device) to detect supported devices. This speeds up even more init
	  stage and should render void the use of 'mib' option
	* drivers/snmp-ups.c: Force numeric OIDs resolution, ie do not
	  resolve to textual names.  This is mostly for the convenience of
	  debug output

2011-09-05  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_ipmi.c: typo
	* tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_xml_http.c:
	  More conditional compilation fixes
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_ipmi.c: use HAVE_FREEIPMI_FREEIPMI_H instead
	  of non existing WITH_IPMI
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_ipmi.c: Prepare IPMI integration. Fix
	  conditional compilation
	* tools/nut-scanner/scan_snmp.c: Fix no thread compilation
	* tools/nut-scanner/nut-scanner.c: Raise default timeout from 1s to
	  5s. Use parallel scanning.

2011-09-05  Arnaud Quette <arnaud.quette@free.fr>

	* scripts/java/Makefile.am,
	  .../java/org/networkupstools/jnuttest/AppTest.java: Remove test
	  code, since it is bound to jNut and not jNutList (reported by
	  Emilien Kia)
	* drivers/mge-hid.c: Add support for battery.runtime.low, and end of
	  battery life (life cycle monitoring) ; along with measurements
	  (outlet power factor, power, real power and current) for 5 PX
	* configure.in, scripts/Makefile.am, scripts/java/.gitignore,
	  scripts/java/Makefile.am: Complete jNut automake integration
	  (distribution rules)

2011-09-03  Arnaud Quette <arnaud.quette@free.fr>

	* docs/man/.gitignore: Mark nut-ipmipsu.html as ignored file (no
	  functional changes)

2011-09-02  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_snmp.c: Make sure SNMP strings are NULL
	  terminated
	* configure.in: Forgot to resolve a conflict with previous merge
	* MAINTAINERS, NEWS, UPGRADING, clients/upssched.c, common/common.c,
	  data/cmdvartab, data/driver.list.in, docs/FAQ.txt,
	  docs/acknowledgements.txt, docs/configure.txt, docs/download.txt,
	  docs/features.txt, docs/images/advanced.png,
	  docs/images/bigbox.png, docs/images/bizarre.png,
	  docs/images/simple.png, docs/man/Makefile.am, docs/man/blazer.txt,
	  docs/man/nut-ipmipsu.txt, docs/man/powercom.txt,
	  docs/nut-names.txt, docs/stable-hcl.txt, docs/website/Makefile.am,
	  docs/website/news.txt, docs/website/projects.txt,
	  docs/website/web-layout.conf, drivers/Makefile.am,
	  drivers/apcsmart.c, drivers/apcsmart.h, drivers/bcmxcp.c,
	  drivers/bcmxcp_ser.c, drivers/bcmxcp_usb.c, drivers/bestfcom.c,
	  drivers/blazer.c, drivers/blazer_usb.c, drivers/cps-hid.c,
	  drivers/dstate.c, drivers/libhid.c, drivers/liebert-esp2.c,
	  drivers/liebert-hid.c, drivers/main.c, drivers/mge-hid.c,
	  drivers/mge-utalk.c, drivers/microdowell.c, drivers/nut-ipmi.h,
	  drivers/nut-ipmipsu.c, drivers/nut-libfreeipmi.c,
	  drivers/powercom.c, drivers/powercom.h, drivers/rhino.c,
	  drivers/snmp-ups.c, drivers/solis.c, drivers/usb-common.c,
	  drivers/usb-common.h, include/Makefile.am,
	  lib/libupsclient-config.in, lib/libupsclient.pc.in,
	  m4/ax_create_stdint_h.m4, m4/nut_check_libfreeipmi.m4,
	  m4/nut_report_feature.m4, scripts/Makefile.am,
	  scripts/augeas/README, scripts/avahi/nut.service.in,
	  scripts/udev/Makefile.am, scripts/udev/README,
	  scripts/udev/nut-ipmipsu.rules.in,
	  scripts/upower/95-upower-hid.rules, server/netinstcmd.c,
	  server/netlist.c, server/upsd.c, tools/git-svn.authors,
	  tools/nut-usbinfo.pl, tools/svn2cl.authors: Merge from rev
	  [[SVN:2911]]

2011-09-02  Emilien Kia <kiae.dev@gmail.com>

	* scripts/java/README, scripts/java/jNut/README,
	  scripts/java/jNut/pom.xml,
	  .../main/java/org/networkupstools/jnut/Client.java,
	  .../java/org/networkupstools/jnut/Command.java,
	  .../main/java/org/networkupstools/jnut/Device.java,
	  .../org/networkupstools/jnut/NutException.java,
	  .../org/networkupstools/jnut/StringLineSocket.java,
	  .../java/org/networkupstools/jnut/Variable.java,
	  .../java/org/networkupstools/jnut/ClientTest.java,
	  scripts/java/jNutList/README, scripts/java/jNutList/pom.xml,
	  .../java/org/networkupstools/jnutlist/AppList.java,
	  .../java/org/networkupstools/jnuttest/AppTest.java: Add jNut (NUT
	  client in Java) to trunk.

2011-09-02  Arnaud Quette <arnaud.quette@free.fr>

	* docs/new-clients.txt: Fix jNut Asciidoc integration
	* docs/download.txt, docs/new-clients.txt, docs/website/news.txt,
	  scripts/README, scripts/java/README, scripts/java/jNut/README,
	  scripts/java/jNutList/README: Integrate jNUT information in the
	  developer guide, ...  along with news and download section
	* docs/website/news.txt: Add the Beta NUT 2.6.1-1 package for
	  Windows, and some news history (just intended for VCS history)
	* docs/website/projects.txt: Formatting fixes
	* drivers/main.c: Remove extraneous empty line

2011-08-31  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_snmp.c: More API cleaning
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nutscan-ip.c,
	  tools/nut-scanner/nutscan-ip.h, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c: Consolidating API
	* configure.in, m4/nut_check_libavahi.m4,
	  tools/nut-scanner/Makefile.am, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/scan_avahi.c:
	  Add avahi scanning
	* tools/nut-scanner/scan_nut.c: Make scan_nut reentrant

2011-08-31  Emilien Kia <kiae.dev@gmail.com>

	* drivers/usb-common.c: Fix pointer check on wrong variable (Patch
	  from Thomas Jarosch)
	* drivers/mge-utalk.c: Fix use of uninitialized variable (Patch from
	  Thomas Jarosch)
	* common/common.c: Fix file descriptor leak (Patch from Thomas
	  Jarosch)

2011-08-30  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* drivers/apcsmart.c: apcsmart: revert back from custom serial
	  functions to serial.c ones  Following Arjen's suggestion, this
	  patch reverts the apcsmart back to relying on serial.c functions
	  for opening/closing and setting speed.  For the reference:
	  http://lists.alioth.debian.org/pipermail/nut-upsdev/2011-June/005491.html
	  If it turns out that re-opening serial ports during normal driver
	  activity is really necessary, it can be easily added to serial.c.
	* drivers/apcsmart.c: Fix alignment of preprocessor directives

2011-08-29  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nutscan-display.c: Make sure device names are
	  unique for "nut.conf style" display
	* tools/nut-scanner/nut-scanner.c: Add a "quiet" option

2011-08-29  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/mge-hid.c: Add region/country management, ...  ...to
	  improve features provided such as 'output.voltage.nominal' and 3S
	  Eco control
	* data/driver.list.in, drivers/mge-hid.c: Add Eaton 3S to the list of
	  usbhid-ups supported models

2011-08-25  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut-names.txt: Fix duplication

2011-08-24  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-device.h,
	  tools/nut-scanner/nutscan-display.c: Add parsable output

2011-08-20  Charles Lepple <clepple+nut@gmail.com>

	* m4/nut_report_feature.m4: Avoid implementation-specific use of
	  "echo" in autoconf
	  http://pubs.opengroup.org/onlinepubs/009695399/utilities/echo.html

2011-08-18  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_xml_http.c: Remove useless "" for desc

2011-08-16  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/.gitignore, tools/nut-scanner/Makefile.am,
	  tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/{device.c => nutscan-device.c},
	  tools/nut-scanner/{device.h => nutscan-device.h},
	  tools/nut-scanner/{display.c => nutscan-display.c},
	  tools/nut-scanner/{ip.c => nutscan-ip.c}, tools/nut-scanner/{ip.h
	  => nutscan-ip.h}, tools/nut-scanner/scan_avahi.c,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-scanner/scan_xml_http.c: More consistent API naming

2011-08-11  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upsmon.c: Correct handling of timeout

2011-08-08  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/DriverInstaller/wdi-simple.c: Print an error
	  message when driver's installation has failed.
	* scripts/Windows/DriverInstaller/README.txt: Add some more hints on
	  how to compile wdi-simple.exe
	* drivers/serial.c: This seems to be the correct way to set and reset
	  DTR and RTS with Win32 API
	* scripts/Windows/Installer/NUT-Installer.xml: The stock
	  msys-regex-1.dll is crashing.  So now we bundle libregex-1.dll
	  which is a binary compiled from sources

2011-08-05  Charles Lepple <clepple+nut@gmail.com>

	* configure.in: minor changes to output  * Capitalized "UPS" *
	  --with-drivers= : Only *build* specific drivers

2011-07-30  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Add Cyber Power Systems CP1000AVRLCD to the
	  list of usbhid-ups supported models  (reported by David C. Rankin)

2011-07-28  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-usbinfo.pl: Proper fix to [[SVN:3012]], which satisfies
	  both udev and upower

2011-07-27  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-usbinfo.pl: Partially revert [[SVN:3012]].  It caused a
	  udev regression, with several missing USB IDs (thanks to Pawel
	  Sikora for uncovering it)
	* scripts/augeas/README: Add a complete Python Augeas example code

2011-07-26  Arnaud Quette <arnaud.quette@free.fr>

	* configure.in, docs/man/nut-ipmipsu.txt, scripts/udev/.gitignore,
	  scripts/udev/Makefile.am, scripts/udev/README,
	  scripts/udev/nut-ipmipsu.rules.in: Add udev rules file and
	  documentation for nut-ipmipsu
	* m4/nut_check_libfreeipmi.m4: Improve detection of the needed
	  functions
	* data/driver.list.in: Add Orvaldi 750 / 900SP to the list of
	  blazer_usb supported models  (reported by Pawel Sikora)
	* drivers/nut-ipmipsu.c: Fix missing comment closure, add a TODO list
	  and remove unused variables

2011-07-21  Charles Lepple <clepple+nut@gmail.com>

	* tools/git-svn.authors: Added authors file for git-svn
	  synchronization

2011-07-19  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Add POWEREX VI 1000 LED to the list of
	  blazer_usb supported models  (reported by Sergey Talchuk)

2011-07-17  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Add SVEN Power Pro+ series (USB ID
	  ffff:0000)...  ...to the list of blazer_usb supported models
	  (reported by Vlad)

2011-07-16  Arnaud Quette <arnaud.quette@free.fr>

	* configure.in: Fix --with-[free]ipmi configure option...  ...so that
	  it actually behave correctly in automatic detection mode

2011-07-14  Arnaud Quette <arnaud.quette@free.fr>

	* configure.in: Fix the typo that made its way into commit
	  [[SVN:3136]], and broke configure
	* configure.in, docs/configure.txt, docs/man/.gitignore,
	  docs/man/Makefile.am, docs/man/nut-ipmipsu.txt, drivers/.gitignore,
	  drivers/Makefile.am, drivers/nut-ipmi.h, drivers/nut-ipmipsu.c,
	  drivers/nut-libfreeipmi.c, m4/nut_check_libfreeipmi.m4: First
	  attempt to create a driver to monitor power supply units using
	  IPMI.  This preliminary version only reads FRU (Field Replace Unit)
	  information, but not yet the sensor information (describing if the
	  PSU is present and online), and includes base documentation
	  (manpage and configure options). It currently supports GNU
	  FreeIPMI, but uses an abstract IPMI implementation that will allow
	  to use other IPMI toolkits

2011-07-13  Arnaud Quette <arnaud.quette@free.fr>

	* docs/configure.txt: Move several misplaced options to the right
	  sections
	* tools/Makefile.am: Finally fix both distribution and compilation
	  rules, ...  ...completing commit [[SVN:3121]]
	* tools/nut-scanner/Makefile.am: Force building automatically
	  generated files before any target
	* drivers/bestfcom.c: Remove unused variables (patch from Regid
	  Ichira, Debian bug #633756)

2011-07-12  Arnaud Quette <arnaud.quette@free.fr>

	* MAINTAINERS: Update the corporate mail address and some details

2011-07-08  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/ip.c, tools/nut-scanner/ip.h,
	  tools/nut-scanner/nut-scanner.c: Add an helper function to decode
	  CIDR notation.

2011-07-08  Charles Lepple <clepple+nut@gmail.com>

	* docs/acknowledgements.txt: Fix typo in link on Acknowledgements
	  page

2011-07-07  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_snmp.c: Make sure the description string
	  ends with a 0

2011-07-07  Arnaud Quette <arnaud.quette@free.fr>

	* docs/acknowledgements.txt: Move Arjen de Korte, NUT Senior
	  lieutenant, to the Retired members section.  Thanks for all his
	  years of dedication to make NUT better

2011-07-06  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nut-scanner.c: help and CLI modified depending on
	  what is available at compile time
	* tools/nut-scanner/scan_nut.c: Remove redundant quote in scan_nut
	* configure.in, tools/nut-scanner/Makefile.am,
	  tools/nut-scanner/nut-scanner.c: Conditional compilation of neon
	  related code (thanks to Arnaud Quette)
	* tools/nut-scanner/nut-scanner.c: Add switches to select the desired
	  buses
	* tools/nut-scanner/display.c, tools/nut-scanner/scan_snmp.c: Display
	  everything as: varname<space>=<space>"value"

2011-07-05  Arnaud Quette <arnaud.quette@free.fr>

	* tools/Makefile.am, tools/nut-scanner/Makefile.am: Fix distribution
	  and compilation rules, ...  ...to suit general needs and
	  nut-scanner specific requirements

2011-07-04  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Installer/BuildInstaller.bat,
	  scripts/Windows/Installer/NUT-Installer.xml: Change from
	  libgnurx-0.dll to msys-regex-1.dll for the sake of coherency  (use
	  only msys DLLs)
	* scripts/Windows/DriverInstaller/wdi-simple.c: Add a notification to
	  unplug and re-plug the device...  ...so that Windows uses the newly
	  installed driver.
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_nut.c: Add timeout to scan_nut
	* tools/nut-scanner/scan_snmp.c: Remove unused variable
	* clients/upsclient.c, clients/upsclient.h: Add upscli_tryconnect
	  function which is upscli_connect function...  ...with the control
	  of the connect timeout.

2011-07-01  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* MAINTAINERS: It's been fun, but I feel the time has come to say
	  farewell. All the best...

2011-06-30  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/common.c: Add the error message associated with GetLastError
	  to the error string.  This may be helpful for support.
	* common/wincompat.c: Make sure serial functions set errno to an
	  actual error code  (which might not be the most relevant one, but
	  it's better than nothing)
	* drivers/libusb0.c: Make sure errno is set to an actual error code
	  (thanks to David Bolen)
	* drivers/usbhid-ups.c: Revert [[SVN:3108]]. Correct errno management
	  should be enough
	* clients/upsmon.c: Change timeout from seconds to milliseconds (from
	  David Bolen)

2011-06-29  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/usb-common.h, drivers/usbhid-ups.c: Add WIN32 specific
	  error case for detecting disconnection
	* drivers/dstate.c: Fix timeout being in seconds instead of
	  milliseconds

2011-06-29  Arnaud Quette <arnaud.quette@free.fr>

	* configure.in, scripts/Makefile.am, scripts/avahi/.gitignore,
	  scripts/avahi/nut.service.in: Add Avahi support for NUT mDNS
	  publication, using a static service file
	* tools/svn2cl.authors: Add missing committers, and reorder using the
	  Project Member List:
	  https://alioth.debian.org/project/memberlist.php?group_id=30602

2011-06-28  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: remove SER_D6, as
	  it's implied by SER_{CS,CC} flags...  ...and has no use otherwise
	* drivers/apcsmart.c, drivers/apcsmart.h, drivers/apcsmart_tabs.c:
	  apcsmart: fix conditions in instcmd(); use regex for format
	  validation
	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: fix
	  apc_write_rep() and apc_write_long() behaviour -  ...we can't
	  assume that the command will succeed and keep sending the rest of
	  the sequence
	* drivers/apcsmart.c: apcsmart: comments, code shuffling
	* drivers/apcsmart.c: apcsmart: minor changes
	* drivers/apcsmart.c: apcsmart: *qco fix
	* drivers/apcsmart.c: apcsmart: follow dev guide more closely
	* drivers/apcsmart.c: apcsmart: add parameter to smartmode()
	* docs/man/apcsmart.txt: apcsmart: manpage update
	* drivers/apcsmart.c: apcsmart: apc_read() adjustment
	* drivers/apcsmart.c: apcsmart: use slightly adjusted older
	  smartmode() version
	* drivers/apcsmart.c: apcsmart: apc_flush() fix
	* drivers/apcsmart.c: apcsmart: remove some of the old commented out
	  sections
	* drivers/apcsmart.c, drivers/apcsmart.h, drivers/apcsmart_tabs.c:
	  apcsmart: trivial changes
	* drivers/apcsmart.c: apcsmart: add a few apc_flush() calls
	* drivers/apcsmart.c: apcsmart: sanitize sdtype (and other vars) in
	  upsdrv_initups()
	* drivers/apcsmart.c: apcsmart: update oldapcsetup()
	* drivers/apcsmart.c: apcsmart: allow ^Z to timeout
	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: update detection
	  code, add command set regex
	* drivers/apcsmart.c: apcsmart: sdcmd_AT() fix
	* drivers/apcsmart.c: apcsmart: add regex matching of variable result
	  to verify, ...  ...if it actually makes sense
	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: add typical
	  buffer length defines
	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: change how SER_*
	  flags are handled
	* drivers/apcsmart.c: apcsmart: trivial changes
	* drivers/apcsmart.c: apcsmart: rename wugrace -> awd
	* drivers/apcsmart.c: apcsmart: bugfixes
	* drivers/apcsmart.c, drivers/apcsmart_tabs.c,
	  drivers/apcsmart_tabs.h: apcsmart: updates to instand commands
	  (inc. shutdown commands), ...  ...enabled handling of ext paramater
	  for subcommands
	* drivers/apcsmart.c: apcsmart: apc_ser_tear() fixup
	* drivers/apcsmart.c: apcsmart: small sdcmd_Z() fix
	* drivers/Makefile.am, drivers/apcsmart.c, drivers/apcsmart.h,
	  drivers/apcsmart_tabs.c, drivers/apcsmart_tabs.h: apcsmart:
	  cleanups, split into two files
	* drivers/apcsmart.c: apcsmart: next changes to instcmd stuff
	* drivers/apcsmart.c: apcsmart: simplify query_ups()
	* drivers/apcsmart.c: apcsmart: add apc_write_rep() and
	  apc_write_long(), ...  ...initial changes to instcmd stuff
	* drivers/apcsmart.c: apcsmart: allow tearing down/setting up serial
	  connection...  ...during normal activity; changes should fix
	  #535583 as well
	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: trivial changes
	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: enable icanon
	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: handle 1:n vars
	  (nut:apc) variables, ...  ...so we don't need tricks such as
	  ups.firmware.old
	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: reintroduce
	  ignored set in protocol_verify() ...  ...for not exposed cmds/vars
	  (=> a bit more quiet logs)
	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: introduce icanon
	  upsread() and upsflush()  (functions will be used after 'icanon'
	  commit)
	* drivers/apcsmart.h: apcsmart: add quick reference about alerts and
	  to-be-removed defines.  Introduce SER_* defines what will be used
	  in new functions.
	* drivers/apcsmart.h: apcsmart: add command '@' to compatibility
	  tables.
	* drivers/apcsmart.c, drivers/apcsmart.h: apcsmart: trivial changes
	* drivers/apcsmart.c: apcsmart: fix convert_data() ...  ...we can't
	  assume that argument passed is global or static, so we can't just
	  return it as is

2011-06-28  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Add various models equipped with APC AP9618
	  management card, ...  ...including APC Smart-UPS RT XL, to the list
	  of snmp-ups supported models (reported by Angela Williams)

2011-06-27  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/device.h, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/nut-scanner.c, tools/nut-scanner/scan_nut.c,
	  tools/nut-scanner/scan_snmp.c: Add NUT server scan.

2011-06-24  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/main.c: Merge from trunk [[SVN:3002]] to [[SVN:3057]]
	* drivers/bcmxcp_usb.c: Correct configuration value for
	  usb_set_configuration

2011-06-22  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/Makefile.am: Fix "make distcheck-light"
	* tools/nut-scanner/scan_snmp.c: Correct way to fix snmp device name
	  (by Arjen de Korte)

2011-06-21  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_xml_http.c: Use NUT const
	* tools/nut-scanner/ip.c, tools/nut-scanner/ip.h: Forgot to commit
	  the new files for iterator
	* tools/nut-scanner/Makefile.am, tools/nut-scanner/nut-scan.h,
	  tools/nut-scanner/scan_snmp.c: Factorize IP iterator
	* tools/nut-scanner/Makefile.am: Remove unneeded reference to *.h
	  files
	* tools/Makefile.am, tools/nut-scanner/nutscan-snmp.h,
	  tools/nut-snmpinfo.py: Add python script to generate nutscan-snmp.h
	  at "make dist" time
	* tools/nut-scanner/scan_snmp.c: End of snmp device name fix started
	  in previous commit ...  ...([[SVN:3048]] was commited too early on
	  my mistake).
	* tools/nut-scanner/nutscan-snmp.h, tools/nut-scanner/scan_snmp.c:
	  [[Commit comment was empty.]]

2011-06-17  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* docs/man/blazer.txt, drivers/blazer.c: Add preselection of
	  communication protocol used

2011-06-16  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_xml_http.c: Add "desc" option to xml_http
	  devices
	* drivers/snmp-ups.c: Fix SNMP v3 session initialisation
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_snmp.c: Add SNMP v3

2011-06-15  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_snmp.c: Add "community" switch for SNMP v1
	* tools/nut-scanner/scan_snmp.c: Add IPv6 to SNMP scan
	* configure.in: Detecting pthread availability (by Arnaud Quette)

2011-06-14  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_snmp.c: Add threads optimisation to SNMP
	* tools/nut-scanner/nut-scanner.c: Update command line help
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/nutscan-snmp.h, tools/nut-scanner/scan_snmp.c:
	  Add SNMP IPv4 discovery

2011-06-08  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/nut-scanner.c: Adding command line parameters
	  managment

2011-06-08  Arnaud Quette <arnaud.quette@free.fr>

	* docs/website/web-layout.conf: Update the Firefox download button,
	  since the previous one has disappeared
	* docs/website/news.txt, docs/website/projects.txt: Add a news entry,
	  and a reference in the Related projects, ...  ...on Dell PowerVault
	  NX3500, which uses NUT for power protection (approved by Dell)

2011-06-07  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_xml_http.c:
	  Clean up + check 80 column wide
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_xml_http.c: Timeout is passed in argument to
	  scan_xml_http
	* tools/nut-scanner/nut-scan.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_xml_http.c: Enable XML/HTTP scanning
	* tools/nut-scanner/scan_usb.c: Use the add_device_to_device function
	* tools/nut-scanner/device.c, tools/nut-scanner/device.h: Add a
	  function to join two device

2011-06-06  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* tools/nut-scanner/device.c, tools/nut-scanner/device.h,
	  tools/nut-scanner/display.c, tools/nut-scanner/scan_usb.c,
	  tools/nut-scanner/scan_xml_http.c: More flexible way to manage
	  optional parameter of each devices...  ...via a simple linked list
	* tools/nut-scanner/display.h, tools/nut-scanner/{scan_usb.h =>
	  nut-scan.h}, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_avahi.h, tools/nut-scanner/scan_ipmi.h,
	  tools/nut-scanner/scan_nut.h, tools/nut-scanner/scan_snmp.h,
	  tools/nut-scanner/scan_xml_http.h: Keep only one file for nut-scan
	  library interface
	* tools/nut-scanner/display.h: typo

2011-06-04  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Add PowerWalker VI 850 LCD to the list of
	  blazer_usb supported models  (reported by Wayne Thomas)

2011-06-03  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-scanner/Makefile.am, tools/nut-scanner/device.c,
	  tools/nut-scanner/device.h, tools/nut-scanner/display.c,
	  tools/nut-scanner/display.h, tools/nut-scanner/nut-scanner.c,
	  tools/nut-scanner/scan_avahi.c, tools/nut-scanner/scan_avahi.h,
	  tools/nut-scanner/scan_ipmi.c, tools/nut-scanner/scan_ipmi.h,
	  tools/nut-scanner/scan_nut.c, tools/nut-scanner/scan_nut.h,
	  tools/nut-scanner/scan_snmp.c, tools/nut-scanner/scan_snmp.h,
	  tools/nut-scanner/scan_usb.c, tools/nut-scanner/scan_usb.h,
	  tools/nut-scanner/scan_xml_http.c,
	  tools/nut-scanner/scan_xml_http.h: Preliminary nut-scanner
	  architecture (on behalf of Fred Bohe, Eaton)

2011-06-01  Arnaud Quette <arnaud.quette@free.fr>

	* docs/download.txt: Add the missing SHA-256 sum on the Download page
	  / section
	* NEWS, UPGRADING, configure.in, docs/download.txt,
	  docs/website/news.txt: Final update for 2.6.1 release
	* docs/configure.txt: Update '--with-all' option documentation
	* configure.in: HAL deprecation (continued):  HAL support is not
	  enabled anymore when using '--with-all' configure option
	* drivers/mge-hid.c: Add support for 'battery.runtime.low'
	* data/cmdvartab: Add the missing entry for 'ups.efficiency'
	* data/driver.list.in: Add Vivaldi EA200 LED to the list of
	  richcomm_usb supported models  (reported by Sergey Talchuk)
	* drivers/mge-hid.c: Add 'ups.efficiency' data, supported by Eaton 5
	  PX

2011-05-31  Arnaud Quette <arnaud.quette@free.fr>

	* docs/nut-names.txt: Documentation the new 'ups.efficiency' NUT
	  variable
	* data/driver.list.in: Add Eaton 5 PX...  ...to the list of
	  usbhid-ups, mge-shut and newmge-shut supported models
	* scripts/upower/95-upower-hid.rules: Update UPower script with
	  Phoenixtec fix
	* tools/nut-usbinfo.pl: Do not overwrite manufacturer names with
	  empty values
	* drivers/liebert-hid.c: Fix USB VendorID 0x06da, which is
	  Phoenixtec, not Liebert
	* docs/download.txt: Update Subversion access information, following
	  Alioth update
	* docs/download.txt, docs/website/news.txt: Add the Windows Beta
	  package information

2011-05-27  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-scanner/Makefile.am, tools/nut-scanner/nut-scanner.c: Add
	  build rules for libnut-scan library, and some more comments

2011-05-27  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* scripts/upower/95-upower-hid.rules: Update upower script with
	  Powerware entry
	* drivers/blazer.c: Don't log status read failures until MAXTRIES
	  subsequent failures.  Occasional communication errors are common
	  for these devices and are not a concern.

2011-05-26  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/bcmxcp.c, drivers/bcmxcp_ser.c: Improve bcmxcp support for
	  older PowerWare 9315 (patch from Chris Adams)

2011-05-25  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/DriverInstaller/README.txt,
	  scripts/Windows/DriverInstaller/nutscan-usb.h,
	  scripts/Windows/DriverInstaller/wdi-simple.c,
	  scripts/Windows/Installer/BuildInstaller.bat,
	  scripts/Windows/Installer/NUT-Installer.xml,
	  scripts/Windows/Makefile.am, scripts/Windows/wininit.c: Converting
	  some files to Unix-style line endings
	* drivers/blazer_usb.c, drivers/usb-common.h: merge from trunk
	  [[SVN:2990]] to [[SVN:2997]]

2011-05-25  Arnaud Quette <arnaud.quette@free.fr>

	* m4/nut_type_socklen_t.m4: Fix Winsock2 testing and result
	  publication
	* server/netinstcmd.c: Fix the missing 'extra value' handling for
	  instant commands

2011-05-24  Michal Soltys <msoltyspl-guest@alioth.debian.org>

	* drivers/apcsmart.c: apcmsart.c: fix upsdrv_shutdown_advanced() -
	  ...with 'continue' statement, sdcmd_*s ignoring 'n' weren't called.

2011-05-24  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* m4/nut_check_socketlib.m4: convert end of line to unix style
	* scripts/Windows/Installer/NUT-Installer.xml: Add files in the
	  project's root (README, INSTALL...)
	* m4/nut_check_socketlib.m4: nut_check_socketlib.m4 has been removed
	  from trunk,  ...but Win32 still needs it for winsock

2011-05-23  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Installer/NUT-Installer.xml: Remove useless empty
	  directories

2011-05-20  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/Makefile.am, m4/nut_check_libusb.m4: This doesn't make it
	  through the previous merge from trunk

2011-05-20  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/blazer_usb.c, drivers/usb-common.h: Don't use the
	  USB_DEVICE() declaration macro with non compliant identifiers, ...
	  ...such as blazer_usb' krauler subdriver

2011-05-20  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* drivers/blazer_usb.c: Don't use the USB_DEVICE() declaration macro
	  with non compliant identifiers, ...  ...such as blazer_usb' krauler
	  subdriver (missing from previous commit)

2011-05-19  Arnaud Quette <arnaud.quette@free.fr>

	* server/netlist.c: State explicitely when device description is not
	  available, ...  ...to avoid user confusion (reported by Noel David
	  Torres Taño, Debian bug #595773
	* docs/man/powercom.txt, drivers/powercom.c: Improve formating and
	  wording of the powercom documentation, ...  ...manual page and
	  driver messages (patch from Keven L. Ates)

2011-05-17  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/DriverInstaller/README.txt,
	  scripts/Windows/DriverInstaller/nutscan-usb.h,
	  scripts/Windows/DriverInstaller/wdi-simple.c: Add source files and
	  a note on how to compile the automatic driver installer.
	* scripts/Windows/Installer/NUT-Installer.xml: Add a check box for
	  launching the automatic libUSB drivers installation
	* conf/upsmon.conf.sample.in: Add hints to configure SHUTDOWNCMD and
	  POWERDOWNFLAG

2011-05-16  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Installer/NUT-Installer.xml: [Installer] Include
	  documentation in HTML format

2011-05-13  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/powercom.c, drivers/powercom.h: Improve PowerCom BNT 1500A
	  and BNT-other support, ...  ...and bump driver version to 0.13
	  (patch from Keven L. Ates)

2011-05-11  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upsmon.c: forgot to change wait duration.
	* clients/upsmon.c, clients/upsmon.h, common/wincompat.c,
	  include/common.h, include/wincompat.h, scripts/Windows/wininit.c,
	  server/upsd.c, server/upsd.h: Using named pipe for a better port of
	  signals.

2011-05-03  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/wininit.c: Add a call to "upsdrvctl shutdown" if
	  POWERDOWNFLAG is set when service exits.

2011-05-02  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upsmon.c: Makes the call to "wall" function non blocking,
	  ...  ...or else the automatic power-fail shutdown is blocked
	  waiting for the MessageBox to be clicked.

2011-04-30  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Complete Informer Compact supported VA ratings
	  (reported by Dushan Tcholich)

2011-04-27  Arnaud Quette <arnaud.quette@free.fr>

	* docs/website/Makefile.am: Enable website quirks to address Internet
	  Explorer 6, ...  ...which were missing since 2.6.0 publication
	* docs/website/web-layout.conf: Complete meta keywords, and enable
	  meta name and keywords on all pages
	* data/driver.list.in: Add Numeric 3000 SW to the list of blazer_ser
	  supported models  (reported by Petr Kubánek)

2011-04-26  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* data/driver.list.in, drivers/blazer_usb.c: Add support for GE EP
	  series
	  [http://lists.alioth.debian.org/pipermail/nut-upsuser/2011-April/006788.html]

2011-04-19  Arnaud Quette <arnaud.quette@free.fr>

	* tools/nut-scanner/nut-scanner.c: Flush remaining comments for this
	  proof-of-concept

2011-04-18  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/libhid.c: Smarter solution for [[SVN:2972]] (pointed by
	  Arjen de Korte)
	* drivers/libhid.c: Trim extraneous end-of-line in buggy HID string
	  tables, ...  ...which results in upsc breaking the communication
	  pipe (Ubuntu bug #753661)

2011-04-15  Arnaud Quette <arnaud.quette@free.fr>

	* docs/stable-hcl.txt: Detail existing guidelines for reporting new
	  device entry
	* docs/features.txt: Refreshed graphic illustrations credits
	* docs/images/advanced.png, docs/images/bigbox.png,
	  docs/images/bizarre.png, docs/images/simple.png: Refreshed graphic
	  illustrations (provided by Eaton)

2011-04-07  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Installer/NUT-Installer.xml: Update NUT version (by
	  Praveen Kumar)
	* scripts/Windows/wininit.c: More generic wrong MODE handling + log
	  same message as Linux version.

2011-04-06  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/upsdrvctl.c: fix "upsdrvctl shutdown" command
	* scripts/Windows/wininit.c: NUT is automatically started during
	  system startup

2011-04-01  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* data/driver.list.in: Add Inform Sinus SS 210 to list of supported
	  devices
	  [http://lists.alioth.debian.org/pipermail/nut-upsuser/2011-March/006767.html]
	* drivers/cps-hid.c: Clamp reported battery charge to 100%  (seems to
	  report AbsoluteStateOfCharge instead of RemainingCapacity)
	  [http://lists.alioth.debian.org/pipermail/nut-upsuser/2011-March/006770.html]

2011-03-31  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* data/driver.list.in, drivers/mge-hid.c: Add Eaton Powerware 9140 to
	  the list of usbhid-ups supported models

2011-03-29  Arnaud Quette <arnaud.quette@free.fr>

	* lib/libupsclient-config.in, lib/libupsclient.pc.in: Fix remaining
	  references to LIBSSL_LDFLAGS, ...  ...instead of LIBSSL_LIBS, which
	  cause unresolved symbol on libupsclient users (reported by Fabrice
	  Coutadeur on Ubuntu)

2011-03-29  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* drivers/blazer.c, drivers/blazer_usb.c: Make the terminating '\r'
	  in the Q1 reply optional

2011-03-28  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/apcsmart.c, drivers/dstate.c, include/nut_stdint.h: Merge
	  with trunk

2011-03-23  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* INSTALL.nut: Add information on installation
	* INSTALL: Reverting previous commit (should not be in the trunk)
	* INSTALL: Add information about installing Windows

2011-03-22  Praveen Kumar <praveenkumar-guest@alioth.debian.org>

	* .../Installer/ImageFiles/Binary/bannrbmp.ibd,
	  .../Windows/Installer/ImageFiles/Binary/dlgbmp.ibd,
	  .../ImageFiles/Images/NUT_wix_horizontal.bmp,
	  .../ImageFiles/Images/NUT_wix_vertical.bmp,
	  .../Installer/ImageFiles/Others/DeRegister.bat,
	  .../ImageFiles/{Binary/New.ibd => icons/New.ico},
	  .../ImageFiles/{Binary/Up.ibd => icons/Up.ico},
	  .../{Binary/completi.ibd => icons/completi.ico},
	  .../{Binary/custicon.ibd => icons/custicon.ico},
	  .../{Binary/exclamic.ibd => icons/exclamic.ico},
	  .../ImageFiles/{Binary/info.ibd => icons/info.ico},
	  .../{Binary/insticon.ibd => icons/insticon.ico},
	  .../{Binary/removico.ibd => icons/removico.ico},
	  .../{Binary/repairic.ibd => icons/repairic.ico},
	  .../Installer/ImageFiles/libusb/libusb_win32.exe,
	  scripts/Windows/Installer/NUT-Installer.xml: Removed binary files
	  (DLL & ibd) and Updated with icons and .bmp images...  ...for NUT
	  windows Installer.

2011-03-22  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Installer/NUT-Installer.xml: commit again a small
	  typo
	* .../ImageFiles/Images/NUT_wix_horizontal.bmp,
	  .../ImageFiles/Images/NUT_wix_vertical.bmp: Correctly sized banner
	  for Windows installer

2011-03-18  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Installer/NUT-Installer.xml: Remove regex2.dll
	  dependency.
	* scripts/Windows/Installer/BuildInstaller.bat: MinGW bin directory
	  and MSYS bin directory are now configurable
	* scripts/Windows/Installer/BuildInstaller.bat,
	  .../Installer/ImageFiles/Others/libgnurx-0.dll,
	  .../Windows/Installer/ImageFiles/Others/msys-1.0.dll,
	  .../Installer/ImageFiles/Others/msys-crypto-1.0.0.dll,
	  .../Installer/ImageFiles/Others/msys-ssl-1.0.0.dll,
	  .../Windows/Installer/ImageFiles/Others/regex2.dll: Remove DLL from
	  the SVN repository.  They are now gathered from the build system
	  when creating the installer .
	* scripts/Windows/Installer/NUT-Installer.xml: small typo

2011-03-18  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* include/Makefile.am: The include/nut_stdint.h file is no longer a
	  generated one (part two)
	* include/Makefile.am: The include/nut_stdint.h file is no longer a
	  generated one
	* configure.in, include/.gitignore, include/nut_stdint.h,
	  m4/ax_create_stdint_h.m4: Clean up fixed width integer types.  All
	  C99 capable systems have <inttypes.h>, which shall include
	  <stdint.h>.
	* drivers/solis.c: Fix typo in previous commit
	* drivers/solis.c: Fix compilation warning (no functional change)
	* data/driver.list.in: Update driver list for SVEN Power Pro+ series
	  (recent models ship with a different USB to serial implementation)
	* clients/upssched.c, configure.in, drivers/dstate.c, server/upsd.c:
	  The third argument to accept is an int on HPUX...  ...if
	  _XOPEN_SOURCE_EXTENDED is not defined (reverting previous commit)
	* configure.in: Quick check to see if defining '-munix=95' on HPUX...
	  ...fixes a problem with the accept() call

2011-03-16  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Installer/BuildInstaller.bat,
	  .../Windows/Installer/ImageFiles/Binary/New.ibd,
	  scripts/Windows/Installer/ImageFiles/Binary/Up.ibd,
	  .../Installer/ImageFiles/Binary/bannrbmp.ibd,
	  .../Installer/ImageFiles/Binary/completi.ibd,
	  .../Installer/ImageFiles/Binary/custicon.ibd,
	  .../Windows/Installer/ImageFiles/Binary/dlgbmp.ibd,
	  .../Installer/ImageFiles/Binary/exclamic.ibd,
	  .../Windows/Installer/ImageFiles/Binary/info.ibd,
	  .../Installer/ImageFiles/Binary/insticon.ibd,
	  .../Installer/ImageFiles/Binary/removico.ibd,
	  .../Installer/ImageFiles/Binary/repairic.ibd,
	  .../Installer/ImageFiles/Others/DeRegister.bat,
	  .../Installer/ImageFiles/Others/StartService.bat,
	  .../Installer/ImageFiles/Others/StopService.bat,
	  .../Installer/ImageFiles/Others/libgnurx-0.dll,
	  .../Installer/ImageFiles/Others/msys-1.0.dll,
	  .../ImageFiles/Others/msys-crypto-1.0.0.dll,
	  .../Installer/ImageFiles/Others/msys-ssl-1.0.0.dll,
	  .../Windows/Installer/ImageFiles/Others/regex2.dll,
	  .../Installer/ImageFiles/emptyDir/cgi-bin/temp.txt,
	  .../Installer/ImageFiles/emptyDir/html/temp.txt,
	  .../Installer/ImageFiles/emptyDir/include/temp.txt,
	  .../Installer/ImageFiles/emptyDir/man1/temp.txt,
	  .../Installer/ImageFiles/emptyDir/man3/temp.txt,
	  .../ImageFiles/emptyDir/pkgconfig/temp.txt,
	  .../Installer/ImageFiles/emptyDir/run/temp.txt,
	  .../Installer/ImageFiles/icons/powernut_Stop.ico,
	  .../Installer/ImageFiles/icons/powernut_logo.ico,
	  .../Installer/ImageFiles/libusb/libusb_win32.exe,
	  scripts/Windows/Installer/NUT-Installer.xml: Windows scripts and
	  support files for NUT Windows installer using WIX  (from Praveen
	  Kumar)
	* scripts/Windows/wininit.c: Handle properly the "none" MODE in
	  nut.conf
	* scripts/Windows/wininit.c: Fix a crash if configuration files are
	  wrong in non-service mode
	* scripts/Windows/wininit.c: Add some console output when running in
	  non-service mode

2011-03-15  Chetan Agarwal <chetanagarwal-guest@alioth.debian.org>

	* drivers/rhino.c: Fix compilation error (no functional change)
	* drivers/rhino.c: Fix missing comment closure from previous commit
	  (no functional change)
	* drivers/bcmxcp_usb.c, drivers/microdowell.c, drivers/rhino.c,
	  drivers/solis.c: Fix remaining C++ style comments, to conform to
	  the NUT coding rules  (no functional change)  on behalf of Prachi
	  Gandhi (prachisgandhi@eaton.com)

2011-03-14  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Add IPAR Mini Energy ME 800 to the list of
	  blazer_usb supported models

2011-03-14  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* configure.in: Quick check to see if defining _REENTRANT on HPUX
	  fixes a compilation warning

2011-03-06  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* drivers/apcsmart.c: Fix another compilation warning.  Some
	  compilers (rightfully) claim that the value of 'n' may be used
	  without initialization. Until this is resolved, skip over this if
	  the value isn't set.
	* drivers/apcsmart.c: Fix compilation warning
	* drivers/apcsmart.h: Add additional Matrix models
	  [http://lists.alioth.debian.org/pipermail/nut-upsdev/2011-March/005319.html]
	* drivers/apcsmart.c: Flush the input buffer before sending a command
	  [on behalf of Michal Soltys <soltys@ziu.info>]
	* drivers/apcsmart.c, drivers/apcsmart.h: protocol_verify() only
	  cares about explicitly specified commands...  ...and variables [on
	  behalf of Michal Soltys <soltys@ziu.info>]
	* drivers/apcsmart.c: Additional driver variables that can be set to
	  influence shutdown behavior  [on behalf of Michal Soltys
	  <soltys@ziu.info>]
	* drivers/apcsmart.c: Update version and author info [on behalf of
	  Michal Soltys <soltys@ziu.info>]
	* drivers/apcsmart.c: Deal with more different shutdown methods  [on
	  behalf of Michal Soltys <soltys@ziu.info>]
	* drivers/apcsmart.c: As 'b' can return different things than
	  firmware version on some old models ...  ...prefer 'V' over 'b' [on
	  behalf of Michal Soltys <soltys@ziu.info>]
	* drivers/apcsmart.c: remove superfluous status_commit()  [on behalf
	  of Michal Soltys <soltys@ziu.info>]
	* drivers/apcsmart.c, drivers/apcsmart.h: adjust ignored chars and
	  handle over/~over  [on behalf of Michal Soltys <soltys@ziu.info>]
	* drivers/apcsmart.c: cosmetics [on behalf of Michal Soltys
	  <soltys@ziu.info>]
	* drivers/apcsmart.c, drivers/apcsmart.h: remove APC_IGNORE [on
	  behalf of Michal Soltys <soltys@ziu.info>]
	* drivers/apcsmart.h: add compat hardware, add commands [on behalf of
	  Michal Soltys <soltys@ziu.info>]
	* drivers/apcsmart.h: comsetics - adjust tabs [on behalf of Michal
	  Soltys <soltys@ziu.info>]

2011-03-02  Charles Lepple <clepple+nut@gmail.com>

	* docs/FAQ.txt: Update Mac power-on FAQ

2011-03-01  Arnaud Quette <arnaud.quette@free.fr>

	* configure.in, tools/Makefile.am, tools/nut-scanner/.gitignore,
	  tools/nut-scanner/Makefile.am, tools/nut-scanner/nut-scanner.c,
	  tools/nut-usbinfo.pl: First stab to create the nut-scanner (proof
	  of concept),  ...with full USB support, and preliminary support for
	  NUT and Eaton XML/HTTP scan
	* drivers/liebert-esp2.c: Improved Liebert ESP II support, ...
	  ...including UPS shutdown (poweroff), 1 and 3-phase input and
	  output variables, and most input / output / bypass / nominal
	  variables, along with a fix for the USB to serial cable (patch from
	  Farkas Levente and Spiros Ioannou)
	* data/driver.list.in: Add Eaton Powerware 9140, using the serial
	  interface, ...  ...to the list of bcmxcp supported models

2011-02-25  Charles Lepple <clepple+nut@gmail.com>

	* docs/download.txt: Moved SHA-256 value into download page, and
	  reformatted a bit.

2011-02-24  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/libusb0.c, drivers/libusb1.c: Correctly manage time-out in
	  libusb

2011-02-24  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in: Add several upscode2 supported devices that
	  were reported on the list:
	  http://lists.alioth.debian.org/pipermail/nut-upsdev/2011-February/005281.html
	  http://lists.alioth.debian.org/pipermail/nut-upsuser/2005-July/000031.html

2011-02-22  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/wininit.c: Add a Sleep before running upsmon...
	  ...or else we are spamed with communication errors.  Try to
	  properly close all handles.

2011-02-21  Arnaud Quette <arnaud.quette@free.fr>

	* data/driver.list.in, drivers/mge-hid.c: Add Eaton Ellipse ECO (with
	  Eco control support)...  ...to the list of usbhid-ups supported
	  models
	* drivers/eaton-mib.c: Add support for the first ambient sensor  (up
	  to 8 sensors can be supported) on Eaton ePDU managed
	* clients/upsrw.c: Add the missing 'help' handler ('-h') to the
	  supported options

2011-02-20  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* docs/man/ups.conf.txt, drivers/dstate.c: Variables that have an
	  override.<variable> in ups.conf are now really immutable.  They
	  can't be changed anymore (not even if they would have been R/W
	  otherwise). Rationale is, that if a user wants to override a value,
	  we should honor that request.  Added documentation accordingly (and
	  corrected previous commit).
	* docs/man/ups.conf.txt, drivers/dstate.c, drivers/main.c: Add
	  'ignorelb' flag to list of UPS fields in ups.conf...  ...to
	  override the LB condition reported by the UPS.  This allows all
	  drivers that report battery.charge (battery.runtime) to shutdown
	  early by setting this flag and battery.charge.low
	  (battery.runtime.low) in ups.conf.
	* data/driver.list.in: Removing subdriver setting  (cypress is auto
	  detected for this VID:PID combination, so there is no need to
	  specify this in usb.conf)

2011-02-19  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: Add Mustek Yukai PowerMust 1000 USB  Reported
	  by Noel David Torres Taño:
	  http://lists.alioth.debian.org/pipermail/nut-upsuser/2010-August/006163.html
	  Other models may be supported as well. *
	  http://www.mustek.com.tw/Yukai/html/prod_ups/PowerMust1000.html *
	  http://www.mustek.com.tw/Yukai/html/UPS.html

2011-02-17  Arnaud Quette <arnaud.quette@free.fr>

	* docs/download.txt: Preliminary support for source release hash,
	  using unsigned SHA256 sum

2011-02-15  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* include/common.h, scripts/Windows/wininit.c: Let nut.exe calls its
	  children through their relatives paths

2011-02-15  Charles Lepple <clepple+nut@gmail.com>

	* data/driver.list.in: HCL: Re-add some devices to driver.list.in
	  from [[SVN:2516]]  These entries seem to have been dropped,
	  potentially due to the rename from driver.list to driver.list.in,
	  and the format change.

2011-02-15  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* common/parseconf.c: In PCONF_CTX_t, argsize is an array of type
	  size_t values, ...  ...so instead of using sizeof(int *) we really
	  should use sizeof(size_t) for the size of individual elements

2011-02-14  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/wininit.c: Extent print_event capabilities

2011-02-11  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* drivers/libhid.c: Restore the nut-2.4.1 behavior for reading
	  reports from devices

2011-02-09  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upsmon.c: Add date to notification
	* drivers/dummy-ups.c: Fix a memory leak in dummy-ups driver

2011-02-09  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* drivers/dummy-ups.c: Prefer 'snprintf' and 'snprintfcat' over
	  'strncat'  (the latter can overflow the destination buffer)

2011-02-08  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* drivers/apc-hid.c: Add yet another way to shutdown the APC CS-500
	  [http://lists.alioth.debian.org/pipermail/nut-upsuser/2011-January/006550.html]

2011-02-07  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/wincompat.c: small typo
	* common/wincompat.c: Prefer upsdebugx to upslogx for low level
	  output

2011-02-02  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/dstate.c: clean-up printf calls
	* common/common.c, drivers/upsdrvctl.c: Fix "upsdrvctl start" path
	  issue

2011-02-02  Arnaud Quette <arnaud.quette@free.fr>

	* drivers/mge-hid.c: Fix a wrong value mapping resolution, and bump
	  driver's HID data version to 1.20
	* docs/website/web-layout.conf: Unconditional inclusion of Google
	  Analytics code
	* docs/man/dummy-ups.txt, docs/man/metasys.txt, drivers/apcsmart.c,
	  drivers/dummy-ups.c, drivers/genericups.c, drivers/metasys.c,
	  drivers/snmp-ups.c: Fix some spelling errors (base patch from
	  Laurent Bigonville, from Debian)

2011-02-01  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Makefile.am: Fix "make distckeck-light" in Windows
	  environment

2011-01-31  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/Makefile.am, common/common.c: Fix compilation on buildbot

2011-01-31  Charles Lepple <clepple+nut@gmail.com>

	* docs/documentation.txt, docs/download.txt: Update URL for Trac.

2011-01-28  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upsmon.c: upslog_with_errno does not call exit() nor
	  return, ...  ...so let the memory be freed at the end of the
	  function (fix a double free)
	* drivers/mge-xml.c: Fix warning in mge-xml.c
	* drivers/libshut.c, drivers/libshut.h: Fix warnings in libshut.c.

2011-01-28  Arnaud Quette <arnaud.quette@free.fr>

	* docs/security.txt: Fix content to satisfy Docbook
	* configure.in: Add missing variables setting, to allow AC_SUBST()
	  propagation

2011-01-27  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/isbmex.c: Porting isbmex driver
	* drivers/main.c: Fix warnings in main.c
	* clients/upsmon.c: Fix another race condition in notify.
	* clients/upsmon.c: Fix possible race in notify.
	* clients/upsmon.h: Fix warning in upsmon.h
	* common/wincompat.c: Fix warning in wincompat.c
	* configure.ac: Disable Hotplug and udev support on Windows (useful
	  when cross-compiling)
	* common/common.c, include/common.h: Cleaner warning fix in common.c
	* clients/upsclient.c, common/wincompat.c, drivers/libhid.c,
	  drivers/mge-xml.c, drivers/netxml-ups.c, include/wincompat.h: Add
	  strtok_r implementation and remove last "#define strtok_r"

2011-01-27  Chetan Agarwal <chetanagarwal-guest@alioth.debian.org>

	* drivers/bcmxcp.c: Added implementation for 'test.system.start'
	  instant command.
	* drivers/bcmxcp.h: Added constants for return code and UPS status.
	* data/cmdvartab: Added description for 'test.system.start' command.
	* docs/new-names.txt: Added test.system.start variable

2011-01-26  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* docs/configure.txt, nut-autoreconf: Merge from trunk
	* drivers/main.h, drivers/serial.c: More clean-up of wincompat
	* common/common.c: Fix a warning
	* drivers/main.h, include/wincompat.h: Clean-up : put compatibility
	  macros in wincompat.h
	* clients/upsmon.c: upsmon does not fork in WIN32

2011-01-22  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* drivers/apc-hid.c: Add mappings to APC HID subdriver

2011-01-19  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/common.c: Compilation fix (from Arjen de Korte)

2011-01-19  Emilien Kia <kiae.dev@gmail.com>

	* docs/asciidoc.conf, docs/dir_conflicts.prej,
	  m4/nut_check_libnss.m4, m4/nut_check_libopenssl.m4,
	  scripts/upower/95-upower-hid.rules: Finish trunk merging (see
	  previous commit).
	* COPYING, INSTALL, Makefile.am, NEWS, README, UPGRADING, autogen.sh,
	  clients/Makefile.am, configure.in, data/.gitignore,
	  data/Makefile.am, data/driver.list.in, data/epdu-managed.dev,
	  data/{evolution500.dev => evolution500.seq}, docs/.gitignore,
	  docs/Makefile.am, docs/config-notes.txt, docs/configure.txt,
	  docs/developer-guide.txt, docs/docinfo.xml, docs/documentation.txt,
	  docs/download.txt, docs/history.txt, docs/images/old-cgi.png,
	  docs/man/.gitignore, docs/nut-names.txt, docs/{website =>
	  }/stable-hcl.txt, docs/support.txt, docs/user-manual.txt,
	  docs/website/Makefile.am, docs/website/news.txt,
	  docs/website/website.txt, drivers/.gitignore, drivers/Makefile.am,
	  drivers/idowell-hid.c, drivers/idowell-hid.h, drivers/usbhid-ups.c,
	  m4/nut_check_libhal.m4, m4/nut_check_libneon.m4,
	  m4/nut_check_libnetsnmp.m4, m4/nut_check_libpowerman.m4,
	  m4/nut_check_libusb.m4, m4/nut_check_libwrap.m4,
	  scripts/Makefile.am, scripts/README, scripts/augeas/Makefile.am,
	  scripts/augeas/README, scripts/augeas/gen-nutupsconf-aug.py,
	  scripts/augeas/nuthostsconf.aug.in,
	  scripts/augeas/nutnutconf.aug.in,
	  scripts/augeas/nutupsconf.aug.tpl,
	  scripts/augeas/nutupsdconf.aug.in,
	  scripts/augeas/nutupsdusers.aug.in,
	  scripts/augeas/nutupsmonconf.aug.in,
	  scripts/augeas/nutupsschedconf.aug.in,
	  scripts/augeas/nutupssetconf.aug.in,
	  scripts/augeas/tests/test_nut.aug, scripts/hal/.gitignore,
	  scripts/hal/ups-nut-device.fdi.in, scripts/hotplug/.gitignore,
	  scripts/hotplug/libhid.usermap, scripts/python/app/NUT-Monitor,
	  scripts/python/module/PyNUT.py,
	  scripts/python/module/test_nutclient.py, scripts/udev/.gitignore,
	  scripts/udev/nut-usbups.rules.in,
	  scripts/upower/95-upower-hid.rules, server/Makefile.am,
	  server/conf.c, server/desc.c, tools/Makefile.am,
	  tools/nut-hclinfo.py, tools/nut-usbinfo.pl: Merge from trunk
	  ([[SVN:2777]] to HEAD).
	* clients/upsmon.c, conf/upsd.conf.sample, docs/man/upsd.conf.txt,
	  docs/security.txt, server/conf.c, server/netssl.c, server/netssl.h:
	  Add flag to desactivate client certificate validation (in upsd).
	  Define WITH_CLIENT_CERTIFICATE_VALIDATION flag to enable it.

2011-01-18  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/common.c, scripts/Windows/wininit.c: Safer relative path
	  management
	* scripts/Windows/wininit.c: Fix service access to configuration path

2011-01-18  Emilien Kia <kiae.dev@gmail.com>

	* clients/upsclient.c, clients/upsmon.c: Move warning message about
	  CERTVERIFY in upscli...  ...to be coherant with real behavior.
	* clients/upsclient.c: Force to disable SSLv2 handshake compatibility
	  (if no, nss can not connect to openssl server).
	* clients/upsclient.c: Force disconnect if SSL is not available and
	  CERTVERIFY is 1 (but no FORCESSL).
	* clients/upsclient.c, clients/upsmon.c: Fix CERTVERIFY behaviour for
	  NSS.
	* conf/upsd.conf.sample: Forget a comment heading '#'.
	* clients/upsclient.c: Prevent segfault.

2011-01-18  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* common/common.c: Prefer to use static variables locally over global
	  variables  (to prevent namespace conflicts)

2011-01-17  Charles Lepple <clepple+nut@gmail.com>

	* scripts/Makefile.am: Include perl/Nut.pm in tarball.
	* COPYING, Makefile.am: Include LICENSE-GPL{2,3} in tarball.  Made
	  the text in COPYING agree with the filenames.

2011-01-14  Emilien Kia <kiae.dev@gmail.com>

	* server/netssl.c: Prevent infinite loop when password is not found.

2011-01-13  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* Makefile.am, clients/upsc.c, clients/upsclient.c, clients/upscmd.c,
	  clients/upslog.c, clients/upsmon.c, clients/upsrw.c,
	  common/inet_aton.c, common/state.c, common/wincompat.c,
	  docs/configure.txt, docs/images/eaton-logo.png,
	  docs/man/upsd.users.txt, drivers/dstate.c, drivers/dstate.h,
	  drivers/dummy-ups.h, drivers/serial.h, drivers/upsdrvctl.c,
	  include/common.h, include/wincompat.h, nut-autoreconf,
	  scripts/Windows/wininit.c, server/conf.c, server/ssl.c,
	  server/sstate.c, server/upsd.c, server/upsd.h, server/user.c: Merge
	  from the trunk -> porting the IPv6 code to Windows  [re-added lost
	  man files, and edited out conflict markers. -CFL]

2011-01-11  Emilien Kia <kiae.dev@gmail.com>

	* docs/man/Makefile.am, docs/man/upscli_add_host_cert.txt,
	  docs/man/upscli_cleanup.txt, docs/man/upscli_init.txt,
	  docs/man/upsclient.txt: Add upscli API doc.
	* conf/upsd.conf.sample, docs/man/upsd.conf.txt, server/conf.c,
	  server/netssl.c: Use CERTFILE directive for openssl and CERTPATH
	  for nss.

2011-01-11  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* conf/upsmon.conf.sample, docs/man/upsmon.conf.txt: Correct the
	  usage of CERTPATH for OpenSSL

2011-01-10  Emilien Kia <kiae.dev@gmail.com>

	* docs/security.txt: Add SSL doc about NSS usage.

2011-01-07  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upsclient.c: Fix client disconnection
	* scripts/Windows/wininit.c: code cleanup
	* common/common.c, common/wincompat.c, drivers/mge-utalk.c,
	  drivers/serial.h, include/wincompat.h: Fix latency bug for
	  mge-utalk.

2011-01-07  Emilien Kia <kiae.dev@gmail.com>

	* conf/upsd.conf.sample, conf/upsmon.conf.sample,
	  docs/man/upsd.conf.txt, docs/man/upsmon.conf.txt: Document
	  upsd.conf and upsmon.conf about security directives.
	* server/conf.c: Deprecate CERTFILE conf var to the benefit of
	  CERTPATH:  ...homogenize conf directive names.

2011-01-06  Emilien Kia <kiae.dev@gmail.com>

	* clients/upsclient.c, server/netssl.c: More human log.
	* clients/upsclient.c, clients/upsclient.h, clients/upsmon.c,
	  server/conf.c, server/netssl.c, server/netssl.h: Add certificate
	  validation (both server and client sides).

2011-01-04  Emilien Kia <kiae.dev@gmail.com>

	* clients/upsclient.c, server/conf.c, server/netssl.c,
	  server/netssl.h, server/upsd.c: Allow to specify server certificate
	  name (instead of hard coded ;)).  Remove unused (client only)
	  callback on server.
	* server/netssl.c: Add more 'lack of initialization' test.
	* clients/upsclient.c, server/conf.c, server/netssl.c, server/upsd.c:
	  Prevent memory leaks and add notes about them.  Add password to
	  decrypt secret key in server.

2010-12-23  Emilien Kia <kiae.dev@gmail.com>

	* clients/upsclient.c, clients/upsclient.h, clients/upsmon.c,
	  m4/nut_check_libnss.m4, server/ctype.h, server/netssl.c,
	  server/netssl.h, server/upsd.c: First implementation of NSS
	  support.

2010-12-22  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* include/common.h, server/upsd.c: Make datapath relative too

2010-12-22  Emilien Kia <kiae.dev@gmail.com>

	* AUTHORS, clients/upsclient.c, conf/ups.conf.sample, configure.in,
	  data/driver.list.in, docs/FAQ.txt, docs/acknowledgements.txt,
	  docs/cables/sms.txt, docs/config-notes.txt, docs/configure.txt,
	  docs/dir_conflicts.prej, docs/macros.txt, docs/man/Makefile.am,
	  docs/man/blazer.txt, docs/man/index.txt, docs/man/nutupsdrv.txt,
	  docs/man/ups.conf.txt, docs/new-drivers.txt,
	  docs/website/scripts/nut_jquery.js, drivers/Makefile.am,
	  drivers/dstate.c, drivers/dstate.h, drivers/megatec.c,
	  drivers/megatec.h, drivers/megatec_usb.c, m4/nut_check_os.m4,
	  server/upsd.c, tools/nut-usbinfo.pl: Merge trunk from branch
	  creation

2010-12-21  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Makefile.am: Fix winevent.h generation on clean
	  compile (by Paul Fertser)
	* scripts/Windows/Makefile.am: Forgot to remove now useless
	  winevent.dll reference
	* configure.ac, scripts/Windows/Makefile.am: Do not use an external
	  DLL anymore.  It seems that linking the resources directly into the
	  binary makes the event log happy.  (thanks to Paul Fertser for its
	  help)

2010-12-21  Emilien Kia <kiae.dev@gmail.com>

	* INSTALL, Makefile.am, README, docs/ideas.txt => TODO, UPGRADING,
	  clients/upsclient.c, clients/upsclient.h, clients/upscmd.c,
	  clients/upsrw.c, conf/upsd.conf.sample, conf/upsd.users.sample,
	  configure.in, data/Makefile.am, data/driver.list,
	  data/driver.list.in, docs/.gitignore, docs/FAQ, docs/FAQ.txt,
	  docs/Makefile.am, docs/README, docs/acknowledgements.txt,
	  docs/acpi.txt, docs/asciidoc.txt, docs/big-servers.txt,
	  docs/cables.txt, docs/chroot.txt, docs/commands.txt,
	  docs/config-files.txt, docs/config-notes.txt, docs/configure.txt,
	  docs/contact-closure.txt, docs/data-room.txt, docs/design.txt,
	  docs/developer-guide.txt, docs/developers.txt,
	  docs/documentation.txt, docs/download.txt, docs/features.txt,
	  docs/hid-subdrivers.txt, docs/history.txt,
	  docs/images/advanced.png, docs/images/asciidoc.png,
	  docs/images/bigbox.png, docs/images/bizarre.png,
	  docs/images/blue-arrow.png, docs/images/cables/73-0724.png,
	  docs/images/cables/940-0024C.jpg,
	  docs/images/cables/Lansafecable.jpg,
	  docs/images/cables/SOLA-330.png,
	  docs/images/cables/belkin-f6cx-rkm-xu-cable.jpg,
	  docs/images/cables/mac-940-0024C.png,
	  docs/images/cables/mge-66049.png,
	  docs/images/cables/mge-db9-rj12.jpg,
	  docs/images/cables/mge-db9-rj45.jpg, docs/images/eaton-logo.png,
	  docs/images/note.png, docs/images/nut-banner.png,
	  docs/images/nut_layering.png, docs/images/nut_layering.svg,
	  docs/images/simple.png, docs/images/warning.png, docs/macros.txt,
	  docs/man/Makefile.am, man/apcsmart.8 => docs/man/apcsmart.txt,
	  docs/man/asciidoc.conf, docs/man/bcmxcp.txt, man/bcmxcp_usb.8 =>
	  docs/man/bcmxcp_usb.txt, man/belkin.8 => docs/man/belkin.txt,
	  docs/man/belkinunv.txt, man/bestfcom.8 => docs/man/bestfcom.txt,
	  docs/man/bestfortress.txt, docs/man/bestuferrups.txt, man/bestups.8
	  => docs/man/bestups.txt, man/blazer.8 => docs/man/blazer.txt,
	  man/clone.8 => docs/man/clone.txt, man/dummy-ups.8 =>
	  docs/man/dummy-ups.txt, docs/man/etapro.txt, docs/man/everups.txt,
	  man/gamatronic.8 => docs/man/gamatronic.txt, man/genericups.8 =>
	  docs/man/genericups.txt, man/hosts.conf.5 =>
	  docs/man/hosts.conf.txt, docs/man/index.txt, docs/man/isbmex.txt,
	  docs/man/ivtscd.txt, docs/man/libupsclient-config.txt,
	  docs/man/liebert-esp2.txt, docs/man/liebert.txt,
	  docs/man/masterguard.txt, man/megatec.8 => docs/man/megatec.txt,
	  docs/man/megatec_usb.txt, man/metasys.8 => docs/man/metasys.txt,
	  docs/man/mge-shut.txt, docs/man/mge-utalk.txt,
	  docs/man/microdowell.txt, docs/man/netxml-ups.txt, man/nut.conf.5
	  => docs/man/nut.conf.txt, docs/man/nutupsdrv.txt, man/oneac.8 =>
	  docs/man/oneac.txt, docs/man/optiups.txt, docs/man/powercom.txt,
	  docs/man/powerman-pdu.txt, man/powerpanel.8 =>
	  docs/man/powerpanel.txt, docs/man/rhino.txt,
	  docs/man/richcomm_usb.txt, docs/man/safenet.txt, docs/man/skel.txt,
	  man/snmp-ups.8 => docs/man/snmp-ups.txt, docs/man/solis.txt,
	  man/tripplite.8 => docs/man/tripplite.txt,
	  docs/man/tripplite_usb.txt, docs/man/tripplitesu.txt,
	  docs/man/ups.conf.txt, docs/man/upsc.txt,
	  docs/man/upscli_connect.txt, docs/man/upscli_disconnect.txt,
	  docs/man/upscli_fd.txt, docs/man/upscli_get.txt,
	  docs/man/upscli_list_next.txt, docs/man/upscli_list_start.txt,
	  docs/man/upscli_readline.txt, docs/man/upscli_sendline.txt,
	  docs/man/upscli_splitaddr.txt, docs/man/upscli_splitname.txt,
	  docs/man/upscli_ssl.txt, docs/man/upscli_strerror.txt,
	  docs/man/upscli_upserror.txt, docs/man/upsclient.txt, man/upscmd.8
	  => docs/man/upscmd.txt, docs/man/upscode2.txt, man/upsd.conf.5 =>
	  docs/man/upsd.conf.txt, docs/man/upsd.txt, man/upsd.users.5 =>
	  docs/man/upsd.users.txt, man/upsdrvctl.8 => docs/man/upsdrvctl.txt,
	  docs/man/upsimage.cgi.txt, docs/man/upslog.txt, man/upsmon.conf.5
	  => docs/man/upsmon.conf.txt, man/upsmon.8 => docs/man/upsmon.txt,
	  man/upsrw.8 => docs/man/upsrw.txt, docs/man/upssched.conf.txt,
	  man/upssched.8 => docs/man/upssched.txt, man/upsset.cgi.8 =>
	  docs/man/upsset.cgi.txt, man/upsset.conf.5 =>
	  docs/man/upsset.conf.txt, man/upsstats.cgi.8 =>
	  docs/man/upsstats.cgi.txt, docs/man/upsstats.html.txt,
	  man/usbhid-ups.8 => docs/man/usbhid-ups.txt,
	  docs/man/victronups.txt, docs/megatec.txt, docs/net-protocol.txt,
	  docs/new-clients.txt, docs/new-drivers.txt, docs/new-names.txt,
	  docs/nut-names.txt, docs/nut-qa.txt, docs/osd-notify.txt,
	  docs/outlets.txt, docs/packager-guide.txt, docs/pager.txt,
	  docs/powersaving.txt, docs/protocol.txt, docs/{upssched.txt =>
	  scheduling.txt}, docs/security.txt, docs/shutdown.txt,
	  docs/sock-protocol.txt, docs/ssl.txt, docs/support.txt,
	  docs/suspend-to-disk.txt, docs/user-manual.txt,
	  docs/website/Makefile.am, docs/website/css/ie-overrides.css,
	  docs/website/css/web-layout.css,
	  docs/website/css/xhtml11-quirks.css, docs/website/css/xhtml11.css,
	  docs/website/faviconut.ico, docs/website/faviconut.png,
	  docs/website/news.txt, docs/website/projects.txt,
	  docs/website/scripts/filter_png.js, docs/website/scripts/jquery.js,
	  docs/website/scripts/nut_jquery.js, docs/website/scripts/toc.js,
	  docs/website/stable-hcl.txt, docs/website/ups-protocols.txt,
	  docs/website/web-layout.conf, docs/website/website.txt,
	  drivers/apc-hid.c, drivers/belkin.c, drivers/belkin.h,
	  drivers/ietf-mib.c, drivers/libhid.c, drivers/mge-utalk.c,
	  drivers/powerp-bin.c, drivers/powerware-mib.c, drivers/skel.c,
	  drivers/snmp-ups.c, drivers/snmp-ups.h, m4/ax_compare_version.m4,
	  m4/nut_check_asciidoc.m4, m4/nut_check_libnss.m4,
	  m4/nut_check_libopenssl.m4, m4/nut_check_libssl.m4,
	  m4/nut_report_feature.m4, man/Makefile.am, man/bcmxcp.8,
	  man/belkinunv.8, man/bestfortress.8, man/bestuferrups.8,
	  man/etapro.8, man/everups.8, man/isbmex.8, man/ivtscd.8,
	  man/libupsclient-config.1, man/liebert-esp2.8, man/liebert.8,
	  man/masterguard.8, man/megatec_usb.8, man/mge-shut.8,
	  man/mge-utalk.8, man/microdowell.8, man/netxml-ups.8,
	  man/nutupsdrv.8, man/optiups.8, man/powercom.8, man/powerman-pdu.8,
	  man/rhino.8, man/richcomm_usb.8, man/safenet.8, man/skel.8,
	  man/solis.8, man/tripplite_usb.8, man/tripplitesu.8,
	  man/ups.conf.5, man/upsc.8, man/upscli_connect.3,
	  man/upscli_disconnect.3, man/upscli_fd.3, man/upscli_get.3,
	  man/upscli_list_next.3, man/upscli_list_start.3,
	  man/upscli_readline.3, man/upscli_sendline.3,
	  man/upscli_splitaddr.3, man/upscli_splitname.3, man/upscli_ssl.3,
	  man/upscli_strerror.3, man/upscli_upserror.3, man/upsclient.3,
	  man/upscode2.8, man/upsd.8, man/upsimage.cgi.8, man/upslog.8,
	  man/upssched.conf.5, man/upsstats.html.5, man/victronups.8,
	  scripts/upower/95-upower-hid.rules, server/Makefile.am,
	  server/conf.c, server/ctype.h, server/netcmds.h, server/{netssl.c
	  => ssl.c}, server/{netssl.h => ssl.h}, server/upsd.c,
	  tools/Makefile.am, tools/nut-hclinfo.py, tools/nut-usbinfo.pl,
	  tools/svn2cl.authors: Merge from trunk ([[SVN:2761]])

2010-12-20  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/wincompat.c, configure.ac, include/common.h: Add usleep()
	  implementation for systems that lack it (patch from Paul Fertser)
	  This is needed e.g. on Debian which ships a really ancient version
	  of mingw runtime.
	* common/common.c, include/common.h: Use paths relative to the .exe
	  file's binary for configuration and PID files.

2010-12-17  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upsclient.c, common/common.c, common/wincompat.c,
	  drivers/belkinunv.c, drivers/bestfcom.c, drivers/bestuferrups.c,
	  drivers/blazer_ser.c, drivers/ivtscd.c, drivers/mge-utalk.c,
	  drivers/powercom.c, drivers/safenet.c, drivers/serial.c,
	  drivers/serial.h, drivers/upscode2.c, include/common.h,
	  include/wincompat.h, server/upsd.c: First implementation of termios
	  functions
	* configure.ac: forgot this for automatic winevent.h and winevent.dll
	  generation
	* common/common.c: Simplify timeout calculation

2010-12-16  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/Makefile.am: Automatic generation of winevent.h and
	  winevent.dll
	* scripts/Windows/Makefile, scripts/Windows/Makefile.am: Update
	  halt.c compilation

2010-12-10  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/common.c: Fix timeout calculation
	* clients/upsrw.c: upsrw is now working
	* clients/upscmd.c: upscmd is now working

2010-12-09  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/common.c, drivers/belkinunv.c, drivers/bestfcom.c,
	  drivers/bestfortress.c, drivers/bestuferrups.c,
	  drivers/blazer_ser.c, drivers/clone-outlet.c, drivers/clone.c,
	  drivers/dummy-ups.c, drivers/genericups.c, drivers/genericups.h,
	  drivers/ivtscd.c, drivers/mge-utalk.c, drivers/microdowell.c,
	  drivers/powercom.c, drivers/powercom.h, drivers/safenet.c,
	  drivers/serial.c, drivers/serial.h, drivers/upscode2.c,
	  include/common.h: More work on serial drivers.  Still some TODOs to
	  address but all drivers are compiling now. Successfully tested
	  mge-shut driver.

2010-12-01  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* scripts/Windows/wininit.c: Start upsmon as a single process.
	* clients/upsmon.c: upsmon uses a message box instead of wall
	* server/nut_ctype.h, server/upsd.c: Fix upsd clients read

2010-11-30  Arnaud Quette <arnaud.quette@free.fr>

	* configure.in, docs/configure.txt: Change the default SSL
	  implementation to OpenSSL, ...  ...if both OpenSSL and Mozilla NSS
	  are present

2010-11-29  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/Makefile.am: Reverting useless previous commit:
	  [[SVN:2705]]

2010-11-29  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* server/Makefile.am, server/conf.c, server/netcmds.h, server/{ssl.c
	  => netssl.c}, server/{ssl.h => netssl.h}, server/upsd.c: Resolve
	  namespace conflict with nss_compat_ossl

2010-11-28  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* clients/upsclient.h, m4/nut_check_libnss.m4, server/ctype.h,
	  server/ssl.c, server/ssl.h: Use the 'nss_compat_ossl' compatibility
	  layer...  ...to use the Mozilla NSS library instead of OpenSSL (we
	  might want to include native support in the future, but this will
	  at least allow a quick migration for testing purposes)

2010-11-26  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/Makefile.am: Add regex library for drivers (by Arnaud
	  Quette)
	* common/common.c, common/wincompat.c, configure.ac,
	  drivers/dstate.c, drivers/dstate.h, drivers/main.c,
	  drivers/upsdrvctl.c, include/common.h, include/wincompat.h,
	  scripts/Makefile.am, scripts/Windows/Makefile.am, {common =>
	  scripts/Windows}/winevent.mc, scripts/Windows/wininit.c,
	  server/sstate.c, server/upsd.c, server/upstype.h: Change the "full
	  services" approach to a more POSIX one.  We now have only one
	  Windows service in charge of starting/stopping the relevant NUT
	  processes. It's a Windows replacement for the init script.  This
	  service is also a proxy for processes to write to Windows event
	  log. So only one service has to be registered to be able to log
	  event.

2010-11-26  Arnaud Quette <arnaud.quette@free.fr>

	* clients/upsclient.c, clients/upsclient.h, configure.in,
	  docs/configure.txt, docs/macros.txt, m4/nut_check_libnss.m4,
	  m4/nut_check_libopenssl.m4, m4/nut_check_libssl.m4, server/ctype.h,
	  server/ssl.c, server/ssl.h: Implement and document detection and
	  activation of SSL support, ...  ...using either Mozilla NSS or
	  OpenSSL

2010-11-19  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/upsclient.c: Remove useless header

2010-11-16  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/common.c, drivers/main.c: Better use of NUT framework for
	  previous commit
	* common/common.c, drivers/main.c, include/common.h, server/upsd.c:
	  We need to register one driver service per ups in upsd.conf.  So
	  these drivers need to have different names and command line
	  arguments.

2010-11-05  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* common/common.c, drivers/dstate.c, drivers/main.c,
	  include/common.h, server/upsd.c: More factorization and fix a bug
	  in drivers services stop
	* configure.ac: This 3 lines has been duplicated instead of being
	  removed.
	* clients/Makefile.am, common/Makefile.am, configure.ac,
	  m4/nut_check_socketlib.m4, m4/nut_type_socklen_t.m4: Correct
	  integration of WinSock library (by Arnaud Quette)

2010-11-05  Charles Lepple <clepple+nut@gmail.com>

	* server/Makefile.am: Finish removing hard-coded paths to winsock2
	  library (as in [[SVN:2674]])

2010-11-04  Arnaud Quette <arnaud.quette@free.fr>

	* configure.ac, drivers/Makefile.am, drivers/megatec.c,
	  drivers/megatec_usb.c: Add regex library check and flags

2010-11-04  Arjen de Korte <adkorte-guest@alioth.debian.org>

	* configure.ac, drivers/Makefile.am, m4/nut_check_libusb.m4: Checking
	  whether or not we should use the 'regex' library...  ...should be
	  done for all USB connected devices (since we use this in the
	  matcher function). In that case it is much cleaner to add this
	  check in nut_check_libusb.m4. This also fixes the wrong use of
	  AC_SEARCH_LIBS, that already adds '-lregex' to LIBS (which means
	  all binaries are linked against this library).

2010-11-03  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/dstate.c, drivers/main.c: Make drivers run as service by
	  default
	* m4/nut_type_socklen_t.m4: MinGW socklen detection (by Arnaud
	  Quette)
	* common/common.c, include/common.h, server/upsd.c: Factorization of
	  service code

2010-10-29  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* server/upsd.c: Add Uninstall facility to upsd

2010-10-28  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* server/upsd.c: upsd behaves like a service by default now
	* common/common.c, common/wincompat.c: Remove C++ style comments
	* common/common.c, common/wincompat.c, common/winevent.mc,
	  include/common.h, include/wincompat.h: Map syslog to Windows's
	  event log.

2010-10-21  Chetan Agarwal <chetanagarwal-guest@alioth.debian.org>

	* drivers/bcmxcp.c: No functional changes  Removed redundant
	  initialization for character buffer and replaced hardcoded value
	  for sprintf with sizeof(buffer)

2010-10-20  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* drivers/dstate.c: Better handling of multiple connection on drivers
	* server/sstate.c, server/upsd.c: Remove unneeded debug printf
	* common/common.c: Remove hack from confpath function.  You have to
	  declare a NUT_CONFPATH environnement variable in your Windows
	  settings
	* common/wincompat.c, include/wincompat.h: Set again eol property to
	  native
	* common/inet_aton.c, drivers/dstate.c, include/common.h,
	  server/upsd.c: Fix errors appeared when merging from regular 2.4.3
	  to svn trunk
	* drivers/Makefile.am: Remove hard coded path to libws2_32
	* clients/Makefile.am, common/Makefile.am, {clients =>
	  common}/wincompat.c, {clients => include}/wincompat.h,
	  server/Makefile.am: Move wincompat.[ch] to common

2010-10-20  Chetan Agarwal <chetanagarwal-guest@alioth.debian.org>

	* drivers/bcmxcp.c: - Add Device Part number reading from config
	  block.  - fix a few typo errors in comments, - Change driver
	  version to 0.25.
	* drivers/bcmxcp.h: define and use BCMXCP_CONFIG_BLOCK_PART_NUMBER
	  constant ...  ...for reading the Device Part Number from Config
	  Block
	* docs/new-names.txt: Add 'device.part' to list of supported
	  variables
	* data/cmdvartab: Add description for new variable added  -
	  'device.part'

2010-10-20  Charles Lepple <clepple+nut@gmail.com>

	* clients/wincompat.c, clients/wincompat.h: Fix executable bits

2010-10-20  Arnaud Quette <arnaud.quette@free.fr>

	* clients/upsc.c, clients/upsclient.c, clients/upscmd.c,
	  clients/upslog.c, clients/upsmon.c, clients/upsrw.c,
	  clients/upssched.c, common/common.c, common/inet_aton.c,
	  common/wincompat.c, configure.ac, drivers/dstate.h,
	  drivers/libusb0.c, drivers/libusb1.c, drivers/serial.h,
	  drivers/usb-common.c, include/common.h, server/ssl.c,
	  server/sstate.c, server/upsd.c, server/upsd.h, server/user.c:
	  Rename DATADIR to NUT_DATADIR to avoid conflict with MinGW objidl.h
	  header

2010-10-18  Frederic Bohe <fbohe-guest@alioth.debian.org>

	* clients/wincompat.c, clients/wincompat.h: Set eol-style to native
	* clients/Makefile.am, clients/upsc.c, clients/upsclient.c,
	  clients/upscmd.c, clients/upslog.c, clients/upsmon.c,
	  clients/upsrw.c, clients/upssched.c, clients/wincompat.c,
	  clients/wincompat.h, common/common.c, common/state.c,
	  drivers/Makefile.am, drivers/apcsmart.h, drivers/bcmxcp_usb.c,
	  drivers/belkin.h, drivers/blazer_usb.c, drivers/dstate.c,
	  drivers/dstate.h, drivers/dummy-ups.c, drivers/libhid.c,
	  drivers/libusb0.c, drivers/libusb1.c, drivers/main.c,
	  drivers/main.h, drivers/megatec.c, drivers/megatec_usb.c,
	  drivers/mge-xml.c, drivers/netxml-ups.c, drivers/richcomm_usb.c,
	  drivers/serial.c, drivers/serial.h, drivers/upsdrvctl.c,
	  drivers/usb-common.c, drivers/usbhid-ups.c, include/common.h,
	  server/Makefile.am, server/conf.c, server/ssl.c, server/sstate.c,
	  server/sstate.h, server/stype.h, server/upsd.c, server/upsd.h,
	  server/upstype.h, server/user.c: Initial commit (preliminary
	  investigation)
